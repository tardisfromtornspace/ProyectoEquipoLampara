

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 01 14:57:06 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	intentry,global,class=CODE,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    68                           	dabs	1,0x7E,2
    69     0000                     
    70                           ; Version 2.40
    71                           ; Generated 17/11/2021 GMT
    72                           ; 
    73                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution. Publication is not required when
    87                           ;        this file is used in an embedded application.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC16F886 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105     0000                     	;# 
   106     0001                     	;# 
   107     0002                     	;# 
   108     0003                     	;# 
   109     0004                     	;# 
   110     0005                     	;# 
   111     0006                     	;# 
   112     0007                     	;# 
   113     0009                     	;# 
   114     000A                     	;# 
   115     000B                     	;# 
   116     000C                     	;# 
   117     000D                     	;# 
   118     000E                     	;# 
   119     000E                     	;# 
   120     000F                     	;# 
   121     0010                     	;# 
   122     0011                     	;# 
   123     0012                     	;# 
   124     0013                     	;# 
   125     0014                     	;# 
   126     0015                     	;# 
   127     0015                     	;# 
   128     0016                     	;# 
   129     0017                     	;# 
   130     0018                     	;# 
   131     0019                     	;# 
   132     001A                     	;# 
   133     001B                     	;# 
   134     001B                     	;# 
   135     001C                     	;# 
   136     001D                     	;# 
   137     001E                     	;# 
   138     001F                     	;# 
   139     0081                     	;# 
   140     0085                     	;# 
   141     0086                     	;# 
   142     0087                     	;# 
   143     0089                     	;# 
   144     008C                     	;# 
   145     008D                     	;# 
   146     008E                     	;# 
   147     008F                     	;# 
   148     0090                     	;# 
   149     0091                     	;# 
   150     0092                     	;# 
   151     0093                     	;# 
   152     0093                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0095                     	;# 
   156     0096                     	;# 
   157     0097                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009A                     	;# 
   161     009B                     	;# 
   162     009C                     	;# 
   163     009D                     	;# 
   164     009E                     	;# 
   165     009F                     	;# 
   166     0105                     	;# 
   167     0107                     	;# 
   168     0108                     	;# 
   169     0109                     	;# 
   170     010C                     	;# 
   171     010C                     	;# 
   172     010D                     	;# 
   173     010E                     	;# 
   174     010F                     	;# 
   175     0185                     	;# 
   176     0187                     	;# 
   177     0188                     	;# 
   178     0189                     	;# 
   179     018C                     	;# 
   180     018D                     	;# 
   181     0000                     	;# 
   182     0001                     	;# 
   183     0002                     	;# 
   184     0003                     	;# 
   185     0004                     	;# 
   186     0005                     	;# 
   187     0006                     	;# 
   188     0007                     	;# 
   189     0009                     	;# 
   190     000A                     	;# 
   191     000B                     	;# 
   192     000C                     	;# 
   193     000D                     	;# 
   194     000E                     	;# 
   195     000E                     	;# 
   196     000F                     	;# 
   197     0010                     	;# 
   198     0011                     	;# 
   199     0012                     	;# 
   200     0013                     	;# 
   201     0014                     	;# 
   202     0015                     	;# 
   203     0015                     	;# 
   204     0016                     	;# 
   205     0017                     	;# 
   206     0018                     	;# 
   207     0019                     	;# 
   208     001A                     	;# 
   209     001B                     	;# 
   210     001B                     	;# 
   211     001C                     	;# 
   212     001D                     	;# 
   213     001E                     	;# 
   214     001F                     	;# 
   215     0081                     	;# 
   216     0085                     	;# 
   217     0086                     	;# 
   218     0087                     	;# 
   219     0089                     	;# 
   220     008C                     	;# 
   221     008D                     	;# 
   222     008E                     	;# 
   223     008F                     	;# 
   224     0090                     	;# 
   225     0091                     	;# 
   226     0092                     	;# 
   227     0093                     	;# 
   228     0093                     	;# 
   229     0093                     	;# 
   230     0094                     	;# 
   231     0095                     	;# 
   232     0096                     	;# 
   233     0097                     	;# 
   234     0098                     	;# 
   235     0099                     	;# 
   236     009A                     	;# 
   237     009B                     	;# 
   238     009C                     	;# 
   239     009D                     	;# 
   240     009E                     	;# 
   241     009F                     	;# 
   242     0105                     	;# 
   243     0107                     	;# 
   244     0108                     	;# 
   245     0109                     	;# 
   246     010C                     	;# 
   247     010C                     	;# 
   248     010D                     	;# 
   249     010E                     	;# 
   250     010F                     	;# 
   251     0185                     	;# 
   252     0187                     	;# 
   253     0188                     	;# 
   254     0189                     	;# 
   255     018C                     	;# 
   256     018D                     	;# 
   257     0000                     	;# 
   258     0001                     	;# 
   259     0002                     	;# 
   260     0003                     	;# 
   261     0004                     	;# 
   262     0005                     	;# 
   263     0006                     	;# 
   264     0007                     	;# 
   265     0009                     	;# 
   266     000A                     	;# 
   267     000B                     	;# 
   268     000C                     	;# 
   269     000D                     	;# 
   270     000E                     	;# 
   271     000E                     	;# 
   272     000F                     	;# 
   273     0010                     	;# 
   274     0011                     	;# 
   275     0012                     	;# 
   276     0013                     	;# 
   277     0014                     	;# 
   278     0015                     	;# 
   279     0015                     	;# 
   280     0016                     	;# 
   281     0017                     	;# 
   282     0018                     	;# 
   283     0019                     	;# 
   284     001A                     	;# 
   285     001B                     	;# 
   286     001B                     	;# 
   287     001C                     	;# 
   288     001D                     	;# 
   289     001E                     	;# 
   290     001F                     	;# 
   291     0081                     	;# 
   292     0085                     	;# 
   293     0086                     	;# 
   294     0087                     	;# 
   295     0089                     	;# 
   296     008C                     	;# 
   297     008D                     	;# 
   298     008E                     	;# 
   299     008F                     	;# 
   300     0090                     	;# 
   301     0091                     	;# 
   302     0092                     	;# 
   303     0093                     	;# 
   304     0093                     	;# 
   305     0093                     	;# 
   306     0094                     	;# 
   307     0095                     	;# 
   308     0096                     	;# 
   309     0097                     	;# 
   310     0098                     	;# 
   311     0099                     	;# 
   312     009A                     	;# 
   313     009B                     	;# 
   314     009C                     	;# 
   315     009D                     	;# 
   316     009E                     	;# 
   317     009F                     	;# 
   318     0105                     	;# 
   319     0107                     	;# 
   320     0108                     	;# 
   321     0109                     	;# 
   322     010C                     	;# 
   323     010C                     	;# 
   324     010D                     	;# 
   325     010E                     	;# 
   326     010F                     	;# 
   327     0185                     	;# 
   328     0187                     	;# 
   329     0188                     	;# 
   330     0189                     	;# 
   331     018C                     	;# 
   332     018D                     	;# 
   333     0000                     	;# 
   334     0001                     	;# 
   335     0002                     	;# 
   336     0003                     	;# 
   337     0004                     	;# 
   338     0005                     	;# 
   339     0006                     	;# 
   340     0007                     	;# 
   341     0009                     	;# 
   342     000A                     	;# 
   343     000B                     	;# 
   344     000C                     	;# 
   345     000D                     	;# 
   346     000E                     	;# 
   347     000E                     	;# 
   348     000F                     	;# 
   349     0010                     	;# 
   350     0011                     	;# 
   351     0012                     	;# 
   352     0013                     	;# 
   353     0014                     	;# 
   354     0015                     	;# 
   355     0015                     	;# 
   356     0016                     	;# 
   357     0017                     	;# 
   358     0018                     	;# 
   359     0019                     	;# 
   360     001A                     	;# 
   361     001B                     	;# 
   362     001B                     	;# 
   363     001C                     	;# 
   364     001D                     	;# 
   365     001E                     	;# 
   366     001F                     	;# 
   367     0081                     	;# 
   368     0085                     	;# 
   369     0086                     	;# 
   370     0087                     	;# 
   371     0089                     	;# 
   372     008C                     	;# 
   373     008D                     	;# 
   374     008E                     	;# 
   375     008F                     	;# 
   376     0090                     	;# 
   377     0091                     	;# 
   378     0092                     	;# 
   379     0093                     	;# 
   380     0093                     	;# 
   381     0093                     	;# 
   382     0094                     	;# 
   383     0095                     	;# 
   384     0096                     	;# 
   385     0097                     	;# 
   386     0098                     	;# 
   387     0099                     	;# 
   388     009A                     	;# 
   389     009B                     	;# 
   390     009C                     	;# 
   391     009D                     	;# 
   392     009E                     	;# 
   393     009F                     	;# 
   394     0105                     	;# 
   395     0107                     	;# 
   396     0108                     	;# 
   397     0109                     	;# 
   398     010C                     	;# 
   399     010C                     	;# 
   400     010D                     	;# 
   401     010E                     	;# 
   402     010F                     	;# 
   403     0185                     	;# 
   404     0187                     	;# 
   405     0188                     	;# 
   406     0189                     	;# 
   407     018C                     	;# 
   408     018D                     	;# 
   409                           
   410                           	psect	idataCOMMON
   411     07FF                     __pidataCOMMON:
   412                           
   413                           ;initializer for _eltimer1H
   414     07FF  3461               	retlw	97
   415                           
   416                           	psect	idataBANK0
   417     0CA7                     __pidataBANK0:
   418                           
   419                           ;initializer for _los5msen15ms
   420     0CA7  3403               	retlw	3
   421     0CA8  3400               	retlw	0
   422                           
   423                           ;initializer for _numLedes
   424     0CA9  340A               	retlw	10
   425     0CAA  3400               	retlw	0
   426                           
   427                           ;initializer for _leoADCHumedadTemp
   428     0CAB  3402               	retlw	2
   429     0CAC  3400               	retlw	0
   430                           
   431                           ;initializer for _anI
   432     0CAD  3401               	retlw	1
   433     0CAE  3400               	retlw	0
   434                           
   435                           ;initializer for _elPR2
   436     0CAF  34A7               	retlw	167
   437                           
   438                           ;initializer for _porcentajeC
   439     0CB0  34A7               	retlw	167
   440                           
   441                           ;initializer for _porcentajeSubenBaja
   442     0CB1  3401               	retlw	1
   443                           
   444                           ;initializer for _porcentajeMax
   445     0CB2  34A7               	retlw	167
   446                           
   447                           ;initializer for _direccionLED
   448     0CB3  3402               	retlw	2
   449                           
   450                           ;initializer for _direccionPWM
   451     0CB4  3401               	retlw	1
   452                           
   453                           ;initializer for _eltimer1L
   454     0CB5  34A9               	retlw	169
   455                           
   456                           ;initializer for _miLED
   457     0CB6  34FF               	retlw	255
   458     0CB7  34FF               	retlw	255
   459     0CB8  34FF               	retlw	255
   460     0CB9  341F               	retlw	31
   461                           
   462                           	psect	idataBANK1
   463     0CBA                     __pidataBANK1:
   464                           
   465                           ;initializer for _emitoSensores
   466     0CBA  34FF               	retlw	255
   467     0CBB  34FF               	retlw	255
   468     0CBC  34FF               	retlw	255
   469     0CBD  34FF               	retlw	255
   470     0CBE  34FF               	retlw	255
   471     0CBF  34FF               	retlw	255
   472     0CC0  34FF               	retlw	255
   473     0CC1  34FF               	retlw	255
   474     0CC2  34FF               	retlw	255
   475     0CC3  34FF               	retlw	255
   476                           
   477                           ;initializer for _los5msen1sT0
   478     0CC4  3464               	retlw	100
   479     0CC5  3400               	retlw	0
   480                           
   481                           ;initializer for _ruidoMedio
   482     0CC6  3484               	retlw	132
   483     0CC7  3403               	retlw	3
   484                           
   485                           ;initializer for _ruidoBajo
   486     0CC8  3490               	retlw	144
   487     0CC9  3401               	retlw	1
   488                           
   489                           ;initializer for _contado1
   490     0CCA  34A8               	retlw	168
   491     0CCB  3461               	retlw	97
   492                           
   493                           ;initializer for _deboContinuar
   494     0CCC  3401               	retlw	1
   495     0CCD  3400               	retlw	0
   496                           
   497                           	psect	strings
   498     044B                     __pstrings:
   499     044B                     stringtab:
   500     044B                     __stringtab:
   501     044B                     stringcode:	
   502                           ;	String table - string pointers are 1 byte each
   503                           
   504     044B                     stringdir:
   505     044B  3004               	movlw	high stringdir
   506     044C  008A               	movwf	10
   507     044D  0804               	movf	4,w
   508     044E  0A84               	incf	4,f
   509     044F  0782               	addwf	2,f
   510     0450                     __stringbase:
   511     0450  3400               	retlw	0
   512     0451                     __end_of__stringtab:
   513     0451                     _dpowers:
   514     0451  3401               	retlw	1
   515     0452  3400               	retlw	0
   516     0453  340A               	retlw	10
   517     0454  3400               	retlw	0
   518     0455  3464               	retlw	100
   519     0456  3400               	retlw	0
   520     0457  34E8               	retlw	232
   521     0458  3403               	retlw	3
   522     0459  3410               	retlw	16
   523     045A  3427               	retlw	39
   524     045B                     __end_of_dpowers:
   525     001A                     _RCREG	set	26
   526     001E                     _ADRESH	set	30
   527     0019                     _TXREG	set	25
   528     000D                     _PIR2bits	set	13
   529     001F                     _ADCON0bits	set	31
   530     0014                     _SSPCONbits	set	20
   531     0018                     _RCSTAbits	set	24
   532     0015                     _CCPR1L	set	21
   533     0017                     _CCP1CONbits	set	23
   534     0012                     _T2CONbits	set	18
   535     0010                     _T1CONbits	set	16
   536     000E                     _TMR1L	set	14
   537     000F                     _TMR1H	set	15
   538     000B                     _INTCONbits	set	11
   539     0001                     _TMR0	set	1
   540     0005                     _PORTAbits	set	5
   541     0007                     _PORTCbits	set	7
   542     0013                     _SSPBUF	set	19
   543     000C                     _PIR1bits	set	12
   544     0064                     _TXIF	set	100
   545     009E                     _ADRESL	set	158
   546     0087                     _TRISC	set	135
   547     0086                     _TRISB	set	134
   548     008F                     _OSCCON	set	143
   549     008D                     _PIE2bits	set	141
   550     009F                     _ADCON1bits	set	159
   551     0085                     _TRISA	set	133
   552     0093                     _SSPADD	set	147
   553     0099                     _SPBRG	set	153
   554     009A                     _SPBRGH	set	154
   555     0098                     _TXSTAbits	set	152
   556     0087                     _TRISCbits	set	135
   557     0092                     _PR2	set	146
   558     008C                     _PIE1bits	set	140
   559     0081                     _OPTION_REGbits	set	129
   560     0091                     _SSPCON2bits	set	145
   561     010C                     _EEDAT	set	268
   562     010D                     _EEADR	set	269
   563     010F                     _EEADRH	set	271
   564     010E                     _EEDATH	set	270
   565     018D                     _EECON2	set	397
   566     018C                     _EECON1bits	set	396
   567     0188                     _ANSELbits	set	392
   568     0187                     _BAUDCTLbits	set	391
   569     0188                     _ANSEL	set	392
   570     045B                     STR_1:
   571     045B  3452               	retlw	82	;'R'
   572     045C  3475               	retlw	117	;'u'
   573     045D  3469               	retlw	105	;'i'
   574     045E  3464               	retlw	100	;'d'
   575     045F  346F               	retlw	111	;'o'
   576     0460  3420               	retlw	32	;' '
   577     0461  343D               	retlw	61	;'='
   578     0462  3420               	retlw	32	;' '
   579     0463  3463               	retlw	99	;'c'
   580     0464  3461               	retlw	97	;'a'
   581     0465  3474               	retlw	116	;'t'
   582     0466  3465               	retlw	101	;'e'
   583     0467  3467               	retlw	103	;'g'
   584     0468  346F               	retlw	111	;'o'
   585     0469  3472               	retlw	114	;'r'
   586     046A  3469               	retlw	105	;'i'
   587     046B  3461               	retlw	97	;'a'
   588     046C  3420               	retlw	32	;' '
   589     046D  3425               	retlw	37	;'%'
   590     046E  3464               	retlw	100	;'d'
   591     046F  342C               	retlw	44	;','
   592     0470  3420               	retlw	32	;' '
   593     0471  3468               	retlw	104	;'h'
   594     0472  3475               	retlw	117	;'u'
   595     0473  346D               	retlw	109	;'m'
   596     0474  3465               	retlw	101	;'e'
   597     0475  3464               	retlw	100	;'d'
   598     0476  3461               	retlw	97	;'a'
   599     0477  3464               	retlw	100	;'d'
   600     0478  3420               	retlw	32	;' '
   601     0479  343D               	retlw	61	;'='
   602     047A  3420               	retlw	32	;' '
   603     047B  3425               	retlw	37	;'%'
   604     047C  3464               	retlw	100	;'d'
   605     047D  3420               	retlw	32	;' '
   606     047E  3425               	retlw	37	;'%'
   607     047F  3425               	retlw	37	;'%'
   608     0480  342C               	retlw	44	;','
   609     0481  3420               	retlw	32	;' '
   610     0482  3474               	retlw	116	;'t'
   611     0483  3465               	retlw	101	;'e'
   612     0484  346D               	retlw	109	;'m'
   613     0485  3470               	retlw	112	;'p'
   614     0486  3465               	retlw	101	;'e'
   615     0487  3472               	retlw	114	;'r'
   616     0488  3461               	retlw	97	;'a'
   617     0489  3474               	retlw	116	;'t'
   618     048A  3475               	retlw	117	;'u'
   619     048B  3472               	retlw	114	;'r'
   620     048C  3461               	retlw	97	;'a'
   621     048D  3420               	retlw	32	;' '
   622     048E  343D               	retlw	61	;'='
   623     048F  3420               	retlw	32	;' '
   624     0490  3425               	retlw	37	;'%'
   625     0491  3464               	retlw	100	;'d'
   626     0492  3420               	retlw	32	;' '
   627     0493  3425               	retlw	37	;'%'
   628     0494  3463               	retlw	99	;'c'
   629     0495  3420               	retlw	32	;' '
   630     0496  3443               	retlw	67	;'C'
   631     0497  342C               	retlw	44	;','
   632     0498  3420               	retlw	32	;' '
   633     0499  3443               	retlw	67	;'C'
   634     049A  344F               	retlw	79	;'O'
   635     049B  3432               	retlw	50	;'2'
   636     049C  3420               	retlw	32	;' '
   637     049D  343D               	retlw	61	;'='
   638     049E  3420               	retlw	32	;' '
   639     049F  3425               	retlw	37	;'%'
   640     04A0  3464               	retlw	100	;'d'
   641     04A1  3420               	retlw	32	;' '
   642     04A2  3470               	retlw	112	;'p'
   643     04A3  3470               	retlw	112	;'p'
   644     04A4  346D               	retlw	109	;'m'
   645     04A5  342C               	retlw	44	;','
   646     04A6  3420               	retlw	32	;' '
   647     04A7  344C               	retlw	76	;'L'
   648     04A8  3475               	retlw	117	;'u'
   649     04A9  346D               	retlw	109	;'m'
   650     04AA  3469               	retlw	105	;'i'
   651     04AB  346E               	retlw	110	;'n'
   652     04AC  346F               	retlw	111	;'o'
   653     04AD  3473               	retlw	115	;'s'
   654     04AE  3469               	retlw	105	;'i'
   655     04AF  3464               	retlw	100	;'d'
   656     04B0  3461               	retlw	97	;'a'
   657     04B1  3464               	retlw	100	;'d'
   658     04B2  3420               	retlw	32	;' '
   659     04B3  343D               	retlw	61	;'='
   660     04B4  3420               	retlw	32	;' '
   661     04B5  3425               	retlw	37	;'%'
   662     04B6  3464               	retlw	100	;'d'
   663     04B7  3420               	retlw	32	;' '
   664     04B8  346C               	retlw	108	;'l'
   665     04B9  3478               	retlw	120	;'x'
   666     04BA  340D               	retlw	13
   667     04BB  340A               	retlw	10
   668     04BC  3400               	retlw	0
   669                           
   670                           	psect	cinit
   671     0015                     start_initialization:	
   672                           ; #config settings
   673                           
   674     0015                     __initialization:
   675                           
   676                           ; Initialize objects allocated to BANK1
   677     0015  1383               	bcf	3,7	;select IRP bank0
   678     0016  30CC               	movlw	low (__pdataBANK1+20)
   679     0017  00FD               	movwf	btemp+-1
   680     0018  300C               	movlw	high __pidataBANK1
   681     0019  00FE               	movwf	btemp
   682     001A  30BA               	movlw	low __pidataBANK1
   683     001B  00FF               	movwf	btemp+1
   684     001C  30B8               	movlw	low __pdataBANK1
   685     001D  0084               	movwf	4
   686     001E  120A  158A  2498  120A  118A  	fcall	init_ram0
   687                           
   688                           ; Initialize objects allocated to BANK0
   689     0023  305A               	movlw	low (__pdataBANK0+19)
   690     0024  00FD               	movwf	btemp+-1
   691     0025  300C               	movlw	high __pidataBANK0
   692     0026  00FE               	movwf	btemp
   693     0027  30A7               	movlw	low __pidataBANK0
   694     0028  00FF               	movwf	btemp+1
   695     0029  3047               	movlw	low __pdataBANK0
   696     002A  0084               	movwf	4
   697     002B  120A  158A  2498  120A  118A  	fcall	init_ram0
   698                           
   699                           ; Initialize objects allocated to COMMON
   700     0030  120A  118A  27FF  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   701     0035  00FD               	movwf	__pdataCOMMON& (0+127)
   702                           
   703                           ; Clear objects allocated to BANK1
   704     0036  30A0               	movlw	low __pbssBANK1
   705     0037  0084               	movwf	4
   706     0038  30B8               	movlw	low (__pbssBANK1+24)
   707     0039  120A  158A  23ED  120A  118A  	fcall	clear_ram0
   708                           
   709                           ; Clear objects allocated to BANK0
   710     003E  305A               	movlw	low __pbssBANK0
   711     003F  0084               	movwf	4
   712     0040  3067               	movlw	low (__pbssBANK0+13)
   713     0041  120A  158A  23ED  120A  118A  	fcall	clear_ram0
   714     0046                     end_of_initialization:	
   715                           ;End of C runtime variable initialization code
   716                           
   717     0046                     __end_of__initialization:
   718     0046  0183               	clrf	3
   719     0047  120A  118A  2B3D   	ljmp	_main	;jump to C main() function
   720                           
   721                           	psect	dataCOMMON
   722     007D                     __pdataCOMMON:
   723     007D                     _eltimer1H:
   724     007D                     	ds	1
   725                           
   726                           	psect	bssBANK0
   727     005A                     __pbssBANK0:
   728     005A                     _copias1:
   729     005A                     	ds	2
   730     005C                     _ruidoMasAlto:
   731     005C                     	ds	2
   732     005E                     _reciboLED:
   733     005E                     	ds	2
   734     0060                     _continuoEscribiendo:
   735     0060                     	ds	2
   736     0062                     _x:
   737     0062                     	ds	1
   738     0063                     _porcentaje:
   739     0063                     	ds	1
   740     0064                     _porcentajeMin:
   741     0064                     	ds	1
   742     0065                     _pPWM:
   743     0065                     	ds	1
   744     0066                     _direccionInicial:
   745     0066                     	ds	1
   746                           
   747                           	psect	dataBANK0
   748     0047                     __pdataBANK0:
   749     0047                     _los5msen15ms:
   750     0047                     	ds	2
   751     0049                     _numLedes:
   752     0049                     	ds	2
   753     004B                     _leoADCHumedadTemp:
   754     004B                     	ds	2
   755     004D                     _anI:
   756     004D                     	ds	2
   757     004F                     _elPR2:
   758     004F                     	ds	1
   759     0050                     _porcentajeC:
   760     0050                     	ds	1
   761     0051                     _porcentajeSubenBaja:
   762     0051                     	ds	1
   763     0052                     _porcentajeMax:
   764     0052                     	ds	1
   765     0053                     _direccionLED:
   766     0053                     	ds	1
   767     0054                     _direccionPWM:
   768     0054                     	ds	1
   769     0055                     _eltimer1L:
   770     0055                     	ds	1
   771     0056                     _miLED:
   772     0056                     	ds	4
   773                           
   774                           	psect	bssBANK1
   775     00A0                     __pbssBANK1:
   776     00A0                     _valor:
   777     00A0                     	ds	6
   778     00A6                     _valorI2C:
   779     00A6                     	ds	4
   780     00AA                     _copias5s:
   781     00AA                     	ds	2
   782     00AC                     _copias:
   783     00AC                     	ds	2
   784     00AE                     _actualizoLecturas:
   785     00AE                     	ds	2
   786     00B0                     _anINext:
   787     00B0                     	ds	2
   788     00B2                     _emitirMisSensores:
   789     00B2                     	ds	2
   790     00B4                     _reciboPWM:
   791     00B4                     	ds	2
   792     00B6                     _continuar:
   793     00B6                     	ds	2
   794                           
   795                           	psect	dataBANK1
   796     00B8                     __pdataBANK1:
   797     00B8                     _emitoSensores:
   798     00B8                     	ds	10
   799     00C2                     _los5msen1sT0:
   800     00C2                     	ds	2
   801     00C4                     _ruidoMedio:
   802     00C4                     	ds	2
   803     00C6                     _ruidoBajo:
   804     00C6                     	ds	2
   805     00C8                     _contado1:
   806     00C8                     	ds	2
   807     00CA                     _deboContinuar:
   808     00CA                     	ds	2
   809                           
   810                           	psect	inittext
   811     0C94                     init_fetch0:	
   812                           ;	Called with low address in FSR and high address in W
   813                           
   814     0C94  087E               	movf	btemp,w
   815     0C95  008A               	movwf	10
   816     0C96  087F               	movf	btemp+1,w
   817     0C97  0082               	movwf	2
   818     0C98                     init_ram0:	
   819                           ;Called with:
   820                           ;	high address of idata address in btemp 
   821                           ;	low address of idata address in btemp+1 
   822                           ;	low address of data in FSR
   823                           ;	high address + 1 of data in btemp-1
   824                           
   825     0C98  120A  158A  2494  120A  158A  	fcall	init_fetch0
   826     0C9D  0080               	movwf	0
   827     0C9E  0A84               	incf	4,f
   828     0C9F  0804               	movf	4,w
   829     0CA0  067D               	xorwf	btemp+-1,w
   830     0CA1  1903               	btfsc	3,2
   831     0CA2  3400               	retlw	0
   832     0CA3  0AFF               	incf	btemp+1,f
   833     0CA4  1903               	btfsc	3,2
   834     0CA5  0AFE               	incf	btemp,f
   835     0CA6  2C98               	goto	init_ram0
   836                           
   837                           	psect	clrtext
   838     0BED                     clear_ram0:	
   839                           ;	Called with FSR containing the base address, and
   840                           ;	W with the last address+1
   841                           
   842     0BED  0064               	clrwdt	;clear the watchdog before getting into this loop
   843     0BEE                     clrloop0:
   844     0BEE  0180               	clrf	0	;clear RAM location pointed to by FSR
   845     0BEF  0A84               	incf	4,f	;increment pointer
   846     0BF0  0604               	xorwf	4,w	;XOR with final address
   847     0BF1  1903               	btfsc	3,2	;have we reached the end yet?
   848     0BF2  3400               	retlw	0	;all done for this memory range, return
   849     0BF3  0604               	xorwf	4,w	;XOR again to restore value
   850     0BF4  2BEE               	goto	clrloop0	;do the next byte
   851                           
   852                           	psect	cstackBANK1
   853     00CC                     __pcstackBANK1:
   854     00CC                     printf@flag:
   855                           
   856                           ; 1 bytes @ 0x0
   857     00CC                     	ds	1
   858     00CD                     printf@f:
   859                           
   860                           ; 1 bytes @ 0x1
   861     00CD                     	ds	1
   862     00CE                     printf@prec:
   863                           
   864                           ; 1 bytes @ 0x2
   865     00CE                     	ds	1
   866     00CF                     printf@ap:
   867                           
   868                           ; 1 bytes @ 0x3
   869     00CF                     	ds	1
   870     00D0                     printf@val:
   871                           
   872                           ; 2 bytes @ 0x4
   873     00D0                     	ds	2
   874     00D2                     printf@c:
   875                           
   876                           ; 1 bytes @ 0x6
   877     00D2                     	ds	1
   878     00D3                     ??_main:
   879                           
   880                           ; 1 bytes @ 0x7
   881     00D3                     	ds	2
   882                           
   883                           	psect	cstackCOMMON
   884     0070                     __pcstackCOMMON:
   885     0070                     ?_wait_MSSP:
   886     0070                     ?_i2c_start:	
   887                           ; 1 bytes @ 0x0
   888                           
   889     0070                     ?_i2c_stop:	
   890                           ; 1 bytes @ 0x0
   891                           
   892     0070                     ?_i2c_rstart:	
   893                           ; 1 bytes @ 0x0
   894                           
   895     0070                     ?_i2c_write:	
   896                           ; 1 bytes @ 0x0
   897                           
   898     0070                     ?_i2c_read:	
   899                           ; 1 bytes @ 0x0
   900                           
   901     0070                     ?_spi_write_read:	
   902                           ; 1 bytes @ 0x0
   903                           
   904     0070                     ?_init_TMR0:	
   905                           ; 1 bytes @ 0x0
   906                           
   907     0070                     ?_init_TMR1:	
   908                           ; 1 bytes @ 0x0
   909                           
   910     0070                     ?_init_TMR2:	
   911                           ; 1 bytes @ 0x0
   912                           
   913     0070                     ?_init_CCP1_PWM:	
   914                           ; 1 bytes @ 0x0
   915                           
   916     0070                     ?_init_uart:	
   917                           ; 1 bytes @ 0x0
   918                           
   919     0070                     ?_init_I2C:	
   920                           ; 1 bytes @ 0x0
   921                           
   922     0070                     ?_init_SPI:	
   923                           ; 1 bytes @ 0x0
   924                           
   925     0070                     ?_init_ADC:	
   926                           ; 1 bytes @ 0x0
   927                           
   928     0070                     ?_init_memoria:	
   929                           ; 1 bytes @ 0x0
   930                           
   931     0070                     ?_putch:	
   932                           ; 1 bytes @ 0x0
   933                           
   934     0070                     ?_setLumen:	
   935                           ; 1 bytes @ 0x0
   936                           
   937     0070                     ?_setCO2:	
   938                           ; 1 bytes @ 0x0
   939                           
   940     0070                     ?_leerMemoria:	
   941                           ; 1 bytes @ 0x0
   942                           
   943     0070                     ?_initYo:	
   944                           ; 1 bytes @ 0x0
   945                           
   946     0070                     ?_getnoPrimerArranque:	
   947                           ; 1 bytes @ 0x0
   948                           
   949     0070                     ?_setPWM:	
   950                           ; 1 bytes @ 0x0
   951                           
   952     0070                     ?_analisisRuido:	
   953                           ; 1 bytes @ 0x0
   954                           
   955     0070                     ?_analisisResto:	
   956                           ; 1 bytes @ 0x0
   957                           
   958     0070                     ?_initActuadoresSegunMemoria:	
   959                           ; 1 bytes @ 0x0
   960                           
   961     0070                     ?_TRAT_INT:	
   962                           ; 1 bytes @ 0x0
   963                           
   964     0070                     ?_main:	
   965                           ; 1 bytes @ 0x0
   966                           
   967     0070                     ?i1_spi_write_read:	
   968                           ; 1 bytes @ 0x0
   969                           
   970     0070                     ??i1_spi_write_read:	
   971                           ; 1 bytes @ 0x0
   972                           
   973     0070                     ?i1_leerMemoria:	
   974                           ; 1 bytes @ 0x0
   975                           
   976     0070                     ??i1_leerMemoria:	
   977                           ; 1 bytes @ 0x0
   978                           
   979     0070                     ?i1_setPWM:	
   980                           ; 1 bytes @ 0x0
   981                           
   982     0070                     ?i1___bmul:	
   983                           ; 1 bytes @ 0x0
   984                           
   985     0070                     ?i1___awdiv:	
   986                           ; 1 bytes @ 0x0
   987                           
   988     0070                     i1leerMemoria@direccion:	
   989                           ; 2 bytes @ 0x0
   990                           
   991     0070                     i1___bmul@multiplicand:	
   992                           ; 1 bytes @ 0x0
   993                           
   994     0070                     i1___awdiv@divisor:	
   995                           ; 1 bytes @ 0x0
   996                           
   997                           
   998                           ; 2 bytes @ 0x0
   999     0070                     	ds	1
  1000     0071                     ??i1___bmul:
  1001     0071                     ?i1_escribirMemoria:	
  1002                           ; 1 bytes @ 0x1
  1003                           
  1004     0071                     i1escribirMemoria@dato:	
  1005                           ; 2 bytes @ 0x1
  1006                           
  1007                           
  1008                           ; 1 bytes @ 0x1
  1009     0071                     	ds	1
  1010     0072                     ??i1_escribirMemoria:
  1011     0072                     i1spi_write_read@one_byte:	
  1012                           ; 1 bytes @ 0x2
  1013                           
  1014     0072                     i1___bmul@product:	
  1015                           ; 1 bytes @ 0x2
  1016                           
  1017     0072                     i1escribirMemoria@confirmado:	
  1018                           ; 1 bytes @ 0x2
  1019                           
  1020     0072                     i1___awdiv@dividend:	
  1021                           ; 2 bytes @ 0x2
  1022                           
  1023                           
  1024                           ; 2 bytes @ 0x2
  1025     0072                     	ds	1
  1026     0073                     i1spi_write_read@answer:
  1027     0073                     i1___bmul@multiplier:	
  1028                           ; 1 bytes @ 0x3
  1029                           
  1030                           
  1031                           ; 1 bytes @ 0x3
  1032     0073                     	ds	1
  1033     0074                     ??i1___awdiv:
  1034     0074                     i1spi_write_read@x:	
  1035                           ; 1 bytes @ 0x4
  1036                           
  1037     0074                     i1escribirMemoria@direccion:	
  1038                           ; 1 bytes @ 0x4
  1039                           
  1040                           
  1041                           ; 1 bytes @ 0x4
  1042     0074                     	ds	1
  1043     0075                     ?i1_cosasSPI:
  1044     0075                     i1cosasSPI@verd:	
  1045                           ; 1 bytes @ 0x5
  1046                           
  1047     0075                     i1___awdiv@counter:	
  1048                           ; 1 bytes @ 0x5
  1049                           
  1050     0075                     i1escribirMemoria@contador:	
  1051                           ; 1 bytes @ 0x5
  1052                           
  1053                           
  1054                           ; 2 bytes @ 0x5
  1055     0075                     	ds	1
  1056     0076                     i1cosasSPI@azu:
  1057     0076                     i1___awdiv@sign:	
  1058                           ; 1 bytes @ 0x6
  1059                           
  1060                           
  1061                           ; 1 bytes @ 0x6
  1062     0076                     	ds	1
  1063     0077                     i1cosasSPI@lumi:
  1064     0077                     i1___awdiv@quotient:	
  1065                           ; 1 bytes @ 0x7
  1066                           
  1067                           
  1068                           ; 2 bytes @ 0x7
  1069     0077                     	ds	1
  1070     0078                     ??i1_cosasSPI:
  1071     0078                     i1cosasSPI@roj:	
  1072                           ; 1 bytes @ 0x8
  1073                           
  1074                           
  1075                           ; 1 bytes @ 0x8
  1076     0078                     	ds	1
  1077     0079                     ??i1_setPWM:
  1078     0079                     i1cosasSPI@lumo:	
  1079                           ; 1 bytes @ 0x9
  1080                           
  1081                           
  1082                           ; 1 bytes @ 0x9
  1083     0079                     	ds	1
  1084     007A                     i1cosasSPI@i:
  1085                           
  1086                           ; 2 bytes @ 0xA
  1087     007A                     	ds	1
  1088     007B                     i1setPWM@porcent:
  1089                           
  1090                           ; 1 bytes @ 0xB
  1091     007B                     	ds	1
  1092     007C                     ??i1_setLED:
  1093     007C                     i1setLED@red:	
  1094                           ; 1 bytes @ 0xC
  1095                           
  1096                           
  1097                           ; 1 bytes @ 0xC
  1098     007C                     	ds	1
  1099                           
  1100                           	psect	cstackBANK0
  1101     0020                     __pcstackBANK0:
  1102     0020                     ?i1_setLED:
  1103     0020                     i1setLED@green:	
  1104                           ; 1 bytes @ 0x0
  1105                           
  1106                           
  1107                           ; 1 bytes @ 0x0
  1108     0020                     	ds	1
  1109     0021                     i1setLED@blue:
  1110                           
  1111                           ; 1 bytes @ 0x1
  1112     0021                     	ds	1
  1113     0022                     i1setLED@luminosidad:
  1114                           
  1115                           ; 1 bytes @ 0x2
  1116     0022                     	ds	1
  1117     0023                     ??_TRAT_INT:
  1118                           
  1119                           ; 1 bytes @ 0x3
  1120     0023                     	ds	6
  1121     0029                     ??_wait_MSSP:
  1122     0029                     ??_i2c_start:	
  1123                           ; 1 bytes @ 0x9
  1124                           
  1125     0029                     ??_i2c_stop:	
  1126                           ; 1 bytes @ 0x9
  1127                           
  1128     0029                     ??_i2c_rstart:	
  1129                           ; 1 bytes @ 0x9
  1130                           
  1131     0029                     ??_i2c_write:	
  1132                           ; 1 bytes @ 0x9
  1133                           
  1134     0029                     ??_i2c_read:	
  1135                           ; 1 bytes @ 0x9
  1136                           
  1137     0029                     ??_spi_write_read:	
  1138                           ; 1 bytes @ 0x9
  1139                           
  1140     0029                     ??_init_TMR0:	
  1141                           ; 1 bytes @ 0x9
  1142                           
  1143     0029                     ??_init_TMR1:	
  1144                           ; 1 bytes @ 0x9
  1145                           
  1146     0029                     ??_init_TMR2:	
  1147                           ; 1 bytes @ 0x9
  1148                           
  1149     0029                     ??_init_CCP1_PWM:	
  1150                           ; 1 bytes @ 0x9
  1151                           
  1152     0029                     ??_init_uart:	
  1153                           ; 1 bytes @ 0x9
  1154                           
  1155     0029                     ??_init_I2C:	
  1156                           ; 1 bytes @ 0x9
  1157                           
  1158     0029                     ??_init_SPI:	
  1159                           ; 1 bytes @ 0x9
  1160                           
  1161     0029                     ??_init_ADC:	
  1162                           ; 1 bytes @ 0x9
  1163                           
  1164     0029                     ??_init_memoria:	
  1165                           ; 1 bytes @ 0x9
  1166                           
  1167     0029                     ??_putch:	
  1168                           ; 1 bytes @ 0x9
  1169                           
  1170     0029                     ??_leerMemoria:	
  1171                           ; 1 bytes @ 0x9
  1172                           
  1173     0029                     ??_initYo:	
  1174                           ; 1 bytes @ 0x9
  1175                           
  1176     0029                     ??_analisisRuido:	
  1177                           ; 1 bytes @ 0x9
  1178                           
  1179     0029                     ?___bmul:	
  1180                           ; 1 bytes @ 0x9
  1181                           
  1182     0029                     ?_getLumen:	
  1183                           ; 1 bytes @ 0x9
  1184                           
  1185     0029                     ?_getCO2:	
  1186                           ; 2 bytes @ 0x9
  1187                           
  1188     0029                     ?___awdiv:	
  1189                           ; 2 bytes @ 0x9
  1190                           
  1191     0029                     ?___lwdiv:	
  1192                           ; 2 bytes @ 0x9
  1193                           
  1194     0029                     i2c_write@I2C_data:	
  1195                           ; 2 bytes @ 0x9
  1196                           
  1197     0029                     i2c_read@master_ack:	
  1198                           ; 1 bytes @ 0x9
  1199                           
  1200     0029                     putch@c:	
  1201                           ; 1 bytes @ 0x9
  1202                           
  1203     0029                     leerMemoria@direccion:	
  1204                           ; 1 bytes @ 0x9
  1205                           
  1206     0029                     ___bmul@multiplicand:	
  1207                           ; 1 bytes @ 0x9
  1208                           
  1209     0029                     ___awdiv@divisor:	
  1210                           ; 1 bytes @ 0x9
  1211                           
  1212     0029                     ___lwdiv@divisor:	
  1213                           ; 2 bytes @ 0x9
  1214                           
  1215                           
  1216                           ; 2 bytes @ 0x9
  1217     0029                     	ds	1
  1218     002A                     ??_getnoPrimerArranque:
  1219     002A                     ??___bmul:	
  1220                           ; 1 bytes @ 0xA
  1221                           
  1222     002A                     ?_escribirMemoria:	
  1223                           ; 1 bytes @ 0xA
  1224                           
  1225     002A                     i2c_read@I2C_data:	
  1226                           ; 2 bytes @ 0xA
  1227                           
  1228     002A                     escribirMemoria@dato:	
  1229                           ; 1 bytes @ 0xA
  1230                           
  1231     002A                     getnoPrimerArranque@aux:	
  1232                           ; 1 bytes @ 0xA
  1233                           
  1234                           
  1235                           ; 1 bytes @ 0xA
  1236     002A                     	ds	1
  1237     002B                     ??_setLumen:
  1238     002B                     ??_getLumen:	
  1239                           ; 1 bytes @ 0xB
  1240                           
  1241     002B                     ??_setCO2:	
  1242                           ; 1 bytes @ 0xB
  1243                           
  1244     002B                     ??_getCO2:	
  1245                           ; 1 bytes @ 0xB
  1246                           
  1247     002B                     ??_escribirMemoria:	
  1248                           ; 1 bytes @ 0xB
  1249                           
  1250     002B                     spi_write_read@one_byte:	
  1251                           ; 1 bytes @ 0xB
  1252                           
  1253     002B                     analisisRuido@temp:	
  1254                           ; 1 bytes @ 0xB
  1255                           
  1256     002B                     ___bmul@product:	
  1257                           ; 1 bytes @ 0xB
  1258                           
  1259     002B                     escribirMemoria@confirmado:	
  1260                           ; 1 bytes @ 0xB
  1261                           
  1262     002B                     ___awdiv@dividend:	
  1263                           ; 2 bytes @ 0xB
  1264                           
  1265     002B                     ___lwdiv@dividend:	
  1266                           ; 2 bytes @ 0xB
  1267                           
  1268                           
  1269                           ; 2 bytes @ 0xB
  1270     002B                     	ds	1
  1271     002C                     spi_write_read@answer:
  1272     002C                     ___bmul@multiplier:	
  1273                           ; 1 bytes @ 0xC
  1274                           
  1275                           
  1276                           ; 1 bytes @ 0xC
  1277     002C                     	ds	1
  1278     002D                     ??_analisisResto:
  1279     002D                     ??___awdiv:	
  1280                           ; 1 bytes @ 0xD
  1281                           
  1282     002D                     ??___lwdiv:	
  1283                           ; 1 bytes @ 0xD
  1284                           
  1285     002D                     spi_write_read@x:	
  1286                           ; 1 bytes @ 0xD
  1287                           
  1288     002D                     escribirMemoria@direccion:	
  1289                           ; 1 bytes @ 0xD
  1290                           
  1291                           
  1292                           ; 1 bytes @ 0xD
  1293     002D                     	ds	1
  1294     002E                     ?_cosasSPI:
  1295     002E                     cosasSPI@verd:	
  1296                           ; 1 bytes @ 0xE
  1297                           
  1298     002E                     ___awdiv@counter:	
  1299                           ; 1 bytes @ 0xE
  1300                           
  1301     002E                     ___lwdiv@counter:	
  1302                           ; 1 bytes @ 0xE
  1303                           
  1304     002E                     escribirMemoria@contador:	
  1305                           ; 1 bytes @ 0xE
  1306                           
  1307                           
  1308                           ; 2 bytes @ 0xE
  1309     002E                     	ds	1
  1310     002F                     cosasSPI@azu:
  1311     002F                     ___awdiv@sign:	
  1312                           ; 1 bytes @ 0xF
  1313                           
  1314     002F                     ___lwdiv@quotient:	
  1315                           ; 1 bytes @ 0xF
  1316                           
  1317                           
  1318                           ; 2 bytes @ 0xF
  1319     002F                     	ds	1
  1320     0030                     cosasSPI@lumi:
  1321     0030                     ___awdiv@quotient:	
  1322                           ; 1 bytes @ 0x10
  1323                           
  1324                           
  1325                           ; 2 bytes @ 0x10
  1326     0030                     	ds	1
  1327     0031                     ??_cosasSPI:
  1328     0031                     ?___lwmod:	
  1329                           ; 1 bytes @ 0x11
  1330                           
  1331     0031                     cosasSPI@roj:	
  1332                           ; 2 bytes @ 0x11
  1333                           
  1334     0031                     ___lwmod@divisor:	
  1335                           ; 1 bytes @ 0x11
  1336                           
  1337                           
  1338                           ; 2 bytes @ 0x11
  1339     0031                     	ds	1
  1340     0032                     ??_setPWM:
  1341     0032                     cosasSPI@lumo:	
  1342                           ; 1 bytes @ 0x12
  1343                           
  1344                           
  1345                           ; 1 bytes @ 0x12
  1346     0032                     	ds	1
  1347     0033                     cosasSPI@i:
  1348     0033                     ___lwmod@dividend:	
  1349                           ; 2 bytes @ 0x13
  1350                           
  1351                           
  1352                           ; 2 bytes @ 0x13
  1353     0033                     	ds	1
  1354     0034                     setPWM@porcent:
  1355                           
  1356                           ; 1 bytes @ 0x14
  1357     0034                     	ds	1
  1358     0035                     ?_setLED:
  1359     0035                     ??___lwmod:	
  1360                           ; 1 bytes @ 0x15
  1361                           
  1362     0035                     setLED@green:	
  1363                           ; 1 bytes @ 0x15
  1364                           
  1365                           
  1366                           ; 1 bytes @ 0x15
  1367     0035                     	ds	1
  1368     0036                     setLED@blue:
  1369     0036                     ___lwmod@counter:	
  1370                           ; 1 bytes @ 0x16
  1371                           
  1372                           
  1373                           ; 1 bytes @ 0x16
  1374     0036                     	ds	1
  1375     0037                     ?_printf:
  1376     0037                     setLED@luminosidad:	
  1377                           ; 2 bytes @ 0x17
  1378                           
  1379                           
  1380                           ; 1 bytes @ 0x17
  1381     0037                     	ds	1
  1382     0038                     ??_setLED:
  1383     0038                     setLED@red:	
  1384                           ; 1 bytes @ 0x18
  1385                           
  1386                           
  1387                           ; 1 bytes @ 0x18
  1388     0038                     	ds	1
  1389     0039                     ??_initActuadoresSegunMemoria:
  1390     0039                     _initActuadoresSegunMemoria$1570:	
  1391                           ; 1 bytes @ 0x19
  1392                           
  1393                           
  1394                           ; 1 bytes @ 0x19
  1395     0039                     	ds	1
  1396     003A                     _initActuadoresSegunMemoria$1571:
  1397                           
  1398                           ; 1 bytes @ 0x1A
  1399     003A                     	ds	1
  1400     003B                     _initActuadoresSegunMemoria$1572:
  1401                           
  1402                           ; 1 bytes @ 0x1B
  1403     003B                     	ds	8
  1404     0043                     ??_printf:
  1405                           
  1406                           ; 1 bytes @ 0x23
  1407     0043                     	ds	3
  1408     0046                     main@ruidoAux:
  1409                           
  1410                           ; 1 bytes @ 0x26
  1411     0046                     	ds	1
  1412                           
  1413                           	psect	maintext
  1414     033D                     __pmaintext:	
  1415 ;;
  1416 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1417 ;;
  1418 ;; *************** function _main *****************
  1419 ;; Defined at:
  1420 ;;		line 594 in file "main.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;		None
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;  ruidoAux        1   38[BANK0 ] unsigned char 
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      void 
  1427 ;; Registers used:
  1428 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1429 ;; Tracked objects:
  1430 ;;		On entry : B00/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1434 ;;      Params:         0       0       0       0       0
  1435 ;;      Locals:         0       1       0       0       0
  1436 ;;      Temps:          0       0       2       0       0
  1437 ;;      Totals:         0       1       2       0       0
  1438 ;;Total ram usage:        3 bytes
  1439 ;; Hardware stack levels required when called: 8
  1440 ;; This function calls:
  1441 ;;		_analisisResto
  1442 ;;		_analisisRuido
  1443 ;;		_i2c_stop
  1444 ;;		_initActuadoresSegunMemoria
  1445 ;;		_initYo
  1446 ;;		_printf
  1447 ;; This function is called by:
  1448 ;;		Startup code after reset
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452     033D                     _main:	
  1453                           ;psect for function _main
  1454                           
  1455     033D                     l3020:	
  1456                           ;incstack = 0
  1457                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1458                           
  1459                           
  1460                           ;main.c: 595:     initYo();
  1461     033D  120A  158A  2680  120A  118A  	fcall	_initYo
  1462     0342                     l3022:
  1463                           
  1464                           ;main.c: 596:     initActuadoresSegunMemoria();
  1465     0342  120A  118A  26C0  120A  118A  	fcall	_initActuadoresSegunMemoria
  1466                           
  1467                           ;main.c: 598:     while (deboContinuar) {
  1468     0347  2BC8               	goto	l3044
  1469     0348                     l3024:
  1470                           
  1471                           ;main.c: 599:         if (emitirMisSensores) {
  1472     0348  0832               	movf	_emitirMisSensores^(0+128),w
  1473     0349  0433               	iorwf	(_emitirMisSensores+1)^(0+128),w
  1474     034A  1903               	btfsc	3,2
  1475     034B  2B4D               	goto	u2351
  1476     034C  2B4E               	goto	u2350
  1477     034D                     u2351:
  1478     034D  2BBE               	goto	l3040
  1479     034E                     u2350:
  1480     034E                     l3026:
  1481                           
  1482                           ;main.c: 600:             char ruidoAux = 'E';
  1483     034E  3045               	movlw	69
  1484     034F  1283               	bcf	3,5	;RP0=0, select bank0
  1485     0350  1303               	bcf	3,6	;RP1=0, select bank0
  1486     0351  00C6               	movwf	main@ruidoAux
  1487                           
  1488                           ;main.c: 601:             switch (emitoSensores[0]) {
  1489     0352  2B62               	goto	l3036
  1490     0353                     l3028:
  1491                           
  1492                           ;main.c: 603:                     ruidoAux = 'b';
  1493     0353  3062               	movlw	98
  1494     0354  1283               	bcf	3,5	;RP0=0, select bank0
  1495     0355  1303               	bcf	3,6	;RP1=0, select bank0
  1496     0356  00C6               	movwf	main@ruidoAux
  1497                           
  1498                           ;main.c: 604:                     break;
  1499     0357  2B74               	goto	l3038
  1500     0358                     l3030:
  1501                           
  1502                           ;main.c: 606:                     ruidoAux = 'm';
  1503     0358  306D               	movlw	109
  1504     0359  1283               	bcf	3,5	;RP0=0, select bank0
  1505     035A  1303               	bcf	3,6	;RP1=0, select bank0
  1506     035B  00C6               	movwf	main@ruidoAux
  1507                           
  1508                           ;main.c: 607:                     break;
  1509     035C  2B74               	goto	l3038
  1510     035D                     l3032:
  1511                           
  1512                           ;main.c: 609:                     ruidoAux = 'a';
  1513     035D  3061               	movlw	97
  1514     035E  1283               	bcf	3,5	;RP0=0, select bank0
  1515     035F  1303               	bcf	3,6	;RP1=0, select bank0
  1516     0360  00C6               	movwf	main@ruidoAux
  1517                           
  1518                           ;main.c: 610:                     break;
  1519     0361  2B74               	goto	l3038
  1520     0362                     l3036:
  1521                           
  1522                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1523                           ; Switch size 1, requested type "simple"
  1524                           ; Number of cases is 1, Range of values is 0 to 0
  1525                           ; switch strategies available:
  1526                           ; Name         Instructions Cycles
  1527                           ; simple_byte            4     3 (average)
  1528                           ; direct_byte           11     8 (fixed)
  1529                           ; jumptable            260     6 (fixed)
  1530                           ;	Chosen strategy is simple_byte
  1531     0362  1683               	bsf	3,5	;RP0=1, select bank1
  1532     0363  1303               	bcf	3,6	;RP1=0, select bank1
  1533     0364  0839               	movf	(_emitoSensores+1)^(0+128),w
  1534     0365  3A00               	xorlw	0	; case 0
  1535     0366  1903               	skipnz
  1536     0367  2B69               	goto	l3122
  1537     0368  2B74               	goto	l3038
  1538     0369                     l3122:
  1539                           
  1540                           ; Switch size 1, requested type "simple"
  1541                           ; Number of cases is 3, Range of values is 1 to 3
  1542                           ; switch strategies available:
  1543                           ; Name         Instructions Cycles
  1544                           ; simple_byte           10     6 (average)
  1545                           ; direct_byte           20    11 (fixed)
  1546                           ; jumptable            263     9 (fixed)
  1547                           ;	Chosen strategy is simple_byte
  1548     0369  0838               	movf	_emitoSensores^(0+128),w
  1549     036A  3A01               	xorlw	1	; case 1
  1550     036B  1903               	skipnz
  1551     036C  2B53               	goto	l3028
  1552     036D  3A03               	xorlw	3	; case 2
  1553     036E  1903               	skipnz
  1554     036F  2B58               	goto	l3030
  1555     0370  3A01               	xorlw	1	; case 3
  1556     0371  1903               	skipnz
  1557     0372  2B5D               	goto	l3032
  1558     0373  2B74               	goto	l3038
  1559     0374                     l3038:
  1560                           
  1561                           ;main.c: 614:             printf("Ruido = categoria %d, humedad = %d %%, temperatura = %
      +                          d %c C, CO2 = %d ppm, Luminosidad = %d lx\r\n", ruidoAux, emitoSensores[1], emitoSensore
      +                          s[2], 167, emitoSensores[3], emitoSensores[4]);
  1562     0374  1283               	bcf	3,5	;RP0=0, select bank0
  1563     0375  0846               	movf	main@ruidoAux,w
  1564     0376  1683               	bsf	3,5	;RP0=1, select bank1
  1565     0377  1303               	bcf	3,6	;RP1=0, select bank1
  1566     0378  00D3               	movwf	??_main^(0+128)
  1567     0379  01D4               	clrf	(??_main^(0+128)+1)
  1568     037A  0853               	movf	??_main^(0+128),w
  1569     037B  1283               	bcf	3,5	;RP0=0, select bank0
  1570     037C  1303               	bcf	3,6	;RP1=0, select bank0
  1571     037D  00B7               	movwf	?_printf
  1572     037E  1683               	bsf	3,5	;RP0=1, select bank1
  1573     037F  1303               	bcf	3,6	;RP1=0, select bank1
  1574     0380  0854               	movf	(??_main+1)^(0+128),w
  1575     0381  1283               	bcf	3,5	;RP0=0, select bank0
  1576     0382  1303               	bcf	3,6	;RP1=0, select bank0
  1577     0383  00B8               	movwf	?_printf+1
  1578     0384  1683               	bsf	3,5	;RP0=1, select bank1
  1579     0385  1303               	bcf	3,6	;RP1=0, select bank1
  1580     0386  083B               	movf	((_emitoSensores+1)^(0+128)+2),w
  1581     0387  1283               	bcf	3,5	;RP0=0, select bank0
  1582     0388  1303               	bcf	3,6	;RP1=0, select bank0
  1583     0389  00BA               	movwf	?_printf+3
  1584     038A  1683               	bsf	3,5	;RP0=1, select bank1
  1585     038B  1303               	bcf	3,6	;RP1=0, select bank1
  1586     038C  083A               	movf	(_emitoSensores^(0+128)+2),w
  1587     038D  1283               	bcf	3,5	;RP0=0, select bank0
  1588     038E  1303               	bcf	3,6	;RP1=0, select bank0
  1589     038F  00B9               	movwf	?_printf+2
  1590     0390  1683               	bsf	3,5	;RP0=1, select bank1
  1591     0391  1303               	bcf	3,6	;RP1=0, select bank1
  1592     0392  083D               	movf	((_emitoSensores+1)^(0+128)+4),w
  1593     0393  1283               	bcf	3,5	;RP0=0, select bank0
  1594     0394  1303               	bcf	3,6	;RP1=0, select bank0
  1595     0395  00BC               	movwf	?_printf+5
  1596     0396  1683               	bsf	3,5	;RP0=1, select bank1
  1597     0397  1303               	bcf	3,6	;RP1=0, select bank1
  1598     0398  083C               	movf	(_emitoSensores^(0+128)+4),w
  1599     0399  1283               	bcf	3,5	;RP0=0, select bank0
  1600     039A  1303               	bcf	3,6	;RP1=0, select bank0
  1601     039B  00BB               	movwf	?_printf+4
  1602     039C  30A7               	movlw	167
  1603     039D  00BD               	movwf	?_printf+6
  1604     039E  3000               	movlw	0
  1605     039F  00BE               	movwf	?_printf+7
  1606     03A0  1683               	bsf	3,5	;RP0=1, select bank1
  1607     03A1  1303               	bcf	3,6	;RP1=0, select bank1
  1608     03A2  083F               	movf	((_emitoSensores+1)^(0+128)+6),w
  1609     03A3  1283               	bcf	3,5	;RP0=0, select bank0
  1610     03A4  1303               	bcf	3,6	;RP1=0, select bank0
  1611     03A5  00C0               	movwf	?_printf+9
  1612     03A6  1683               	bsf	3,5	;RP0=1, select bank1
  1613     03A7  1303               	bcf	3,6	;RP1=0, select bank1
  1614     03A8  083E               	movf	(_emitoSensores^(0+128)+6),w
  1615     03A9  1283               	bcf	3,5	;RP0=0, select bank0
  1616     03AA  1303               	bcf	3,6	;RP1=0, select bank0
  1617     03AB  00BF               	movwf	?_printf+8
  1618     03AC  1683               	bsf	3,5	;RP0=1, select bank1
  1619     03AD  1303               	bcf	3,6	;RP1=0, select bank1
  1620     03AE  0841               	movf	((_emitoSensores+1)^(0+128)+8),w
  1621     03AF  1283               	bcf	3,5	;RP0=0, select bank0
  1622     03B0  1303               	bcf	3,6	;RP1=0, select bank0
  1623     03B1  00C2               	movwf	?_printf+11
  1624     03B2  1683               	bsf	3,5	;RP0=1, select bank1
  1625     03B3  1303               	bcf	3,6	;RP1=0, select bank1
  1626     03B4  0840               	movf	(_emitoSensores^(0+128)+8),w
  1627     03B5  1283               	bcf	3,5	;RP0=0, select bank0
  1628     03B6  1303               	bcf	3,6	;RP1=0, select bank0
  1629     03B7  00C1               	movwf	?_printf+10
  1630     03B8  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1631     03B9  120A  118A  2222  120A  118A  	fcall	_printf
  1632     03BE                     l3040:
  1633                           
  1634                           ;main.c: 617:         analisisRuido();
  1635     03BE  120A  158A  277A  120A  118A  	fcall	_analisisRuido
  1636     03C3                     l3042:
  1637                           
  1638                           ;main.c: 618:         analisisResto();
  1639     03C3  120A  158A  26F8  120A  118A  	fcall	_analisisResto
  1640     03C8                     l3044:
  1641                           
  1642                           ;main.c: 598:     while (deboContinuar) {
  1643     03C8  1683               	bsf	3,5	;RP0=1, select bank1
  1644     03C9  1303               	bcf	3,6	;RP1=0, select bank1
  1645     03CA  084A               	movf	_deboContinuar^(0+128),w
  1646     03CB  044B               	iorwf	(_deboContinuar+1)^(0+128),w
  1647     03CC  1D03               	btfss	3,2
  1648     03CD  2BCF               	goto	u2361
  1649     03CE  2BD0               	goto	u2360
  1650     03CF                     u2361:
  1651     03CF  2B48               	goto	l3024
  1652     03D0                     u2360:
  1653     03D0                     l3046:
  1654                           
  1655                           ;main.c: 625:     i2c_stop();
  1656     03D0  120A  158A  23FE  120A  118A  	fcall	_i2c_stop
  1657     03D5                     l385:
  1658     03D5  120A  118A  2812   	ljmp	start
  1659     03D8                     __end_of_main:
  1660                           
  1661                           	psect	text1
  1662     0222                     __ptext1:	
  1663 ;; *************** function _printf *****************
  1664 ;; Defined at:
  1665 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  f               1    wreg     PTR const unsigned char 
  1668 ;;		 -> STR_1(98), 
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;  f               1    1[BANK1 ] PTR const unsigned char 
  1671 ;;		 -> STR_1(98), 
  1672 ;;  tmpval          4    0        struct .
  1673 ;;  val             2    4[BANK1 ] unsigned int 
  1674 ;;  cp              2    0        PTR const unsigned char 
  1675 ;;  len             2    0        unsigned int 
  1676 ;;  c               1    6[BANK1 ] unsigned char 
  1677 ;;  ap              1    3[BANK1 ] PTR void [1]
  1678 ;;		 -> ?_printf(2), 
  1679 ;;  prec            1    2[BANK1 ] char 
  1680 ;;  flag            1    0[BANK1 ] unsigned char 
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  2   23[BANK0 ] int 
  1683 ;; Registers used:
  1684 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1690 ;;      Params:         0      12       0       0       0
  1691 ;;      Locals:         0       0       7       0       0
  1692 ;;      Temps:          0       3       0       0       0
  1693 ;;      Totals:         0      15       7       0       0
  1694 ;;Total ram usage:       22 bytes
  1695 ;; Hardware stack levels used: 1
  1696 ;; Hardware stack levels required when called: 5
  1697 ;; This function calls:
  1698 ;;		___lwdiv
  1699 ;;		___lwmod
  1700 ;;		_putch
  1701 ;; This function is called by:
  1702 ;;		_main
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706     0222                     _printf:	
  1707                           ;psect for function _printf
  1708                           
  1709                           
  1710                           ;incstack = 0
  1711                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1712                           ;printf@f stored from wreg
  1713     0222  1683               	bsf	3,5	;RP0=1, select bank1
  1714     0223  1303               	bcf	3,6	;RP1=0, select bank1
  1715     0224  00CD               	movwf	printf@f^(0+128)
  1716     0225                     l2962:
  1717                           
  1718                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
  1719     0225  3037               	movlw	(low (?_printf| 0))& (0+255)
  1720     0226  00CF               	movwf	printf@ap^(0+128)
  1721                           
  1722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1723     0227  2B2A               	goto	l3014
  1724     0228                     l2964:
  1725                           
  1726                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1727     0228  3025               	movlw	37
  1728     0229  0652               	xorwf	printf@c^(0+128),w
  1729     022A  1903               	btfsc	3,2
  1730     022B  2A2D               	goto	u2281
  1731     022C  2A2E               	goto	u2280
  1732     022D                     u2281:
  1733     022D  2A35               	goto	l2968
  1734     022E                     u2280:
  1735     022E                     l2966:
  1736                           
  1737                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
  1738     022E  0852               	movf	printf@c^(0+128),w
  1739     022F  120A  158A  2482  120A  118A  	fcall	_putch
  1740                           
  1741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1742     0234  2B2A               	goto	l3014
  1743     0235                     l2968:
  1744                           
  1745                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1746     0235  01CC               	clrf	printf@flag^(0+128)
  1747                           
  1748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1749     0236  2A4F               	goto	l2978
  1750     0237                     l2970:
  1751                           
  1752                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 825:    c = (char
      +                          )(*(int *)__va_arg((*(int **)ap), (int)0));
  1753     0237  1683               	bsf	3,5	;RP0=1, select bank1
  1754     0238  1303               	bcf	3,6	;RP1=0, select bank1
  1755     0239  084F               	movf	printf@ap^(0+128),w
  1756     023A  0084               	movwf	4
  1757     023B  1383               	bcf	3,7	;select IRP bank0
  1758     023C  0800               	movf	0,w
  1759     023D  00D2               	movwf	printf@c^(0+128)
  1760     023E                     l2972:
  1761     023E  3002               	movlw	2
  1762     023F  1283               	bcf	3,5	;RP0=0, select bank0
  1763     0240  1303               	bcf	3,6	;RP1=0, select bank0
  1764     0241  00C3               	movwf	??_printf
  1765     0242  0843               	movf	??_printf,w
  1766     0243  1683               	bsf	3,5	;RP0=1, select bank1
  1767     0244  1303               	bcf	3,6	;RP1=0, select bank1
  1768     0245  07CF               	addwf	printf@ap^(0+128),f
  1769     0246                     l2974:
  1770                           
  1771                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 835:    (putch(c)
      +                           );
  1772     0246  1683               	bsf	3,5	;RP0=1, select bank1
  1773     0247  1303               	bcf	3,6	;RP1=0, select bank1
  1774     0248  0852               	movf	printf@c^(0+128),w
  1775     0249  120A  158A  2482  120A  118A  	fcall	_putch
  1776                           
  1777                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 836:    continue;
  1778     024E  2B2A               	goto	l3014
  1779     024F                     l2978:
  1780     024F  3001               	movlw	1
  1781     0250  07CD               	addwf	printf@f^(0+128),f
  1782     0251  30FF               	movlw	-1
  1783     0252  074D               	addwf	printf@f^(0+128),w
  1784     0253  0084               	movwf	4
  1785     0254  120A  118A  244B  120A  118A  	fcall	stringdir
  1786     0259  00D2               	movwf	printf@c^(0+128)
  1787     025A  1283               	bcf	3,5	;RP0=0, select bank0
  1788     025B  1303               	bcf	3,6	;RP1=0, select bank0
  1789     025C  00C3               	movwf	??_printf
  1790     025D  01C4               	clrf	??_printf+1
  1791                           
  1792                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1793                           ; Switch size 1, requested type "simple"
  1794                           ; Number of cases is 1, Range of values is 0 to 0
  1795                           ; switch strategies available:
  1796                           ; Name         Instructions Cycles
  1797                           ; simple_byte            4     3 (average)
  1798                           ; direct_byte           11     8 (fixed)
  1799                           ; jumptable            260     6 (fixed)
  1800                           ;	Chosen strategy is simple_byte
  1801     025E  0844               	movf	??_printf+1,w
  1802     025F  3A00               	xorlw	0	; case 0
  1803     0260  1903               	skipnz
  1804     0261  2A63               	goto	l3124
  1805     0262  2A46               	goto	l2974
  1806     0263                     l3124:
  1807                           
  1808                           ; Switch size 1, requested type "simple"
  1809                           ; Number of cases is 4, Range of values is 0 to 105
  1810                           ; switch strategies available:
  1811                           ; Name         Instructions Cycles
  1812                           ; simple_byte           13     7 (average)
  1813                           ; jumptable            260     6 (fixed)
  1814                           ;	Chosen strategy is simple_byte
  1815     0263  0843               	movf	??_printf,w
  1816     0264  3A00               	xorlw	0	; case 0
  1817     0265  1903               	skipnz
  1818     0266  2B3C               	goto	l498
  1819     0267  3A63               	xorlw	99	; case 99
  1820     0268  1903               	skipnz
  1821     0269  2A37               	goto	l2970
  1822     026A  3A07               	xorlw	7	; case 100
  1823     026B  1903               	skipnz
  1824     026C  2A71               	goto	l2980
  1825     026D  3A0D               	xorlw	13	; case 105
  1826     026E  1903               	skipnz
  1827     026F  2A71               	goto	l2980
  1828     0270  2A46               	goto	l2974
  1829     0271                     l2980:
  1830                           
  1831                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1832     0271  1683               	bsf	3,5	;RP0=1, select bank1
  1833     0272  1303               	bcf	3,6	;RP1=0, select bank1
  1834     0273  084F               	movf	printf@ap^(0+128),w
  1835     0274  0084               	movwf	4
  1836     0275  1383               	bcf	3,7	;select IRP bank0
  1837     0276  0800               	movf	0,w
  1838     0277  00D0               	movwf	printf@val^(0+128)
  1839     0278  0A84               	incf	4,f
  1840     0279  0800               	movf	0,w
  1841     027A  00D1               	movwf	(printf@val+1)^(0+128)
  1842     027B                     l2982:
  1843     027B  3002               	movlw	2
  1844     027C  1283               	bcf	3,5	;RP0=0, select bank0
  1845     027D  1303               	bcf	3,6	;RP1=0, select bank0
  1846     027E  00C3               	movwf	??_printf
  1847     027F  0843               	movf	??_printf,w
  1848     0280  1683               	bsf	3,5	;RP0=1, select bank1
  1849     0281  1303               	bcf	3,6	;RP1=0, select bank1
  1850     0282  07CF               	addwf	printf@ap^(0+128),f
  1851     0283                     l2984:
  1852                           
  1853                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1854     0283  1FD1               	btfss	(printf@val+1)^(0+128),7
  1855     0284  2A86               	goto	u2291
  1856     0285  2A87               	goto	u2290
  1857     0286                     u2291:
  1858     0286  2A94               	goto	l2990
  1859     0287                     u2290:
  1860     0287                     l2986:
  1861                           
  1862                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1863     0287  3003               	movlw	3
  1864     0288  1283               	bcf	3,5	;RP0=0, select bank0
  1865     0289  1303               	bcf	3,6	;RP1=0, select bank0
  1866     028A  00C3               	movwf	??_printf
  1867     028B  0843               	movf	??_printf,w
  1868     028C  1683               	bsf	3,5	;RP0=1, select bank1
  1869     028D  1303               	bcf	3,6	;RP1=0, select bank1
  1870     028E  04CC               	iorwf	printf@flag^(0+128),f
  1871     028F                     l2988:
  1872                           
  1873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1874     028F  09D0               	comf	printf@val^(0+128),f
  1875     0290  09D1               	comf	(printf@val+1)^(0+128),f
  1876     0291  0AD0               	incf	printf@val^(0+128),f
  1877     0292  1903               	skipnz
  1878     0293  0AD1               	incf	(printf@val+1)^(0+128),f
  1879     0294                     l2990:
  1880                           
  1881                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1882     0294  01D2               	clrf	printf@c^(0+128)
  1883     0295  0AD2               	incf	printf@c^(0+128),f
  1884     0296                     l2996:
  1885                           
  1886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1887     0296  0852               	movf	printf@c^(0+128),w
  1888     0297  1283               	bcf	3,5	;RP0=0, select bank0
  1889     0298  1303               	bcf	3,6	;RP1=0, select bank0
  1890     0299  00C3               	movwf	??_printf
  1891     029A  0743               	addwf	??_printf,w
  1892     029B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1893     029C  0084               	movwf	4
  1894     029D  120A  118A  244B  120A  118A  	fcall	stringdir
  1895     02A2  00C4               	movwf	??_printf+1
  1896     02A3  120A  118A  244B  120A  118A  	fcall	stringdir
  1897     02A8  00C5               	movwf	??_printf+2
  1898     02A9  0845               	movf	??_printf+2,w
  1899     02AA  1683               	bsf	3,5	;RP0=1, select bank1
  1900     02AB  1303               	bcf	3,6	;RP1=0, select bank1
  1901     02AC  0251               	subwf	(printf@val+1)^(0+128),w
  1902     02AD  1D03               	skipz
  1903     02AE  2AB5               	goto	u2305
  1904     02AF  1283               	bcf	3,5	;RP0=0, select bank0
  1905     02B0  1303               	bcf	3,6	;RP1=0, select bank0
  1906     02B1  0844               	movf	??_printf+1,w
  1907     02B2  1683               	bsf	3,5	;RP0=1, select bank1
  1908     02B3  1303               	bcf	3,6	;RP1=0, select bank1
  1909     02B4  0250               	subwf	printf@val^(0+128),w
  1910     02B5                     u2305:
  1911     02B5  1803               	skipnc
  1912     02B6  2AB8               	goto	u2301
  1913     02B7  2AB9               	goto	u2300
  1914     02B8                     u2301:
  1915     02B8  2ABA               	goto	l3000
  1916     02B9                     u2300:
  1917     02B9  2AC8               	goto	l3002
  1918     02BA                     l3000:
  1919     02BA  3001               	movlw	1
  1920     02BB  1283               	bcf	3,5	;RP0=0, select bank0
  1921     02BC  1303               	bcf	3,6	;RP1=0, select bank0
  1922     02BD  00C3               	movwf	??_printf
  1923     02BE  0843               	movf	??_printf,w
  1924     02BF  1683               	bsf	3,5	;RP0=1, select bank1
  1925     02C0  1303               	bcf	3,6	;RP1=0, select bank1
  1926     02C1  07D2               	addwf	printf@c^(0+128),f
  1927     02C2  3005               	movlw	5
  1928     02C3  0652               	xorwf	printf@c^(0+128),w
  1929     02C4  1D03               	btfss	3,2
  1930     02C5  2AC7               	goto	u2311
  1931     02C6  2AC8               	goto	u2310
  1932     02C7                     u2311:
  1933     02C7  2A96               	goto	l2996
  1934     02C8                     u2310:
  1935     02C8                     l3002:
  1936                           
  1937                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1938     02C8  084C               	movf	printf@flag^(0+128),w
  1939     02C9  3903               	andlw	3
  1940     02CA  1903               	btfsc	3,2
  1941     02CB  2ACD               	goto	u2321
  1942     02CC  2ACE               	goto	u2320
  1943     02CD                     u2321:
  1944     02CD  2AD4               	goto	l3006
  1945     02CE                     u2320:
  1946     02CE                     l3004:
  1947                           
  1948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     (putch(
      +                          '-') );
  1949     02CE  302D               	movlw	45
  1950     02CF  120A  158A  2482  120A  118A  	fcall	_putch
  1951     02D4                     l3006:
  1952                           
  1953                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1954     02D4  1683               	bsf	3,5	;RP0=1, select bank1
  1955     02D5  1303               	bcf	3,6	;RP1=0, select bank1
  1956     02D6  0852               	movf	printf@c^(0+128),w
  1957     02D7  00CE               	movwf	printf@prec^(0+128)
  1958                           
  1959                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1960     02D8  2B1D               	goto	l3012
  1961     02D9                     l3008:
  1962                           
  1963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1964     02D9  300A               	movlw	10
  1965     02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1966     02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1967     02DC  00B1               	movwf	___lwmod@divisor
  1968     02DD  3000               	movlw	0
  1969     02DE  00B2               	movwf	___lwmod@divisor+1
  1970     02DF  1683               	bsf	3,5	;RP0=1, select bank1
  1971     02E0  1303               	bcf	3,6	;RP1=0, select bank1
  1972     02E1  084E               	movf	printf@prec^(0+128),w
  1973     02E2  1283               	bcf	3,5	;RP0=0, select bank0
  1974     02E3  1303               	bcf	3,6	;RP1=0, select bank0
  1975     02E4  00C3               	movwf	??_printf
  1976     02E5  0743               	addwf	??_printf,w
  1977     02E6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1978     02E7  0084               	movwf	4
  1979     02E8  120A  118A  244B  120A  118A  	fcall	stringdir
  1980     02ED  00A9               	movwf	___lwdiv@divisor
  1981     02EE  120A  118A  244B  120A  118A  	fcall	stringdir
  1982     02F3  00AA               	movwf	___lwdiv@divisor+1
  1983     02F4  1683               	bsf	3,5	;RP0=1, select bank1
  1984     02F5  1303               	bcf	3,6	;RP1=0, select bank1
  1985     02F6  0851               	movf	(printf@val+1)^(0+128),w
  1986     02F7  1283               	bcf	3,5	;RP0=0, select bank0
  1987     02F8  1303               	bcf	3,6	;RP1=0, select bank0
  1988     02F9  00AC               	movwf	___lwdiv@dividend+1
  1989     02FA  1683               	bsf	3,5	;RP0=1, select bank1
  1990     02FB  1303               	bcf	3,6	;RP1=0, select bank1
  1991     02FC  0850               	movf	printf@val^(0+128),w
  1992     02FD  1283               	bcf	3,5	;RP0=0, select bank0
  1993     02FE  1303               	bcf	3,6	;RP1=0, select bank0
  1994     02FF  00AB               	movwf	___lwdiv@dividend
  1995     0300  120A  118A  27B9  120A  118A  	fcall	___lwdiv
  1996     0305  1283               	bcf	3,5	;RP0=0, select bank0
  1997     0306  1303               	bcf	3,6	;RP1=0, select bank0
  1998     0307  082A               	movf	?___lwdiv+1,w
  1999     0308  00B4               	movwf	___lwmod@dividend+1
  2000     0309  0829               	movf	?___lwdiv,w
  2001     030A  00B3               	movwf	___lwmod@dividend
  2002     030B  120A  158A  26BC  120A  118A  	fcall	___lwmod
  2003     0310  1283               	bcf	3,5	;RP0=0, select bank0
  2004     0311  1303               	bcf	3,6	;RP1=0, select bank0
  2005     0312  0831               	movf	?___lwmod,w
  2006     0313  3E30               	addlw	48
  2007     0314  1683               	bsf	3,5	;RP0=1, select bank1
  2008     0315  1303               	bcf	3,6	;RP1=0, select bank1
  2009     0316  00D2               	movwf	printf@c^(0+128)
  2010     0317                     l3010:
  2011                           
  2012                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    (putch(c) );
  2013     0317  0852               	movf	printf@c^(0+128),w
  2014     0318  120A  158A  2482  120A  118A  	fcall	_putch
  2015     031D                     l3012:
  2016                           
  2017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2018     031D  30FF               	movlw	255
  2019     031E  1283               	bcf	3,5	;RP0=0, select bank0
  2020     031F  1303               	bcf	3,6	;RP1=0, select bank0
  2021     0320  00C3               	movwf	??_printf
  2022     0321  0843               	movf	??_printf,w
  2023     0322  1683               	bsf	3,5	;RP0=1, select bank1
  2024     0323  1303               	bcf	3,6	;RP1=0, select bank1
  2025     0324  07CE               	addwf	printf@prec^(0+128),f
  2026     0325  0A4E               	incf	printf@prec^(0+128),w
  2027     0326  1D03               	btfss	3,2
  2028     0327  2B29               	goto	u2331
  2029     0328  2B2A               	goto	u2330
  2030     0329                     u2331:
  2031     0329  2AD9               	goto	l3008
  2032     032A                     u2330:
  2033     032A                     l3014:
  2034                           
  2035                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2036     032A  3001               	movlw	1
  2037     032B  1683               	bsf	3,5	;RP0=1, select bank1
  2038     032C  1303               	bcf	3,6	;RP1=0, select bank1
  2039     032D  07CD               	addwf	printf@f^(0+128),f
  2040     032E  30FF               	movlw	-1
  2041     032F  074D               	addwf	printf@f^(0+128),w
  2042     0330  0084               	movwf	4
  2043     0331  120A  118A  244B  120A  118A  	fcall	stringdir
  2044     0336  00D2               	movwf	printf@c^(0+128)
  2045     0337  0852               	movf	printf@c^(0+128),w
  2046     0338  1D03               	btfss	3,2
  2047     0339  2B3B               	goto	u2341
  2048     033A  2B3C               	goto	u2340
  2049     033B                     u2341:
  2050     033B  2A28               	goto	l2964
  2051     033C                     u2340:
  2052     033C                     l498:
  2053     033C  0008               	return
  2054     033D                     __end_of_printf:
  2055                           
  2056                           	psect	text2
  2057     0C82                     __ptext2:	
  2058 ;; *************** function _putch *****************
  2059 ;; Defined at:
  2060 ;;		line 234 in file "main.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;  c               1    wreg     unsigned char 
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;  c               1    9[BANK0 ] unsigned char 
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      void 
  2067 ;; Registers used:
  2068 ;;		wreg
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2074 ;;      Params:         0       0       0       0       0
  2075 ;;      Locals:         0       1       0       0       0
  2076 ;;      Temps:          0       0       0       0       0
  2077 ;;      Totals:         0       1       0       0       0
  2078 ;;Total ram usage:        1 bytes
  2079 ;; Hardware stack levels used: 1
  2080 ;; Hardware stack levels required when called: 4
  2081 ;; This function calls:
  2082 ;;		Nothing
  2083 ;; This function is called by:
  2084 ;;		_printf
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088     0C82                     _putch:	
  2089                           ;psect for function _putch
  2090                           
  2091                           
  2092                           ;incstack = 0
  2093                           ; Regs used in _putch: [wreg]
  2094                           ;putch@c stored from wreg
  2095     0C82  1283               	bcf	3,5	;RP0=0, select bank0
  2096     0C83  1303               	bcf	3,6	;RP1=0, select bank0
  2097     0C84  00A9               	movwf	putch@c
  2098     0C85                     l2908:
  2099     0C85                     l239:	
  2100                           ;main.c: 238:     }
  2101                           
  2102                           
  2103                           ;main.c: 235:     while (!TXIF && !TXSTAbits.TRMT) {
  2104     0C85  1283               	bcf	3,5	;RP0=0, select bank0
  2105     0C86  1A0C               	btfsc	12,4	;volatile
  2106     0C87  2C89               	goto	u2131
  2107     0C88  2C8A               	goto	u2130
  2108     0C89                     u2131:
  2109     0C89  2C90               	goto	l2912
  2110     0C8A                     u2130:
  2111     0C8A                     l2910:
  2112     0C8A  1683               	bsf	3,5	;RP0=1, select bank1
  2113     0C8B  1303               	bcf	3,6	;RP1=0, select bank1
  2114     0C8C  1C98               	btfss	24,1	;volatile
  2115     0C8D  2C8F               	goto	u2141
  2116     0C8E  2C90               	goto	u2140
  2117     0C8F                     u2141:
  2118     0C8F  2C85               	goto	l239
  2119     0C90                     u2140:
  2120     0C90                     l2912:
  2121                           
  2122                           ;main.c: 239:     TXREG = c;
  2123     0C90  1283               	bcf	3,5	;RP0=0, select bank0
  2124     0C91  0829               	movf	putch@c,w
  2125     0C92  0099               	movwf	25	;volatile
  2126     0C93                     l244:
  2127     0C93  0008               	return
  2128     0C94                     __end_of_putch:
  2129                           
  2130                           	psect	text3
  2131     0EBC                     __ptext3:	
  2132 ;; *************** function ___lwmod *****************
  2133 ;; Defined at:
  2134 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  divisor         2   17[BANK0 ] unsigned int 
  2137 ;;  dividend        2   19[BANK0 ] unsigned int 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  counter         1   22[BANK0 ] unsigned char 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  2   17[BANK0 ] unsigned int 
  2142 ;; Registers used:
  2143 ;;		wreg, status,2, status,0
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2149 ;;      Params:         0       4       0       0       0
  2150 ;;      Locals:         0       1       0       0       0
  2151 ;;      Temps:          0       1       0       0       0
  2152 ;;      Totals:         0       6       0       0       0
  2153 ;;Total ram usage:        6 bytes
  2154 ;; Hardware stack levels used: 1
  2155 ;; Hardware stack levels required when called: 4
  2156 ;; This function calls:
  2157 ;;		Nothing
  2158 ;; This function is called by:
  2159 ;;		_printf
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163     0EBC                     ___lwmod:	
  2164                           ;psect for function ___lwmod
  2165                           
  2166     0EBC                     l2940:	
  2167                           ;incstack = 0
  2168                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2169                           
  2170     0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  2171     0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  2172     0EBE  0831               	movf	___lwmod@divisor,w
  2173     0EBF  0432               	iorwf	___lwmod@divisor+1,w
  2174     0EC0  1903               	btfsc	3,2
  2175     0EC1  2EC3               	goto	u2221
  2176     0EC2  2EC4               	goto	u2220
  2177     0EC3                     u2221:
  2178     0EC3  2EF3               	goto	l2958
  2179     0EC4                     u2220:
  2180     0EC4                     l2942:
  2181     0EC4  01B6               	clrf	___lwmod@counter
  2182     0EC5  0AB6               	incf	___lwmod@counter,f
  2183     0EC6  2ED2               	goto	l2948
  2184     0EC7                     l2944:
  2185     0EC7  3001               	movlw	1
  2186     0EC8                     u2235:
  2187     0EC8  1003               	clrc
  2188     0EC9  0DB1               	rlf	___lwmod@divisor,f
  2189     0ECA  0DB2               	rlf	___lwmod@divisor+1,f
  2190     0ECB  3EFF               	addlw	-1
  2191     0ECC  1D03               	skipz
  2192     0ECD  2EC8               	goto	u2235
  2193     0ECE                     l2946:
  2194     0ECE  3001               	movlw	1
  2195     0ECF  00B5               	movwf	??___lwmod
  2196     0ED0  0835               	movf	??___lwmod,w
  2197     0ED1  07B6               	addwf	___lwmod@counter,f
  2198     0ED2                     l2948:
  2199     0ED2  1FB2               	btfss	___lwmod@divisor+1,7
  2200     0ED3  2ED5               	goto	u2241
  2201     0ED4  2ED6               	goto	u2240
  2202     0ED5                     u2241:
  2203     0ED5  2EC7               	goto	l2944
  2204     0ED6                     u2240:
  2205     0ED6                     l2950:
  2206     0ED6  0832               	movf	___lwmod@divisor+1,w
  2207     0ED7  0234               	subwf	___lwmod@dividend+1,w
  2208     0ED8  1D03               	skipz
  2209     0ED9  2EDC               	goto	u2255
  2210     0EDA  0831               	movf	___lwmod@divisor,w
  2211     0EDB  0233               	subwf	___lwmod@dividend,w
  2212     0EDC                     u2255:
  2213     0EDC  1C03               	skipc
  2214     0EDD  2EDF               	goto	u2251
  2215     0EDE  2EE0               	goto	u2250
  2216     0EDF                     u2251:
  2217     0EDF  2EE6               	goto	l2954
  2218     0EE0                     u2250:
  2219     0EE0                     l2952:
  2220     0EE0  0831               	movf	___lwmod@divisor,w
  2221     0EE1  02B3               	subwf	___lwmod@dividend,f
  2222     0EE2  0832               	movf	___lwmod@divisor+1,w
  2223     0EE3  1C03               	skipc
  2224     0EE4  03B4               	decf	___lwmod@dividend+1,f
  2225     0EE5  02B4               	subwf	___lwmod@dividend+1,f
  2226     0EE6                     l2954:
  2227     0EE6  3001               	movlw	1
  2228     0EE7                     u2265:
  2229     0EE7  1003               	clrc
  2230     0EE8  0CB2               	rrf	___lwmod@divisor+1,f
  2231     0EE9  0CB1               	rrf	___lwmod@divisor,f
  2232     0EEA  3EFF               	addlw	-1
  2233     0EEB  1D03               	skipz
  2234     0EEC  2EE7               	goto	u2265
  2235     0EED                     l2956:
  2236     0EED  3001               	movlw	1
  2237     0EEE  02B6               	subwf	___lwmod@counter,f
  2238     0EEF  1D03               	btfss	3,2
  2239     0EF0  2EF2               	goto	u2271
  2240     0EF1  2EF3               	goto	u2270
  2241     0EF2                     u2271:
  2242     0EF2  2ED6               	goto	l2950
  2243     0EF3                     u2270:
  2244     0EF3                     l2958:
  2245     0EF3  0834               	movf	___lwmod@dividend+1,w
  2246     0EF4  00B2               	movwf	?___lwmod+1
  2247     0EF5  0833               	movf	___lwmod@dividend,w
  2248     0EF6  00B1               	movwf	?___lwmod
  2249     0EF7                     l784:
  2250     0EF7  0008               	return
  2251     0EF8                     __end_of___lwmod:
  2252                           
  2253                           	psect	text4
  2254     07B9                     __ptext4:	
  2255 ;; *************** function ___lwdiv *****************
  2256 ;; Defined at:
  2257 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  divisor         2    9[BANK0 ] unsigned int 
  2260 ;;  dividend        2   11[BANK0 ] unsigned int 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  quotient        2   15[BANK0 ] unsigned int 
  2263 ;;  counter         1   14[BANK0 ] unsigned char 
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  2    9[BANK0 ] unsigned int 
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2273 ;;      Params:         0       4       0       0       0
  2274 ;;      Locals:         0       3       0       0       0
  2275 ;;      Temps:          0       1       0       0       0
  2276 ;;      Totals:         0       8       0       0       0
  2277 ;;Total ram usage:        8 bytes
  2278 ;; Hardware stack levels used: 1
  2279 ;; Hardware stack levels required when called: 4
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_printf
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287     07B9                     ___lwdiv:	
  2288                           ;psect for function ___lwdiv
  2289                           
  2290     07B9                     l2914:	
  2291                           ;incstack = 0
  2292                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2293                           
  2294     07B9  1283               	bcf	3,5	;RP0=0, select bank0
  2295     07BA  1303               	bcf	3,6	;RP1=0, select bank0
  2296     07BB  01AF               	clrf	___lwdiv@quotient
  2297     07BC  01B0               	clrf	___lwdiv@quotient+1
  2298     07BD                     l2916:
  2299     07BD  0829               	movf	___lwdiv@divisor,w
  2300     07BE  042A               	iorwf	___lwdiv@divisor+1,w
  2301     07BF  1903               	btfsc	3,2
  2302     07C0  2FC2               	goto	u2151
  2303     07C1  2FC3               	goto	u2150
  2304     07C2                     u2151:
  2305     07C2  2FFA               	goto	l2936
  2306     07C3                     u2150:
  2307     07C3                     l2918:
  2308     07C3  01AE               	clrf	___lwdiv@counter
  2309     07C4  0AAE               	incf	___lwdiv@counter,f
  2310     07C5  2FD1               	goto	l2924
  2311     07C6                     l2920:
  2312     07C6  3001               	movlw	1
  2313     07C7                     u2165:
  2314     07C7  1003               	clrc
  2315     07C8  0DA9               	rlf	___lwdiv@divisor,f
  2316     07C9  0DAA               	rlf	___lwdiv@divisor+1,f
  2317     07CA  3EFF               	addlw	-1
  2318     07CB  1D03               	skipz
  2319     07CC  2FC7               	goto	u2165
  2320     07CD                     l2922:
  2321     07CD  3001               	movlw	1
  2322     07CE  00AD               	movwf	??___lwdiv
  2323     07CF  082D               	movf	??___lwdiv,w
  2324     07D0  07AE               	addwf	___lwdiv@counter,f
  2325     07D1                     l2924:
  2326     07D1  1FAA               	btfss	___lwdiv@divisor+1,7
  2327     07D2  2FD4               	goto	u2171
  2328     07D3  2FD5               	goto	u2170
  2329     07D4                     u2171:
  2330     07D4  2FC6               	goto	l2920
  2331     07D5                     u2170:
  2332     07D5                     l2926:
  2333     07D5  3001               	movlw	1
  2334     07D6                     u2185:
  2335     07D6  1003               	clrc
  2336     07D7  0DAF               	rlf	___lwdiv@quotient,f
  2337     07D8  0DB0               	rlf	___lwdiv@quotient+1,f
  2338     07D9  3EFF               	addlw	-1
  2339     07DA  1D03               	skipz
  2340     07DB  2FD6               	goto	u2185
  2341     07DC  082A               	movf	___lwdiv@divisor+1,w
  2342     07DD  022C               	subwf	___lwdiv@dividend+1,w
  2343     07DE  1D03               	skipz
  2344     07DF  2FE2               	goto	u2195
  2345     07E0  0829               	movf	___lwdiv@divisor,w
  2346     07E1  022B               	subwf	___lwdiv@dividend,w
  2347     07E2                     u2195:
  2348     07E2  1C03               	skipc
  2349     07E3  2FE5               	goto	u2191
  2350     07E4  2FE6               	goto	u2190
  2351     07E5                     u2191:
  2352     07E5  2FED               	goto	l2932
  2353     07E6                     u2190:
  2354     07E6                     l2928:
  2355     07E6  0829               	movf	___lwdiv@divisor,w
  2356     07E7  02AB               	subwf	___lwdiv@dividend,f
  2357     07E8  082A               	movf	___lwdiv@divisor+1,w
  2358     07E9  1C03               	skipc
  2359     07EA  03AC               	decf	___lwdiv@dividend+1,f
  2360     07EB  02AC               	subwf	___lwdiv@dividend+1,f
  2361     07EC                     l2930:
  2362     07EC  142F               	bsf	___lwdiv@quotient,0
  2363     07ED                     l2932:
  2364     07ED  3001               	movlw	1
  2365     07EE                     u2205:
  2366     07EE  1003               	clrc
  2367     07EF  0CAA               	rrf	___lwdiv@divisor+1,f
  2368     07F0  0CA9               	rrf	___lwdiv@divisor,f
  2369     07F1  3EFF               	addlw	-1
  2370     07F2  1D03               	skipz
  2371     07F3  2FEE               	goto	u2205
  2372     07F4                     l2934:
  2373     07F4  3001               	movlw	1
  2374     07F5  02AE               	subwf	___lwdiv@counter,f
  2375     07F6  1D03               	btfss	3,2
  2376     07F7  2FF9               	goto	u2211
  2377     07F8  2FFA               	goto	u2210
  2378     07F9                     u2211:
  2379     07F9  2FD5               	goto	l2926
  2380     07FA                     u2210:
  2381     07FA                     l2936:
  2382     07FA  0830               	movf	___lwdiv@quotient+1,w
  2383     07FB  00AA               	movwf	?___lwdiv+1
  2384     07FC  082F               	movf	___lwdiv@quotient,w
  2385     07FD  00A9               	movwf	?___lwdiv
  2386     07FE                     l774:
  2387     07FE  0008               	return
  2388     07FF                     __end_of___lwdiv:
  2389                           
  2390                           	psect	text5
  2391     0E80                     __ptext5:	
  2392 ;; *************** function _initYo *****************
  2393 ;; Defined at:
  2394 ;;		line 319 in file "main.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;		None
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;		None
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      void 
  2401 ;; Registers used:
  2402 ;;		wreg, status,2, status,0, pclath, cstack
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2408 ;;      Params:         0       0       0       0       0
  2409 ;;      Locals:         0       0       0       0       0
  2410 ;;      Temps:          0       0       0       0       0
  2411 ;;      Totals:         0       0       0       0       0
  2412 ;;Total ram usage:        0 bytes
  2413 ;; Hardware stack levels used: 1
  2414 ;; Hardware stack levels required when called: 6
  2415 ;; This function calls:
  2416 ;;		_i2c_start
  2417 ;;		_init_ADC
  2418 ;;		_init_CCP1_PWM
  2419 ;;		_init_I2C
  2420 ;;		_init_SPI
  2421 ;;		_init_TMR0
  2422 ;;		_init_TMR1
  2423 ;;		_init_TMR2
  2424 ;;		_init_memoria
  2425 ;;		_init_uart
  2426 ;; This function is called by:
  2427 ;;		_main
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431     0E80                     _initYo:	
  2432                           ;psect for function _initYo
  2433                           
  2434     0E80                     l2546:	
  2435                           ;incstack = 0
  2436                           ; Regs used in _initYo: [wreg+status,2+status,0+pclath+cstack]
  2437                           
  2438                           
  2439                           ;main.c: 320:     OSCCON = 0b00001000;
  2440     0E80  3008               	movlw	8
  2441     0E81  1683               	bsf	3,5	;RP0=1, select bank1
  2442     0E82  1303               	bcf	3,6	;RP1=0, select bank1
  2443     0E83  008F               	movwf	15	;volatile
  2444     0E84                     l2548:
  2445                           
  2446                           ;main.c: 322:     init_uart();
  2447     0E84  120A  158A  2579  120A  158A  	fcall	_init_uart
  2448     0E89                     l2550:
  2449                           
  2450                           ;main.c: 323:     init_ADC();
  2451     0E89  120A  158A  2528  120A  158A  	fcall	_init_ADC
  2452     0E8E                     l2552:
  2453                           
  2454                           ;main.c: 324:     init_TMR0();
  2455     0E8E  120A  158A  241A  120A  158A  	fcall	_init_TMR0
  2456     0E93                     l2554:
  2457                           
  2458                           ;main.c: 325:     init_TMR1();
  2459     0E93  120A  158A  245F  120A  158A  	fcall	_init_TMR1
  2460     0E98                     l2556:
  2461                           
  2462                           ;main.c: 326:     init_TMR2();
  2463     0E98  120A  158A  2470  120A  158A  	fcall	_init_TMR2
  2464     0E9D                     l2558:
  2465                           
  2466                           ;main.c: 328:     init_CCP1_PWM();
  2467     0E9D  120A  158A  244E  120A  158A  	fcall	_init_CCP1_PWM
  2468     0EA2                     l2560:
  2469                           
  2470                           ;main.c: 330:     init_I2C();
  2471     0EA2  120A  158A  2510  120A  158A  	fcall	_init_I2C
  2472                           
  2473                           ;main.c: 331:     init_SPI();
  2474     0EA7  120A  158A  23E1  120A  158A  	fcall	_init_SPI
  2475                           
  2476                           ;main.c: 332:     i2c_start();
  2477     0EAC  120A  158A  2407  120A  158A  	fcall	_i2c_start
  2478                           
  2479                           ;main.c: 333:     init_memoria();
  2480     0EB1  120A  158A  2410  120A  158A  	fcall	_init_memoria
  2481     0EB6                     l2562:
  2482                           
  2483                           ;main.c: 335:     TRISB = 0;
  2484     0EB6  1683               	bsf	3,5	;RP0=1, select bank1
  2485     0EB7  1303               	bcf	3,6	;RP1=0, select bank1
  2486     0EB8  0186               	clrf	6	;volatile
  2487     0EB9                     l2564:
  2488                           
  2489                           ;main.c: 337:     INTCONbits.GIE = 1;
  2490     0EB9  178B               	bsf	11,7	;volatile
  2491     0EBA                     l2566:
  2492                           
  2493                           ;main.c: 338:     INTCONbits.PEIE = 1;
  2494     0EBA  170B               	bsf	11,6	;volatile
  2495     0EBB                     l281:
  2496     0EBB  0008               	return
  2497     0EBC                     __end_of_initYo:
  2498                           
  2499                           	psect	text6
  2500     0D79                     __ptext6:	
  2501 ;; *************** function _init_uart *****************
  2502 ;; Defined at:
  2503 ;;		line 130 in file "main.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;		None
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;		None
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  1    wreg      void 
  2510 ;; Registers used:
  2511 ;;		wreg, status,2
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2517 ;;      Params:         0       0       0       0       0
  2518 ;;      Locals:         0       0       0       0       0
  2519 ;;      Temps:          0       0       0       0       0
  2520 ;;      Totals:         0       0       0       0       0
  2521 ;;Total ram usage:        0 bytes
  2522 ;; Hardware stack levels used: 1
  2523 ;; Hardware stack levels required when called: 4
  2524 ;; This function calls:
  2525 ;;		Nothing
  2526 ;; This function is called by:
  2527 ;;		_initYo
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531     0D79                     _init_uart:	
  2532                           ;psect for function _init_uart
  2533                           
  2534     0D79                     l2228:	
  2535                           ;incstack = 0
  2536                           ; Regs used in _init_uart: [wreg+status,2]
  2537                           
  2538                           
  2539                           ;main.c: 131:     TXSTAbits.BRGH = 0;
  2540     0D79  1683               	bsf	3,5	;RP0=1, select bank1
  2541     0D7A  1303               	bcf	3,6	;RP1=0, select bank1
  2542     0D7B  1118               	bcf	24,2	;volatile
  2543                           
  2544                           ;main.c: 132:     BAUDCTLbits.BRG16 = 0;
  2545     0D7C  1683               	bsf	3,5	;RP0=1, select bank3
  2546     0D7D  1703               	bsf	3,6	;RP1=1, select bank3
  2547     0D7E  1187               	bcf	7,3	;volatile
  2548     0D7F                     l2230:
  2549                           
  2550                           ;main.c: 135:     SPBRGH = 0;
  2551     0D7F  1683               	bsf	3,5	;RP0=1, select bank1
  2552     0D80  1303               	bcf	3,6	;RP1=0, select bank1
  2553     0D81  019A               	clrf	26	;volatile
  2554     0D82                     l2232:
  2555                           
  2556                           ;main.c: 136:     SPBRG = 32;
  2557     0D82  3020               	movlw	32
  2558     0D83  0099               	movwf	25	;volatile
  2559     0D84                     l2234:
  2560                           
  2561                           ;main.c: 138:     TXSTAbits.SYNC = 0;
  2562     0D84  1218               	bcf	24,4	;volatile
  2563     0D85                     l2236:
  2564                           
  2565                           ;main.c: 139:     TXSTAbits.TX9 = 0;
  2566     0D85  1318               	bcf	24,6	;volatile
  2567     0D86                     l2238:
  2568                           
  2569                           ;main.c: 140:     RCSTAbits.RX9 = 0;
  2570     0D86  1283               	bcf	3,5	;RP0=0, select bank0
  2571     0D87  1303               	bcf	3,6	;RP1=0, select bank0
  2572     0D88  1318               	bcf	24,6	;volatile
  2573     0D89                     l2240:
  2574                           
  2575                           ;main.c: 142:     PIE1bits.TXIE = 1;
  2576     0D89  1683               	bsf	3,5	;RP0=1, select bank1
  2577     0D8A  1303               	bcf	3,6	;RP1=0, select bank1
  2578     0D8B  160C               	bsf	12,4	;volatile
  2579     0D8C                     l2242:
  2580                           
  2581                           ;main.c: 143:     PIE1bits.RCIE = 1;
  2582     0D8C  168C               	bsf	12,5	;volatile
  2583     0D8D                     l2244:
  2584                           
  2585                           ;main.c: 145:     RCSTAbits.SPEN = 1;
  2586     0D8D  1283               	bcf	3,5	;RP0=0, select bank0
  2587     0D8E  1303               	bcf	3,6	;RP1=0, select bank0
  2588     0D8F  1798               	bsf	24,7	;volatile
  2589     0D90                     l2246:
  2590                           
  2591                           ;main.c: 147:     TXSTAbits.TXEN = 0;
  2592     0D90  1683               	bsf	3,5	;RP0=1, select bank1
  2593     0D91  1303               	bcf	3,6	;RP1=0, select bank1
  2594     0D92  1298               	bcf	24,5	;volatile
  2595     0D93                     l2248:
  2596                           
  2597                           ;main.c: 148:     TXSTAbits.TXEN = 1;
  2598     0D93  1698               	bsf	24,5	;volatile
  2599     0D94                     l224:
  2600     0D94  0008               	return
  2601     0D95                     __end_of_init_uart:
  2602                           
  2603                           	psect	text7
  2604     0C10                     __ptext7:	
  2605 ;; *************** function _init_memoria *****************
  2606 ;; Defined at:
  2607 ;;		line 227 in file "main.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;		None
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;		None
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      void 
  2614 ;; Registers used:
  2615 ;;		None
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2621 ;;      Params:         0       0       0       0       0
  2622 ;;      Locals:         0       0       0       0       0
  2623 ;;      Temps:          0       0       0       0       0
  2624 ;;      Totals:         0       0       0       0       0
  2625 ;;Total ram usage:        0 bytes
  2626 ;; Hardware stack levels used: 1
  2627 ;; Hardware stack levels required when called: 4
  2628 ;; This function calls:
  2629 ;;		Nothing
  2630 ;; This function is called by:
  2631 ;;		_initYo
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635     0C10                     _init_memoria:	
  2636                           ;psect for function _init_memoria
  2637                           
  2638     0C10                     l2286:	
  2639                           ;incstack = 0
  2640                           ; Regs used in _init_memoria: []
  2641                           
  2642                           
  2643                           ;main.c: 228:     EECON1bits.EEPGD = 0;
  2644     0C10  1683               	bsf	3,5	;RP0=1, select bank3
  2645     0C11  1703               	bsf	3,6	;RP1=1, select bank3
  2646     0C12  138C               	bcf	12,7	;volsfr
  2647                           
  2648                           ;main.c: 229:     PIR2bits.EEIF = 0;
  2649     0C13  1283               	bcf	3,5	;RP0=0, select bank0
  2650     0C14  1303               	bcf	3,6	;RP1=0, select bank0
  2651     0C15  120D               	bcf	13,4	;volatile
  2652                           
  2653                           ;main.c: 230:     PIE2bits.EEIE = 1;
  2654     0C16  1683               	bsf	3,5	;RP0=1, select bank1
  2655     0C17  1303               	bcf	3,6	;RP1=0, select bank1
  2656     0C18  160D               	bsf	13,4	;volatile
  2657     0C19                     l236:
  2658     0C19  0008               	return
  2659     0C1A                     __end_of_init_memoria:
  2660                           
  2661                           	psect	text8
  2662     0C70                     __ptext8:	
  2663 ;; *************** function _init_TMR2 *****************
  2664 ;; Defined at:
  2665 ;;		line 93 in file "main.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;		None
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;		None
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  1    wreg      void 
  2672 ;; Registers used:
  2673 ;;		wreg, status,2, status,0
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2679 ;;      Params:         0       0       0       0       0
  2680 ;;      Locals:         0       0       0       0       0
  2681 ;;      Temps:          0       0       0       0       0
  2682 ;;      Totals:         0       0       0       0       0
  2683 ;;Total ram usage:        0 bytes
  2684 ;; Hardware stack levels used: 1
  2685 ;; Hardware stack levels required when called: 4
  2686 ;; This function calls:
  2687 ;;		Nothing
  2688 ;; This function is called by:
  2689 ;;		_initYo
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693     0C70                     _init_TMR2:	
  2694                           ;psect for function _init_TMR2
  2695                           
  2696     0C70                     l2206:	
  2697                           ;incstack = 0
  2698                           ; Regs used in _init_TMR2: [wreg+status,2+status,0]
  2699                           
  2700                           
  2701                           ;main.c: 94:     PR2 = 167;
  2702     0C70  30A7               	movlw	167
  2703     0C71  1683               	bsf	3,5	;RP0=1, select bank1
  2704     0C72  1303               	bcf	3,6	;RP1=0, select bank1
  2705     0C73  0092               	movwf	18	;volatile
  2706     0C74                     l2208:
  2707                           
  2708                           ;main.c: 96:     T2CONbits.T2CKPS = 0b00;
  2709     0C74  30FC               	movlw	-4
  2710     0C75  1283               	bcf	3,5	;RP0=0, select bank0
  2711     0C76  1303               	bcf	3,6	;RP1=0, select bank0
  2712     0C77  0592               	andwf	18,f	;volatile
  2713     0C78                     l2210:
  2714                           
  2715                           ;main.c: 97:     T2CONbits.TOUTPS = 0b0000;
  2716     0C78  3087               	movlw	-121
  2717     0C79  0592               	andwf	18,f	;volatile
  2718     0C7A                     l2212:
  2719                           
  2720                           ;main.c: 98:     PIE1bits.TMR2IE = 1;
  2721     0C7A  1683               	bsf	3,5	;RP0=1, select bank1
  2722     0C7B  1303               	bcf	3,6	;RP1=0, select bank1
  2723     0C7C  148C               	bsf	12,1	;volatile
  2724     0C7D                     l2214:
  2725                           
  2726                           ;main.c: 99:     PIR1bits.TMR2IF = 0;
  2727     0C7D  1283               	bcf	3,5	;RP0=0, select bank0
  2728     0C7E  1303               	bcf	3,6	;RP1=0, select bank0
  2729     0C7F  108C               	bcf	12,1	;volatile
  2730     0C80                     l2216:
  2731                           
  2732                           ;main.c: 100:     T2CONbits.TMR2ON = 1;
  2733     0C80  1512               	bsf	18,2	;volatile
  2734     0C81                     l218:
  2735     0C81  0008               	return
  2736     0C82                     __end_of_init_TMR2:
  2737                           
  2738                           	psect	text9
  2739     0C5F                     __ptext9:	
  2740 ;; *************** function _init_TMR1 *****************
  2741 ;; Defined at:
  2742 ;;		line 82 in file "main.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;		None
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;		None
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      void 
  2749 ;; Registers used:
  2750 ;;		wreg, status,2, status,0
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2756 ;;      Params:         0       0       0       0       0
  2757 ;;      Locals:         0       0       0       0       0
  2758 ;;      Temps:          0       0       0       0       0
  2759 ;;      Totals:         0       0       0       0       0
  2760 ;;Total ram usage:        0 bytes
  2761 ;; Hardware stack levels used: 1
  2762 ;; Hardware stack levels required when called: 4
  2763 ;; This function calls:
  2764 ;;		Nothing
  2765 ;; This function is called by:
  2766 ;;		_initYo
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770     0C5F                     _init_TMR1:	
  2771                           ;psect for function _init_TMR1
  2772                           
  2773     0C5F                     l2194:	
  2774                           ;incstack = 0
  2775                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
  2776                           
  2777                           
  2778                           ;main.c: 83:     TMR1H = eltimer1H;
  2779     0C5F  087D               	movf	_eltimer1H,w
  2780     0C60  1283               	bcf	3,5	;RP0=0, select bank0
  2781     0C61  1303               	bcf	3,6	;RP1=0, select bank0
  2782     0C62  008F               	movwf	15	;volatile
  2783                           
  2784                           ;main.c: 84:     TMR1L = eltimer1L;
  2785     0C63  0855               	movf	_eltimer1L,w
  2786     0C64  008E               	movwf	14	;volatile
  2787     0C65                     l2196:
  2788                           
  2789                           ;main.c: 85:     T1CONbits.TMR1CS = 0;
  2790     0C65  1090               	bcf	16,1	;volatile
  2791     0C66                     l2198:
  2792                           
  2793                           ;main.c: 87:     T1CONbits.T1CKPS = 0b00;
  2794     0C66  30CF               	movlw	-49
  2795     0C67  0590               	andwf	16,f	;volatile
  2796     0C68                     l2200:
  2797                           
  2798                           ;main.c: 88:     T1CONbits.TMR1GE = 0;
  2799     0C68  1310               	bcf	16,6	;volatile
  2800     0C69                     l2202:
  2801                           
  2802                           ;main.c: 89:     PIE1bits.TMR1IE = 1;
  2803     0C69  1683               	bsf	3,5	;RP0=1, select bank1
  2804     0C6A  1303               	bcf	3,6	;RP1=0, select bank1
  2805     0C6B  140C               	bsf	12,0	;volatile
  2806     0C6C                     l2204:
  2807                           
  2808                           ;main.c: 90:     T1CONbits.TMR1ON = 1;
  2809     0C6C  1283               	bcf	3,5	;RP0=0, select bank0
  2810     0C6D  1303               	bcf	3,6	;RP1=0, select bank0
  2811     0C6E  1410               	bsf	16,0	;volatile
  2812     0C6F                     l215:
  2813     0C6F  0008               	return
  2814     0C70                     __end_of_init_TMR1:
  2815                           
  2816                           	psect	text10
  2817     0C1A                     __ptext10:	
  2818 ;; *************** function _init_TMR0 *****************
  2819 ;; Defined at:
  2820 ;;		line 72 in file "main.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;		None
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;		None
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1    wreg      void 
  2827 ;; Registers used:
  2828 ;;		wreg, status,2, status,0
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2834 ;;      Params:         0       0       0       0       0
  2835 ;;      Locals:         0       0       0       0       0
  2836 ;;      Temps:          0       0       0       0       0
  2837 ;;      Totals:         0       0       0       0       0
  2838 ;;Total ram usage:        0 bytes
  2839 ;; Hardware stack levels used: 1
  2840 ;; Hardware stack levels required when called: 4
  2841 ;; This function calls:
  2842 ;;		Nothing
  2843 ;; This function is called by:
  2844 ;;		_initYo
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848     0C1A                     _init_TMR0:	
  2849                           ;psect for function _init_TMR0
  2850                           
  2851     0C1A                     l2184:	
  2852                           ;incstack = 0
  2853                           ; Regs used in _init_TMR0: [wreg+status,2+status,0]
  2854                           
  2855                           
  2856                           ;main.c: 73:     TMR0 = 61;
  2857     0C1A  303D               	movlw	61
  2858     0C1B  1283               	bcf	3,5	;RP0=0, select bank0
  2859     0C1C  1303               	bcf	3,6	;RP1=0, select bank0
  2860     0C1D  0081               	movwf	1	;volatile
  2861     0C1E                     l2186:
  2862                           
  2863                           ;main.c: 76:     OPTION_REGbits.T0CS = 0;
  2864     0C1E  1683               	bsf	3,5	;RP0=1, select bank1
  2865     0C1F  1303               	bcf	3,6	;RP1=0, select bank1
  2866     0C20  1281               	bcf	1,5	;volatile
  2867     0C21                     l2188:
  2868                           
  2869                           ;main.c: 77:     OPTION_REGbits.PSA = 0;
  2870     0C21  1181               	bcf	1,3	;volatile
  2871     0C22                     l2190:
  2872                           
  2873                           ;main.c: 78:     OPTION_REGbits.PS = 0b111;
  2874     0C22  3007               	movlw	7
  2875     0C23  0481               	iorwf	1,f	;volatile
  2876     0C24                     l2192:
  2877                           
  2878                           ;main.c: 79:     INTCONbits.T0IE = 1;
  2879     0C24  168B               	bsf	11,5	;volatile
  2880     0C25                     l212:
  2881     0C25  0008               	return
  2882     0C26                     __end_of_init_TMR0:
  2883                           
  2884                           	psect	text11
  2885     0BE1                     __ptext11:	
  2886 ;; *************** function _init_SPI *****************
  2887 ;; Defined at:
  2888 ;;		line 202 in file "main.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;		None
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;		None
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1    wreg      void 
  2895 ;; Registers used:
  2896 ;;		None
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2902 ;;      Params:         0       0       0       0       0
  2903 ;;      Locals:         0       0       0       0       0
  2904 ;;      Temps:          0       0       0       0       0
  2905 ;;      Totals:         0       0       0       0       0
  2906 ;;Total ram usage:        0 bytes
  2907 ;; Hardware stack levels used: 1
  2908 ;; Hardware stack levels required when called: 4
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_initYo
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916     0BE1                     _init_SPI:	
  2917                           ;psect for function _init_SPI
  2918                           
  2919     0BE1                     l2262:	
  2920                           ;incstack = 0
  2921                           ; Regs used in _init_SPI: []
  2922                           
  2923                           
  2924                           ;main.c: 208:     TRISCbits.TRISC5 = 0;
  2925     0BE1  1683               	bsf	3,5	;RP0=1, select bank1
  2926     0BE2  1303               	bcf	3,6	;RP1=0, select bank1
  2927     0BE3  1287               	bcf	7,5	;volatile
  2928     0BE4                     l230:
  2929     0BE4  0008               	return
  2930     0BE5                     __end_of_init_SPI:
  2931                           
  2932                           	psect	text12
  2933     0D10                     __ptext12:	
  2934 ;; *************** function _init_I2C *****************
  2935 ;; Defined at:
  2936 ;;		line 151 in file "main.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;		None
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;		None
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      void 
  2943 ;; Registers used:
  2944 ;;		wreg, status,2, status,0
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2950 ;;      Params:         0       0       0       0       0
  2951 ;;      Locals:         0       0       0       0       0
  2952 ;;      Temps:          0       0       0       0       0
  2953 ;;      Totals:         0       0       0       0       0
  2954 ;;Total ram usage:        0 bytes
  2955 ;; Hardware stack levels used: 1
  2956 ;; Hardware stack levels required when called: 4
  2957 ;; This function calls:
  2958 ;;		Nothing
  2959 ;; This function is called by:
  2960 ;;		_initYo
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964     0D10                     _init_I2C:	
  2965                           ;psect for function _init_I2C
  2966                           
  2967     0D10                     l2250:	
  2968                           ;incstack = 0
  2969                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
  2970                           
  2971                           
  2972                           ;main.c: 154:     TRISCbits.TRISC3 = 1;
  2973     0D10  1683               	bsf	3,5	;RP0=1, select bank1
  2974     0D11  1303               	bcf	3,6	;RP1=0, select bank1
  2975     0D12  1587               	bsf	7,3	;volatile
  2976                           
  2977                           ;main.c: 155:     TRISCbits.TRISC4 = 1;
  2978     0D13  1607               	bsf	7,4	;volatile
  2979     0D14                     l2252:
  2980                           
  2981                           ;main.c: 158:     SSPCONbits.SSPM = 0;
  2982     0D14  30F0               	movlw	-16
  2983     0D15  1283               	bcf	3,5	;RP0=0, select bank0
  2984     0D16  1303               	bcf	3,6	;RP1=0, select bank0
  2985     0D17  0594               	andwf	20,f	;volatile
  2986                           
  2987                           ;main.c: 159:     SSPCONbits.SSPM = 0;
  2988     0D18  30F0               	movlw	-16
  2989     0D19  0594               	andwf	20,f	;volatile
  2990     0D1A                     l2254:
  2991                           
  2992                           ;main.c: 161:     ANSEL = 0;
  2993     0D1A  1683               	bsf	3,5	;RP0=1, select bank3
  2994     0D1B  1703               	bsf	3,6	;RP1=1, select bank3
  2995     0D1C  0188               	clrf	8	;volatile
  2996     0D1D                     l2256:
  2997                           
  2998                           ;main.c: 177:     SSPADD = (20000000 / 4) - 1;
  2999     0D1D  303F               	movlw	63
  3000     0D1E  1683               	bsf	3,5	;RP0=1, select bank1
  3001     0D1F  1303               	bcf	3,6	;RP1=0, select bank1
  3002     0D20  0093               	movwf	19	;volatile
  3003     0D21                     l2258:
  3004                           
  3005                           ;main.c: 179:     PIR1bits.SSPIF = 0;
  3006     0D21  1283               	bcf	3,5	;RP0=0, select bank0
  3007     0D22  1303               	bcf	3,6	;RP1=0, select bank0
  3008     0D23  118C               	bcf	12,3	;volatile
  3009     0D24                     l2260:
  3010                           
  3011                           ;main.c: 180:     PIE1bits.SSPIE = 1;
  3012     0D24  1683               	bsf	3,5	;RP0=1, select bank1
  3013     0D25  1303               	bcf	3,6	;RP1=0, select bank1
  3014     0D26  158C               	bsf	12,3	;volatile
  3015     0D27                     l227:
  3016     0D27  0008               	return
  3017     0D28                     __end_of_init_I2C:
  3018                           
  3019                           	psect	text13
  3020     0C4E                     __ptext13:	
  3021 ;; *************** function _init_CCP1_PWM *****************
  3022 ;; Defined at:
  3023 ;;		line 103 in file "main.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;		None
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;		None
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  1    wreg      void 
  3030 ;; Registers used:
  3031 ;;		wreg, status,2, status,0
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3037 ;;      Params:         0       0       0       0       0
  3038 ;;      Locals:         0       0       0       0       0
  3039 ;;      Temps:          0       0       0       0       0
  3040 ;;      Totals:         0       0       0       0       0
  3041 ;;Total ram usage:        0 bytes
  3042 ;; Hardware stack levels used: 1
  3043 ;; Hardware stack levels required when called: 4
  3044 ;; This function calls:
  3045 ;;		Nothing
  3046 ;; This function is called by:
  3047 ;;		_initYo
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051     0C4E                     _init_CCP1_PWM:	
  3052                           ;psect for function _init_CCP1_PWM
  3053                           
  3054     0C4E                     l2218:	
  3055                           ;incstack = 0
  3056                           ; Regs used in _init_CCP1_PWM: [wreg+status,2+status,0]
  3057                           
  3058                           
  3059                           ;main.c: 105:     TRISCbits.TRISC2 = 0;
  3060     0C4E  1683               	bsf	3,5	;RP0=1, select bank1
  3061     0C4F  1303               	bcf	3,6	;RP1=0, select bank1
  3062     0C50  1107               	bcf	7,2	;volatile
  3063     0C51                     l2220:
  3064                           
  3065                           ;main.c: 106:     ANSEL = 0;
  3066     0C51  1683               	bsf	3,5	;RP0=1, select bank3
  3067     0C52  1703               	bsf	3,6	;RP1=1, select bank3
  3068     0C53  0188               	clrf	8	;volatile
  3069     0C54                     l2222:
  3070                           
  3071                           ;main.c: 107:     CCP1CONbits.CCP1M = 0b1100;
  3072     0C54  1283               	bcf	3,5	;RP0=0, select bank0
  3073     0C55  1303               	bcf	3,6	;RP1=0, select bank0
  3074     0C56  0817               	movf	23,w	;volatile
  3075     0C57  39F0               	andlw	-16
  3076     0C58  380C               	iorlw	12
  3077     0C59  0097               	movwf	23	;volatile
  3078     0C5A                     l2224:
  3079                           
  3080                           ;main.c: 108:     CCP1CONbits.P1M = 0b00;
  3081     0C5A  303F               	movlw	-193
  3082     0C5B  0597               	andwf	23,f	;volatile
  3083     0C5C                     l2226:
  3084                           
  3085                           ;main.c: 110:     CCPR1L = porcentaje;
  3086     0C5C  0863               	movf	_porcentaje,w
  3087     0C5D  0095               	movwf	21	;volatile
  3088     0C5E                     l221:
  3089     0C5E  0008               	return
  3090     0C5F                     __end_of_init_CCP1_PWM:
  3091                           
  3092                           	psect	text14
  3093     0D28                     __ptext14:	
  3094 ;; *************** function _init_ADC *****************
  3095 ;; Defined at:
  3096 ;;		line 211 in file "main.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;		None
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;		None
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      void 
  3103 ;; Registers used:
  3104 ;;		wreg, status,2, status,0
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3110 ;;      Params:         0       0       0       0       0
  3111 ;;      Locals:         0       0       0       0       0
  3112 ;;      Temps:          0       0       0       0       0
  3113 ;;      Totals:         0       0       0       0       0
  3114 ;;Total ram usage:        0 bytes
  3115 ;; Hardware stack levels used: 1
  3116 ;; Hardware stack levels required when called: 4
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_initYo
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124     0D28                     _init_ADC:	
  3125                           ;psect for function _init_ADC
  3126                           
  3127     0D28                     l2264:	
  3128                           ;incstack = 0
  3129                           ; Regs used in _init_ADC: [wreg+status,2+status,0]
  3130                           
  3131                           
  3132                           ;main.c: 212:     TRISA = 1;
  3133     0D28  3001               	movlw	1
  3134     0D29  1683               	bsf	3,5	;RP0=1, select bank1
  3135     0D2A  1303               	bcf	3,6	;RP1=0, select bank1
  3136     0D2B  0085               	movwf	5	;volatile
  3137     0D2C                     l2266:
  3138                           
  3139                           ;main.c: 213:     ANSELbits.ANS0 = 1;
  3140     0D2C  1683               	bsf	3,5	;RP0=1, select bank3
  3141     0D2D  1703               	bsf	3,6	;RP1=1, select bank3
  3142     0D2E  1408               	bsf	8,0	;volatile
  3143     0D2F                     l2268:
  3144                           
  3145                           ;main.c: 214:     ANSELbits.ANS1 = 1;
  3146     0D2F  1488               	bsf	8,1	;volatile
  3147     0D30                     l2270:
  3148                           
  3149                           ;main.c: 215:     ANSELbits.ANS2 = 1;
  3150     0D30  1508               	bsf	8,2	;volatile
  3151     0D31                     l2272:
  3152                           
  3153                           ;main.c: 216:     ADCON0bits.ADCS = 0b10;
  3154     0D31  1283               	bcf	3,5	;RP0=0, select bank0
  3155     0D32  1303               	bcf	3,6	;RP1=0, select bank0
  3156     0D33  081F               	movf	31,w	;volatile
  3157     0D34  393F               	andlw	-193
  3158     0D35  3880               	iorlw	128
  3159     0D36  009F               	movwf	31	;volatile
  3160     0D37                     l2274:
  3161                           
  3162                           ;main.c: 217:     ADCON0bits.CHS = 0b0000;
  3163     0D37  30C3               	movlw	-61
  3164     0D38  059F               	andwf	31,f	;volatile
  3165     0D39                     l2276:
  3166                           
  3167                           ;main.c: 218:     ADCON0bits.ADON = 1;
  3168     0D39  141F               	bsf	31,0	;volatile
  3169     0D3A                     l2278:
  3170                           
  3171                           ;main.c: 219:     ADCON1bits.ADFM = 1;
  3172     0D3A  1683               	bsf	3,5	;RP0=1, select bank1
  3173     0D3B  1303               	bcf	3,6	;RP1=0, select bank1
  3174     0D3C  179F               	bsf	31,7	;volatile
  3175     0D3D                     l2280:
  3176                           
  3177                           ;main.c: 221:     ADCON1bits.VCFG1 = 0;
  3178     0D3D  129F               	bcf	31,5	;volatile
  3179     0D3E                     l2282:
  3180                           
  3181                           ;main.c: 222:     ADCON1bits.VCFG0 = 0;
  3182     0D3E  121F               	bcf	31,4	;volatile
  3183     0D3F                     l2284:
  3184                           
  3185                           ;main.c: 224:     PIE1bits.ADIE = 1;
  3186     0D3F  170C               	bsf	12,6	;volatile
  3187     0D40                     l233:
  3188     0D40  0008               	return
  3189     0D41                     __end_of_init_ADC:
  3190                           
  3191                           	psect	text15
  3192     0C07                     __ptext15:	
  3193 ;; *************** function _i2c_start *****************
  3194 ;; Defined at:
  3195 ;;		line 16 in file "i2c-v2.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;		None
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;		None
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  1    wreg      void 
  3202 ;; Registers used:
  3203 ;;		status,2, status,0, pclath, cstack
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3209 ;;      Params:         0       0       0       0       0
  3210 ;;      Locals:         0       0       0       0       0
  3211 ;;      Temps:          0       0       0       0       0
  3212 ;;      Totals:         0       0       0       0       0
  3213 ;;Total ram usage:        0 bytes
  3214 ;; Hardware stack levels used: 1
  3215 ;; Hardware stack levels required when called: 5
  3216 ;; This function calls:
  3217 ;;		_wait_MSSP
  3218 ;; This function is called by:
  3219 ;;		_initYo
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223     0C07                     _i2c_start:	
  3224                           ;psect for function _i2c_start
  3225                           
  3226     0C07                     l2178:	
  3227                           ;incstack = 0
  3228                           ; Regs used in _i2c_start: [status,2+status,0+pclath+cstack]
  3229                           
  3230                           
  3231                           ;i2c-v2.c: 18:     SSPCON2bits.SEN = 1;
  3232     0C07  1683               	bsf	3,5	;RP0=1, select bank1
  3233     0C08  1303               	bcf	3,6	;RP1=0, select bank1
  3234     0C09  1411               	bsf	17,0	;volatile
  3235     0C0A                     l2180:
  3236                           
  3237                           ;i2c-v2.c: 19:     wait_MSSP();
  3238     0C0A  120A  158A  23E5  120A  158A  	fcall	_wait_MSSP
  3239     0C0F                     l15:
  3240     0C0F  0008               	return
  3241     0C10                     __end_of_i2c_start:
  3242                           
  3243                           	psect	text16
  3244     06C0                     __ptext16:	
  3245 ;; *************** function _initActuadoresSegunMemoria *****************
  3246 ;; Defined at:
  3247 ;;		line 435 in file "main.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;		None
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;		None
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  1    wreg      void 
  3254 ;; Registers used:
  3255 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3261 ;;      Params:         0       0       0       0       0
  3262 ;;      Locals:         0       3       0       0       0
  3263 ;;      Temps:          0       0       0       0       0
  3264 ;;      Totals:         0       3       0       0       0
  3265 ;;Total ram usage:        3 bytes
  3266 ;; Hardware stack levels used: 1
  3267 ;; Hardware stack levels required when called: 7
  3268 ;; This function calls:
  3269 ;;		_getnoPrimerArranque
  3270 ;;		_leerMemoria
  3271 ;;		_setLED
  3272 ;;		_setPWM
  3273 ;; This function is called by:
  3274 ;;		_main
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278     06C0                     _initActuadoresSegunMemoria:	
  3279                           ;psect for function _initActuadoresSegunMemoria
  3280                           
  3281     06C0                     l2598:	
  3282                           ;incstack = 0
  3283                           ; Regs used in _initActuadoresSegunMemoria: [wreg+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  3284                           
  3285                           
  3286                           ;main.c: 436:     if (getnoPrimerArranque() == FALSE) {
  3287     06C0  120A  158A  255D  120A  118A  	fcall	_getnoPrimerArranque
  3288     06C5  3A00               	xorlw	0
  3289     06C6  1D03               	skipz
  3290     06C7  2EC9               	goto	u1821
  3291     06C8  2ECA               	goto	u1820
  3292     06C9                     u1821:
  3293     06C9  2EDF               	goto	l2602
  3294     06CA                     u1820:
  3295     06CA                     l2600:
  3296                           
  3297                           ;main.c: 437:         setPWM(0);
  3298     06CA  3000               	movlw	0
  3299     06CB  120A  158A  25E7  120A  118A  	fcall	_setPWM
  3300                           
  3301                           ;main.c: 438:         setLED(255, 255, 255, 31);
  3302     06D0  30FF               	movlw	255
  3303     06D1  1283               	bcf	3,5	;RP0=0, select bank0
  3304     06D2  1303               	bcf	3,6	;RP1=0, select bank0
  3305     06D3  00B5               	movwf	setLED@green
  3306     06D4  30FF               	movlw	255
  3307     06D5  00B6               	movwf	setLED@blue
  3308     06D6  301F               	movlw	31
  3309     06D7  00B7               	movwf	setLED@luminosidad
  3310     06D8  30FF               	movlw	255
  3311     06D9  120A  158A  27BD  120A  118A  	fcall	_setLED
  3312                           
  3313                           ;main.c: 439:     } else {
  3314     06DE  2F1D               	goto	l322
  3315     06DF                     l2602:
  3316                           
  3317                           ;main.c: 440:         setPWM(leerMemoria(direccionPWM));
  3318     06DF  1283               	bcf	3,5	;RP0=0, select bank0
  3319     06E0  1303               	bcf	3,6	;RP1=0, select bank0
  3320     06E1  0854               	movf	_direccionPWM,w
  3321     06E2  120A  158A  2541  120A  118A  	fcall	_leerMemoria
  3322     06E7  120A  158A  25E7  120A  118A  	fcall	_setPWM
  3323     06EC                     l2604:
  3324                           
  3325                           ;main.c: 441:         setLED(leerMemoria(direccionLED), leerMemoria(direccionLED + 1 * 8
      +                          ), leerMemoria(direccionLED + 2 * 8), leerMemoria(direccionLED + 3 * 8));
  3326     06EC  1283               	bcf	3,5	;RP0=0, select bank0
  3327     06ED  1303               	bcf	3,6	;RP1=0, select bank0
  3328     06EE  0853               	movf	_direccionLED,w
  3329     06EF  3E08               	addlw	8
  3330     06F0  120A  158A  2541  120A  118A  	fcall	_leerMemoria
  3331     06F5  1283               	bcf	3,5	;RP0=0, select bank0
  3332     06F6  1303               	bcf	3,6	;RP1=0, select bank0
  3333     06F7  00B9               	movwf	_initActuadoresSegunMemoria$1570
  3334     06F8                     l2606:
  3335                           
  3336                           ;main.c: 441:         setLED(leerMemoria(direccionLED), leerMemoria(direccionLED + 1 * 8
      +                          ), leerMemoria(direccionLED + 2 * 8), leerMemoria(direccionLED + 3 * 8));
  3337     06F8  0853               	movf	_direccionLED,w
  3338     06F9  3E10               	addlw	16
  3339     06FA  120A  158A  2541  120A  118A  	fcall	_leerMemoria
  3340     06FF  1283               	bcf	3,5	;RP0=0, select bank0
  3341     0700  1303               	bcf	3,6	;RP1=0, select bank0
  3342     0701  00BA               	movwf	_initActuadoresSegunMemoria$1571
  3343     0702                     l2608:
  3344                           
  3345                           ;main.c: 441:         setLED(leerMemoria(direccionLED), leerMemoria(direccionLED + 1 * 8
      +                          ), leerMemoria(direccionLED + 2 * 8), leerMemoria(direccionLED + 3 * 8));
  3346     0702  0853               	movf	_direccionLED,w
  3347     0703  3E18               	addlw	24
  3348     0704  120A  158A  2541  120A  118A  	fcall	_leerMemoria
  3349     0709  1283               	bcf	3,5	;RP0=0, select bank0
  3350     070A  1303               	bcf	3,6	;RP1=0, select bank0
  3351     070B  00BB               	movwf	_initActuadoresSegunMemoria$1572
  3352     070C                     l2610:
  3353                           
  3354                           ;main.c: 441:         setLED(leerMemoria(direccionLED), leerMemoria(direccionLED + 1 * 8
      +                          ), leerMemoria(direccionLED + 2 * 8), leerMemoria(direccionLED + 3 * 8));
  3355     070C  0839               	movf	_initActuadoresSegunMemoria$1570,w
  3356     070D  00B5               	movwf	setLED@green
  3357     070E  083A               	movf	_initActuadoresSegunMemoria$1571,w
  3358     070F  00B6               	movwf	setLED@blue
  3359     0710  083B               	movf	_initActuadoresSegunMemoria$1572,w
  3360     0711  00B7               	movwf	setLED@luminosidad
  3361     0712  0853               	movf	_direccionLED,w
  3362     0713  120A  158A  2541  120A  118A  	fcall	_leerMemoria
  3363     0718  120A  158A  27BD  120A  118A  	fcall	_setLED
  3364     071D                     l322:
  3365     071D  0008               	return
  3366     071E                     __end_of_initActuadoresSegunMemoria:
  3367                           
  3368                           	psect	text17
  3369     0DE7                     __ptext17:	
  3370 ;; *************** function _setPWM *****************
  3371 ;; Defined at:
  3372 ;;		line 351 in file "main.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;  porcent         1    wreg     unsigned char 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;  porcent         1   20[BANK0 ] unsigned char 
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      void 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3386 ;;      Params:         0       0       0       0       0
  3387 ;;      Locals:         0       1       0       0       0
  3388 ;;      Temps:          0       2       0       0       0
  3389 ;;      Totals:         0       3       0       0       0
  3390 ;;Total ram usage:        3 bytes
  3391 ;; Hardware stack levels used: 1
  3392 ;; Hardware stack levels required when called: 6
  3393 ;; This function calls:
  3394 ;;		___awdiv
  3395 ;;		___bmul
  3396 ;;		_escribirMemoria
  3397 ;; This function is called by:
  3398 ;;		_initActuadoresSegunMemoria
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           
  3402     0DE7                     _setPWM:	
  3403                           ;psect for function _setPWM
  3404                           
  3405                           
  3406                           ;incstack = 0
  3407                           ; Regs used in _setPWM: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3408                           ;setPWM@porcent stored from wreg
  3409     0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  3410     0DE8  1303               	bcf	3,6	;RP1=0, select bank0
  3411     0DE9  00B4               	movwf	setPWM@porcent
  3412     0DEA                     l2346:
  3413                           
  3414                           ;main.c: 352:     porcentaje = (char) (porcent / 100);
  3415     0DEA  3064               	movlw	100
  3416     0DEB  00A9               	movwf	___awdiv@divisor
  3417     0DEC  3000               	movlw	0
  3418     0DED  00AA               	movwf	___awdiv@divisor+1
  3419     0DEE  0834               	movf	setPWM@porcent,w
  3420     0DEF  00B2               	movwf	??_setPWM
  3421     0DF0  01B3               	clrf	??_setPWM+1
  3422     0DF1  0832               	movf	??_setPWM,w
  3423     0DF2  00AB               	movwf	___awdiv@dividend
  3424     0DF3  0833               	movf	??_setPWM+1,w
  3425     0DF4  00AC               	movwf	___awdiv@dividend+1
  3426     0DF5  120A  118A  2529  120A  158A  	fcall	___awdiv
  3427     0DFA  1283               	bcf	3,5	;RP0=0, select bank0
  3428     0DFB  1303               	bcf	3,6	;RP1=0, select bank0
  3429     0DFC  0829               	movf	?___awdiv,w
  3430     0DFD  00E3               	movwf	_porcentaje
  3431                           
  3432                           ;main.c: 353:     CCPR1L = porcentaje * porcentajeMax;
  3433     0DFE  0852               	movf	_porcentajeMax,w
  3434     0DFF  00A9               	movwf	___bmul@multiplicand
  3435     0E00  0863               	movf	_porcentaje,w
  3436     0E01  120A  158A  24F9  120A  158A  	fcall	___bmul
  3437     0E06  1283               	bcf	3,5	;RP0=0, select bank0
  3438     0E07  1303               	bcf	3,6	;RP1=0, select bank0
  3439     0E08  0095               	movwf	21	;volatile
  3440     0E09                     l2348:
  3441                           
  3442                           ;main.c: 354:     escribirMemoria(direccionPWM, porcent);
  3443     0E09  0834               	movf	setPWM@porcent,w
  3444     0E0A  00AA               	movwf	escribirMemoria@dato
  3445     0E0B  0854               	movf	_direccionPWM,w
  3446     0E0C  120A  118A  23D8  120A  158A  	fcall	_escribirMemoria
  3447     0E11                     l2350:
  3448                           
  3449                           ;main.c: 355:     pPWM = porcent;
  3450     0E11  1283               	bcf	3,5	;RP0=0, select bank0
  3451     0E12  1303               	bcf	3,6	;RP1=0, select bank0
  3452     0E13  0834               	movf	setPWM@porcent,w
  3453     0E14  00E5               	movwf	_pPWM
  3454     0E15                     l291:
  3455     0E15  0008               	return
  3456     0E16                     __end_of_setPWM:
  3457                           
  3458                           	psect	text18
  3459     0CF9                     __ptext18:	
  3460 ;; *************** function ___bmul *****************
  3461 ;; Defined at:
  3462 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;  multiplier      1    wreg     unsigned char 
  3465 ;;  multiplicand    1    9[BANK0 ] unsigned char 
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;  multiplier      1   12[BANK0 ] unsigned char 
  3468 ;;  product         1   11[BANK0 ] unsigned char 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      unsigned char 
  3471 ;; Registers used:
  3472 ;;		wreg, status,2, status,0
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3478 ;;      Params:         0       1       0       0       0
  3479 ;;      Locals:         0       2       0       0       0
  3480 ;;      Temps:          0       1       0       0       0
  3481 ;;      Totals:         0       4       0       0       0
  3482 ;;Total ram usage:        4 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; Hardware stack levels required when called: 4
  3485 ;; This function calls:
  3486 ;;		Nothing
  3487 ;; This function is called by:
  3488 ;;		_setPWM
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492     0CF9                     ___bmul:	
  3493                           ;psect for function ___bmul
  3494                           
  3495                           
  3496                           ;incstack = 0
  3497                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3498                           ;___bmul@multiplier stored from wreg
  3499     0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  3500     0CFA  1303               	bcf	3,6	;RP1=0, select bank0
  3501     0CFB  00AC               	movwf	___bmul@multiplier
  3502     0CFC                     l2088:
  3503     0CFC  01AB               	clrf	___bmul@product
  3504     0CFD                     l2090:
  3505     0CFD  1C2C               	btfss	___bmul@multiplier,0
  3506     0CFE  2D00               	goto	u1221
  3507     0CFF  2D01               	goto	u1220
  3508     0D00                     u1221:
  3509     0D00  2D05               	goto	l2094
  3510     0D01                     u1220:
  3511     0D01                     l2092:
  3512     0D01  0829               	movf	___bmul@multiplicand,w
  3513     0D02  00AA               	movwf	??___bmul
  3514     0D03  082A               	movf	??___bmul,w
  3515     0D04  07AB               	addwf	___bmul@product,f
  3516     0D05                     l2094:
  3517     0D05  1003               	clrc
  3518     0D06  0DA9               	rlf	___bmul@multiplicand,f
  3519     0D07                     l2096:
  3520     0D07  1003               	clrc
  3521     0D08  0CAC               	rrf	___bmul@multiplier,f
  3522     0D09  082C               	movf	___bmul@multiplier,w
  3523     0D0A  1D03               	btfss	3,2
  3524     0D0B  2D0D               	goto	u1231
  3525     0D0C  2D0E               	goto	u1230
  3526     0D0D                     u1231:
  3527     0D0D  2CFD               	goto	l2090
  3528     0D0E                     u1230:
  3529     0D0E                     l2098:
  3530     0D0E  082B               	movf	___bmul@product,w
  3531     0D0F                     l528:
  3532     0D0F  0008               	return
  3533     0D10                     __end_of___bmul:
  3534                           
  3535                           	psect	text19
  3536     0529                     __ptext19:	
  3537 ;; *************** function ___awdiv *****************
  3538 ;; Defined at:
  3539 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;  divisor         2    9[BANK0 ] int 
  3542 ;;  dividend        2   11[BANK0 ] int 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;  quotient        2   16[BANK0 ] int 
  3545 ;;  sign            1   15[BANK0 ] unsigned char 
  3546 ;;  counter         1   14[BANK0 ] unsigned char 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  2    9[BANK0 ] int 
  3549 ;; Registers used:
  3550 ;;		wreg, status,2, status,0
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3556 ;;      Params:         0       4       0       0       0
  3557 ;;      Locals:         0       4       0       0       0
  3558 ;;      Temps:          0       1       0       0       0
  3559 ;;      Totals:         0       9       0       0       0
  3560 ;;Total ram usage:        9 bytes
  3561 ;; Hardware stack levels used: 1
  3562 ;; Hardware stack levels required when called: 4
  3563 ;; This function calls:
  3564 ;;		Nothing
  3565 ;; This function is called by:
  3566 ;;		_setPWM
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570     0529                     ___awdiv:	
  3571                           ;psect for function ___awdiv
  3572                           
  3573     0529                     l2102:	
  3574                           ;incstack = 0
  3575                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3576                           
  3577     0529  1283               	bcf	3,5	;RP0=0, select bank0
  3578     052A  1303               	bcf	3,6	;RP1=0, select bank0
  3579     052B  01AF               	clrf	___awdiv@sign
  3580     052C                     l2104:
  3581     052C  1FAA               	btfss	___awdiv@divisor+1,7
  3582     052D  2D2F               	goto	u1241
  3583     052E  2D30               	goto	u1240
  3584     052F                     u1241:
  3585     052F  2D37               	goto	l2110
  3586     0530                     u1240:
  3587     0530                     l2106:
  3588     0530  09A9               	comf	___awdiv@divisor,f
  3589     0531  09AA               	comf	___awdiv@divisor+1,f
  3590     0532  0AA9               	incf	___awdiv@divisor,f
  3591     0533  1903               	skipnz
  3592     0534  0AAA               	incf	___awdiv@divisor+1,f
  3593     0535                     l2108:
  3594     0535  01AF               	clrf	___awdiv@sign
  3595     0536  0AAF               	incf	___awdiv@sign,f
  3596     0537                     l2110:
  3597     0537  1FAC               	btfss	___awdiv@dividend+1,7
  3598     0538  2D3A               	goto	u1251
  3599     0539  2D3B               	goto	u1250
  3600     053A                     u1251:
  3601     053A  2D44               	goto	l2116
  3602     053B                     u1250:
  3603     053B                     l2112:
  3604     053B  09AB               	comf	___awdiv@dividend,f
  3605     053C  09AC               	comf	___awdiv@dividend+1,f
  3606     053D  0AAB               	incf	___awdiv@dividend,f
  3607     053E  1903               	skipnz
  3608     053F  0AAC               	incf	___awdiv@dividend+1,f
  3609     0540                     l2114:
  3610     0540  3001               	movlw	1
  3611     0541  00AD               	movwf	??___awdiv
  3612     0542  082D               	movf	??___awdiv,w
  3613     0543  06AF               	xorwf	___awdiv@sign,f
  3614     0544                     l2116:
  3615     0544  01B0               	clrf	___awdiv@quotient
  3616     0545  01B1               	clrf	___awdiv@quotient+1
  3617     0546                     l2118:
  3618     0546  0829               	movf	___awdiv@divisor,w
  3619     0547  042A               	iorwf	___awdiv@divisor+1,w
  3620     0548  1903               	btfsc	3,2
  3621     0549  2D4B               	goto	u1261
  3622     054A  2D4C               	goto	u1260
  3623     054B                     u1261:
  3624     054B  2D83               	goto	l2138
  3625     054C                     u1260:
  3626     054C                     l2120:
  3627     054C  01AE               	clrf	___awdiv@counter
  3628     054D  0AAE               	incf	___awdiv@counter,f
  3629     054E  2D5A               	goto	l2126
  3630     054F                     l2122:
  3631     054F  3001               	movlw	1
  3632     0550                     u1275:
  3633     0550  1003               	clrc
  3634     0551  0DA9               	rlf	___awdiv@divisor,f
  3635     0552  0DAA               	rlf	___awdiv@divisor+1,f
  3636     0553  3EFF               	addlw	-1
  3637     0554  1D03               	skipz
  3638     0555  2D50               	goto	u1275
  3639     0556                     l2124:
  3640     0556  3001               	movlw	1
  3641     0557  00AD               	movwf	??___awdiv
  3642     0558  082D               	movf	??___awdiv,w
  3643     0559  07AE               	addwf	___awdiv@counter,f
  3644     055A                     l2126:
  3645     055A  1FAA               	btfss	___awdiv@divisor+1,7
  3646     055B  2D5D               	goto	u1281
  3647     055C  2D5E               	goto	u1280
  3648     055D                     u1281:
  3649     055D  2D4F               	goto	l2122
  3650     055E                     u1280:
  3651     055E                     l2128:
  3652     055E  3001               	movlw	1
  3653     055F                     u1295:
  3654     055F  1003               	clrc
  3655     0560  0DB0               	rlf	___awdiv@quotient,f
  3656     0561  0DB1               	rlf	___awdiv@quotient+1,f
  3657     0562  3EFF               	addlw	-1
  3658     0563  1D03               	skipz
  3659     0564  2D5F               	goto	u1295
  3660     0565  082A               	movf	___awdiv@divisor+1,w
  3661     0566  022C               	subwf	___awdiv@dividend+1,w
  3662     0567  1D03               	skipz
  3663     0568  2D6B               	goto	u1305
  3664     0569  0829               	movf	___awdiv@divisor,w
  3665     056A  022B               	subwf	___awdiv@dividend,w
  3666     056B                     u1305:
  3667     056B  1C03               	skipc
  3668     056C  2D6E               	goto	u1301
  3669     056D  2D6F               	goto	u1300
  3670     056E                     u1301:
  3671     056E  2D76               	goto	l2134
  3672     056F                     u1300:
  3673     056F                     l2130:
  3674     056F  0829               	movf	___awdiv@divisor,w
  3675     0570  02AB               	subwf	___awdiv@dividend,f
  3676     0571  082A               	movf	___awdiv@divisor+1,w
  3677     0572  1C03               	skipc
  3678     0573  03AC               	decf	___awdiv@dividend+1,f
  3679     0574  02AC               	subwf	___awdiv@dividend+1,f
  3680     0575                     l2132:
  3681     0575  1430               	bsf	___awdiv@quotient,0
  3682     0576                     l2134:
  3683     0576  3001               	movlw	1
  3684     0577                     u1315:
  3685     0577  1003               	clrc
  3686     0578  0CAA               	rrf	___awdiv@divisor+1,f
  3687     0579  0CA9               	rrf	___awdiv@divisor,f
  3688     057A  3EFF               	addlw	-1
  3689     057B  1D03               	skipz
  3690     057C  2D77               	goto	u1315
  3691     057D                     l2136:
  3692     057D  3001               	movlw	1
  3693     057E  02AE               	subwf	___awdiv@counter,f
  3694     057F  1D03               	btfss	3,2
  3695     0580  2D82               	goto	u1321
  3696     0581  2D83               	goto	u1320
  3697     0582                     u1321:
  3698     0582  2D5E               	goto	l2128
  3699     0583                     u1320:
  3700     0583                     l2138:
  3701     0583  082F               	movf	___awdiv@sign,w
  3702     0584  1903               	btfsc	3,2
  3703     0585  2D87               	goto	u1331
  3704     0586  2D88               	goto	u1330
  3705     0587                     u1331:
  3706     0587  2D8D               	goto	l2142
  3707     0588                     u1330:
  3708     0588                     l2140:
  3709     0588  09B0               	comf	___awdiv@quotient,f
  3710     0589  09B1               	comf	___awdiv@quotient+1,f
  3711     058A  0AB0               	incf	___awdiv@quotient,f
  3712     058B  1903               	skipnz
  3713     058C  0AB1               	incf	___awdiv@quotient+1,f
  3714     058D                     l2142:
  3715     058D  0831               	movf	___awdiv@quotient+1,w
  3716     058E  00AA               	movwf	?___awdiv+1
  3717     058F  0830               	movf	___awdiv@quotient,w
  3718     0590  00A9               	movwf	?___awdiv
  3719     0591                     l655:
  3720     0591  0008               	return
  3721     0592                     __end_of___awdiv:
  3722                           
  3723                           	psect	text20
  3724     0FBD                     __ptext20:	
  3725 ;; *************** function _setLED *****************
  3726 ;; Defined at:
  3727 ;;		line 384 in file "main.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;  red             1    wreg     unsigned char 
  3730 ;;  green           1   21[BANK0 ] unsigned char 
  3731 ;;  blue            1   22[BANK0 ] unsigned char 
  3732 ;;  luminosidad     1   23[BANK0 ] unsigned char 
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;  red             1   24[BANK0 ] unsigned char 
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  1    wreg      void 
  3737 ;; Registers used:
  3738 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3744 ;;      Params:         0       3       0       0       0
  3745 ;;      Locals:         0       1       0       0       0
  3746 ;;      Temps:          0       0       0       0       0
  3747 ;;      Totals:         0       4       0       0       0
  3748 ;;Total ram usage:        4 bytes
  3749 ;; Hardware stack levels used: 1
  3750 ;; Hardware stack levels required when called: 6
  3751 ;; This function calls:
  3752 ;;		_cosasSPI
  3753 ;;		_escribirMemoria
  3754 ;; This function is called by:
  3755 ;;		_initActuadoresSegunMemoria
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759     0FBD                     _setLED:	
  3760                           ;psect for function _setLED
  3761                           
  3762                           
  3763                           ;incstack = 0
  3764                           ; Regs used in _setLED: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3765                           ;setLED@red stored from wreg
  3766     0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  3767     0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  3768     0FBF  00B8               	movwf	setLED@red
  3769     0FC0                     l2352:
  3770                           
  3771                           ;main.c: 386:     cosasSPI(red, green, blue, luminosidad);
  3772     0FC0  0835               	movf	setLED@green,w
  3773     0FC1  00AE               	movwf	cosasSPI@verd
  3774     0FC2  0836               	movf	setLED@blue,w
  3775     0FC3  00AF               	movwf	cosasSPI@azu
  3776     0FC4  0837               	movf	setLED@luminosidad,w
  3777     0FC5  00B0               	movwf	cosasSPI@lumi
  3778     0FC6  0838               	movf	setLED@red,w
  3779     0FC7  120A  118A  24BD  120A  158A  	fcall	_cosasSPI
  3780     0FCC                     l2354:
  3781                           
  3782                           ;main.c: 388:     miLED[0] = red;
  3783     0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  3784     0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  3785     0FCE  0838               	movf	setLED@red,w
  3786     0FCF  00D6               	movwf	_miLED
  3787     0FD0                     l2356:
  3788                           
  3789                           ;main.c: 389:     miLED[1] = green;
  3790     0FD0  0835               	movf	setLED@green,w
  3791     0FD1  00D7               	movwf	_miLED+1
  3792     0FD2                     l2358:
  3793                           
  3794                           ;main.c: 390:     miLED[2] = blue;
  3795     0FD2  0836               	movf	setLED@blue,w
  3796     0FD3  00D8               	movwf	_miLED+2
  3797     0FD4                     l2360:
  3798                           
  3799                           ;main.c: 391:     miLED[3] = luminosidad;
  3800     0FD4  0837               	movf	setLED@luminosidad,w
  3801     0FD5  00D9               	movwf	_miLED+3
  3802     0FD6                     l2362:
  3803                           
  3804                           ;main.c: 393:     escribirMemoria(direccionLED, miLED[0]);
  3805     0FD6  0856               	movf	_miLED,w
  3806     0FD7  00AA               	movwf	escribirMemoria@dato
  3807     0FD8  0853               	movf	_direccionLED,w
  3808     0FD9  120A  118A  23D8  120A  158A  	fcall	_escribirMemoria
  3809     0FDE                     l2364:
  3810                           
  3811                           ;main.c: 394:     escribirMemoria(direccionLED + 1 * sizeof (char), miLED[1]);
  3812     0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  3813     0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  3814     0FE0  0857               	movf	_miLED+1,w
  3815     0FE1  00AA               	movwf	escribirMemoria@dato
  3816     0FE2  0853               	movf	_direccionLED,w
  3817     0FE3  3E01               	addlw	1
  3818     0FE4  120A  118A  23D8  120A  158A  	fcall	_escribirMemoria
  3819     0FE9                     l2366:
  3820                           
  3821                           ;main.c: 395:     escribirMemoria(direccionLED + 2 * sizeof (char), miLED[2]);
  3822     0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  3823     0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  3824     0FEB  0858               	movf	_miLED+2,w
  3825     0FEC  00AA               	movwf	escribirMemoria@dato
  3826     0FED  0853               	movf	_direccionLED,w
  3827     0FEE  3E02               	addlw	2
  3828     0FEF  120A  118A  23D8  120A  158A  	fcall	_escribirMemoria
  3829     0FF4                     l2368:
  3830                           
  3831                           ;main.c: 396:     escribirMemoria(direccionLED + 3 * sizeof (char), miLED[3]);
  3832     0FF4  1283               	bcf	3,5	;RP0=0, select bank0
  3833     0FF5  1303               	bcf	3,6	;RP1=0, select bank0
  3834     0FF6  0859               	movf	_miLED+3,w
  3835     0FF7  00AA               	movwf	escribirMemoria@dato
  3836     0FF8  0853               	movf	_direccionLED,w
  3837     0FF9  3E03               	addlw	3
  3838     0FFA  120A  118A  23D8  120A  158A  	fcall	_escribirMemoria
  3839     0FFF                     l302:
  3840     0FFF  0008               	return
  3841     1000                     __end_of_setLED:
  3842                           
  3843                           	psect	text21
  3844     03D8                     __ptext21:	
  3845 ;; *************** function _escribirMemoria *****************
  3846 ;; Defined at:
  3847 ;;		line 288 in file "main.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;  direccion       1    wreg     unsigned char 
  3850 ;;  dato            1   10[BANK0 ] unsigned char 
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;  direccion       1   13[BANK0 ] unsigned char 
  3853 ;;  contador        2   14[BANK0 ] int 
  3854 ;;  confirmado      2   11[BANK0 ] int 
  3855 ;;  valorSal        2    0        int 
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  2   10[BANK0 ] int 
  3858 ;; Registers used:
  3859 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3865 ;;      Params:         0       1       0       0       0
  3866 ;;      Locals:         0       5       0       0       0
  3867 ;;      Temps:          0       0       0       0       0
  3868 ;;      Totals:         0       6       0       0       0
  3869 ;;Total ram usage:        6 bytes
  3870 ;; Hardware stack levels used: 1
  3871 ;; Hardware stack levels required when called: 5
  3872 ;; This function calls:
  3873 ;;		_leerMemoria
  3874 ;; This function is called by:
  3875 ;;		_setPWM
  3876 ;;		_setLED
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880     03D8                     _escribirMemoria:	
  3881                           ;psect for function _escribirMemoria
  3882                           
  3883                           
  3884                           ;incstack = 0
  3885                           ; Regs used in _escribirMemoria: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3886                           ;escribirMemoria@direccion stored from wreg
  3887     03D8  1283               	bcf	3,5	;RP0=0, select bank0
  3888     03D9  1303               	bcf	3,6	;RP1=0, select bank0
  3889     03DA  00AD               	movwf	escribirMemoria@direccion
  3890     03DB                     l2024:
  3891                           
  3892                           ;main.c: 289:     int valorSal;;main.c: 290:     EECON1bits.EEPGD = 0;
  3893     03DB  1683               	bsf	3,5	;RP0=1, select bank3
  3894     03DC  1703               	bsf	3,6	;RP1=1, select bank3
  3895     03DD  138C               	bcf	12,7	;volsfr
  3896                           
  3897                           ;main.c: 292:     EECON1bits.WREN = 1;
  3898     03DE  150C               	bsf	12,2	;volsfr
  3899     03DF                     l2026:
  3900                           
  3901                           ;main.c: 293:     EEADRH = 0;
  3902     03DF  1283               	bcf	3,5	;RP0=0, select bank2
  3903     03E0  1703               	bsf	3,6	;RP1=1, select bank2
  3904     03E1  018F               	clrf	15	;volatile
  3905     03E2                     l2028:
  3906                           
  3907                           ;main.c: 294:     EEADR = direccion;
  3908     03E2  1283               	bcf	3,5	;RP0=0, select bank0
  3909     03E3  1303               	bcf	3,6	;RP1=0, select bank0
  3910     03E4  082D               	movf	escribirMemoria@direccion,w
  3911     03E5  1283               	bcf	3,5	;RP0=0, select bank2
  3912     03E6  1703               	bsf	3,6	;RP1=1, select bank2
  3913     03E7  008D               	movwf	13	;volatile
  3914     03E8                     l2030:
  3915                           
  3916                           ;main.c: 295:     if (EECON1bits.RD == 0) {
  3917     03E8  1683               	bsf	3,5	;RP0=1, select bank3
  3918     03E9  1703               	bsf	3,6	;RP1=1, select bank3
  3919     03EA  180C               	btfsc	12,0	;volsfr
  3920     03EB  2BED               	goto	u1151
  3921     03EC  2BEE               	goto	u1150
  3922     03ED                     u1151:
  3923     03ED  2C4A               	goto	l2060
  3924     03EE                     u1150:
  3925     03EE                     l2032:
  3926                           
  3927                           ;main.c: 296:         int contador = 0;
  3928     03EE  1283               	bcf	3,5	;RP0=0, select bank0
  3929     03EF  1303               	bcf	3,6	;RP1=0, select bank0
  3930     03F0  01AE               	clrf	escribirMemoria@contador
  3931     03F1  01AF               	clrf	escribirMemoria@contador+1
  3932                           
  3933                           ;main.c: 297:         int confirmado = 0;
  3934     03F2  01AB               	clrf	escribirMemoria@confirmado
  3935     03F3  01AC               	clrf	escribirMemoria@confirmado+1
  3936                           
  3937                           ;main.c: 298:         while (contador < 10 && confirmado == 0) {
  3938     03F4  2C24               	goto	l2050
  3939     03F5                     l266:
  3940                           
  3941                           ;main.c: 299:             INTCONbits.GIE = 0;
  3942     03F5  138B               	bcf	11,7	;volatile
  3943     03F6                     l2034:
  3944                           
  3945                           ;main.c: 300:             EEDAT = dato;
  3946     03F6  082A               	movf	escribirMemoria@dato,w
  3947     03F7  1283               	bcf	3,5	;RP0=0, select bank2
  3948     03F8  1703               	bsf	3,6	;RP1=1, select bank2
  3949     03F9  008C               	movwf	12	;volatile
  3950                           
  3951                           ;main.c: 301:             EECON2 = 0x55;
  3952     03FA  3055               	movlw	85
  3953     03FB  1683               	bsf	3,5	;RP0=1, select bank3
  3954     03FC  1703               	bsf	3,6	;RP1=1, select bank3
  3955     03FD  008D               	movwf	13	;volsfr
  3956                           
  3957                           ;main.c: 302:             EECON2 = 0xAA;
  3958     03FE  30AA               	movlw	170
  3959     03FF  008D               	movwf	13	;volsfr
  3960     0400                     l2036:
  3961                           
  3962                           ;main.c: 303:             EECON1bits.WR = 1;
  3963     0400  148C               	bsf	12,1	;volsfr
  3964     0401                     l2038:
  3965                           
  3966                           ;main.c: 304:             INTCONbits.GIE = 1;
  3967     0401  178B               	bsf	11,7	;volatile
  3968     0402                     l2040:	
  3969                           ;main.c: 305:             while (!continuoEscribiendo);
  3970                           
  3971     0402  1283               	bcf	3,5	;RP0=0, select bank0
  3972     0403  1303               	bcf	3,6	;RP1=0, select bank0
  3973     0404  0860               	movf	_continuoEscribiendo,w
  3974     0405  0461               	iorwf	_continuoEscribiendo+1,w
  3975     0406  1903               	btfsc	3,2
  3976     0407  2C09               	goto	u1161
  3977     0408  2C0A               	goto	u1160
  3978     0409                     u1161:
  3979     0409  2C02               	goto	l2040
  3980     040A                     u1160:
  3981     040A                     l2042:
  3982                           
  3983                           ;main.c: 306:             continuoEscribiendo = 0;
  3984     040A  01E0               	clrf	_continuoEscribiendo
  3985     040B  01E1               	clrf	_continuoEscribiendo+1
  3986     040C                     l2044:
  3987                           
  3988                           ;main.c: 307:             if (leerMemoria(direccion) == dato)
  3989     040C  082D               	movf	escribirMemoria@direccion,w
  3990     040D  120A  158A  2541  120A  118A  	fcall	_leerMemoria
  3991     0412  1283               	bcf	3,5	;RP0=0, select bank0
  3992     0413  1303               	bcf	3,6	;RP1=0, select bank0
  3993     0414  062A               	xorwf	escribirMemoria@dato,w
  3994     0415  1D03               	skipz
  3995     0416  2C18               	goto	u1171
  3996     0417  2C19               	goto	u1170
  3997     0418                     u1171:
  3998     0418  2C1E               	goto	l2048
  3999     0419                     u1170:
  4000     0419                     l2046:
  4001                           
  4002                           ;main.c: 308:                 confirmado = 1;
  4003     0419  3001               	movlw	1
  4004     041A  00AB               	movwf	escribirMemoria@confirmado
  4005     041B  3000               	movlw	0
  4006     041C  00AC               	movwf	escribirMemoria@confirmado+1
  4007     041D  2C24               	goto	l2050
  4008     041E                     l2048:
  4009                           
  4010                           ;main.c: 310:                 contador++;
  4011     041E  3001               	movlw	1
  4012     041F  07AE               	addwf	escribirMemoria@contador,f
  4013     0420  1803               	skipnc
  4014     0421  0AAF               	incf	escribirMemoria@contador+1,f
  4015     0422  3000               	movlw	0
  4016     0423  07AF               	addwf	escribirMemoria@contador+1,f
  4017     0424                     l2050:
  4018                           
  4019                           ;main.c: 298:         while (contador < 10 && confirmado == 0) {
  4020     0424  082F               	movf	escribirMemoria@contador+1,w
  4021     0425  3A80               	xorlw	128
  4022     0426  00FF               	movwf	btemp+1
  4023     0427  3080               	movlw	128
  4024     0428  027F               	subwf	btemp+1,w
  4025     0429  1D03               	skipz
  4026     042A  2C2D               	goto	u1185
  4027     042B  300A               	movlw	10
  4028     042C  022E               	subwf	escribirMemoria@contador,w
  4029     042D                     u1185:
  4030     042D  1803               	skipnc
  4031     042E  2C30               	goto	u1181
  4032     042F  2C31               	goto	u1180
  4033     0430                     u1181:
  4034     0430  2C39               	goto	l2054
  4035     0431                     u1180:
  4036     0431                     l2052:
  4037     0431  1283               	bcf	3,5	;RP0=0, select bank0
  4038     0432  1303               	bcf	3,6	;RP1=0, select bank0
  4039     0433  082B               	movf	escribirMemoria@confirmado,w
  4040     0434  042C               	iorwf	escribirMemoria@confirmado+1,w
  4041     0435  1903               	btfsc	3,2
  4042     0436  2C38               	goto	u1191
  4043     0437  2C39               	goto	u1190
  4044     0438                     u1191:
  4045     0438  2BF5               	goto	l266
  4046     0439                     u1190:
  4047     0439                     l2054:
  4048                           
  4049                           ;main.c: 312:         if (contador >= 10) valorSal = 1;
  4050     0439  1283               	bcf	3,5	;RP0=0, select bank0
  4051     043A  1303               	bcf	3,6	;RP1=0, select bank0
  4052     043B  082F               	movf	escribirMemoria@contador+1,w
  4053     043C  3A80               	xorlw	128
  4054     043D  00FF               	movwf	btemp+1
  4055     043E  3080               	movlw	128
  4056     043F  027F               	subwf	btemp+1,w
  4057     0440  1D03               	skipz
  4058     0441  2C44               	goto	u1205
  4059     0442  300A               	movlw	10
  4060     0443  022E               	subwf	escribirMemoria@contador,w
  4061     0444                     u1205:
  4062     0444  1C03               	skipc
  4063     0445  2C47               	goto	u1201
  4064     0446  2C48               	goto	u1200
  4065     0447                     u1201:
  4066     0447  2C49               	goto	l2058
  4067     0448                     u1200:
  4068     0448                     l2056:
  4069     0448  2C4A               	goto	l278
  4070     0449                     l2058:
  4071     0449  2C4A               	goto	l278
  4072     044A                     l2060:
  4073     044A                     l278:
  4074     044A  0008               	return
  4075     044B                     __end_of_escribirMemoria:
  4076                           
  4077                           	psect	text22
  4078     04BD                     __ptext22:	
  4079 ;; *************** function _cosasSPI *****************
  4080 ;; Defined at:
  4081 ;;		line 364 in file "main.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;  roj             1    wreg     unsigned char 
  4084 ;;  verd            1   14[BANK0 ] unsigned char 
  4085 ;;  azu             1   15[BANK0 ] unsigned char 
  4086 ;;  lumi            1   16[BANK0 ] unsigned char 
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;  roj             1   17[BANK0 ] unsigned char 
  4089 ;;  i               2   19[BANK0 ] int 
  4090 ;;  lumo            1   18[BANK0 ] unsigned char 
  4091 ;; Return value:  Size  Location     Type
  4092 ;;                  1    wreg      void 
  4093 ;; Registers used:
  4094 ;;		wreg, status,2, status,0, pclath, cstack
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4100 ;;      Params:         0       3       0       0       0
  4101 ;;      Locals:         0       4       0       0       0
  4102 ;;      Temps:          0       0       0       0       0
  4103 ;;      Totals:         0       7       0       0       0
  4104 ;;Total ram usage:        7 bytes
  4105 ;; Hardware stack levels used: 1
  4106 ;; Hardware stack levels required when called: 5
  4107 ;; This function calls:
  4108 ;;		_spi_write_read
  4109 ;; This function is called by:
  4110 ;;		_setLED
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114     04BD                     _cosasSPI:	
  4115                           ;psect for function _cosasSPI
  4116                           
  4117                           
  4118                           ;incstack = 0
  4119                           ; Regs used in _cosasSPI: [wreg+status,2+status,0+pclath+cstack]
  4120                           ;cosasSPI@roj stored from wreg
  4121     04BD  1283               	bcf	3,5	;RP0=0, select bank0
  4122     04BE  1303               	bcf	3,6	;RP1=0, select bank0
  4123     04BF  00B1               	movwf	cosasSPI@roj
  4124     04C0                     l2064:
  4125                           
  4126                           ;main.c: 365:     int i;;main.c: 366:     char lumo = 0b11100000 + (lumi % 32);
  4127     04C0  0830               	movf	cosasSPI@lumi,w
  4128     04C1  391F               	andlw	31
  4129     04C2  3EE0               	addlw	224
  4130     04C3  00B2               	movwf	cosasSPI@lumo
  4131     04C4                     l2066:
  4132                           
  4133                           ;main.c: 367:     spi_write_read(0x00);
  4134     04C4  3000               	movlw	0
  4135     04C5  120A  158A  264A  120A  118A  	fcall	_spi_write_read
  4136     04CA                     l2068:
  4137                           
  4138                           ;main.c: 368:     spi_write_read(0x00);
  4139     04CA  3000               	movlw	0
  4140     04CB  120A  158A  264A  120A  118A  	fcall	_spi_write_read
  4141     04D0                     l2070:
  4142                           
  4143                           ;main.c: 369:     spi_write_read(0x00);
  4144     04D0  3000               	movlw	0
  4145     04D1  120A  158A  264A  120A  118A  	fcall	_spi_write_read
  4146     04D6                     l2072:
  4147                           
  4148                           ;main.c: 370:     spi_write_read(0x00);
  4149     04D6  3000               	movlw	0
  4150     04D7  120A  158A  264A  120A  118A  	fcall	_spi_write_read
  4151     04DC                     l2074:
  4152                           
  4153                           ;main.c: 371:     for (i = numLedes; i == 0; i--) {
  4154     04DC  1283               	bcf	3,5	;RP0=0, select bank0
  4155     04DD  1303               	bcf	3,6	;RP1=0, select bank0
  4156     04DE  084A               	movf	_numLedes+1,w
  4157     04DF  00B4               	movwf	cosasSPI@i+1
  4158     04E0  0849               	movf	_numLedes,w
  4159     04E1  00B3               	movwf	cosasSPI@i
  4160     04E2                     l2076:
  4161     04E2  0833               	movf	cosasSPI@i,w
  4162     04E3  0434               	iorwf	cosasSPI@i+1,w
  4163     04E4  1903               	btfsc	3,2
  4164     04E5  2CE7               	goto	u1211
  4165     04E6  2CE8               	goto	u1210
  4166     04E7                     u1211:
  4167     04E7  2CE9               	goto	l2080
  4168     04E8                     u1210:
  4169     04E8  2D10               	goto	l2086
  4170     04E9                     l2080:
  4171                           
  4172                           ;main.c: 372:         spi_write_read(lumo);
  4173     04E9  0832               	movf	cosasSPI@lumo,w
  4174     04EA  120A  158A  264A  120A  118A  	fcall	_spi_write_read
  4175                           
  4176                           ;main.c: 373:         spi_write_read(azu);
  4177     04EF  1283               	bcf	3,5	;RP0=0, select bank0
  4178     04F0  1303               	bcf	3,6	;RP1=0, select bank0
  4179     04F1  082F               	movf	cosasSPI@azu,w
  4180     04F2  120A  158A  264A  120A  118A  	fcall	_spi_write_read
  4181                           
  4182                           ;main.c: 374:         spi_write_read(verd);
  4183     04F7  1283               	bcf	3,5	;RP0=0, select bank0
  4184     04F8  1303               	bcf	3,6	;RP1=0, select bank0
  4185     04F9  082E               	movf	cosasSPI@verd,w
  4186     04FA  120A  158A  264A  120A  118A  	fcall	_spi_write_read
  4187                           
  4188                           ;main.c: 375:         spi_write_read(roj);
  4189     04FF  1283               	bcf	3,5	;RP0=0, select bank0
  4190     0500  1303               	bcf	3,6	;RP1=0, select bank0
  4191     0501  0831               	movf	cosasSPI@roj,w
  4192     0502  120A  158A  264A  120A  118A  	fcall	_spi_write_read
  4193     0507                     l2082:
  4194                           
  4195                           ;main.c: 376:     }
  4196     0507  30FF               	movlw	255
  4197     0508  1283               	bcf	3,5	;RP0=0, select bank0
  4198     0509  1303               	bcf	3,6	;RP1=0, select bank0
  4199     050A  07B3               	addwf	cosasSPI@i,f
  4200     050B  1803               	skipnc
  4201     050C  0AB4               	incf	cosasSPI@i+1,f
  4202     050D  30FF               	movlw	255
  4203     050E  07B4               	addwf	cosasSPI@i+1,f
  4204     050F  2CE2               	goto	l2076
  4205     0510                     l2086:
  4206                           
  4207                           ;main.c: 377:     spi_write_read(0xFF);
  4208     0510  30FF               	movlw	255
  4209     0511  120A  158A  264A  120A  118A  	fcall	_spi_write_read
  4210                           
  4211                           ;main.c: 378:     spi_write_read(0xFF);
  4212     0516  30FF               	movlw	255
  4213     0517  120A  158A  264A  120A  118A  	fcall	_spi_write_read
  4214                           
  4215                           ;main.c: 379:     spi_write_read(0xFF);
  4216     051C  30FF               	movlw	255
  4217     051D  120A  158A  264A  120A  118A  	fcall	_spi_write_read
  4218                           
  4219                           ;main.c: 380:     spi_write_read(0xFF);
  4220     0522  30FF               	movlw	255
  4221     0523  120A  158A  264A  120A  118A  	fcall	_spi_write_read
  4222     0528                     l299:
  4223     0528  0008               	return
  4224     0529                     __end_of_cosasSPI:
  4225                           
  4226                           	psect	text23
  4227     0E4A                     __ptext23:	
  4228 ;; *************** function _spi_write_read *****************
  4229 ;; Defined at:
  4230 ;;		line 8 in file "spi-master-v1.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;  one_byte        1    wreg     unsigned char 
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;  one_byte        1   11[BANK0 ] unsigned char 
  4235 ;;  x               1   13[BANK0 ] unsigned char 
  4236 ;;  answer          1   12[BANK0 ] unsigned char 
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  1    wreg      unsigned char 
  4239 ;; Registers used:
  4240 ;;		wreg, status,2, status,0
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4246 ;;      Params:         0       0       0       0       0
  4247 ;;      Locals:         0       3       0       0       0
  4248 ;;      Temps:          0       2       0       0       0
  4249 ;;      Totals:         0       5       0       0       0
  4250 ;;Total ram usage:        5 bytes
  4251 ;; Hardware stack levels used: 1
  4252 ;; Hardware stack levels required when called: 4
  4253 ;; This function calls:
  4254 ;;		Nothing
  4255 ;; This function is called by:
  4256 ;;		_cosasSPI
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260     0E4A                     _spi_write_read:	
  4261                           ;psect for function _spi_write_read
  4262                           
  4263                           
  4264                           ;incstack = 0
  4265                           ; Regs used in _spi_write_read: [wreg+status,2+status,0]
  4266                           ;spi_write_read@one_byte stored from wreg
  4267     0E4A  1283               	bcf	3,5	;RP0=0, select bank0
  4268     0E4B  1303               	bcf	3,6	;RP1=0, select bank0
  4269     0E4C  00AB               	movwf	spi_write_read@one_byte
  4270     0E4D                     l1962:
  4271                           
  4272                           ;spi-master-v1.c: 8: char spi_write_read(char one_byte);spi-master-v1.c: 9: {;spi-master
      +                          -v1.c: 11:     char answer, x;;spi-master-v1.c: 13:     answer = 0;
  4273     0E4D  01AC               	clrf	spi_write_read@answer
  4274     0E4E                     l1964:
  4275                           
  4276                           ;spi-master-v1.c: 15:     for(x = 8; x > 0; x--)
  4277     0E4E  3008               	movlw	8
  4278     0E4F  00AD               	movwf	spi_write_read@x
  4279     0E50                     l1970:
  4280                           
  4281                           ;spi-master-v1.c: 16:     {;spi-master-v1.c: 17:         PORTCbits.RC0 = (__bit)((one_by
      +                          te >> (x - 1)) & 0b00000001);
  4282     0E50  082B               	movf	spi_write_read@one_byte,w
  4283     0E51  00A9               	movwf	??_spi_write_read
  4284     0E52  082D               	movf	spi_write_read@x,w
  4285     0E53  3EFF               	addlw	-1
  4286     0E54  3E01               	addlw	1
  4287     0E55  2E58               	goto	u1084
  4288     0E56                     u1085:
  4289     0E56  1003               	clrc
  4290     0E57  0CA9               	rrf	??_spi_write_read,f
  4291     0E58                     u1084:
  4292     0E58  3EFF               	addlw	-1
  4293     0E59  1D03               	skipz
  4294     0E5A  2E56               	goto	u1085
  4295     0E5B  1829               	btfsc	??_spi_write_read,0
  4296     0E5C  2E5E               	goto	u1091
  4297     0E5D  2E62               	goto	u1090
  4298     0E5E                     u1091:
  4299     0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  4300     0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  4301     0E60  1407               	bsf	7,0	;volatile
  4302     0E61  2E65               	goto	u1104
  4303     0E62                     u1090:
  4304     0E62  1283               	bcf	3,5	;RP0=0, select bank0
  4305     0E63  1303               	bcf	3,6	;RP1=0, select bank0
  4306     0E64  1007               	bcf	7,0	;volatile
  4307     0E65                     u1104:
  4308     0E65                     l1972:
  4309                           
  4310                           ;spi-master-v1.c: 19:         PORTCbits.RC5 = 1;
  4311     0E65  1687               	bsf	7,5	;volatile
  4312                           
  4313                           ;spi-master-v1.c: 21:         answer |= (char)PORTAbits.RA5;
  4314     0E66  0E05               	swapf	5,w	;volatile
  4315     0E67  00A9               	movwf	??_spi_write_read
  4316     0E68  0C29               	rrf	??_spi_write_read,w
  4317     0E69  3901               	andlw	1
  4318     0E6A  00AA               	movwf	??_spi_write_read+1
  4319     0E6B  082A               	movf	??_spi_write_read+1,w
  4320     0E6C  04AC               	iorwf	spi_write_read@answer,f
  4321     0E6D                     l1974:
  4322                           
  4323                           ;spi-master-v1.c: 22:         PORTCbits.RC5 = 0;
  4324     0E6D  1287               	bcf	7,5	;volatile
  4325     0E6E                     l1976:
  4326                           
  4327                           ;spi-master-v1.c: 24:         if(x > 1)
  4328     0E6E  3002               	movlw	2
  4329     0E6F  022D               	subwf	spi_write_read@x,w
  4330     0E70  1C03               	skipc
  4331     0E71  2E73               	goto	u1111
  4332     0E72  2E74               	goto	u1110
  4333     0E73                     u1111:
  4334     0E73  2E78               	goto	l38
  4335     0E74                     u1110:
  4336     0E74                     l1978:
  4337                           
  4338                           ;spi-master-v1.c: 25:             answer = answer << 1;
  4339     0E74  082C               	movf	spi_write_read@answer,w
  4340     0E75  00A9               	movwf	??_spi_write_read
  4341     0E76  0729               	addwf	??_spi_write_read,w
  4342     0E77  00AC               	movwf	spi_write_read@answer
  4343     0E78                     l38:
  4344                           
  4345                           ;spi-master-v1.c: 26:     }
  4346     0E78  3001               	movlw	1
  4347     0E79  02AD               	subwf	spi_write_read@x,f
  4348     0E7A  082D               	movf	spi_write_read@x,w
  4349     0E7B  1D03               	btfss	3,2
  4350     0E7C  2E7E               	goto	u1121
  4351     0E7D  2E7F               	goto	u1120
  4352     0E7E                     u1121:
  4353     0E7E  2E50               	goto	l1970
  4354     0E7F                     u1120:
  4355     0E7F                     l39:
  4356     0E7F  0008               	return
  4357     0E80                     __end_of_spi_write_read:
  4358                           
  4359                           	psect	text24
  4360     0D5D                     __ptext24:	
  4361 ;; *************** function _getnoPrimerArranque *****************
  4362 ;; Defined at:
  4363 ;;		line 343 in file "main.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;		None
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;  aux             1   10[BANK0 ] unsigned char 
  4368 ;;  direccion       1    0        unsigned char 
  4369 ;; Return value:  Size  Location     Type
  4370 ;;                  1    wreg      enum E1298
  4371 ;; Registers used:
  4372 ;;		wreg, status,2, status,0, pclath, cstack
  4373 ;; Tracked objects:
  4374 ;;		On entry : 0/0
  4375 ;;		On exit  : 0/0
  4376 ;;		Unchanged: 0/0
  4377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4378 ;;      Params:         0       0       0       0       0
  4379 ;;      Locals:         0       1       0       0       0
  4380 ;;      Temps:          0       0       0       0       0
  4381 ;;      Totals:         0       1       0       0       0
  4382 ;;Total ram usage:        1 bytes
  4383 ;; Hardware stack levels used: 1
  4384 ;; Hardware stack levels required when called: 5
  4385 ;; This function calls:
  4386 ;;		_leerMemoria
  4387 ;; This function is called by:
  4388 ;;		_initActuadoresSegunMemoria
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392     0D5D                     _getnoPrimerArranque:	
  4393                           ;psect for function _getnoPrimerArranque
  4394                           
  4395     0D5D                     l2326:	
  4396                           ;incstack = 0
  4397                           ; Regs used in _getnoPrimerArranque: [wreg+status,2+status,0+pclath+cstack]
  4398                           
  4399     0D5D                     l2328:
  4400                           
  4401                           ;main.c: 345:     char aux = leerMemoria(direccion);
  4402     0D5D  3000               	movlw	0
  4403     0D5E  120A  158A  2541  120A  158A  	fcall	_leerMemoria
  4404     0D63  1283               	bcf	3,5	;RP0=0, select bank0
  4405     0D64  1303               	bcf	3,6	;RP1=0, select bank0
  4406     0D65  00AA               	movwf	getnoPrimerArranque@aux
  4407     0D66                     l2330:
  4408                           
  4409                           ;main.c: 346:     if (aux == (0) || aux == 0 || aux == (char) 0b00000000) return FALSE;
  4410     0D66  082A               	movf	getnoPrimerArranque@aux,w
  4411     0D67  1903               	btfsc	3,2
  4412     0D68  2D6A               	goto	u1431
  4413     0D69  2D6B               	goto	u1430
  4414     0D6A                     u1431:
  4415     0D6A  2D75               	goto	l2336
  4416     0D6B                     u1430:
  4417     0D6B                     l2332:
  4418     0D6B  082A               	movf	getnoPrimerArranque@aux,w
  4419     0D6C  1903               	btfsc	3,2
  4420     0D6D  2D6F               	goto	u1441
  4421     0D6E  2D70               	goto	u1440
  4422     0D6F                     u1441:
  4423     0D6F  2D75               	goto	l2336
  4424     0D70                     u1440:
  4425     0D70                     l2334:
  4426     0D70  082A               	movf	getnoPrimerArranque@aux,w
  4427     0D71  1D03               	btfss	3,2
  4428     0D72  2D74               	goto	u1451
  4429     0D73  2D75               	goto	u1450
  4430     0D74                     u1451:
  4431     0D74  2D77               	goto	l2342
  4432     0D75                     u1450:
  4433     0D75                     l2336:
  4434     0D75  3000               	movlw	0
  4435     0D76  2D78               	goto	l287
  4436     0D77                     l2342:
  4437     0D77  3001               	movlw	1
  4438     0D78                     l287:
  4439     0D78  0008               	return
  4440     0D79                     __end_of_getnoPrimerArranque:
  4441                           
  4442                           	psect	text25
  4443     0D41                     __ptext25:	
  4444 ;; *************** function _leerMemoria *****************
  4445 ;; Defined at:
  4446 ;;		line 275 in file "main.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;  direccion       1    wreg     unsigned char 
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;  direccion       1    9[BANK0 ] unsigned char 
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  1    wreg      unsigned char 
  4453 ;; Registers used:
  4454 ;;		wreg, status,2
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4460 ;;      Params:         0       0       0       0       0
  4461 ;;      Locals:         0       1       0       0       0
  4462 ;;      Temps:          0       0       0       0       0
  4463 ;;      Totals:         0       1       0       0       0
  4464 ;;Total ram usage:        1 bytes
  4465 ;; Hardware stack levels used: 1
  4466 ;; Hardware stack levels required when called: 4
  4467 ;; This function calls:
  4468 ;;		Nothing
  4469 ;; This function is called by:
  4470 ;;		_escribirMemoria
  4471 ;;		_getnoPrimerArranque
  4472 ;;		_initActuadoresSegunMemoria
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476     0D41                     _leerMemoria:	
  4477                           ;psect for function _leerMemoria
  4478                           
  4479                           
  4480                           ;incstack = 0
  4481                           ; Regs used in _leerMemoria: [wreg+status,2]
  4482                           ;leerMemoria@direccion stored from wreg
  4483     0D41  1283               	bcf	3,5	;RP0=0, select bank0
  4484     0D42  1303               	bcf	3,6	;RP1=0, select bank0
  4485     0D43  00A9               	movwf	leerMemoria@direccion
  4486     0D44                     l1980:
  4487                           
  4488                           ;main.c: 276:     EECON1bits.EEPGD = 0;
  4489     0D44  1683               	bsf	3,5	;RP0=1, select bank3
  4490     0D45  1703               	bsf	3,6	;RP1=1, select bank3
  4491     0D46  138C               	bcf	12,7	;volsfr
  4492                           
  4493                           ;main.c: 278:     EECON1bits.WREN = 0;
  4494     0D47  110C               	bcf	12,2	;volsfr
  4495     0D48                     l1982:
  4496                           
  4497                           ;main.c: 279:     EEDATH = 0;
  4498     0D48  1283               	bcf	3,5	;RP0=0, select bank2
  4499     0D49  1703               	bsf	3,6	;RP1=1, select bank2
  4500     0D4A  018E               	clrf	14	;volatile
  4501                           
  4502                           ;main.c: 280:     EEADRH = 0;
  4503     0D4B  018F               	clrf	15	;volatile
  4504     0D4C                     l1984:
  4505                           
  4506                           ;main.c: 281:     EEADR = direccion;
  4507     0D4C  1283               	bcf	3,5	;RP0=0, select bank0
  4508     0D4D  1303               	bcf	3,6	;RP1=0, select bank0
  4509     0D4E  0829               	movf	leerMemoria@direccion,w
  4510     0D4F  1283               	bcf	3,5	;RP0=0, select bank2
  4511     0D50  1703               	bsf	3,6	;RP1=1, select bank2
  4512     0D51  008D               	movwf	13	;volatile
  4513     0D52                     l1986:
  4514                           
  4515                           ;main.c: 282:     if (EECON1bits.WR == 0)
  4516     0D52  1683               	bsf	3,5	;RP0=1, select bank3
  4517     0D53  1703               	bsf	3,6	;RP1=1, select bank3
  4518     0D54  188C               	btfsc	12,1	;volsfr
  4519     0D55  2D57               	goto	u1131
  4520     0D56  2D58               	goto	u1130
  4521     0D57                     u1131:
  4522     0D57  2D59               	goto	l1990
  4523     0D58                     u1130:
  4524     0D58                     l1988:
  4525                           
  4526                           ;main.c: 283:         EECON1bits.RD = 1;
  4527     0D58  140C               	bsf	12,0	;volsfr
  4528     0D59                     l1990:
  4529                           
  4530                           ;main.c: 285:     return EEDAT;
  4531     0D59  1283               	bcf	3,5	;RP0=0, select bank2
  4532     0D5A  1703               	bsf	3,6	;RP1=1, select bank2
  4533     0D5B  080C               	movf	12,w	;volatile
  4534     0D5C                     l261:
  4535     0D5C  0008               	return
  4536     0D5D                     __end_of_leerMemoria:
  4537                           
  4538                           	psect	text26
  4539     0BFE                     __ptext26:	
  4540 ;; *************** function _i2c_stop *****************
  4541 ;; Defined at:
  4542 ;;		line 23 in file "i2c-v2.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;		None
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;		None
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  1    wreg      void 
  4549 ;; Registers used:
  4550 ;;		status,2, status,0, pclath, cstack
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4556 ;;      Params:         0       0       0       0       0
  4557 ;;      Locals:         0       0       0       0       0
  4558 ;;      Temps:          0       0       0       0       0
  4559 ;;      Totals:         0       0       0       0       0
  4560 ;;Total ram usage:        0 bytes
  4561 ;; Hardware stack levels used: 1
  4562 ;; Hardware stack levels required when called: 5
  4563 ;; This function calls:
  4564 ;;		_wait_MSSP
  4565 ;; This function is called by:
  4566 ;;		_main
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570     0BFE                     _i2c_stop:	
  4571                           ;psect for function _i2c_stop
  4572                           
  4573     0BFE                     l2540:	
  4574                           ;incstack = 0
  4575                           ; Regs used in _i2c_stop: [status,2+status,0+pclath+cstack]
  4576                           
  4577                           
  4578                           ;i2c-v2.c: 25:     SSPCON2bits.PEN = 1;
  4579     0BFE  1683               	bsf	3,5	;RP0=1, select bank1
  4580     0BFF  1303               	bcf	3,6	;RP1=0, select bank1
  4581     0C00  1511               	bsf	17,2	;volatile
  4582     0C01                     l2542:
  4583                           
  4584                           ;i2c-v2.c: 26:     wait_MSSP();
  4585     0C01  120A  158A  23E5  120A  158A  	fcall	_wait_MSSP
  4586     0C06                     l18:
  4587     0C06  0008               	return
  4588     0C07                     __end_of_i2c_stop:
  4589                           
  4590                           	psect	text27
  4591     0F7A                     __ptext27:	
  4592 ;; *************** function _analisisRuido *****************
  4593 ;; Defined at:
  4594 ;;		line 405 in file "main.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;		None
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;  temp            1   11[BANK0 ] unsigned char 
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      void 
  4601 ;; Registers used:
  4602 ;;		wreg, status,2, btemp+1
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4608 ;;      Params:         0       0       0       0       0
  4609 ;;      Locals:         0       1       0       0       0
  4610 ;;      Temps:          0       2       0       0       0
  4611 ;;      Totals:         0       3       0       0       0
  4612 ;;Total ram usage:        3 bytes
  4613 ;; Hardware stack levels used: 1
  4614 ;; Hardware stack levels required when called: 4
  4615 ;; This function calls:
  4616 ;;		Nothing
  4617 ;; This function is called by:
  4618 ;;		_main
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622     0F7A                     _analisisRuido:	
  4623                           ;psect for function _analisisRuido
  4624                           
  4625     0F7A                     l2568:	
  4626                           ;incstack = 0
  4627                           ; Regs used in _analisisRuido: [wreg+status,2+btemp+1]
  4628                           
  4629     0F7A                     l2570:
  4630                           
  4631                           ;main.c: 410:     if (valor[0] < ruidoBajo) temp = 1;
  4632     0F7A  1683               	bsf	3,5	;RP0=1, select bank1
  4633     0F7B  1303               	bcf	3,6	;RP1=0, select bank1
  4634     0F7C  0821               	movf	(_valor+1)^(0+128),w
  4635     0F7D  3A80               	xorlw	128
  4636     0F7E  00FF               	movwf	btemp+1
  4637     0F7F  3081               	movlw	129
  4638     0F80  027F               	subwf	btemp+1,w
  4639     0F81  1D03               	skipz
  4640     0F82  2F85               	goto	u1785
  4641     0F83  3090               	movlw	144
  4642     0F84  0220               	subwf	_valor^(0+128),w
  4643     0F85                     u1785:
  4644     0F85  1803               	skipnc
  4645     0F86  2F88               	goto	u1781
  4646     0F87  2F89               	goto	u1780
  4647     0F88                     u1781:
  4648     0F88  2F8E               	goto	l2574
  4649     0F89                     u1780:
  4650     0F89                     l2572:
  4651     0F89  1283               	bcf	3,5	;RP0=0, select bank0
  4652     0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  4653     0F8B  01AB               	clrf	analisisRuido@temp
  4654     0F8C  0AAB               	incf	analisisRuido@temp,f
  4655     0F8D  2FA6               	goto	l309
  4656     0F8E                     l2574:
  4657     0F8E  1683               	bsf	3,5	;RP0=1, select bank1
  4658     0F8F  1303               	bcf	3,6	;RP1=0, select bank1
  4659     0F90  0821               	movf	(_valor+1)^(0+128),w
  4660     0F91  3A80               	xorlw	128
  4661     0F92  00FF               	movwf	btemp+1
  4662     0F93  3083               	movlw	131
  4663     0F94  027F               	subwf	btemp+1,w
  4664     0F95  1D03               	skipz
  4665     0F96  2F99               	goto	u1795
  4666     0F97  3084               	movlw	132
  4667     0F98  0220               	subwf	_valor^(0+128),w
  4668     0F99                     u1795:
  4669     0F99  1803               	skipnc
  4670     0F9A  2F9C               	goto	u1791
  4671     0F9B  2F9D               	goto	u1790
  4672     0F9C                     u1791:
  4673     0F9C  2FA2               	goto	l2578
  4674     0F9D                     u1790:
  4675     0F9D                     l2576:
  4676     0F9D  3002               	movlw	2
  4677     0F9E  1283               	bcf	3,5	;RP0=0, select bank0
  4678     0F9F  1303               	bcf	3,6	;RP1=0, select bank0
  4679     0FA0  00AB               	movwf	analisisRuido@temp
  4680     0FA1  2FA6               	goto	l309
  4681     0FA2                     l2578:
  4682     0FA2  3003               	movlw	3
  4683     0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  4684     0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  4685     0FA5  00AB               	movwf	analisisRuido@temp
  4686     0FA6                     l309:
  4687                           
  4688                           ;main.c: 414:     if (temp > ruidoMasAlto) ruidoMasAlto = temp;
  4689     0FA6  085D               	movf	_ruidoMasAlto+1,w
  4690     0FA7  3A80               	xorlw	128
  4691     0FA8  00A9               	movwf	??_analisisRuido
  4692     0FA9  3080               	movlw	128
  4693     0FAA  0229               	subwf	??_analisisRuido,w
  4694     0FAB  1D03               	skipz
  4695     0FAC  2FAF               	goto	u1805
  4696     0FAD  082B               	movf	analisisRuido@temp,w
  4697     0FAE  025C               	subwf	_ruidoMasAlto,w
  4698     0FAF                     u1805:
  4699     0FAF  1803               	skipnc
  4700     0FB0  2FB2               	goto	u1801
  4701     0FB1  2FB3               	goto	u1800
  4702     0FB2                     u1801:
  4703     0FB2  2FBC               	goto	l313
  4704     0FB3                     u1800:
  4705     0FB3                     l2580:
  4706     0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  4707     0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  4708     0FB5  082B               	movf	analisisRuido@temp,w
  4709     0FB6  00A9               	movwf	??_analisisRuido
  4710     0FB7  01AA               	clrf	??_analisisRuido+1
  4711     0FB8  0829               	movf	??_analisisRuido,w
  4712     0FB9  00DC               	movwf	_ruidoMasAlto
  4713     0FBA  082A               	movf	??_analisisRuido+1,w
  4714     0FBB  00DD               	movwf	_ruidoMasAlto+1
  4715     0FBC                     l313:
  4716     0FBC  0008               	return
  4717     0FBD                     __end_of_analisisRuido:
  4718                           
  4719                           	psect	text28
  4720     0EF8                     __ptext28:	
  4721 ;; *************** function _analisisResto *****************
  4722 ;; Defined at:
  4723 ;;		line 419 in file "main.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;		None
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;		None
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  1    wreg      void 
  4730 ;; Registers used:
  4731 ;;		wreg, status,2, status,0, pclath, cstack
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4737 ;;      Params:         0       0       0       0       0
  4738 ;;      Locals:         0       0       0       0       0
  4739 ;;      Temps:          0       0       0       0       0
  4740 ;;      Totals:         0       0       0       0       0
  4741 ;;Total ram usage:        0 bytes
  4742 ;; Hardware stack levels used: 1
  4743 ;; Hardware stack levels required when called: 7
  4744 ;; This function calls:
  4745 ;;		_getCO2
  4746 ;;		_getLumen
  4747 ;;		_setCO2
  4748 ;;		_setLumen
  4749 ;; This function is called by:
  4750 ;;		_main
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754     0EF8                     _analisisResto:	
  4755                           ;psect for function _analisisResto
  4756                           
  4757     0EF8                     l2582:	
  4758                           ;incstack = 0
  4759                           ; Regs used in _analisisResto: [wreg+status,2+status,0+pclath+cstack]
  4760                           
  4761                           
  4762                           ;main.c: 421:     if (actualizoLecturas)
  4763     0EF8  1683               	bsf	3,5	;RP0=1, select bank1
  4764     0EF9  1303               	bcf	3,6	;RP1=0, select bank1
  4765     0EFA  082E               	movf	_actualizoLecturas^(0+128),w
  4766     0EFB  042F               	iorwf	(_actualizoLecturas+1)^(0+128),w
  4767     0EFC  1903               	btfsc	3,2
  4768     0EFD  2EFF               	goto	u1811
  4769     0EFE  2F00               	goto	u1810
  4770     0EFF                     u1811:
  4771     0EFF  2F36               	goto	l317
  4772     0F00                     u1810:
  4773     0F00                     l2584:
  4774                           
  4775                           ;main.c: 422:     {;main.c: 423:         actualizoLecturas = 0;
  4776     0F00  01AE               	clrf	_actualizoLecturas^(0+128)
  4777     0F01  01AF               	clrf	(_actualizoLecturas+1)^(0+128)
  4778     0F02                     l2586:
  4779                           
  4780                           ;main.c: 425:         emitoSensores[1] = valor[1];
  4781     0F02  0823               	movf	((_valor+1)^(0+128)+2),w
  4782     0F03  00BB               	movwf	((_emitoSensores+1)^(0+128)+2)
  4783     0F04  0822               	movf	(_valor^(0+128)+2),w
  4784     0F05  00BA               	movwf	(_emitoSensores^(0+128)+2)
  4785     0F06                     l2588:
  4786                           
  4787                           ;main.c: 426:         emitoSensores[2] = valor[2];
  4788     0F06  0825               	movf	((_valor+1)^(0+128)+4),w
  4789     0F07  00BD               	movwf	((_emitoSensores+1)^(0+128)+4)
  4790     0F08  0824               	movf	(_valor^(0+128)+4),w
  4791     0F09  00BC               	movwf	(_emitoSensores^(0+128)+4)
  4792     0F0A                     l2590:
  4793                           
  4794                           ;main.c: 427:         emitoSensores[3] = getCO2();
  4795     0F0A  120A  158A  2426  120A  158A  	fcall	_getCO2
  4796     0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  4797     0F10  1303               	bcf	3,6	;RP1=0, select bank0
  4798     0F11  082A               	movf	?_getCO2+1,w
  4799     0F12  1683               	bsf	3,5	;RP0=1, select bank1
  4800     0F13  1303               	bcf	3,6	;RP1=0, select bank1
  4801     0F14  00BF               	movwf	((_emitoSensores+1)^(0+128)+6)
  4802     0F15  1283               	bcf	3,5	;RP0=0, select bank0
  4803     0F16  1303               	bcf	3,6	;RP1=0, select bank0
  4804     0F17  0829               	movf	?_getCO2,w
  4805     0F18  1683               	bsf	3,5	;RP0=1, select bank1
  4806     0F19  1303               	bcf	3,6	;RP1=0, select bank1
  4807     0F1A  00BE               	movwf	(_emitoSensores^(0+128)+6)
  4808     0F1B                     l2592:
  4809                           
  4810                           ;main.c: 428:         emitoSensores[4] = getLumen();
  4811     0F1B  120A  158A  2433  120A  158A  	fcall	_getLumen
  4812     0F20  1283               	bcf	3,5	;RP0=0, select bank0
  4813     0F21  1303               	bcf	3,6	;RP1=0, select bank0
  4814     0F22  082A               	movf	?_getLumen+1,w
  4815     0F23  1683               	bsf	3,5	;RP0=1, select bank1
  4816     0F24  1303               	bcf	3,6	;RP1=0, select bank1
  4817     0F25  00C1               	movwf	((_emitoSensores+1)^(0+128)+8)
  4818     0F26  1283               	bcf	3,5	;RP0=0, select bank0
  4819     0F27  1303               	bcf	3,6	;RP1=0, select bank0
  4820     0F28  0829               	movf	?_getLumen,w
  4821     0F29  1683               	bsf	3,5	;RP0=1, select bank1
  4822     0F2A  1303               	bcf	3,6	;RP1=0, select bank1
  4823     0F2B  00C0               	movwf	(_emitoSensores^(0+128)+8)
  4824     0F2C                     l2594:
  4825                           
  4826                           ;main.c: 429:         setCO2();
  4827     0F2C  120A  118A  271E  120A  158A  	fcall	_setCO2
  4828     0F31                     l2596:
  4829                           
  4830                           ;main.c: 430:         setLumen();
  4831     0F31  120A  118A  276E  120A  158A  	fcall	_setLumen
  4832     0F36                     l317:
  4833     0F36  0008               	return
  4834     0F37                     __end_of_analisisResto:
  4835                           
  4836                           	psect	text29
  4837     076E                     __ptext29:	
  4838 ;; *************** function _setLumen *****************
  4839 ;; Defined at:
  4840 ;;		line 243 in file "main.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;		None
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;		None
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  1    wreg      void 
  4847 ;; Registers used:
  4848 ;;		wreg, status,2, status,0, pclath, cstack
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4854 ;;      Params:         0       0       0       0       0
  4855 ;;      Locals:         0       0       0       0       0
  4856 ;;      Temps:          0       2       0       0       0
  4857 ;;      Totals:         0       2       0       0       0
  4858 ;;Total ram usage:        2 bytes
  4859 ;; Hardware stack levels used: 1
  4860 ;; Hardware stack levels required when called: 6
  4861 ;; This function calls:
  4862 ;;		_i2c_read
  4863 ;;		_i2c_rstart
  4864 ;;		_i2c_write
  4865 ;; This function is called by:
  4866 ;;		_analisisResto
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870     076E                     _setLumen:	
  4871                           ;psect for function _setLumen
  4872                           
  4873     076E                     l2294:	
  4874                           ;incstack = 0
  4875                           ; Regs used in _setLumen: [wreg+status,2+status,0+pclath+cstack]
  4876                           
  4877                           
  4878                           ;main.c: 245:     i2c_rstart();
  4879     076E  120A  158A  23F5  120A  118A  	fcall	_i2c_rstart
  4880     0773                     l2296:
  4881                           
  4882                           ;main.c: 247:     i2c_write(0x20);
  4883     0773  3020               	movlw	32
  4884     0774  120A  158A  2440  120A  118A  	fcall	_i2c_write
  4885     0779                     l2298:
  4886                           
  4887                           ;main.c: 248:     i2c_write(0x04);
  4888     0779  3004               	movlw	4
  4889     077A  120A  158A  2440  120A  118A  	fcall	_i2c_write
  4890     077F                     l2300:
  4891                           
  4892                           ;main.c: 249:     i2c_write(0x21);
  4893     077F  3021               	movlw	33
  4894     0780  120A  158A  2440  120A  118A  	fcall	_i2c_write
  4895     0785                     l2302:
  4896                           
  4897                           ;main.c: 250:     valorI2C[1] = i2c_read(1);
  4898     0785  3001               	movlw	1
  4899     0786  120A  158A  2595  120A  118A  	fcall	_i2c_read
  4900     078B  1283               	bcf	3,5	;RP0=0, select bank0
  4901     078C  1303               	bcf	3,6	;RP1=0, select bank0
  4902     078D  00AB               	movwf	??_setLumen
  4903     078E  01AC               	clrf	??_setLumen+1
  4904     078F  082B               	movf	??_setLumen,w
  4905     0790  1683               	bsf	3,5	;RP0=1, select bank1
  4906     0791  1303               	bcf	3,6	;RP1=0, select bank1
  4907     0792  00A8               	movwf	(_valorI2C^(0+128)+2)
  4908     0793  1283               	bcf	3,5	;RP0=0, select bank0
  4909     0794  1303               	bcf	3,6	;RP1=0, select bank0
  4910     0795  082C               	movf	??_setLumen+1,w
  4911     0796  1683               	bsf	3,5	;RP0=1, select bank1
  4912     0797  1303               	bcf	3,6	;RP1=0, select bank1
  4913     0798  00A9               	movwf	((_valorI2C+1)^(0+128)+2)
  4914     0799                     l2304:
  4915                           
  4916                           ;main.c: 251:     valorI2C[1] += (i2c_read(0) * 0x10);
  4917     0799  3000               	movlw	0
  4918     079A  120A  158A  2595  120A  118A  	fcall	_i2c_read
  4919     079F  1283               	bcf	3,5	;RP0=0, select bank0
  4920     07A0  1303               	bcf	3,6	;RP1=0, select bank0
  4921     07A1  00AB               	movwf	??_setLumen
  4922     07A2  01AC               	clrf	??_setLumen+1
  4923     07A3  0EAB               	swapf	??_setLumen,f
  4924     07A4  0EAC               	swapf	??_setLumen+1,f
  4925     07A5  30F0               	movlw	240
  4926     07A6  05AC               	andwf	??_setLumen+1,f
  4927     07A7  082B               	movf	??_setLumen,w
  4928     07A8  390F               	andlw	15
  4929     07A9  04AC               	iorwf	??_setLumen+1,f
  4930     07AA  30F0               	movlw	240
  4931     07AB  05AB               	andwf	??_setLumen,f
  4932     07AC  082B               	movf	??_setLumen,w
  4933     07AD  1683               	bsf	3,5	;RP0=1, select bank1
  4934     07AE  1303               	bcf	3,6	;RP1=0, select bank1
  4935     07AF  07A8               	addwf	(_valorI2C^(0+128)+2),f
  4936     07B0  1803               	skipnc
  4937     07B1  0AA9               	incf	((_valorI2C+1)^(0+128)+2),f
  4938     07B2  1283               	bcf	3,5	;RP0=0, select bank0
  4939     07B3  1303               	bcf	3,6	;RP1=0, select bank0
  4940     07B4  082C               	movf	??_setLumen+1,w
  4941     07B5  1683               	bsf	3,5	;RP0=1, select bank1
  4942     07B6  1303               	bcf	3,6	;RP1=0, select bank1
  4943     07B7  07A9               	addwf	((_valorI2C+1)^(0+128)+2),f
  4944     07B8                     l247:
  4945     07B8  0008               	return
  4946     07B9                     __end_of_setLumen:
  4947                           
  4948                           	psect	text30
  4949     071E                     __ptext30:	
  4950 ;; *************** function _setCO2 *****************
  4951 ;; Defined at:
  4952 ;;		line 260 in file "main.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;		None
  4955 ;; Auto vars:     Size  Location     Type
  4956 ;;		None
  4957 ;; Return value:  Size  Location     Type
  4958 ;;                  1    wreg      void 
  4959 ;; Registers used:
  4960 ;;		wreg, status,2, status,0, pclath, cstack
  4961 ;; Tracked objects:
  4962 ;;		On entry : 0/0
  4963 ;;		On exit  : 0/0
  4964 ;;		Unchanged: 0/0
  4965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4966 ;;      Params:         0       0       0       0       0
  4967 ;;      Locals:         0       0       0       0       0
  4968 ;;      Temps:          0       2       0       0       0
  4969 ;;      Totals:         0       2       0       0       0
  4970 ;;Total ram usage:        2 bytes
  4971 ;; Hardware stack levels used: 1
  4972 ;; Hardware stack levels required when called: 6
  4973 ;; This function calls:
  4974 ;;		_i2c_read
  4975 ;;		_i2c_rstart
  4976 ;;		_i2c_write
  4977 ;; This function is called by:
  4978 ;;		_analisisResto
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982     071E                     _setCO2:	
  4983                           ;psect for function _setCO2
  4984                           
  4985     071E                     l2310:	
  4986                           ;incstack = 0
  4987                           ; Regs used in _setCO2: [wreg+status,2+status,0+pclath+cstack]
  4988                           
  4989                           
  4990                           ;main.c: 262:     i2c_rstart();
  4991     071E  120A  158A  23F5  120A  118A  	fcall	_i2c_rstart
  4992     0723                     l2312:
  4993                           
  4994                           ;main.c: 264:     i2c_write(0xB5);
  4995     0723  30B5               	movlw	181
  4996     0724  120A  158A  2440  120A  118A  	fcall	_i2c_write
  4997     0729                     l2314:
  4998                           
  4999                           ;main.c: 265:     valorI2C[0] = i2c_read(1);
  5000     0729  3001               	movlw	1
  5001     072A  120A  158A  2595  120A  118A  	fcall	_i2c_read
  5002     072F  1283               	bcf	3,5	;RP0=0, select bank0
  5003     0730  1303               	bcf	3,6	;RP1=0, select bank0
  5004     0731  00AB               	movwf	??_setCO2
  5005     0732  01AC               	clrf	??_setCO2+1
  5006     0733  082B               	movf	??_setCO2,w
  5007     0734  1683               	bsf	3,5	;RP0=1, select bank1
  5008     0735  1303               	bcf	3,6	;RP1=0, select bank1
  5009     0736  00A6               	movwf	_valorI2C^(0+128)
  5010     0737  1283               	bcf	3,5	;RP0=0, select bank0
  5011     0738  1303               	bcf	3,6	;RP1=0, select bank0
  5012     0739  082C               	movf	??_setCO2+1,w
  5013     073A  1683               	bsf	3,5	;RP0=1, select bank1
  5014     073B  1303               	bcf	3,6	;RP1=0, select bank1
  5015     073C  00A7               	movwf	(_valorI2C+1)^(0+128)
  5016     073D                     l2316:
  5017                           
  5018                           ;main.c: 266:     valorI2C[0] += (i2c_read(1) * 0x10);
  5019     073D  3001               	movlw	1
  5020     073E  120A  158A  2595  120A  118A  	fcall	_i2c_read
  5021     0743  1283               	bcf	3,5	;RP0=0, select bank0
  5022     0744  1303               	bcf	3,6	;RP1=0, select bank0
  5023     0745  00AB               	movwf	??_setCO2
  5024     0746  01AC               	clrf	??_setCO2+1
  5025     0747  0EAB               	swapf	??_setCO2,f
  5026     0748  0EAC               	swapf	??_setCO2+1,f
  5027     0749  30F0               	movlw	240
  5028     074A  05AC               	andwf	??_setCO2+1,f
  5029     074B  082B               	movf	??_setCO2,w
  5030     074C  390F               	andlw	15
  5031     074D  04AC               	iorwf	??_setCO2+1,f
  5032     074E  30F0               	movlw	240
  5033     074F  05AB               	andwf	??_setCO2,f
  5034     0750  082B               	movf	??_setCO2,w
  5035     0751  1683               	bsf	3,5	;RP0=1, select bank1
  5036     0752  1303               	bcf	3,6	;RP1=0, select bank1
  5037     0753  07A6               	addwf	_valorI2C^(0+128),f
  5038     0754  1803               	skipnc
  5039     0755  0AA7               	incf	(_valorI2C+1)^(0+128),f
  5040     0756  1283               	bcf	3,5	;RP0=0, select bank0
  5041     0757  1303               	bcf	3,6	;RP1=0, select bank0
  5042     0758  082C               	movf	??_setCO2+1,w
  5043     0759  1683               	bsf	3,5	;RP0=1, select bank1
  5044     075A  1303               	bcf	3,6	;RP1=0, select bank1
  5045     075B  07A7               	addwf	(_valorI2C+1)^(0+128),f
  5046     075C                     l2318:
  5047                           
  5048                           ;main.c: 267:     if (i2c_read(0) == 0x10) valorI2C[0] = -1;
  5049     075C  3000               	movlw	0
  5050     075D  120A  158A  2595  120A  118A  	fcall	_i2c_read
  5051     0762  3A10               	xorlw	16
  5052     0763  1D03               	skipz
  5053     0764  2F66               	goto	u1421
  5054     0765  2F67               	goto	u1420
  5055     0766                     u1421:
  5056     0766  2F6D               	goto	l254
  5057     0767                     u1420:
  5058     0767                     l2320:
  5059     0767  30FF               	movlw	255
  5060     0768  1683               	bsf	3,5	;RP0=1, select bank1
  5061     0769  1303               	bcf	3,6	;RP1=0, select bank1
  5062     076A  00A6               	movwf	_valorI2C^(0+128)
  5063     076B  30FF               	movlw	255
  5064     076C  00A7               	movwf	(_valorI2C^(0+128)+1)
  5065     076D                     l254:
  5066     076D  0008               	return
  5067     076E                     __end_of_setCO2:
  5068                           
  5069                           	psect	text31
  5070     0C40                     __ptext31:	
  5071 ;; *************** function _i2c_write *****************
  5072 ;; Defined at:
  5073 ;;		line 37 in file "i2c-v2.c"
  5074 ;; Parameters:    Size  Location     Type
  5075 ;;  I2C_data        1    wreg     unsigned char 
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;  I2C_data        1    9[BANK0 ] unsigned char 
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  1    wreg      unsigned char 
  5080 ;; Registers used:
  5081 ;;		wreg, status,2, status,0, pclath, cstack
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5087 ;;      Params:         0       0       0       0       0
  5088 ;;      Locals:         0       1       0       0       0
  5089 ;;      Temps:          0       0       0       0       0
  5090 ;;      Totals:         0       1       0       0       0
  5091 ;;Total ram usage:        1 bytes
  5092 ;; Hardware stack levels used: 1
  5093 ;; Hardware stack levels required when called: 5
  5094 ;; This function calls:
  5095 ;;		_wait_MSSP
  5096 ;; This function is called by:
  5097 ;;		_setLumen
  5098 ;;		_setCO2
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102     0C40                     _i2c_write:	
  5103                           ;psect for function _i2c_write
  5104                           
  5105                           
  5106                           ;incstack = 0
  5107                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  5108                           ;i2c_write@I2C_data stored from wreg
  5109     0C40  1283               	bcf	3,5	;RP0=0, select bank0
  5110     0C41  1303               	bcf	3,6	;RP1=0, select bank0
  5111     0C42  00A9               	movwf	i2c_write@I2C_data
  5112     0C43                     l2000:
  5113                           
  5114                           ;i2c-v2.c: 37: unsigned char i2c_write(unsigned char I2C_data);i2c-v2.c: 38: {;i2c-v2.c:
      +                           39:     SSPBUF = I2C_data;
  5115     0C43  0829               	movf	i2c_write@I2C_data,w
  5116     0C44  0093               	movwf	19	;volatile
  5117     0C45                     l2002:
  5118                           
  5119                           ;i2c-v2.c: 40:     wait_MSSP();
  5120     0C45  120A  158A  23E5  120A  158A  	fcall	_wait_MSSP
  5121     0C4A                     l2004:
  5122                           
  5123                           ;i2c-v2.c: 41:     return((unsigned char)!SSPCON2bits.ACKSTAT);;	Return value of _i2c_wr
      +                          ite is never used
  5124     0C4A  1683               	bsf	3,5	;RP0=1, select bank1
  5125     0C4B  1303               	bcf	3,6	;RP1=0, select bank1
  5126     0C4C  0811               	movf	17,w	;volatile
  5127     0C4D                     l24:
  5128     0C4D  0008               	return
  5129     0C4E                     __end_of_i2c_write:
  5130                           
  5131                           	psect	text32
  5132     0BF5                     __ptext32:	
  5133 ;; *************** function _i2c_rstart *****************
  5134 ;; Defined at:
  5135 ;;		line 30 in file "i2c-v2.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;		None
  5138 ;; Auto vars:     Size  Location     Type
  5139 ;;		None
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  1    wreg      void 
  5142 ;; Registers used:
  5143 ;;		status,2, status,0, pclath, cstack
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5149 ;;      Params:         0       0       0       0       0
  5150 ;;      Locals:         0       0       0       0       0
  5151 ;;      Temps:          0       0       0       0       0
  5152 ;;      Totals:         0       0       0       0       0
  5153 ;;Total ram usage:        0 bytes
  5154 ;; Hardware stack levels used: 1
  5155 ;; Hardware stack levels required when called: 5
  5156 ;; This function calls:
  5157 ;;		_wait_MSSP
  5158 ;; This function is called by:
  5159 ;;		_setLumen
  5160 ;;		_setCO2
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164     0BF5                     _i2c_rstart:	
  5165                           ;psect for function _i2c_rstart
  5166                           
  5167     0BF5                     l1994:	
  5168                           ;incstack = 0
  5169                           ; Regs used in _i2c_rstart: [status,2+status,0+pclath+cstack]
  5170                           
  5171                           
  5172                           ;i2c-v2.c: 32:     SSPCON2bits.RSEN = 1;
  5173     0BF5  1683               	bsf	3,5	;RP0=1, select bank1
  5174     0BF6  1303               	bcf	3,6	;RP1=0, select bank1
  5175     0BF7  1491               	bsf	17,1	;volatile
  5176     0BF8                     l1996:
  5177                           
  5178                           ;i2c-v2.c: 33:     wait_MSSP();
  5179     0BF8  120A  158A  23E5  120A  158A  	fcall	_wait_MSSP
  5180     0BFD                     l21:
  5181     0BFD  0008               	return
  5182     0BFE                     __end_of_i2c_rstart:
  5183                           
  5184                           	psect	text33
  5185     0D95                     __ptext33:	
  5186 ;; *************** function _i2c_read *****************
  5187 ;; Defined at:
  5188 ;;		line 47 in file "i2c-v2.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  master_ack      1    wreg     unsigned char 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  master_ack      1    9[BANK0 ] unsigned char 
  5193 ;;  I2C_data        1   10[BANK0 ] unsigned char 
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  1    wreg      unsigned char 
  5196 ;; Registers used:
  5197 ;;		wreg, status,2, status,0, pclath, cstack
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5203 ;;      Params:         0       0       0       0       0
  5204 ;;      Locals:         0       2       0       0       0
  5205 ;;      Temps:          0       0       0       0       0
  5206 ;;      Totals:         0       2       0       0       0
  5207 ;;Total ram usage:        2 bytes
  5208 ;; Hardware stack levels used: 1
  5209 ;; Hardware stack levels required when called: 5
  5210 ;; This function calls:
  5211 ;;		_wait_MSSP
  5212 ;; This function is called by:
  5213 ;;		_setLumen
  5214 ;;		_setCO2
  5215 ;; This function uses a non-reentrant model
  5216 ;;
  5217                           
  5218     0D95                     _i2c_read:	
  5219                           ;psect for function _i2c_read
  5220                           
  5221                           
  5222                           ;incstack = 0
  5223                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  5224                           ;i2c_read@master_ack stored from wreg
  5225     0D95  1283               	bcf	3,5	;RP0=0, select bank0
  5226     0D96  1303               	bcf	3,6	;RP1=0, select bank0
  5227     0D97  00A9               	movwf	i2c_read@master_ack
  5228     0D98                     l2008:
  5229                           
  5230                           ;i2c-v2.c: 47: unsigned char i2c_read(char master_ack);i2c-v2.c: 48: {;i2c-v2.c: 49:    
      +                           unsigned char I2C_data;;i2c-v2.c: 51:     SSPCON2bits.RCEN = 1;
  5231     0D98  1683               	bsf	3,5	;RP0=1, select bank1
  5232     0D99  1303               	bcf	3,6	;RP1=0, select bank1
  5233     0D9A  1591               	bsf	17,3	;volatile
  5234     0D9B                     l2010:
  5235                           
  5236                           ;i2c-v2.c: 52:     wait_MSSP();
  5237     0D9B  120A  158A  23E5  120A  158A  	fcall	_wait_MSSP
  5238     0DA0                     l2012:
  5239                           
  5240                           ;i2c-v2.c: 54:     I2C_data = SSPBUF;
  5241     0DA0  1283               	bcf	3,5	;RP0=0, select bank0
  5242     0DA1  1303               	bcf	3,6	;RP1=0, select bank0
  5243     0DA2  0813               	movf	19,w	;volatile
  5244     0DA3  00AA               	movwf	i2c_read@I2C_data
  5245     0DA4                     l2014:
  5246                           
  5247                           ;i2c-v2.c: 56:     if(master_ack)
  5248     0DA4  0829               	movf	i2c_read@master_ack,w
  5249     0DA5  1903               	btfsc	3,2
  5250     0DA6  2DA8               	goto	u1141
  5251     0DA7  2DA9               	goto	u1140
  5252     0DA8                     u1141:
  5253     0DA8  2DAD               	goto	l27
  5254     0DA9                     u1140:
  5255     0DA9                     l2016:
  5256                           
  5257                           ;i2c-v2.c: 57:         SSPCON2bits.ACKDT = 0;
  5258     0DA9  1683               	bsf	3,5	;RP0=1, select bank1
  5259     0DAA  1303               	bcf	3,6	;RP1=0, select bank1
  5260     0DAB  1291               	bcf	17,5	;volatile
  5261     0DAC  2DB0               	goto	l28
  5262     0DAD                     l27:	
  5263                           ;i2c-v2.c: 58:     else
  5264                           
  5265                           
  5266                           ;i2c-v2.c: 59:         SSPCON2bits.ACKDT = 1;
  5267     0DAD  1683               	bsf	3,5	;RP0=1, select bank1
  5268     0DAE  1303               	bcf	3,6	;RP1=0, select bank1
  5269     0DAF  1691               	bsf	17,5	;volatile
  5270     0DB0                     l28:
  5271                           
  5272                           ;i2c-v2.c: 61:     SSPCON2bits.ACKEN = 1;
  5273     0DB0  1611               	bsf	17,4	;volatile
  5274     0DB1                     l2018:
  5275                           
  5276                           ;i2c-v2.c: 62:     wait_MSSP();
  5277     0DB1  120A  158A  23E5  120A  158A  	fcall	_wait_MSSP
  5278     0DB6                     l2020:
  5279                           
  5280                           ;i2c-v2.c: 63:     return(I2C_data);
  5281     0DB6  1283               	bcf	3,5	;RP0=0, select bank0
  5282     0DB7  1303               	bcf	3,6	;RP1=0, select bank0
  5283     0DB8  082A               	movf	i2c_read@I2C_data,w
  5284     0DB9                     l29:
  5285     0DB9  0008               	return
  5286     0DBA                     __end_of_i2c_read:
  5287                           
  5288                           	psect	text34
  5289     0BE5                     __ptext34:	
  5290 ;; *************** function _wait_MSSP *****************
  5291 ;; Defined at:
  5292 ;;		line 8 in file "i2c-v2.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;		None
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;		None
  5297 ;; Return value:  Size  Location     Type
  5298 ;;                  1    wreg      void 
  5299 ;; Registers used:
  5300 ;;		None
  5301 ;; Tracked objects:
  5302 ;;		On entry : 0/0
  5303 ;;		On exit  : 0/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5306 ;;      Params:         0       0       0       0       0
  5307 ;;      Locals:         0       0       0       0       0
  5308 ;;      Temps:          0       0       0       0       0
  5309 ;;      Totals:         0       0       0       0       0
  5310 ;;Total ram usage:        0 bytes
  5311 ;; Hardware stack levels used: 1
  5312 ;; Hardware stack levels required when called: 4
  5313 ;; This function calls:
  5314 ;;		Nothing
  5315 ;; This function is called by:
  5316 ;;		_i2c_start
  5317 ;;		_i2c_stop
  5318 ;;		_i2c_rstart
  5319 ;;		_i2c_write
  5320 ;;		_i2c_read
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324     0BE5                     _wait_MSSP:	
  5325                           ;psect for function _wait_MSSP
  5326                           
  5327     0BE5                     l1960:	
  5328                           ;incstack = 0
  5329                           ; Regs used in _wait_MSSP: []
  5330                           
  5331     0BE5                     l9:	
  5332                           ;i2c-v2.c: 10:     while(!PIR1bits.SSPIF);
  5333                           
  5334     0BE5  1283               	bcf	3,5	;RP0=0, select bank0
  5335     0BE6  1303               	bcf	3,6	;RP1=0, select bank0
  5336     0BE7  1D8C               	btfss	12,3	;volatile
  5337     0BE8  2BEA               	goto	u1071
  5338     0BE9  2BEB               	goto	u1070
  5339     0BEA                     u1071:
  5340     0BEA  2BE5               	goto	l9
  5341     0BEB                     u1070:
  5342     0BEB                     l11:
  5343                           
  5344                           ;i2c-v2.c: 12:     PIR1bits.SSPIF = 0;
  5345     0BEB  118C               	bcf	12,3	;volatile
  5346     0BEC                     l12:	
  5347                           ;i2c-v2.c: 13:     return;
  5348                           
  5349     0BEC  0008               	return
  5350     0BED                     __end_of_wait_MSSP:
  5351                           
  5352                           	psect	text35
  5353     0C33                     __ptext35:	
  5354 ;; *************** function _getLumen *****************
  5355 ;; Defined at:
  5356 ;;		line 255 in file "main.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;		None
  5359 ;; Auto vars:     Size  Location     Type
  5360 ;;		None
  5361 ;; Return value:  Size  Location     Type
  5362 ;;                  2    9[BANK0 ] int 
  5363 ;; Registers used:
  5364 ;;		wreg
  5365 ;; Tracked objects:
  5366 ;;		On entry : 0/0
  5367 ;;		On exit  : 0/0
  5368 ;;		Unchanged: 0/0
  5369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5370 ;;      Params:         0       2       0       0       0
  5371 ;;      Locals:         0       0       0       0       0
  5372 ;;      Temps:          0       0       0       0       0
  5373 ;;      Totals:         0       2       0       0       0
  5374 ;;Total ram usage:        2 bytes
  5375 ;; Hardware stack levels used: 1
  5376 ;; Hardware stack levels required when called: 4
  5377 ;; This function calls:
  5378 ;;		Nothing
  5379 ;; This function is called by:
  5380 ;;		_analisisResto
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384     0C33                     _getLumen:	
  5385                           ;psect for function _getLumen
  5386                           
  5387     0C33                     l2306:	
  5388                           ;incstack = 0
  5389                           ; Regs used in _getLumen: [wreg]
  5390                           
  5391                           
  5392                           ;main.c: 256:     return valorI2C[1];
  5393     0C33  1683               	bsf	3,5	;RP0=1, select bank1
  5394     0C34  1303               	bcf	3,6	;RP1=0, select bank1
  5395     0C35  0829               	movf	((_valorI2C+1)^(0+128)+2),w
  5396     0C36  1283               	bcf	3,5	;RP0=0, select bank0
  5397     0C37  1303               	bcf	3,6	;RP1=0, select bank0
  5398     0C38  00AA               	movwf	?_getLumen+1
  5399     0C39  1683               	bsf	3,5	;RP0=1, select bank1
  5400     0C3A  1303               	bcf	3,6	;RP1=0, select bank1
  5401     0C3B  0828               	movf	(_valorI2C^(0+128)+2),w
  5402     0C3C  1283               	bcf	3,5	;RP0=0, select bank0
  5403     0C3D  1303               	bcf	3,6	;RP1=0, select bank0
  5404     0C3E  00A9               	movwf	?_getLumen
  5405     0C3F                     l250:
  5406     0C3F  0008               	return
  5407     0C40                     __end_of_getLumen:
  5408                           
  5409                           	psect	text36
  5410     0C26                     __ptext36:	
  5411 ;; *************** function _getCO2 *****************
  5412 ;; Defined at:
  5413 ;;		line 270 in file "main.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;		None
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;		None
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  2    9[BANK0 ] int 
  5420 ;; Registers used:
  5421 ;;		wreg
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5427 ;;      Params:         0       2       0       0       0
  5428 ;;      Locals:         0       0       0       0       0
  5429 ;;      Temps:          0       0       0       0       0
  5430 ;;      Totals:         0       2       0       0       0
  5431 ;;Total ram usage:        2 bytes
  5432 ;; Hardware stack levels used: 1
  5433 ;; Hardware stack levels required when called: 4
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_analisisResto
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441     0C26                     _getCO2:	
  5442                           ;psect for function _getCO2
  5443                           
  5444     0C26                     l2322:	
  5445                           ;incstack = 0
  5446                           ; Regs used in _getCO2: [wreg]
  5447                           
  5448                           
  5449                           ;main.c: 271:     return valorI2C[0];
  5450     0C26  1683               	bsf	3,5	;RP0=1, select bank1
  5451     0C27  1303               	bcf	3,6	;RP1=0, select bank1
  5452     0C28  0827               	movf	(_valorI2C+1)^(0+128),w
  5453     0C29  1283               	bcf	3,5	;RP0=0, select bank0
  5454     0C2A  1303               	bcf	3,6	;RP1=0, select bank0
  5455     0C2B  00AA               	movwf	?_getCO2+1
  5456     0C2C  1683               	bsf	3,5	;RP0=1, select bank1
  5457     0C2D  1303               	bcf	3,6	;RP1=0, select bank1
  5458     0C2E  0826               	movf	_valorI2C^(0+128),w
  5459     0C2F  1283               	bcf	3,5	;RP0=0, select bank0
  5460     0C30  1303               	bcf	3,6	;RP1=0, select bank0
  5461     0C31  00A9               	movwf	?_getCO2
  5462     0C32                     l257:
  5463     0C32  0008               	return
  5464     0C33                     __end_of_getCO2:
  5465                           
  5466                           	psect	text37
  5467     004A                     __ptext37:	
  5468 ;; *************** function _TRAT_INT *****************
  5469 ;; Defined at:
  5470 ;;		line 445 in file "main.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;		None
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;		None
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  1    wreg      void 
  5477 ;; Registers used:
  5478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5484 ;;      Params:         0       0       0       0       0
  5485 ;;      Locals:         0       0       0       0       0
  5486 ;;      Temps:          0       6       0       0       0
  5487 ;;      Totals:         0       6       0       0       0
  5488 ;;Total ram usage:        6 bytes
  5489 ;; Hardware stack levels used: 1
  5490 ;; Hardware stack levels required when called: 3
  5491 ;; This function calls:
  5492 ;;		i1_setLED
  5493 ;;		i1_setPWM
  5494 ;; This function is called by:
  5495 ;;		Interrupt level 1
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499     004A                     _TRAT_INT:	
  5500                           ;psect for function _TRAT_INT
  5501                           
  5502     004A                     i1l2694:
  5503                           
  5504                           ;main.c: 446:     if (INTCONbits.TMR0IF)
  5505     004A  1D0B               	btfss	11,2	;volatile
  5506     004B  284D               	goto	u190_21
  5507     004C  284E               	goto	u190_20
  5508     004D                     u190_21:
  5509     004D  28AC               	goto	i1l327
  5510     004E                     u190_20:
  5511     004E                     i1l2696:
  5512                           
  5513                           ;main.c: 447:     {;main.c: 449:         TMR0 = 61;
  5514     004E  303D               	movlw	61
  5515     004F  0081               	movwf	1	;volatile
  5516                           
  5517                           ;main.c: 450:         if (copias >= los5msen1sT0) {
  5518     0050  1683               	bsf	3,5	;RP0=1, select bank1
  5519     0051  1303               	bcf	3,6	;RP1=0, select bank1
  5520     0052  082D               	movf	(_copias+1)^(0+128),w
  5521     0053  3A80               	xorlw	128
  5522     0054  1283               	bcf	3,5	;RP0=0, select bank0
  5523     0055  1303               	bcf	3,6	;RP1=0, select bank0
  5524     0056  00A3               	movwf	??_TRAT_INT
  5525     0057  1683               	bsf	3,5	;RP0=1, select bank1
  5526     0058  1303               	bcf	3,6	;RP1=0, select bank1
  5527     0059  0843               	movf	(_los5msen1sT0+1)^(0+128),w
  5528     005A  3A80               	xorlw	128
  5529     005B  1283               	bcf	3,5	;RP0=0, select bank0
  5530     005C  1303               	bcf	3,6	;RP1=0, select bank0
  5531     005D  0223               	subwf	??_TRAT_INT,w
  5532     005E  1D03               	skipz
  5533     005F  2864               	goto	u191_25
  5534     0060  1683               	bsf	3,5	;RP0=1, select bank1
  5535     0061  1303               	bcf	3,6	;RP1=0, select bank1
  5536     0062  0842               	movf	_los5msen1sT0^(0+128),w
  5537     0063  022C               	subwf	_copias^(0+128),w
  5538     0064                     u191_25:
  5539     0064  1C03               	skipc
  5540     0065  2867               	goto	u191_21
  5541     0066  2868               	goto	u191_20
  5542     0067                     u191_21:
  5543     0067  28A2               	goto	i1l2710
  5544     0068                     u191_20:
  5545     0068                     i1l2698:
  5546                           
  5547                           ;main.c: 452:             copias = 0;
  5548     0068  1683               	bsf	3,5	;RP0=1, select bank1
  5549     0069  1303               	bcf	3,6	;RP1=0, select bank1
  5550     006A  01AC               	clrf	_copias^(0+128)
  5551     006B  01AD               	clrf	(_copias+1)^(0+128)
  5552     006C                     i1l2700:
  5553                           
  5554                           ;main.c: 453:             copias5s++;
  5555     006C  3001               	movlw	1
  5556     006D  07AA               	addwf	_copias5s^(0+128),f
  5557     006E  1803               	skipnc
  5558     006F  0AAB               	incf	(_copias5s+1)^(0+128),f
  5559     0070  3000               	movlw	0
  5560     0071  07AB               	addwf	(_copias5s+1)^(0+128),f
  5561     0072                     i1l2702:
  5562                           
  5563                           ;main.c: 455:             emitoSensores[0] = ruidoMasAlto;
  5564     0072  1283               	bcf	3,5	;RP0=0, select bank0
  5565     0073  1303               	bcf	3,6	;RP1=0, select bank0
  5566     0074  085D               	movf	_ruidoMasAlto+1,w
  5567     0075  1683               	bsf	3,5	;RP0=1, select bank1
  5568     0076  1303               	bcf	3,6	;RP1=0, select bank1
  5569     0077  00B9               	movwf	(_emitoSensores+1)^(0+128)
  5570     0078  1283               	bcf	3,5	;RP0=0, select bank0
  5571     0079  1303               	bcf	3,6	;RP1=0, select bank0
  5572     007A  085C               	movf	_ruidoMasAlto,w
  5573     007B  1683               	bsf	3,5	;RP0=1, select bank1
  5574     007C  1303               	bcf	3,6	;RP1=0, select bank1
  5575     007D  00B8               	movwf	_emitoSensores^(0+128)
  5576                           
  5577                           ;main.c: 456:             ruidoMasAlto = 0;
  5578     007E  1283               	bcf	3,5	;RP0=0, select bank0
  5579     007F  1303               	bcf	3,6	;RP1=0, select bank0
  5580     0080  01DC               	clrf	_ruidoMasAlto
  5581     0081  01DD               	clrf	_ruidoMasAlto+1
  5582     0082                     i1l2704:
  5583                           
  5584                           ;main.c: 460:             if (copias5s >= 5)
  5585     0082  1683               	bsf	3,5	;RP0=1, select bank1
  5586     0083  1303               	bcf	3,6	;RP1=0, select bank1
  5587     0084  082B               	movf	(_copias5s+1)^(0+128),w
  5588     0085  3A80               	xorlw	128
  5589     0086  00FF               	movwf	btemp+1
  5590     0087  3080               	movlw	128
  5591     0088  027F               	subwf	btemp+1,w
  5592     0089  1D03               	skipz
  5593     008A  288D               	goto	u192_25
  5594     008B  3005               	movlw	5
  5595     008C  022A               	subwf	_copias5s^(0+128),w
  5596     008D                     u192_25:
  5597     008D  1C03               	skipc
  5598     008E  2890               	goto	u192_21
  5599     008F  2891               	goto	u192_20
  5600     0090                     u192_21:
  5601     0090  28AA               	goto	i1l2712
  5602     0091                     u192_20:
  5603     0091                     i1l2706:
  5604                           
  5605                           ;main.c: 461:             {;main.c: 462:                 actualizoLecturas = 1;
  5606     0091  3001               	movlw	1
  5607     0092  1683               	bsf	3,5	;RP0=1, select bank1
  5608     0093  1303               	bcf	3,6	;RP1=0, select bank1
  5609     0094  00AE               	movwf	_actualizoLecturas^(0+128)
  5610     0095  3000               	movlw	0
  5611     0096  00AF               	movwf	(_actualizoLecturas^(0+128)+1)
  5612                           
  5613                           ;main.c: 463:                 leoADCHumedadTemp = 2;
  5614     0097  3002               	movlw	2
  5615     0098  1283               	bcf	3,5	;RP0=0, select bank0
  5616     0099  1303               	bcf	3,6	;RP1=0, select bank0
  5617     009A  00CB               	movwf	_leoADCHumedadTemp
  5618     009B  3000               	movlw	0
  5619     009C  00CC               	movwf	_leoADCHumedadTemp+1
  5620     009D                     i1l2708:
  5621                           
  5622                           ;main.c: 464:                 copias5s = 0;
  5623     009D  1683               	bsf	3,5	;RP0=1, select bank1
  5624     009E  1303               	bcf	3,6	;RP1=0, select bank1
  5625     009F  01AA               	clrf	_copias5s^(0+128)
  5626     00A0  01AB               	clrf	(_copias5s+1)^(0+128)
  5627     00A1  28AA               	goto	i1l2712
  5628     00A2                     i1l2710:
  5629                           
  5630                           ;main.c: 468:             copias += 1;
  5631     00A2  3001               	movlw	1
  5632     00A3  1683               	bsf	3,5	;RP0=1, select bank1
  5633     00A4  1303               	bcf	3,6	;RP1=0, select bank1
  5634     00A5  07AC               	addwf	_copias^(0+128),f
  5635     00A6  1803               	skipnc
  5636     00A7  0AAD               	incf	(_copias+1)^(0+128),f
  5637     00A8  3000               	movlw	0
  5638     00A9  07AD               	addwf	(_copias+1)^(0+128),f
  5639     00AA                     i1l2712:
  5640                           
  5641                           ;main.c: 470:         INTCONbits.T0IF = 0;
  5642     00AA  110B               	bcf	11,2	;volatile
  5643                           
  5644                           ;main.c: 472:     } else {
  5645     00AB  2A15               	goto	i1l370
  5646     00AC                     i1l327:
  5647                           
  5648                           ;main.c: 473:         if (PIR1bits.TMR1IF == 1)
  5649     00AC  1C0C               	btfss	12,0	;volatile
  5650     00AD  28AF               	goto	u193_21
  5651     00AE  28B0               	goto	u193_20
  5652     00AF                     u193_21:
  5653     00AF  2918               	goto	i1l332
  5654     00B0                     u193_20:
  5655     00B0                     i1l2714:
  5656                           
  5657                           ;main.c: 474:         {;main.c: 476:             if (copias1 >= los5msen15ms) {
  5658     00B0  085B               	movf	_copias1+1,w
  5659     00B1  3A80               	xorlw	128
  5660     00B2  00A3               	movwf	??_TRAT_INT
  5661     00B3  0848               	movf	_los5msen15ms+1,w
  5662     00B4  3A80               	xorlw	128
  5663     00B5  0223               	subwf	??_TRAT_INT,w
  5664     00B6  1D03               	skipz
  5665     00B7  28BA               	goto	u194_25
  5666     00B8  0847               	movf	_los5msen15ms,w
  5667     00B9  025A               	subwf	_copias1,w
  5668     00BA                     u194_25:
  5669     00BA  1C03               	skipc
  5670     00BB  28BD               	goto	u194_21
  5671     00BC  28BE               	goto	u194_20
  5672     00BD                     u194_21:
  5673     00BD  28D3               	goto	i1l2722
  5674     00BE                     u194_20:
  5675     00BE                     i1l2716:
  5676                           
  5677                           ;main.c: 477:                 copias1 = 0;
  5678     00BE  1283               	bcf	3,5	;RP0=0, select bank0
  5679     00BF  1303               	bcf	3,6	;RP1=0, select bank0
  5680     00C0  01DA               	clrf	_copias1
  5681     00C1  01DB               	clrf	_copias1+1
  5682     00C2                     i1l2718:
  5683                           
  5684                           ;main.c: 480:                 if (leoADCHumedadTemp > 0) ADCON0bits.GO_DONE = 1;
  5685     00C2  084C               	movf	_leoADCHumedadTemp+1,w
  5686     00C3  3A80               	xorlw	128
  5687     00C4  00FF               	movwf	btemp+1
  5688     00C5  3080               	movlw	128
  5689     00C6  027F               	subwf	btemp+1,w
  5690     00C7  1D03               	skipz
  5691     00C8  28CB               	goto	u195_25
  5692     00C9  3001               	movlw	1
  5693     00CA  024B               	subwf	_leoADCHumedadTemp,w
  5694     00CB                     u195_25:
  5695     00CB  1C03               	skipc
  5696     00CC  28CE               	goto	u195_21
  5697     00CD  28CF               	goto	u195_20
  5698     00CE                     u195_21:
  5699     00CE  290F               	goto	i1l335
  5700     00CF                     u195_20:
  5701     00CF                     i1l2720:
  5702     00CF  1283               	bcf	3,5	;RP0=0, select bank0
  5703     00D0  1303               	bcf	3,6	;RP1=0, select bank0
  5704     00D1  149F               	bsf	31,1	;volatile
  5705     00D2  290F               	goto	i1l335
  5706     00D3                     i1l2722:
  5707                           
  5708                           ;main.c: 482:                 copias1 += 1;
  5709     00D3  3001               	movlw	1
  5710     00D4  1283               	bcf	3,5	;RP0=0, select bank0
  5711     00D5  1303               	bcf	3,6	;RP1=0, select bank0
  5712     00D6  07DA               	addwf	_copias1,f
  5713     00D7  1803               	skipnc
  5714     00D8  0ADB               	incf	_copias1+1,f
  5715     00D9  3000               	movlw	0
  5716     00DA  07DB               	addwf	_copias1+1,f
  5717     00DB                     i1l2724:
  5718                           
  5719                           ;main.c: 483:                 if (copias1 == los5msen15ms - 1 || (leoADCHumedadTemp > 0 
      +                          && copias1 == los5msen15ms - 2))
  5720     00DB  0847               	movf	_los5msen15ms,w
  5721     00DC  3EFF               	addlw	255
  5722     00DD  00A3               	movwf	??_TRAT_INT
  5723     00DE  0848               	movf	_los5msen15ms+1,w
  5724     00DF  1803               	skipnc
  5725     00E0  3E01               	addlw	1
  5726     00E1  3EFF               	addlw	255
  5727     00E2  00A4               	movwf	??_TRAT_INT+1
  5728     00E3  085B               	movf	_copias1+1,w
  5729     00E4  0624               	xorwf	??_TRAT_INT+1,w
  5730     00E5  1D03               	skipz
  5731     00E6  28E9               	goto	u196_25
  5732     00E7  085A               	movf	_copias1,w
  5733     00E8  0623               	xorwf	??_TRAT_INT,w
  5734     00E9                     u196_25:
  5735     00E9  1903               	skipnz
  5736     00EA  28EC               	goto	u196_21
  5737     00EB  28ED               	goto	u196_20
  5738     00EC                     u196_21:
  5739     00EC  290E               	goto	i1l338
  5740     00ED                     u196_20:
  5741     00ED                     i1l2726:
  5742     00ED  084C               	movf	_leoADCHumedadTemp+1,w
  5743     00EE  3A80               	xorlw	128
  5744     00EF  00FF               	movwf	btemp+1
  5745     00F0  3080               	movlw	128
  5746     00F1  027F               	subwf	btemp+1,w
  5747     00F2  1D03               	skipz
  5748     00F3  28F6               	goto	u197_25
  5749     00F4  3001               	movlw	1
  5750     00F5  024B               	subwf	_leoADCHumedadTemp,w
  5751     00F6                     u197_25:
  5752     00F6  1C03               	skipc
  5753     00F7  28F9               	goto	u197_21
  5754     00F8  28FA               	goto	u197_20
  5755     00F9                     u197_21:
  5756     00F9  290F               	goto	i1l335
  5757     00FA                     u197_20:
  5758     00FA                     i1l2728:
  5759     00FA  1283               	bcf	3,5	;RP0=0, select bank0
  5760     00FB  1303               	bcf	3,6	;RP1=0, select bank0
  5761     00FC  0847               	movf	_los5msen15ms,w
  5762     00FD  3EFE               	addlw	254
  5763     00FE  00A3               	movwf	??_TRAT_INT
  5764     00FF  0848               	movf	_los5msen15ms+1,w
  5765     0100  1803               	skipnc
  5766     0101  3E01               	addlw	1
  5767     0102  3EFF               	addlw	255
  5768     0103  00A4               	movwf	??_TRAT_INT+1
  5769     0104  085B               	movf	_copias1+1,w
  5770     0105  0624               	xorwf	??_TRAT_INT+1,w
  5771     0106  1D03               	skipz
  5772     0107  290A               	goto	u198_25
  5773     0108  085A               	movf	_copias1,w
  5774     0109  0623               	xorwf	??_TRAT_INT,w
  5775     010A                     u198_25:
  5776     010A  1D03               	skipz
  5777     010B  290D               	goto	u198_21
  5778     010C  290E               	goto	u198_20
  5779     010D                     u198_21:
  5780     010D  290F               	goto	i1l335
  5781     010E                     u198_20:
  5782     010E                     i1l338:
  5783                           
  5784                           ;main.c: 484:                     ADCON0bits.GO_DONE = 1;
  5785     010E  149F               	bsf	31,1	;volatile
  5786     010F                     i1l335:	
  5787                           ;main.c: 487:             }
  5788                           
  5789                           
  5790                           ;main.c: 488:             ADCON0bits.GO_DONE = 1;
  5791     010F  1283               	bcf	3,5	;RP0=0, select bank0
  5792     0110  1303               	bcf	3,6	;RP1=0, select bank0
  5793     0111  149F               	bsf	31,1	;volatile
  5794     0112                     i1l2730:
  5795                           
  5796                           ;main.c: 489:             TMR1H = eltimer1H;
  5797     0112  087D               	movf	_eltimer1H,w
  5798     0113  008F               	movwf	15	;volatile
  5799                           
  5800                           ;main.c: 490:             TMR1L = eltimer1L;
  5801     0114  0855               	movf	_eltimer1L,w
  5802     0115  008E               	movwf	14	;volatile
  5803     0116                     i1l2732:
  5804                           
  5805                           ;main.c: 491:             PIR1bits.TMR1IF = 0;
  5806     0116  100C               	bcf	12,0	;volatile
  5807                           
  5808                           ;main.c: 492:         } else {
  5809     0117  2A15               	goto	i1l370
  5810     0118                     i1l332:
  5811                           
  5812                           ;main.c: 493:             if (PIR1bits.TMR2IF)
  5813     0118  1C8C               	btfss	12,1	;volatile
  5814     0119  291B               	goto	u199_21
  5815     011A  291C               	goto	u199_20
  5816     011B                     u199_21:
  5817     011B  2923               	goto	i1l340
  5818     011C                     u199_20:
  5819     011C                     i1l2734:
  5820                           
  5821                           ;main.c: 494:             {;main.c: 496:                 TRISC = 0;
  5822     011C  1683               	bsf	3,5	;RP0=1, select bank1
  5823     011D  1303               	bcf	3,6	;RP1=0, select bank1
  5824     011E  0187               	clrf	7	;volatile
  5825     011F                     i1l2736:
  5826                           
  5827                           ;main.c: 497:                 PIR1bits.TMR2IF = 0;
  5828     011F  1283               	bcf	3,5	;RP0=0, select bank0
  5829     0120  1303               	bcf	3,6	;RP1=0, select bank0
  5830     0121  108C               	bcf	12,1	;volatile
  5831                           
  5832                           ;main.c: 498:             } else {
  5833     0122  2A15               	goto	i1l370
  5834     0123                     i1l340:
  5835                           
  5836                           ;main.c: 499:                 if (PIR1bits.ADIF) {
  5837     0123  1F0C               	btfss	12,6	;volatile
  5838     0124  2926               	goto	u200_21
  5839     0125  2927               	goto	u200_20
  5840     0126                     u200_21:
  5841     0126  2977               	goto	i1l342
  5842     0127                     u200_20:
  5843     0127                     i1l2738:
  5844                           
  5845                           ;main.c: 501:                     PIR1bits.ADIF = 0;
  5846     0127  130C               	bcf	12,6	;volatile
  5847     0128                     i1l2740:
  5848                           
  5849                           ;main.c: 502:                     valor[anI] = (int) ADRESH * 0x100 + ADRESL;
  5850     0128  084D               	movf	_anI,w
  5851     0129  00A3               	movwf	??_TRAT_INT
  5852     012A  0723               	addwf	??_TRAT_INT,w
  5853     012B  3EA0               	addlw	(low (_valor| 0))& (0+255)
  5854     012C  0084               	movwf	4
  5855     012D  1683               	bsf	3,5	;RP0=1, select bank1
  5856     012E  1303               	bcf	3,6	;RP1=0, select bank1
  5857     012F  081E               	movf	30,w	;volatile
  5858     0130  1383               	bcf	3,7	;select IRP bank1
  5859     0131  0080               	movwf	0
  5860     0132  0A84               	incf	4,f
  5861     0133  1283               	bcf	3,5	;RP0=0, select bank0
  5862     0134  1303               	bcf	3,6	;RP1=0, select bank0
  5863     0135  081E               	movf	30,w	;volatile
  5864     0136  0080               	movwf	0
  5865     0137                     i1l2742:
  5866                           
  5867                           ;main.c: 521:                     if (leoADCHumedadTemp > 0)
  5868     0137  084C               	movf	_leoADCHumedadTemp+1,w
  5869     0138  3A80               	xorlw	128
  5870     0139  00FF               	movwf	btemp+1
  5871     013A  3080               	movlw	128
  5872     013B  027F               	subwf	btemp+1,w
  5873     013C  1D03               	skipz
  5874     013D  2940               	goto	u201_25
  5875     013E  3001               	movlw	1
  5876     013F  024B               	subwf	_leoADCHumedadTemp,w
  5877     0140                     u201_25:
  5878     0140  1C03               	skipc
  5879     0141  2943               	goto	u201_21
  5880     0142  2944               	goto	u201_20
  5881     0143                     u201_21:
  5882     0143  2969               	goto	i1l2752
  5883     0144                     u201_20:
  5884     0144                     i1l2744:
  5885                           
  5886                           ;main.c: 522:                     {;main.c: 523:                         if (copias1 == 
      +                          0)
  5887     0144  1283               	bcf	3,5	;RP0=0, select bank0
  5888     0145  1303               	bcf	3,6	;RP1=0, select bank0
  5889     0146  085A               	movf	_copias1,w
  5890     0147  045B               	iorwf	_copias1+1,w
  5891     0148  1D03               	btfss	3,2
  5892     0149  294B               	goto	u202_21
  5893     014A  294C               	goto	u202_20
  5894     014B                     u202_21:
  5895     014B  2957               	goto	i1l2748
  5896     014C                     u202_20:
  5897     014C                     i1l2746:
  5898                           
  5899                           ;main.c: 524:                         {;main.c: 525:                             leoADCH
      +                          umedadTemp--;
  5900     014C  30FF               	movlw	255
  5901     014D  07CB               	addwf	_leoADCHumedadTemp,f
  5902     014E  1803               	skipnc
  5903     014F  0ACC               	incf	_leoADCHumedadTemp+1,f
  5904     0150  30FF               	movlw	255
  5905     0151  07CC               	addwf	_leoADCHumedadTemp+1,f
  5906                           
  5907                           ;main.c: 526:                             anI = 1;
  5908     0152  3001               	movlw	1
  5909     0153  00CD               	movwf	_anI
  5910     0154  3000               	movlw	0
  5911     0155  00CE               	movwf	_anI+1
  5912                           
  5913                           ;main.c: 527:                         } else if (copias1 == 2)
  5914     0156  296D               	goto	i1l2756
  5915     0157                     i1l2748:
  5916     0157  3002               	movlw	2
  5917     0158  065A               	xorwf	_copias1,w
  5918     0159  045B               	iorwf	_copias1+1,w
  5919     015A  1D03               	btfss	3,2
  5920     015B  295D               	goto	u203_21
  5921     015C  295E               	goto	u203_20
  5922     015D                     u203_21:
  5923     015D  2969               	goto	i1l2752
  5924     015E                     u203_20:
  5925     015E                     i1l2750:
  5926                           
  5927                           ;main.c: 528:                         {;main.c: 529:                             leoADCH
      +                          umedadTemp--;
  5928     015E  30FF               	movlw	255
  5929     015F  07CB               	addwf	_leoADCHumedadTemp,f
  5930     0160  1803               	skipnc
  5931     0161  0ACC               	incf	_leoADCHumedadTemp+1,f
  5932     0162  30FF               	movlw	255
  5933     0163  07CC               	addwf	_leoADCHumedadTemp+1,f
  5934                           
  5935                           ;main.c: 530:                             anI = 2;
  5936     0164  3002               	movlw	2
  5937     0165  00CD               	movwf	_anI
  5938     0166  3000               	movlw	0
  5939     0167  00CE               	movwf	_anI+1
  5940                           
  5941                           ;main.c: 531:                         } else anI = 0;
  5942     0168  296D               	goto	i1l2756
  5943     0169                     i1l2752:
  5944     0169  1283               	bcf	3,5	;RP0=0, select bank0
  5945     016A  1303               	bcf	3,6	;RP1=0, select bank0
  5946     016B  01CD               	clrf	_anI
  5947     016C  01CE               	clrf	_anI+1
  5948     016D                     i1l2756:
  5949                           
  5950                           ;main.c: 534:                     ADCON0bits.CHS = (char) anI;
  5951     016D  084D               	movf	_anI,w
  5952     016E  00A3               	movwf	??_TRAT_INT
  5953     016F  0DA3               	rlf	??_TRAT_INT,f
  5954     0170  0DA3               	rlf	??_TRAT_INT,f
  5955     0171  081F               	movf	31,w	;volatile
  5956     0172  0623               	xorwf	??_TRAT_INT,w
  5957     0173  39C3               	andlw	-61
  5958     0174  0623               	xorwf	??_TRAT_INT,w
  5959     0175  009F               	movwf	31	;volatile
  5960                           
  5961                           ;main.c: 537:                 } else if (PIR2bits.EEIF) {
  5962     0176  2A15               	goto	i1l370
  5963     0177                     i1l342:
  5964     0177  1E0D               	btfss	13,4	;volatile
  5965     0178  297A               	goto	u204_21
  5966     0179  297B               	goto	u204_20
  5967     017A                     u204_21:
  5968     017A  2981               	goto	i1l350
  5969     017B                     u204_20:
  5970     017B                     i1l2758:
  5971                           
  5972                           ;main.c: 538:                     PIR2bits.EEIF = 0;
  5973     017B  120D               	bcf	13,4	;volatile
  5974     017C                     i1l2760:
  5975                           
  5976                           ;main.c: 539:                     continuoEscribiendo = 1;
  5977     017C  3001               	movlw	1
  5978     017D  00E0               	movwf	_continuoEscribiendo
  5979     017E  3000               	movlw	0
  5980     017F  00E1               	movwf	_continuoEscribiendo+1
  5981                           
  5982                           ;main.c: 542:                 } else if (PIR1bits.TXIF) {
  5983     0180  2A15               	goto	i1l370
  5984     0181                     i1l350:
  5985     0181  1E0C               	btfss	12,4	;volatile
  5986     0182  2984               	goto	u205_21
  5987     0183  2985               	goto	u205_20
  5988     0184                     u205_21:
  5989     0184  2987               	goto	i1l352
  5990     0185                     u205_20:
  5991     0185                     i1l2762:
  5992                           
  5993                           ;main.c: 543:                     PIR1bits.TXIF = 0;
  5994     0185  120C               	bcf	12,4	;volatile
  5995                           
  5996                           ;main.c: 547:                 } else if (PIR1bits.RCIF) {
  5997     0186  2A15               	goto	i1l370
  5998     0187                     i1l352:
  5999     0187  1E8C               	btfss	12,5	;volatile
  6000     0188  298A               	goto	u206_21
  6001     0189  298B               	goto	u206_20
  6002     018A                     u206_21:
  6003     018A  2A0F               	goto	i1l354
  6004     018B                     u206_20:
  6005     018B                     i1l2764:
  6006                           
  6007                           ;main.c: 548:                     PIR1bits.RCIF = 0;
  6008     018B  128C               	bcf	12,5	;volatile
  6009     018C                     i1l2766:
  6010                           
  6011                           ;main.c: 550:                     if (reciboLED > 0) {
  6012     018C  085F               	movf	_reciboLED+1,w
  6013     018D  3A80               	xorlw	128
  6014     018E  00FF               	movwf	btemp+1
  6015     018F  3080               	movlw	128
  6016     0190  027F               	subwf	btemp+1,w
  6017     0191  1D03               	skipz
  6018     0192  2995               	goto	u207_25
  6019     0193  3001               	movlw	1
  6020     0194  025E               	subwf	_reciboLED,w
  6021     0195                     u207_25:
  6022     0195  1C03               	skipc
  6023     0196  2998               	goto	u207_21
  6024     0197  2999               	goto	u207_20
  6025     0198                     u207_21:
  6026     0198  29BA               	goto	i1l2776
  6027     0199                     u207_20:
  6028     0199                     i1l2768:
  6029                           
  6030                           ;main.c: 551:                         reciboLED--;
  6031     0199  30FF               	movlw	255
  6032     019A  1283               	bcf	3,5	;RP0=0, select bank0
  6033     019B  1303               	bcf	3,6	;RP1=0, select bank0
  6034     019C  07DE               	addwf	_reciboLED,f
  6035     019D  1803               	skipnc
  6036     019E  0ADF               	incf	_reciboLED+1,f
  6037     019F  30FF               	movlw	255
  6038     01A0  07DF               	addwf	_reciboLED+1,f
  6039     01A1                     i1l2770:
  6040                           
  6041                           ;main.c: 552:                         miLED[reciboLED] = RCREG;
  6042     01A1  085E               	movf	_reciboLED,w
  6043     01A2  3E56               	addlw	(low (_miLED| 0))& (0+255)
  6044     01A3  0084               	movwf	4
  6045     01A4  081A               	movf	26,w	;volatile
  6046     01A5  1383               	bcf	3,7	;select IRP bank0
  6047     01A6  0080               	movwf	0
  6048     01A7                     i1l2772:
  6049                           
  6050                           ;main.c: 553:                         if (reciboLED == 0) setLED(miLED[3], miLED[2], miL
      +                          ED[1], miLED[0]);
  6051     01A7  085E               	movf	_reciboLED,w
  6052     01A8  045F               	iorwf	_reciboLED+1,w
  6053     01A9  1D03               	btfss	3,2
  6054     01AA  29AC               	goto	u208_21
  6055     01AB  29AD               	goto	u208_20
  6056     01AC                     u208_21:
  6057     01AC  2A15               	goto	i1l351
  6058     01AD                     u208_20:
  6059     01AD                     i1l2774:
  6060     01AD  0858               	movf	_miLED+2,w
  6061     01AE  00A0               	movwf	i1setLED@green
  6062     01AF  0857               	movf	_miLED+1,w
  6063     01B0  00A1               	movwf	i1setLED@blue
  6064     01B1  0856               	movf	_miLED,w
  6065     01B2  00A2               	movwf	i1setLED@luminosidad
  6066     01B3  0859               	movf	_miLED+3,w
  6067     01B4  120A  158A  2737  120A  118A  	fcall	i1_setLED
  6068     01B9  2A15               	goto	i1l370
  6069     01BA                     i1l2776:
  6070     01BA  1683               	bsf	3,5	;RP0=1, select bank1
  6071     01BB  1303               	bcf	3,6	;RP1=0, select bank1
  6072     01BC  0835               	movf	(_reciboPWM+1)^(0+128),w
  6073     01BD  3A80               	xorlw	128
  6074     01BE  00FF               	movwf	btemp+1
  6075     01BF  3080               	movlw	128
  6076     01C0  027F               	subwf	btemp+1,w
  6077     01C1  1D03               	skipz
  6078     01C2  29C5               	goto	u209_25
  6079     01C3  3001               	movlw	1
  6080     01C4  0234               	subwf	_reciboPWM^(0+128),w
  6081     01C5                     u209_25:
  6082     01C5  1C03               	skipc
  6083     01C6  29C8               	goto	u209_21
  6084     01C7  29C9               	goto	u209_20
  6085     01C8                     u209_21:
  6086     01C8  29F4               	goto	i1l2796
  6087     01C9                     u209_20:
  6088     01C9                     i1l2778:
  6089                           
  6090                           ;main.c: 555:                         reciboPWM = 0;
  6091     01C9  1683               	bsf	3,5	;RP0=1, select bank1
  6092     01CA  1303               	bcf	3,6	;RP1=0, select bank1
  6093     01CB  01B4               	clrf	_reciboPWM^(0+128)
  6094     01CC  01B5               	clrf	(_reciboPWM+1)^(0+128)
  6095     01CD                     i1l2780:
  6096                           
  6097                           ;main.c: 556:                         setPWM(RCREG);
  6098     01CD  1283               	bcf	3,5	;RP0=0, select bank0
  6099     01CE  1303               	bcf	3,6	;RP1=0, select bank0
  6100     01CF  081A               	movf	26,w	;volatile
  6101     01D0  120A  158A  25BA  120A  118A  	fcall	i1_setPWM
  6102                           
  6103                           ;main.c: 557:                     } else {
  6104     01D5  2A15               	goto	i1l370
  6105     01D6                     i1l2782:
  6106                           
  6107                           ;main.c: 560:                                 emitirMisSensores = 1;
  6108     01D6  3001               	movlw	1
  6109     01D7  1683               	bsf	3,5	;RP0=1, select bank1
  6110     01D8  1303               	bcf	3,6	;RP1=0, select bank1
  6111     01D9  00B2               	movwf	_emitirMisSensores^(0+128)
  6112     01DA  3000               	movlw	0
  6113     01DB  00B3               	movwf	(_emitirMisSensores^(0+128)+1)
  6114                           
  6115                           ;main.c: 561:                                 break;
  6116     01DC  2A15               	goto	i1l370
  6117     01DD                     i1l2784:
  6118                           
  6119                           ;main.c: 563:                                 TXREG = 'B';
  6120     01DD  3042               	movlw	66
  6121     01DE  0099               	movwf	25	;volatile
  6122                           
  6123                           ;main.c: 564:                                 break;
  6124     01DF  2A15               	goto	i1l370
  6125     01E0                     i1l2786:
  6126                           
  6127                           ;main.c: 566:                                 reciboPWM = 1;
  6128     01E0  3001               	movlw	1
  6129     01E1  1683               	bsf	3,5	;RP0=1, select bank1
  6130     01E2  1303               	bcf	3,6	;RP1=0, select bank1
  6131     01E3  00B4               	movwf	_reciboPWM^(0+128)
  6132     01E4  3000               	movlw	0
  6133     01E5  00B5               	movwf	(_reciboPWM^(0+128)+1)
  6134                           
  6135                           ;main.c: 567:                                 break;
  6136     01E6  2A15               	goto	i1l370
  6137     01E7                     i1l2788:
  6138                           
  6139                           ;main.c: 570:                                 reciboLED = 4;
  6140     01E7  3004               	movlw	4
  6141     01E8  00DE               	movwf	_reciboLED
  6142     01E9  3000               	movlw	0
  6143     01EA  00DF               	movwf	_reciboLED+1
  6144                           
  6145                           ;main.c: 571:                                 break;
  6146     01EB  2A15               	goto	i1l370
  6147     01EC                     i1l2790:
  6148                           
  6149                           ;main.c: 574:                                 deboContinuar = 0;
  6150     01EC  1683               	bsf	3,5	;RP0=1, select bank1
  6151     01ED  1303               	bcf	3,6	;RP1=0, select bank1
  6152     01EE  01CA               	clrf	_deboContinuar^(0+128)
  6153     01EF  01CB               	clrf	(_deboContinuar+1)^(0+128)
  6154                           
  6155                           ;main.c: 575:                                 break;
  6156     01F0  2A15               	goto	i1l370
  6157     01F1                     i1l2792:
  6158                           
  6159                           ;main.c: 577:                                 TXREG = 'E';
  6160     01F1  3045               	movlw	69
  6161     01F2  0099               	movwf	25	;volatile
  6162                           
  6163                           ;main.c: 578:                                 break;
  6164     01F3  2A15               	goto	i1l370
  6165     01F4                     i1l2796:
  6166     01F4  1283               	bcf	3,5	;RP0=0, select bank0
  6167     01F5  1303               	bcf	3,6	;RP1=0, select bank0
  6168     01F6  081A               	movf	26,w	;volatile
  6169     01F7  00A3               	movwf	??_TRAT_INT
  6170     01F8  01A4               	clrf	??_TRAT_INT+1
  6171                           
  6172                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6173                           ; Switch size 1, requested type "simple"
  6174                           ; Number of cases is 1, Range of values is 0 to 0
  6175                           ; switch strategies available:
  6176                           ; Name         Instructions Cycles
  6177                           ; simple_byte            4     3 (average)
  6178                           ; direct_byte           11     8 (fixed)
  6179                           ; jumptable            260     6 (fixed)
  6180                           ;	Chosen strategy is simple_byte
  6181     01F9  0824               	movf	??_TRAT_INT+1,w
  6182     01FA  3A00               	xorlw	0	; case 0
  6183     01FB  1903               	skipnz
  6184     01FC  29FE               	goto	i1l3126
  6185     01FD  29F1               	goto	i1l2792
  6186     01FE                     i1l3126:
  6187                           
  6188                           ; Switch size 1, requested type "simple"
  6189                           ; Number of cases is 5, Range of values is 97 to 101
  6190                           ; switch strategies available:
  6191                           ; Name         Instructions Cycles
  6192                           ; simple_byte           16     9 (average)
  6193                           ; direct_byte           26    11 (fixed)
  6194                           ; jumptable            263     9 (fixed)
  6195                           ;	Chosen strategy is simple_byte
  6196     01FE  0823               	movf	??_TRAT_INT,w
  6197     01FF  3A61               	xorlw	97	; case 97
  6198     0200  1903               	skipnz
  6199     0201  29D6               	goto	i1l2782
  6200     0202  3A03               	xorlw	3	; case 98
  6201     0203  1903               	skipnz
  6202     0204  29DD               	goto	i1l2784
  6203     0205  3A01               	xorlw	1	; case 99
  6204     0206  1903               	skipnz
  6205     0207  29E0               	goto	i1l2786
  6206     0208  3A07               	xorlw	7	; case 100
  6207     0209  1903               	skipnz
  6208     020A  29E7               	goto	i1l2788
  6209     020B  3A01               	xorlw	1	; case 101
  6210     020C  1903               	skipnz
  6211     020D  29EC               	goto	i1l2790
  6212     020E  29F1               	goto	i1l2792
  6213     020F                     i1l354:
  6214     020F  1D8C               	btfss	12,3	;volatile
  6215     0210  2A12               	goto	u210_21
  6216     0211  2A13               	goto	u210_20
  6217     0212                     u210_21:
  6218     0212  2A15               	goto	i1l351
  6219     0213                     u210_20:
  6220     0213                     i1l2798:
  6221                           
  6222                           ;main.c: 582:                     PIR1bits.SSPIF = 0;
  6223     0213  118C               	bcf	12,3	;volatile
  6224     0214  2A15               	goto	i1l370
  6225     0215                     i1l351:
  6226     0215                     i1l370:
  6227     0215  1283               	bcf	3,5	;RP0=0, select bank0
  6228     0216  1303               	bcf	3,6	;RP1=0, select bank0
  6229     0217  0828               	movf	??_TRAT_INT+5,w
  6230     0218  00FF               	movwf	btemp+1
  6231     0219  0827               	movf	??_TRAT_INT+4,w
  6232     021A  008A               	movwf	10
  6233     021B  0826               	movf	??_TRAT_INT+3,w
  6234     021C  0084               	movwf	4
  6235     021D  0E25               	swapf	??_TRAT_INT+2,w
  6236     021E  0083               	movwf	3
  6237     021F  0EFE               	swapf	btemp,f
  6238     0220  0E7E               	swapf	btemp,w
  6239     0221  0009               	retfie
  6240     0222                     __end_of_TRAT_INT:
  6241                           
  6242                           	psect	intentry
  6243     0004                     __pintentry:	
  6244                           ;incstack = 0
  6245                           ; Regs used in _TRAT_INT: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6246                           
  6247     0004                     interrupt_function:
  6248     007E                     saved_w	set	btemp
  6249     0004  00FE               	movwf	btemp
  6250     0005  0E03               	swapf	3,w
  6251     0006  1283               	bcf	3,5	;RP0=0, select bank0
  6252     0007  1303               	bcf	3,6	;RP1=0, select bank0
  6253     0008  00A5               	movwf	??_TRAT_INT+2
  6254     0009  0804               	movf	4,w
  6255     000A  00A6               	movwf	??_TRAT_INT+3
  6256     000B  080A               	movf	10,w
  6257     000C  00A7               	movwf	??_TRAT_INT+4
  6258     000D  087F               	movf	btemp+1,w
  6259     000E  00A8               	movwf	??_TRAT_INT+5
  6260     000F  120A  118A  284A   	ljmp	_TRAT_INT
  6261                           
  6262                           	psect	text38
  6263     0DBA                     __ptext38:	
  6264 ;; *************** function i1_setPWM *****************
  6265 ;; Defined at:
  6266 ;;		line 351 in file "main.c"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;  porcent         1    wreg     unsigned char 
  6269 ;; Auto vars:     Size  Location     Type
  6270 ;;  porcent         1   11[COMMON] unsigned char 
  6271 ;; Return value:  Size  Location     Type
  6272 ;;                  1    wreg      void 
  6273 ;; Registers used:
  6274 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6275 ;; Tracked objects:
  6276 ;;		On entry : 0/0
  6277 ;;		On exit  : 0/0
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6280 ;;      Params:         0       0       0       0       0
  6281 ;;      Locals:         1       0       0       0       0
  6282 ;;      Temps:          2       0       0       0       0
  6283 ;;      Totals:         3       0       0       0       0
  6284 ;;Total ram usage:        3 bytes
  6285 ;; Hardware stack levels used: 1
  6286 ;; Hardware stack levels required when called: 2
  6287 ;; This function calls:
  6288 ;;		i1___awdiv
  6289 ;;		i1___bmul
  6290 ;;		i1_escribirMemoria
  6291 ;; This function is called by:
  6292 ;;		_TRAT_INT
  6293 ;; This function uses a non-reentrant model
  6294 ;;
  6295                           
  6296     0DBA                     i1_setPWM:	
  6297                           ;psect for function i1_setPWM
  6298                           
  6299                           
  6300                           ;incstack = 0
  6301                           ; Regs used in i1_setPWM: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6302                           ;i1setPWM@porcent stored from wreg
  6303     0DBA  00FB               	movwf	i1setPWM@porcent
  6304     0DBB                     i1l2670:
  6305                           
  6306                           ;main.c: 352:     porcentaje = (char) (porcent / 100);
  6307     0DBB  3064               	movlw	100
  6308     0DBC  00F0               	movwf	i1___awdiv@divisor
  6309     0DBD  3000               	movlw	0
  6310     0DBE  00F1               	movwf	i1___awdiv@divisor+1
  6311     0DBF  087B               	movf	i1setPWM@porcent,w
  6312     0DC0  00F9               	movwf	??i1_setPWM
  6313     0DC1  01FA               	clrf	??i1_setPWM+1
  6314     0DC2  0879               	movf	??i1_setPWM,w
  6315     0DC3  00F2               	movwf	i1___awdiv@dividend
  6316     0DC4  087A               	movf	??i1_setPWM+1,w
  6317     0DC5  00F3               	movwf	i1___awdiv@dividend+1
  6318     0DC6  120A  118A  2592  120A  158A  	fcall	i1___awdiv
  6319     0DCB  0870               	movf	?i1___awdiv,w
  6320     0DCC  1283               	bcf	3,5	;RP0=0, select bank0
  6321     0DCD  1303               	bcf	3,6	;RP1=0, select bank0
  6322     0DCE  00E3               	movwf	_porcentaje
  6323                           
  6324                           ;main.c: 353:     CCPR1L = porcentaje * porcentajeMax;
  6325     0DCF  0852               	movf	_porcentajeMax,w
  6326     0DD0  00F0               	movwf	i1___bmul@multiplicand
  6327     0DD1  0863               	movf	_porcentaje,w
  6328     0DD2  120A  158A  24CE  120A  158A  	fcall	i1___bmul
  6329     0DD7  1283               	bcf	3,5	;RP0=0, select bank0
  6330     0DD8  1303               	bcf	3,6	;RP1=0, select bank0
  6331     0DD9  0095               	movwf	21	;volatile
  6332     0DDA                     i1l2672:
  6333                           
  6334                           ;main.c: 354:     escribirMemoria(direccionPWM, porcent);
  6335     0DDA  087B               	movf	i1setPWM@porcent,w
  6336     0DDB  00F1               	movwf	i1escribirMemoria@dato
  6337     0DDC  0854               	movf	_direccionPWM,w
  6338     0DDD  120A  118A  25F9  120A  158A  	fcall	i1_escribirMemoria
  6339     0DE2                     i1l2674:
  6340                           
  6341                           ;main.c: 355:     pPWM = porcent;
  6342     0DE2  087B               	movf	i1setPWM@porcent,w
  6343     0DE3  1283               	bcf	3,5	;RP0=0, select bank0
  6344     0DE4  1303               	bcf	3,6	;RP1=0, select bank0
  6345     0DE5  00E5               	movwf	_pPWM
  6346     0DE6                     i1l291:
  6347     0DE6  0008               	return
  6348     0DE7                     __end_ofi1_setPWM:
  6349                           
  6350                           	psect	text39
  6351     0CCE                     __ptext39:	
  6352 ;; *************** function i1___bmul *****************
  6353 ;; Defined at:
  6354 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;  multiplier      1    wreg     unsigned char 
  6357 ;;  multiplicand    1    0[COMMON] unsigned char 
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;  multiplier      1    3[COMMON] unsigned char 
  6360 ;;  product         1    2[COMMON] unsigned char 
  6361 ;; Return value:  Size  Location     Type
  6362 ;;                  1    wreg      unsigned char 
  6363 ;; Registers used:
  6364 ;;		wreg, status,2, status,0
  6365 ;; Tracked objects:
  6366 ;;		On entry : 0/0
  6367 ;;		On exit  : 0/0
  6368 ;;		Unchanged: 0/0
  6369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6370 ;;      Params:         1       0       0       0       0
  6371 ;;      Locals:         2       0       0       0       0
  6372 ;;      Temps:          1       0       0       0       0
  6373 ;;      Totals:         4       0       0       0       0
  6374 ;;Total ram usage:        4 bytes
  6375 ;; Hardware stack levels used: 1
  6376 ;; This function calls:
  6377 ;;		Nothing
  6378 ;; This function is called by:
  6379 ;;		i1_setPWM
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           
  6383     0CCE                     i1___bmul:	
  6384                           ;psect for function i1___bmul
  6385                           
  6386                           
  6387                           ;incstack = 0
  6388                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  6389                           ;i1___bmul@multiplier stored from wreg
  6390     0CCE  00F3               	movwf	i1___bmul@multiplier
  6391     0CCF                     i1l2482:
  6392     0CCF  01F2               	clrf	i1___bmul@product
  6393     0CD0                     i1l2484:
  6394     0CD0  1C73               	btfss	i1___bmul@multiplier,0
  6395     0CD1  2CD3               	goto	u166_21
  6396     0CD2  2CD4               	goto	u166_20
  6397     0CD3                     u166_21:
  6398     0CD3  2CD8               	goto	i1l2488
  6399     0CD4                     u166_20:
  6400     0CD4                     i1l2486:
  6401     0CD4  0870               	movf	i1___bmul@multiplicand,w
  6402     0CD5  00F1               	movwf	??i1___bmul
  6403     0CD6  0871               	movf	??i1___bmul,w
  6404     0CD7  07F2               	addwf	i1___bmul@product,f
  6405     0CD8                     i1l2488:
  6406     0CD8  1003               	clrc
  6407     0CD9  0DF0               	rlf	i1___bmul@multiplicand,f
  6408     0CDA                     i1l2490:
  6409     0CDA  1003               	clrc
  6410     0CDB  0CF3               	rrf	i1___bmul@multiplier,f
  6411     0CDC  0873               	movf	i1___bmul@multiplier,w
  6412     0CDD  1D03               	btfss	3,2
  6413     0CDE  2CE0               	goto	u167_21
  6414     0CDF  2CE1               	goto	u167_20
  6415     0CE0                     u167_21:
  6416     0CE0  2CD0               	goto	i1l2484
  6417     0CE1                     u167_20:
  6418     0CE1                     i1l2492:
  6419     0CE1  0872               	movf	i1___bmul@product,w
  6420     0CE2                     i1l528:
  6421     0CE2  0008               	return
  6422     0CE3                     __end_ofi1___bmul:
  6423                           
  6424                           	psect	text40
  6425     0592                     __ptext40:	
  6426 ;; *************** function i1___awdiv *****************
  6427 ;; Defined at:
  6428 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  6429 ;; Parameters:    Size  Location     Type
  6430 ;;  divisor         2    0[COMMON] int 
  6431 ;;  dividend        2    2[COMMON] int 
  6432 ;; Auto vars:     Size  Location     Type
  6433 ;;  quotient        2    7[COMMON] int 
  6434 ;;  sign            1    6[COMMON] unsigned char 
  6435 ;;  counter         1    5[COMMON] unsigned char 
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  2    0[COMMON] int 
  6438 ;; Registers used:
  6439 ;;		wreg, status,2, status,0
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6445 ;;      Params:         4       0       0       0       0
  6446 ;;      Locals:         4       0       0       0       0
  6447 ;;      Temps:          1       0       0       0       0
  6448 ;;      Totals:         9       0       0       0       0
  6449 ;;Total ram usage:        9 bytes
  6450 ;; Hardware stack levels used: 1
  6451 ;; This function calls:
  6452 ;;		Nothing
  6453 ;; This function is called by:
  6454 ;;		i1_setPWM
  6455 ;; This function uses a non-reentrant model
  6456 ;;
  6457                           
  6458     0592                     i1___awdiv:	
  6459                           ;psect for function i1___awdiv
  6460                           
  6461     0592                     i1l2496:	
  6462                           ;incstack = 0
  6463                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  6464                           
  6465     0592  01F6               	clrf	i1___awdiv@sign
  6466     0593                     i1l2498:
  6467     0593  1FF1               	btfss	i1___awdiv@divisor+1,7
  6468     0594  2D96               	goto	u168_21
  6469     0595  2D97               	goto	u168_20
  6470     0596                     u168_21:
  6471     0596  2D9E               	goto	i1l2504
  6472     0597                     u168_20:
  6473     0597                     i1l2500:
  6474     0597  09F0               	comf	i1___awdiv@divisor,f
  6475     0598  09F1               	comf	i1___awdiv@divisor+1,f
  6476     0599  0AF0               	incf	i1___awdiv@divisor,f
  6477     059A  1903               	skipnz
  6478     059B  0AF1               	incf	i1___awdiv@divisor+1,f
  6479     059C                     i1l2502:
  6480     059C  01F6               	clrf	i1___awdiv@sign
  6481     059D  0AF6               	incf	i1___awdiv@sign,f
  6482     059E                     i1l2504:
  6483     059E  1FF3               	btfss	i1___awdiv@dividend+1,7
  6484     059F  2DA1               	goto	u169_21
  6485     05A0  2DA2               	goto	u169_20
  6486     05A1                     u169_21:
  6487     05A1  2DAB               	goto	i1l2510
  6488     05A2                     u169_20:
  6489     05A2                     i1l2506:
  6490     05A2  09F2               	comf	i1___awdiv@dividend,f
  6491     05A3  09F3               	comf	i1___awdiv@dividend+1,f
  6492     05A4  0AF2               	incf	i1___awdiv@dividend,f
  6493     05A5  1903               	skipnz
  6494     05A6  0AF3               	incf	i1___awdiv@dividend+1,f
  6495     05A7                     i1l2508:
  6496     05A7  3001               	movlw	1
  6497     05A8  00F4               	movwf	??i1___awdiv
  6498     05A9  0874               	movf	??i1___awdiv,w
  6499     05AA  06F6               	xorwf	i1___awdiv@sign,f
  6500     05AB                     i1l2510:
  6501     05AB  01F7               	clrf	i1___awdiv@quotient
  6502     05AC  01F8               	clrf	i1___awdiv@quotient+1
  6503     05AD                     i1l2512:
  6504     05AD  0870               	movf	i1___awdiv@divisor,w
  6505     05AE  0471               	iorwf	i1___awdiv@divisor+1,w
  6506     05AF  1903               	btfsc	3,2
  6507     05B0  2DB2               	goto	u170_21
  6508     05B1  2DB3               	goto	u170_20
  6509     05B2                     u170_21:
  6510     05B2  2DEA               	goto	i1l2532
  6511     05B3                     u170_20:
  6512     05B3                     i1l2514:
  6513     05B3  01F5               	clrf	i1___awdiv@counter
  6514     05B4  0AF5               	incf	i1___awdiv@counter,f
  6515     05B5  2DC1               	goto	i1l2520
  6516     05B6                     i1l2516:
  6517     05B6  3001               	movlw	1
  6518     05B7                     u171_25:
  6519     05B7  1003               	clrc
  6520     05B8  0DF0               	rlf	i1___awdiv@divisor,f
  6521     05B9  0DF1               	rlf	i1___awdiv@divisor+1,f
  6522     05BA  3EFF               	addlw	-1
  6523     05BB  1D03               	skipz
  6524     05BC  2DB7               	goto	u171_25
  6525     05BD                     i1l2518:
  6526     05BD  3001               	movlw	1
  6527     05BE  00F4               	movwf	??i1___awdiv
  6528     05BF  0874               	movf	??i1___awdiv,w
  6529     05C0  07F5               	addwf	i1___awdiv@counter,f
  6530     05C1                     i1l2520:
  6531     05C1  1FF1               	btfss	i1___awdiv@divisor+1,7
  6532     05C2  2DC4               	goto	u172_21
  6533     05C3  2DC5               	goto	u172_20
  6534     05C4                     u172_21:
  6535     05C4  2DB6               	goto	i1l2516
  6536     05C5                     u172_20:
  6537     05C5                     i1l2522:
  6538     05C5  3001               	movlw	1
  6539     05C6                     u173_25:
  6540     05C6  1003               	clrc
  6541     05C7  0DF7               	rlf	i1___awdiv@quotient,f
  6542     05C8  0DF8               	rlf	i1___awdiv@quotient+1,f
  6543     05C9  3EFF               	addlw	-1
  6544     05CA  1D03               	skipz
  6545     05CB  2DC6               	goto	u173_25
  6546     05CC  0871               	movf	i1___awdiv@divisor+1,w
  6547     05CD  0273               	subwf	i1___awdiv@dividend+1,w
  6548     05CE  1D03               	skipz
  6549     05CF  2DD2               	goto	u174_25
  6550     05D0  0870               	movf	i1___awdiv@divisor,w
  6551     05D1  0272               	subwf	i1___awdiv@dividend,w
  6552     05D2                     u174_25:
  6553     05D2  1C03               	skipc
  6554     05D3  2DD5               	goto	u174_21
  6555     05D4  2DD6               	goto	u174_20
  6556     05D5                     u174_21:
  6557     05D5  2DDD               	goto	i1l2528
  6558     05D6                     u174_20:
  6559     05D6                     i1l2524:
  6560     05D6  0870               	movf	i1___awdiv@divisor,w
  6561     05D7  02F2               	subwf	i1___awdiv@dividend,f
  6562     05D8  0871               	movf	i1___awdiv@divisor+1,w
  6563     05D9  1C03               	skipc
  6564     05DA  03F3               	decf	i1___awdiv@dividend+1,f
  6565     05DB  02F3               	subwf	i1___awdiv@dividend+1,f
  6566     05DC                     i1l2526:
  6567     05DC  1477               	bsf	i1___awdiv@quotient,0
  6568     05DD                     i1l2528:
  6569     05DD  3001               	movlw	1
  6570     05DE                     u175_25:
  6571     05DE  1003               	clrc
  6572     05DF  0CF1               	rrf	i1___awdiv@divisor+1,f
  6573     05E0  0CF0               	rrf	i1___awdiv@divisor,f
  6574     05E1  3EFF               	addlw	-1
  6575     05E2  1D03               	skipz
  6576     05E3  2DDE               	goto	u175_25
  6577     05E4                     i1l2530:
  6578     05E4  3001               	movlw	1
  6579     05E5  02F5               	subwf	i1___awdiv@counter,f
  6580     05E6  1D03               	btfss	3,2
  6581     05E7  2DE9               	goto	u176_21
  6582     05E8  2DEA               	goto	u176_20
  6583     05E9                     u176_21:
  6584     05E9  2DC5               	goto	i1l2522
  6585     05EA                     u176_20:
  6586     05EA                     i1l2532:
  6587     05EA  0876               	movf	i1___awdiv@sign,w
  6588     05EB  1903               	btfsc	3,2
  6589     05EC  2DEE               	goto	u177_21
  6590     05ED  2DEF               	goto	u177_20
  6591     05EE                     u177_21:
  6592     05EE  2DF4               	goto	i1l2536
  6593     05EF                     u177_20:
  6594     05EF                     i1l2534:
  6595     05EF  09F7               	comf	i1___awdiv@quotient,f
  6596     05F0  09F8               	comf	i1___awdiv@quotient+1,f
  6597     05F1  0AF7               	incf	i1___awdiv@quotient,f
  6598     05F2  1903               	skipnz
  6599     05F3  0AF8               	incf	i1___awdiv@quotient+1,f
  6600     05F4                     i1l2536:
  6601     05F4  0878               	movf	i1___awdiv@quotient+1,w
  6602     05F5  00F1               	movwf	?i1___awdiv+1
  6603     05F6  0877               	movf	i1___awdiv@quotient,w
  6604     05F7  00F0               	movwf	?i1___awdiv
  6605     05F8                     i1l655:
  6606     05F8  0008               	return
  6607     05F9                     __end_ofi1___awdiv:
  6608                           
  6609                           	psect	text41
  6610     0F37                     __ptext41:	
  6611 ;; *************** function i1_setLED *****************
  6612 ;; Defined at:
  6613 ;;		line 384 in file "main.c"
  6614 ;; Parameters:    Size  Location     Type
  6615 ;;  red             1    wreg     unsigned char 
  6616 ;;  green           1    0[BANK0 ] unsigned char 
  6617 ;;  blue            1    1[BANK0 ] unsigned char 
  6618 ;;  luminosidad     1    2[BANK0 ] unsigned char 
  6619 ;; Auto vars:     Size  Location     Type
  6620 ;;  red             1   12[COMMON] unsigned char 
  6621 ;; Return value:  Size  Location     Type
  6622 ;;                  1    wreg      void 
  6623 ;; Registers used:
  6624 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6625 ;; Tracked objects:
  6626 ;;		On entry : 0/0
  6627 ;;		On exit  : 0/0
  6628 ;;		Unchanged: 0/0
  6629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6630 ;;      Params:         0       3       0       0       0
  6631 ;;      Locals:         1       0       0       0       0
  6632 ;;      Temps:          0       0       0       0       0
  6633 ;;      Totals:         1       3       0       0       0
  6634 ;;Total ram usage:        4 bytes
  6635 ;; Hardware stack levels used: 1
  6636 ;; Hardware stack levels required when called: 2
  6637 ;; This function calls:
  6638 ;;		i1_cosasSPI
  6639 ;;		i1_escribirMemoria
  6640 ;; This function is called by:
  6641 ;;		_TRAT_INT
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645     0F37                     i1_setLED:	
  6646                           ;psect for function i1_setLED
  6647                           
  6648                           
  6649                           ;incstack = 0
  6650                           ; Regs used in i1_setLED: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6651                           ;i1setLED@red stored from wreg
  6652     0F37  00FC               	movwf	i1setLED@red
  6653     0F38                     i1l2676:
  6654                           
  6655                           ;main.c: 386:     cosasSPI(red, green, blue, luminosidad);
  6656     0F38  1283               	bcf	3,5	;RP0=0, select bank0
  6657     0F39  1303               	bcf	3,6	;RP1=0, select bank0
  6658     0F3A  0820               	movf	i1setLED@green,w
  6659     0F3B  00F5               	movwf	i1cosasSPI@verd
  6660     0F3C  0821               	movf	i1setLED@blue,w
  6661     0F3D  00F6               	movwf	i1cosasSPI@azu
  6662     0F3E  0822               	movf	i1setLED@luminosidad,w
  6663     0F3F  00F7               	movwf	i1cosasSPI@lumi
  6664     0F40  087C               	movf	i1setLED@red,w
  6665     0F41  120A  118A  265E  120A  158A  	fcall	i1_cosasSPI
  6666     0F46                     i1l2678:
  6667                           
  6668                           ;main.c: 388:     miLED[0] = red;
  6669     0F46  087C               	movf	i1setLED@red,w
  6670     0F47  1283               	bcf	3,5	;RP0=0, select bank0
  6671     0F48  1303               	bcf	3,6	;RP1=0, select bank0
  6672     0F49  00D6               	movwf	_miLED
  6673     0F4A                     i1l2680:
  6674                           
  6675                           ;main.c: 389:     miLED[1] = green;
  6676     0F4A  0820               	movf	i1setLED@green,w
  6677     0F4B  00D7               	movwf	_miLED+1
  6678     0F4C                     i1l2682:
  6679                           
  6680                           ;main.c: 390:     miLED[2] = blue;
  6681     0F4C  0821               	movf	i1setLED@blue,w
  6682     0F4D  00D8               	movwf	_miLED+2
  6683     0F4E                     i1l2684:
  6684                           
  6685                           ;main.c: 391:     miLED[3] = luminosidad;
  6686     0F4E  0822               	movf	i1setLED@luminosidad,w
  6687     0F4F  00D9               	movwf	_miLED+3
  6688     0F50                     i1l2686:
  6689                           
  6690                           ;main.c: 393:     escribirMemoria(direccionLED, miLED[0]);
  6691     0F50  0856               	movf	_miLED,w
  6692     0F51  00F1               	movwf	i1escribirMemoria@dato
  6693     0F52  0853               	movf	_direccionLED,w
  6694     0F53  120A  118A  25F9  120A  158A  	fcall	i1_escribirMemoria
  6695     0F58                     i1l2688:
  6696                           
  6697                           ;main.c: 394:     escribirMemoria(direccionLED + 1 * sizeof (char), miLED[1]);
  6698     0F58  1283               	bcf	3,5	;RP0=0, select bank0
  6699     0F59  1303               	bcf	3,6	;RP1=0, select bank0
  6700     0F5A  0857               	movf	_miLED+1,w
  6701     0F5B  00F1               	movwf	i1escribirMemoria@dato
  6702     0F5C  0853               	movf	_direccionLED,w
  6703     0F5D  3E01               	addlw	1
  6704     0F5E  120A  118A  25F9  120A  158A  	fcall	i1_escribirMemoria
  6705     0F63                     i1l2690:
  6706                           
  6707                           ;main.c: 395:     escribirMemoria(direccionLED + 2 * sizeof (char), miLED[2]);
  6708     0F63  1283               	bcf	3,5	;RP0=0, select bank0
  6709     0F64  1303               	bcf	3,6	;RP1=0, select bank0
  6710     0F65  0858               	movf	_miLED+2,w
  6711     0F66  00F1               	movwf	i1escribirMemoria@dato
  6712     0F67  0853               	movf	_direccionLED,w
  6713     0F68  3E02               	addlw	2
  6714     0F69  120A  118A  25F9  120A  158A  	fcall	i1_escribirMemoria
  6715     0F6E                     i1l2692:
  6716                           
  6717                           ;main.c: 396:     escribirMemoria(direccionLED + 3 * sizeof (char), miLED[3]);
  6718     0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  6719     0F6F  1303               	bcf	3,6	;RP1=0, select bank0
  6720     0F70  0859               	movf	_miLED+3,w
  6721     0F71  00F1               	movwf	i1escribirMemoria@dato
  6722     0F72  0853               	movf	_direccionLED,w
  6723     0F73  3E03               	addlw	3
  6724     0F74  120A  118A  25F9  120A  158A  	fcall	i1_escribirMemoria
  6725     0F79                     i1l302:
  6726     0F79  0008               	return
  6727     0F7A                     __end_ofi1_setLED:
  6728                           
  6729                           	psect	text42
  6730     05F9                     __ptext42:	
  6731 ;; *************** function i1_escribirMemoria *****************
  6732 ;; Defined at:
  6733 ;;		line 288 in file "main.c"
  6734 ;; Parameters:    Size  Location     Type
  6735 ;;  direccion       1    wreg     unsigned char 
  6736 ;;  dato            1    1[COMMON] unsigned char 
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;  direccion       1    4[COMMON] unsigned char 
  6739 ;;  contador        2    5[COMMON] int 
  6740 ;;  confirmado      2    2[COMMON] int 
  6741 ;;  valorSal        2    0        int 
  6742 ;; Return value:  Size  Location     Type
  6743 ;;                  2    1[COMMON] int 
  6744 ;; Registers used:
  6745 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6746 ;; Tracked objects:
  6747 ;;		On entry : 0/0
  6748 ;;		On exit  : 0/0
  6749 ;;		Unchanged: 0/0
  6750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6751 ;;      Params:         1       0       0       0       0
  6752 ;;      Locals:         5       0       0       0       0
  6753 ;;      Temps:          0       0       0       0       0
  6754 ;;      Totals:         6       0       0       0       0
  6755 ;;Total ram usage:        6 bytes
  6756 ;; Hardware stack levels used: 1
  6757 ;; Hardware stack levels required when called: 1
  6758 ;; This function calls:
  6759 ;;		i1_leerMemoria
  6760 ;; This function is called by:
  6761 ;;		i1_setPWM
  6762 ;;		i1_setLED
  6763 ;; This function uses a non-reentrant model
  6764 ;;
  6765                           
  6766     05F9                     i1_escribirMemoria:	
  6767                           ;psect for function i1_escribirMemoria
  6768                           
  6769                           
  6770                           ;incstack = 0
  6771                           ; Regs used in i1_escribirMemoria: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6772                           ;i1escribirMemoria@direccion stored from wreg
  6773     05F9  00F4               	movwf	i1escribirMemoria@direccion
  6774     05FA                     i1l2418:
  6775                           
  6776                           ;main.c: 289:     int valorSal;;main.c: 290:     EECON1bits.EEPGD = 0;
  6777     05FA  1683               	bsf	3,5	;RP0=1, select bank3
  6778     05FB  1703               	bsf	3,6	;RP1=1, select bank3
  6779     05FC  138C               	bcf	12,7	;volsfr
  6780                           
  6781                           ;main.c: 292:     EECON1bits.WREN = 1;
  6782     05FD  150C               	bsf	12,2	;volsfr
  6783     05FE                     i1l2420:
  6784                           
  6785                           ;main.c: 293:     EEADRH = 0;
  6786     05FE  1283               	bcf	3,5	;RP0=0, select bank2
  6787     05FF  1703               	bsf	3,6	;RP1=1, select bank2
  6788     0600  018F               	clrf	15	;volatile
  6789     0601                     i1l2422:
  6790                           
  6791                           ;main.c: 294:     EEADR = direccion;
  6792     0601  0874               	movf	i1escribirMemoria@direccion,w
  6793     0602  008D               	movwf	13	;volatile
  6794     0603                     i1l2424:
  6795                           
  6796                           ;main.c: 295:     if (EECON1bits.RD == 0) {
  6797     0603  1683               	bsf	3,5	;RP0=1, select bank3
  6798     0604  1703               	bsf	3,6	;RP1=1, select bank3
  6799     0605  180C               	btfsc	12,0	;volsfr
  6800     0606  2E08               	goto	u159_21
  6801     0607  2E09               	goto	u159_20
  6802     0608                     u159_21:
  6803     0608  2E5D               	goto	i1l2454
  6804     0609                     u159_20:
  6805     0609                     i1l2426:
  6806                           
  6807                           ;main.c: 296:         int contador = 0;
  6808     0609  01F5               	clrf	i1escribirMemoria@contador
  6809     060A  01F6               	clrf	i1escribirMemoria@contador+1
  6810                           
  6811                           ;main.c: 297:         int confirmado = 0;
  6812     060B  01F2               	clrf	i1escribirMemoria@confirmado
  6813     060C  01F3               	clrf	i1escribirMemoria@confirmado+1
  6814                           
  6815                           ;main.c: 298:         while (contador < 10 && confirmado == 0) {
  6816     060D  2E3B               	goto	i1l2444
  6817     060E                     i1l266:
  6818                           
  6819                           ;main.c: 299:             INTCONbits.GIE = 0;
  6820     060E  138B               	bcf	11,7	;volatile
  6821     060F                     i1l2428:
  6822                           
  6823                           ;main.c: 300:             EEDAT = dato;
  6824     060F  0871               	movf	i1escribirMemoria@dato,w
  6825     0610  1283               	bcf	3,5	;RP0=0, select bank2
  6826     0611  1703               	bsf	3,6	;RP1=1, select bank2
  6827     0612  008C               	movwf	12	;volatile
  6828                           
  6829                           ;main.c: 301:             EECON2 = 0x55;
  6830     0613  3055               	movlw	85
  6831     0614  1683               	bsf	3,5	;RP0=1, select bank3
  6832     0615  1703               	bsf	3,6	;RP1=1, select bank3
  6833     0616  008D               	movwf	13	;volsfr
  6834                           
  6835                           ;main.c: 302:             EECON2 = 0xAA;
  6836     0617  30AA               	movlw	170
  6837     0618  008D               	movwf	13	;volsfr
  6838     0619                     i1l2430:
  6839                           
  6840                           ;main.c: 303:             EECON1bits.WR = 1;
  6841     0619  148C               	bsf	12,1	;volsfr
  6842     061A                     i1l2432:
  6843                           
  6844                           ;main.c: 304:             INTCONbits.GIE = 1;
  6845     061A  178B               	bsf	11,7	;volatile
  6846     061B                     i1l2434:	
  6847                           ;main.c: 305:             while (!continuoEscribiendo);
  6848                           
  6849     061B  1283               	bcf	3,5	;RP0=0, select bank0
  6850     061C  1303               	bcf	3,6	;RP1=0, select bank0
  6851     061D  0860               	movf	_continuoEscribiendo,w
  6852     061E  0461               	iorwf	_continuoEscribiendo+1,w
  6853     061F  1903               	btfsc	3,2
  6854     0620  2E22               	goto	u160_21
  6855     0621  2E23               	goto	u160_20
  6856     0622                     u160_21:
  6857     0622  2E1B               	goto	i1l2434
  6858     0623                     u160_20:
  6859     0623                     i1l2436:
  6860                           
  6861                           ;main.c: 306:             continuoEscribiendo = 0;
  6862     0623  01E0               	clrf	_continuoEscribiendo
  6863     0624  01E1               	clrf	_continuoEscribiendo+1
  6864     0625                     i1l2438:
  6865                           
  6866                           ;main.c: 307:             if (leerMemoria(direccion) == dato)
  6867     0625  0874               	movf	i1escribirMemoria@direccion,w
  6868     0626  120A  158A  24E3  120A  118A  	fcall	i1_leerMemoria
  6869     062B  0671               	xorwf	i1escribirMemoria@dato,w
  6870     062C  1D03               	skipz
  6871     062D  2E2F               	goto	u161_21
  6872     062E  2E30               	goto	u161_20
  6873     062F                     u161_21:
  6874     062F  2E35               	goto	i1l2442
  6875     0630                     u161_20:
  6876     0630                     i1l2440:
  6877                           
  6878                           ;main.c: 308:                 confirmado = 1;
  6879     0630  3001               	movlw	1
  6880     0631  00F2               	movwf	i1escribirMemoria@confirmado
  6881     0632  3000               	movlw	0
  6882     0633  00F3               	movwf	i1escribirMemoria@confirmado+1
  6883     0634  2E3B               	goto	i1l2444
  6884     0635                     i1l2442:
  6885                           
  6886                           ;main.c: 310:                 contador++;
  6887     0635  3001               	movlw	1
  6888     0636  07F5               	addwf	i1escribirMemoria@contador,f
  6889     0637  1803               	skipnc
  6890     0638  0AF6               	incf	i1escribirMemoria@contador+1,f
  6891     0639  3000               	movlw	0
  6892     063A  07F6               	addwf	i1escribirMemoria@contador+1,f
  6893     063B                     i1l2444:
  6894                           
  6895                           ;main.c: 298:         while (contador < 10 && confirmado == 0) {
  6896     063B  0876               	movf	i1escribirMemoria@contador+1,w
  6897     063C  3A80               	xorlw	128
  6898     063D  00FF               	movwf	btemp+1
  6899     063E  3080               	movlw	128
  6900     063F  027F               	subwf	btemp+1,w
  6901     0640  1D03               	skipz
  6902     0641  2E44               	goto	u162_25
  6903     0642  300A               	movlw	10
  6904     0643  0275               	subwf	i1escribirMemoria@contador,w
  6905     0644                     u162_25:
  6906     0644  1803               	skipnc
  6907     0645  2E47               	goto	u162_21
  6908     0646  2E48               	goto	u162_20
  6909     0647                     u162_21:
  6910     0647  2E4E               	goto	i1l2448
  6911     0648                     u162_20:
  6912     0648                     i1l2446:
  6913     0648  0872               	movf	i1escribirMemoria@confirmado,w
  6914     0649  0473               	iorwf	i1escribirMemoria@confirmado+1,w
  6915     064A  1903               	btfsc	3,2
  6916     064B  2E4D               	goto	u163_21
  6917     064C  2E4E               	goto	u163_20
  6918     064D                     u163_21:
  6919     064D  2E0E               	goto	i1l266
  6920     064E                     u163_20:
  6921     064E                     i1l2448:
  6922                           
  6923                           ;main.c: 312:         if (contador >= 10) valorSal = 1;
  6924     064E  0876               	movf	i1escribirMemoria@contador+1,w
  6925     064F  3A80               	xorlw	128
  6926     0650  00FF               	movwf	btemp+1
  6927     0651  3080               	movlw	128
  6928     0652  027F               	subwf	btemp+1,w
  6929     0653  1D03               	skipz
  6930     0654  2E57               	goto	u164_25
  6931     0655  300A               	movlw	10
  6932     0656  0275               	subwf	i1escribirMemoria@contador,w
  6933     0657                     u164_25:
  6934     0657  1C03               	skipc
  6935     0658  2E5A               	goto	u164_21
  6936     0659  2E5B               	goto	u164_20
  6937     065A                     u164_21:
  6938     065A  2E5C               	goto	i1l2452
  6939     065B                     u164_20:
  6940     065B                     i1l2450:
  6941     065B  2E5D               	goto	i1l278
  6942     065C                     i1l2452:
  6943     065C  2E5D               	goto	i1l278
  6944     065D                     i1l2454:
  6945     065D                     i1l278:
  6946     065D  0008               	return
  6947     065E                     __end_ofi1_escribirMemoria:
  6948                           
  6949                           	psect	text43
  6950     0CE3                     __ptext43:	
  6951 ;; *************** function i1_leerMemoria *****************
  6952 ;; Defined at:
  6953 ;;		line 275 in file "main.c"
  6954 ;; Parameters:    Size  Location     Type
  6955 ;;  direccion       1    wreg     unsigned char 
  6956 ;; Auto vars:     Size  Location     Type
  6957 ;;  direccion       1    0[COMMON] unsigned char 
  6958 ;; Return value:  Size  Location     Type
  6959 ;;                  1    wreg      unsigned char 
  6960 ;; Registers used:
  6961 ;;		wreg, status,2
  6962 ;; Tracked objects:
  6963 ;;		On entry : 0/0
  6964 ;;		On exit  : 0/0
  6965 ;;		Unchanged: 0/0
  6966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6967 ;;      Params:         0       0       0       0       0
  6968 ;;      Locals:         1       0       0       0       0
  6969 ;;      Temps:          0       0       0       0       0
  6970 ;;      Totals:         1       0       0       0       0
  6971 ;;Total ram usage:        1 bytes
  6972 ;; Hardware stack levels used: 1
  6973 ;; This function calls:
  6974 ;;		Nothing
  6975 ;; This function is called by:
  6976 ;;		i1_escribirMemoria
  6977 ;; This function uses a non-reentrant model
  6978 ;;
  6979                           
  6980     0CE3                     i1_leerMemoria:	
  6981                           ;psect for function i1_leerMemoria
  6982                           
  6983                           
  6984                           ;incstack = 0
  6985                           ; Regs used in i1_leerMemoria: [wreg+status,2]
  6986                           ;i1leerMemoria@direccion stored from wreg
  6987     0CE3  00F0               	movwf	i1leerMemoria@direccion
  6988     0CE4                     i1l2164:
  6989                           
  6990                           ;main.c: 276:     EECON1bits.EEPGD = 0;
  6991     0CE4  1683               	bsf	3,5	;RP0=1, select bank3
  6992     0CE5  1703               	bsf	3,6	;RP1=1, select bank3
  6993     0CE6  138C               	bcf	12,7	;volsfr
  6994                           
  6995                           ;main.c: 278:     EECON1bits.WREN = 0;
  6996     0CE7  110C               	bcf	12,2	;volsfr
  6997     0CE8                     i1l2166:
  6998                           
  6999                           ;main.c: 279:     EEDATH = 0;
  7000     0CE8  1283               	bcf	3,5	;RP0=0, select bank2
  7001     0CE9  1703               	bsf	3,6	;RP1=1, select bank2
  7002     0CEA  018E               	clrf	14	;volatile
  7003                           
  7004                           ;main.c: 280:     EEADRH = 0;
  7005     0CEB  018F               	clrf	15	;volatile
  7006     0CEC                     i1l2168:
  7007                           
  7008                           ;main.c: 281:     EEADR = direccion;
  7009     0CEC  0870               	movf	i1leerMemoria@direccion,w
  7010     0CED  008D               	movwf	13	;volatile
  7011     0CEE                     i1l2170:
  7012                           
  7013                           ;main.c: 282:     if (EECON1bits.WR == 0)
  7014     0CEE  1683               	bsf	3,5	;RP0=1, select bank3
  7015     0CEF  1703               	bsf	3,6	;RP1=1, select bank3
  7016     0CF0  188C               	btfsc	12,1	;volsfr
  7017     0CF1  2CF3               	goto	u139_21
  7018     0CF2  2CF4               	goto	u139_20
  7019     0CF3                     u139_21:
  7020     0CF3  2CF5               	goto	i1l2174
  7021     0CF4                     u139_20:
  7022     0CF4                     i1l2172:
  7023                           
  7024                           ;main.c: 283:         EECON1bits.RD = 1;
  7025     0CF4  140C               	bsf	12,0	;volsfr
  7026     0CF5                     i1l2174:
  7027                           
  7028                           ;main.c: 285:     return EEDAT;
  7029     0CF5  1283               	bcf	3,5	;RP0=0, select bank2
  7030     0CF6  1703               	bsf	3,6	;RP1=1, select bank2
  7031     0CF7  080C               	movf	12,w	;volatile
  7032     0CF8                     i1l261:
  7033     0CF8  0008               	return
  7034     0CF9                     __end_ofi1_leerMemoria:
  7035                           
  7036                           	psect	text44
  7037     065E                     __ptext44:	
  7038 ;; *************** function i1_cosasSPI *****************
  7039 ;; Defined at:
  7040 ;;		line 364 in file "main.c"
  7041 ;; Parameters:    Size  Location     Type
  7042 ;;  roj             1    wreg     unsigned char 
  7043 ;;  verd            1    5[COMMON] unsigned char 
  7044 ;;  azu             1    6[COMMON] unsigned char 
  7045 ;;  lumi            1    7[COMMON] unsigned char 
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;  roj             1    8[COMMON] unsigned char 
  7048 ;;  i               2   10[COMMON] int 
  7049 ;;  lumo            1    9[COMMON] unsigned char 
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  1    wreg      void 
  7052 ;; Registers used:
  7053 ;;		wreg, status,2, status,0, pclath, cstack
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7059 ;;      Params:         3       0       0       0       0
  7060 ;;      Locals:         4       0       0       0       0
  7061 ;;      Temps:          0       0       0       0       0
  7062 ;;      Totals:         7       0       0       0       0
  7063 ;;Total ram usage:        7 bytes
  7064 ;; Hardware stack levels used: 1
  7065 ;; Hardware stack levels required when called: 1
  7066 ;; This function calls:
  7067 ;;		i1_spi_write_read
  7068 ;; This function is called by:
  7069 ;;		i1_setLED
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073     065E                     i1_cosasSPI:	
  7074                           ;psect for function i1_cosasSPI
  7075                           
  7076                           
  7077                           ;incstack = 0
  7078                           ; Regs used in i1_cosasSPI: [wreg+status,2+status,0+pclath+cstack]
  7079                           ;i1cosasSPI@roj stored from wreg
  7080     065E  00F8               	movwf	i1cosasSPI@roj
  7081     065F                     i1l2458:
  7082                           
  7083                           ;main.c: 365:     int i;;main.c: 366:     char lumo = 0b11100000 + (lumi % 32);
  7084     065F  0877               	movf	i1cosasSPI@lumi,w
  7085     0660  391F               	andlw	31
  7086     0661  3EE0               	addlw	224
  7087     0662  00F9               	movwf	i1cosasSPI@lumo
  7088     0663                     i1l2460:
  7089                           
  7090                           ;main.c: 367:     spi_write_read(0x00);
  7091     0663  3000               	movlw	0
  7092     0664  120A  158A  2616  120A  118A  	fcall	i1_spi_write_read
  7093     0669                     i1l2462:
  7094                           
  7095                           ;main.c: 368:     spi_write_read(0x00);
  7096     0669  3000               	movlw	0
  7097     066A  120A  158A  2616  120A  118A  	fcall	i1_spi_write_read
  7098     066F                     i1l2464:
  7099                           
  7100                           ;main.c: 369:     spi_write_read(0x00);
  7101     066F  3000               	movlw	0
  7102     0670  120A  158A  2616  120A  118A  	fcall	i1_spi_write_read
  7103     0675                     i1l2466:
  7104                           
  7105                           ;main.c: 370:     spi_write_read(0x00);
  7106     0675  3000               	movlw	0
  7107     0676  120A  158A  2616  120A  118A  	fcall	i1_spi_write_read
  7108     067B                     i1l2468:
  7109                           
  7110                           ;main.c: 371:     for (i = numLedes; i == 0; i--) {
  7111     067B  1283               	bcf	3,5	;RP0=0, select bank0
  7112     067C  1303               	bcf	3,6	;RP1=0, select bank0
  7113     067D  084A               	movf	_numLedes+1,w
  7114     067E  00FB               	movwf	i1cosasSPI@i+1
  7115     067F  0849               	movf	_numLedes,w
  7116     0680  00FA               	movwf	i1cosasSPI@i
  7117     0681                     i1l2470:
  7118     0681  087A               	movf	i1cosasSPI@i,w
  7119     0682  047B               	iorwf	i1cosasSPI@i+1,w
  7120     0683  1903               	btfsc	3,2
  7121     0684  2E86               	goto	u165_21
  7122     0685  2E87               	goto	u165_20
  7123     0686                     u165_21:
  7124     0686  2E88               	goto	i1l2474
  7125     0687                     u165_20:
  7126     0687  2EA7               	goto	i1l2480
  7127     0688                     i1l2474:
  7128                           
  7129                           ;main.c: 372:         spi_write_read(lumo);
  7130     0688  0879               	movf	i1cosasSPI@lumo,w
  7131     0689  120A  158A  2616  120A  118A  	fcall	i1_spi_write_read
  7132                           
  7133                           ;main.c: 373:         spi_write_read(azu);
  7134     068E  0876               	movf	i1cosasSPI@azu,w
  7135     068F  120A  158A  2616  120A  118A  	fcall	i1_spi_write_read
  7136                           
  7137                           ;main.c: 374:         spi_write_read(verd);
  7138     0694  0875               	movf	i1cosasSPI@verd,w
  7139     0695  120A  158A  2616  120A  118A  	fcall	i1_spi_write_read
  7140                           
  7141                           ;main.c: 375:         spi_write_read(roj);
  7142     069A  0878               	movf	i1cosasSPI@roj,w
  7143     069B  120A  158A  2616  120A  118A  	fcall	i1_spi_write_read
  7144     06A0                     i1l2476:
  7145                           
  7146                           ;main.c: 376:     }
  7147     06A0  30FF               	movlw	255
  7148     06A1  07FA               	addwf	i1cosasSPI@i,f
  7149     06A2  1803               	skipnc
  7150     06A3  0AFB               	incf	i1cosasSPI@i+1,f
  7151     06A4  30FF               	movlw	255
  7152     06A5  07FB               	addwf	i1cosasSPI@i+1,f
  7153     06A6  2E81               	goto	i1l2470
  7154     06A7                     i1l2480:
  7155                           
  7156                           ;main.c: 377:     spi_write_read(0xFF);
  7157     06A7  30FF               	movlw	255
  7158     06A8  120A  158A  2616  120A  118A  	fcall	i1_spi_write_read
  7159                           
  7160                           ;main.c: 378:     spi_write_read(0xFF);
  7161     06AD  30FF               	movlw	255
  7162     06AE  120A  158A  2616  120A  118A  	fcall	i1_spi_write_read
  7163                           
  7164                           ;main.c: 379:     spi_write_read(0xFF);
  7165     06B3  30FF               	movlw	255
  7166     06B4  120A  158A  2616  120A  118A  	fcall	i1_spi_write_read
  7167                           
  7168                           ;main.c: 380:     spi_write_read(0xFF);
  7169     06B9  30FF               	movlw	255
  7170     06BA  120A  158A  2616  120A  118A  	fcall	i1_spi_write_read
  7171     06BF                     i1l299:
  7172     06BF  0008               	return
  7173     06C0                     __end_ofi1_cosasSPI:
  7174                           
  7175                           	psect	text45
  7176     0E16                     __ptext45:	
  7177 ;; *************** function i1_spi_write_read *****************
  7178 ;; Defined at:
  7179 ;;		line 8 in file "spi-master-v1.c"
  7180 ;; Parameters:    Size  Location     Type
  7181 ;;  one_byte        1    wreg     unsigned char 
  7182 ;; Auto vars:     Size  Location     Type
  7183 ;;  one_byte        1    2[COMMON] unsigned char 
  7184 ;;  x               1    4[COMMON] unsigned char 
  7185 ;;  answer          1    3[COMMON] unsigned char 
  7186 ;; Return value:  Size  Location     Type
  7187 ;;                  1    wreg      unsigned char 
  7188 ;; Registers used:
  7189 ;;		wreg, status,2, status,0
  7190 ;; Tracked objects:
  7191 ;;		On entry : 0/0
  7192 ;;		On exit  : 0/0
  7193 ;;		Unchanged: 0/0
  7194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7195 ;;      Params:         0       0       0       0       0
  7196 ;;      Locals:         3       0       0       0       0
  7197 ;;      Temps:          2       0       0       0       0
  7198 ;;      Totals:         5       0       0       0       0
  7199 ;;Total ram usage:        5 bytes
  7200 ;; Hardware stack levels used: 1
  7201 ;; This function calls:
  7202 ;;		Nothing
  7203 ;; This function is called by:
  7204 ;;		i1_cosasSPI
  7205 ;; This function uses a non-reentrant model
  7206 ;;
  7207                           
  7208     0E16                     i1_spi_write_read:	
  7209                           ;psect for function i1_spi_write_read
  7210                           
  7211                           
  7212                           ;incstack = 0
  7213                           ; Regs used in i1_spi_write_read: [wreg+status,2+status,0]
  7214                           ;i1spi_write_read@one_byte stored from wreg
  7215     0E16  00F2               	movwf	i1spi_write_read@one_byte
  7216     0E17                     i1l2146:
  7217                           
  7218                           ;spi-master-v1.c: 8: char spi_write_read(char one_byte);spi-master-v1.c: 9: {;spi-master
      +                          -v1.c: 11:     char answer, x;;spi-master-v1.c: 13:     answer = 0;
  7219     0E17  01F3               	clrf	i1spi_write_read@answer
  7220     0E18                     i1l2148:
  7221                           
  7222                           ;spi-master-v1.c: 15:     for(x = 8; x > 0; x--)
  7223     0E18  3008               	movlw	8
  7224     0E19  00F4               	movwf	i1spi_write_read@x
  7225     0E1A                     i1l2154:
  7226                           
  7227                           ;spi-master-v1.c: 16:     {;spi-master-v1.c: 17:         PORTCbits.RC0 = (__bit)((one_by
      +                          te >> (x - 1)) & 0b00000001);
  7228     0E1A  0872               	movf	i1spi_write_read@one_byte,w
  7229     0E1B  00F0               	movwf	??i1_spi_write_read
  7230     0E1C  0874               	movf	i1spi_write_read@x,w
  7231     0E1D  3EFF               	addlw	-1
  7232     0E1E  3E01               	addlw	1
  7233     0E1F  2E22               	goto	u134_24
  7234     0E20                     u134_25:
  7235     0E20  1003               	clrc
  7236     0E21  0CF0               	rrf	??i1_spi_write_read,f
  7237     0E22                     u134_24:
  7238     0E22  3EFF               	addlw	-1
  7239     0E23  1D03               	skipz
  7240     0E24  2E20               	goto	u134_25
  7241     0E25  1870               	btfsc	??i1_spi_write_read,0
  7242     0E26  2E28               	goto	u135_21
  7243     0E27  2E2C               	goto	u135_20
  7244     0E28                     u135_21:
  7245     0E28  1283               	bcf	3,5	;RP0=0, select bank0
  7246     0E29  1303               	bcf	3,6	;RP1=0, select bank0
  7247     0E2A  1407               	bsf	7,0	;volatile
  7248     0E2B  2E2F               	goto	u136_24
  7249     0E2C                     u135_20:
  7250     0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  7251     0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  7252     0E2E  1007               	bcf	7,0	;volatile
  7253     0E2F                     u136_24:
  7254     0E2F                     i1l2156:
  7255                           
  7256                           ;spi-master-v1.c: 19:         PORTCbits.RC5 = 1;
  7257     0E2F  1687               	bsf	7,5	;volatile
  7258                           
  7259                           ;spi-master-v1.c: 21:         answer |= (char)PORTAbits.RA5;
  7260     0E30  0E05               	swapf	5,w	;volatile
  7261     0E31  00F0               	movwf	??i1_spi_write_read
  7262     0E32  0C70               	rrf	??i1_spi_write_read,w
  7263     0E33  3901               	andlw	1
  7264     0E34  00F1               	movwf	??i1_spi_write_read+1
  7265     0E35  0871               	movf	??i1_spi_write_read+1,w
  7266     0E36  04F3               	iorwf	i1spi_write_read@answer,f
  7267     0E37                     i1l2158:
  7268                           
  7269                           ;spi-master-v1.c: 22:         PORTCbits.RC5 = 0;
  7270     0E37  1287               	bcf	7,5	;volatile
  7271     0E38                     i1l2160:
  7272                           
  7273                           ;spi-master-v1.c: 24:         if(x > 1)
  7274     0E38  3002               	movlw	2
  7275     0E39  0274               	subwf	i1spi_write_read@x,w
  7276     0E3A  1C03               	skipc
  7277     0E3B  2E3D               	goto	u137_21
  7278     0E3C  2E3E               	goto	u137_20
  7279     0E3D                     u137_21:
  7280     0E3D  2E42               	goto	i1l38
  7281     0E3E                     u137_20:
  7282     0E3E                     i1l2162:
  7283                           
  7284                           ;spi-master-v1.c: 25:             answer = answer << 1;
  7285     0E3E  0873               	movf	i1spi_write_read@answer,w
  7286     0E3F  00F0               	movwf	??i1_spi_write_read
  7287     0E40  0770               	addwf	??i1_spi_write_read,w
  7288     0E41  00F3               	movwf	i1spi_write_read@answer
  7289     0E42                     i1l38:
  7290                           
  7291                           ;spi-master-v1.c: 26:     }
  7292     0E42  3001               	movlw	1
  7293     0E43  02F4               	subwf	i1spi_write_read@x,f
  7294     0E44  0874               	movf	i1spi_write_read@x,w
  7295     0E45  1D03               	btfss	3,2
  7296     0E46  2E48               	goto	u138_21
  7297     0E47  2E49               	goto	u138_20
  7298     0E48                     u138_21:
  7299     0E48  2E1A               	goto	i1l2154
  7300     0E49                     u138_20:
  7301     0E49                     i1l39:
  7302     0E49  0008               	return
  7303     0E4A                     __end_ofi1_spi_write_read:
  7304     007E                     btemp	set	126	;btemp
  7305     007E                     wtemp0	set	126
  7306                           
  7307                           	psect	idloc
  7308                           
  7309                           ;Config register IDLOC0 @ 0x2000
  7310                           ;	unspecified, using default values
  7311     2000                     	org	8192
  7312     2000  3FFF               	dw	16383
  7313                           
  7314                           ;Config register IDLOC1 @ 0x2001
  7315                           ;	unspecified, using default values
  7316     2001                     	org	8193
  7317     2001  3FFF               	dw	16383
  7318                           
  7319                           ;Config register IDLOC2 @ 0x2002
  7320                           ;	unspecified, using default values
  7321     2002                     	org	8194
  7322     2002  3FFF               	dw	16383
  7323                           
  7324                           ;Config register IDLOC3 @ 0x2003
  7325                           ;	unspecified, using default values
  7326     2003                     	org	8195
  7327     2003  3FFF               	dw	16383
  7328                           
  7329                           	psect	config
  7330                           
  7331                           ;Config register CONFIG1 @ 0x2007
  7332                           ;	Oscillator Selection bits
  7333                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  7334                           ;	Watchdog Timer Enable bit
  7335                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  7336                           ;	Power-up Timer Enable bit
  7337                           ;	PWRTE = ON, PWRT enabled
  7338                           ;	RE3/MCLR pin function select bit
  7339                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  7340                           ;	Code Protection bit
  7341                           ;	CP = OFF, Program memory code protection is disabled
  7342                           ;	Data Code Protection bit
  7343                           ;	CPD = OFF, Data memory code protection is disabled
  7344                           ;	Brown Out Reset Selection bits
  7345                           ;	BOREN = OFF, BOR disabled
  7346                           ;	Internal External Switchover bit
  7347                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  7348                           ;	Fail-Safe Clock Monitor Enabled bit
  7349                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  7350                           ;	Low Voltage Programming Enable bit
  7351                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  7352                           ;	In-Circuit Debugger Mode bit
  7353                           ;	DEBUG = OFF, In-Circuit Debugger disabled, RB6/ICSPCLK and RB7/ICSPDAT are general pur
      +                          pose I/O pins
  7354     2007                     	org	8199
  7355     2007  20E2               	dw	8418
  7356                           
  7357                           ;Config register CONFIG2 @ 0x2008
  7358                           ;	Brown-out Reset Selection bit
  7359                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  7360                           ;	Flash Program Memory Self Write Enable bits
  7361                           ;	WRT = OFF, Write protection off
  7362     2008                     	org	8200
  7363     2008  3EFF               	dw	16127

Data Sizes:
    Strings     98
    Constant    10
    Data        40
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     39      71
    BANK1            80      9      53
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 98
		 -> STR_1(CODE[98]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    sp__getLED	PTR unsigned char  size(1) Largest target is 4
		 -> miLED(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _TRAT_INT in COMMON

    _TRAT_INT->i1_setLED
    i1_setPWM->i1___awdiv
    i1_setLED->i1_cosasSPI
    i1_escribirMemoria->i1_leerMemoria
    i1_cosasSPI->i1_spi_write_read

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv
    _initActuadoresSegunMemoria->_setLED
    _setPWM->___awdiv
    _setLED->_cosasSPI
    _escribirMemoria->_leerMemoria
    _cosasSPI->_spi_write_read
    _getnoPrimerArranque->_leerMemoria
    _analisisResto->_setCO2
    _analisisResto->_setLumen
    _setLumen->_i2c_read
    _setCO2->_i2c_read

Critical Paths under _TRAT_INT in BANK0

    _TRAT_INT->i1_setLED

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _TRAT_INT in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TRAT_INT in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TRAT_INT in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5093
                                             38 BANK0      1     1      0
                                              7 BANK1      2     2      0
                      _analisisResto
                      _analisisRuido
                           _i2c_stop
         _initActuadoresSegunMemoria
                             _initYo
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              30    18     12    1531
                                             23 BANK0     15     3     12
                                              0 BANK1      7     7      0
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      31
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                             17 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              9 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _initYo                                               0     0      0       0
                          _i2c_start
                           _init_ADC
                      _init_CCP1_PWM
                           _init_I2C
                           _init_SPI
                          _init_TMR0
                          _init_TMR1
                          _init_TMR2
                       _init_memoria
                          _init_uart
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_memoria                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_TMR2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_TMR0                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_SPI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_I2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_CCP1_PWM                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                          _wait_MSSP
 ---------------------------------------------------------------------------------
 (1) _initActuadoresSegunMemoria                           3     3      0    3337
                                             25 BANK0      3     3      0
                _getnoPrimerArranque
                        _leerMemoria
                             _setLED
                             _setPWM
 ---------------------------------------------------------------------------------
 (2) _setPWM                                               3     3      0    1255
                                             18 BANK0      3     3      0
                            ___awdiv
                             ___bmul
                    _escribirMemoria
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              9 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              9 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _setLED                                               4     1      3    1879
                                             21 BANK0      4     1      3
                           _cosasSPI
                    _escribirMemoria
 ---------------------------------------------------------------------------------
 (3) _escribirMemoria                                      8     7      1     569
                                             10 BANK0      6     5      1
                        _leerMemoria
 ---------------------------------------------------------------------------------
 (3) _cosasSPI                                             7     4      3     528
                                             14 BANK0      7     4      3
                     _spi_write_read
 ---------------------------------------------------------------------------------
 (4) _spi_write_read                                       5     5      0     143
                                              9 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _getnoPrimerArranque                                  2     2      0     112
                                             10 BANK0      1     1      0
                        _leerMemoria
 ---------------------------------------------------------------------------------
 (4) _leerMemoria                                          1     1      0      22
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c_stop                                             0     0      0       0
                          _wait_MSSP
 ---------------------------------------------------------------------------------
 (1) _analisisRuido                                        3     3      0      48
                                              9 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _analisisResto                                        0     0      0     134
                             _getCO2
                           _getLumen
                             _setCO2
                           _setLumen
 ---------------------------------------------------------------------------------
 (2) _setLumen                                             2     2      0      67
                                             11 BANK0      2     2      0
                           _i2c_read
                         _i2c_rstart
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _setCO2                                               2     2      0      67
                                             11 BANK0      2     2      0
                           _i2c_read
                         _i2c_rstart
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      22
                                              9 BANK0      1     1      0
                          _wait_MSSP
 ---------------------------------------------------------------------------------
 (3) _i2c_rstart                                           0     0      0       0
                          _wait_MSSP
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             2     2      0      45
                                              9 BANK0      2     2      0
                          _wait_MSSP
 ---------------------------------------------------------------------------------
 (3) _wait_MSSP                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getLumen                                             2     0      2       0
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _getCO2                                               2     0      2       0
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _TRAT_INT                                             6     6      0    1806
                                              3 BANK0      6     6      0
                           i1_setLED
                           i1_setPWM
 ---------------------------------------------------------------------------------
 (6) i1_setPWM                                             3     3      0     855
                                              9 COMMON     3     3      0
                          i1___awdiv
                           i1___bmul
                  i1_escribirMemoria
 ---------------------------------------------------------------------------------
 (7) i1___bmul                                             4     3      1     118
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (7) i1___awdiv                                            9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (6) i1_setLED                                             4     1      3     951
                                             12 COMMON     1     1      0
                                              0 BANK0      3     0      3
                         i1_cosasSPI
                  i1_escribirMemoria
 ---------------------------------------------------------------------------------
 (7) i1_escribirMemoria                                    8     7      1     319
                                              1 COMMON     6     5      1
                      i1_leerMemoria
 ---------------------------------------------------------------------------------
 (8) i1_leerMemoria                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_cosasSPI                                           7     4      3     378
                                              5 COMMON     7     4      3
                   i1_spi_write_read
 ---------------------------------------------------------------------------------
 (8) i1_spi_write_read                                     5     5      0     143
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _analisisResto
     _getCO2
     _getLumen
     _setCO2
       _i2c_read
         _wait_MSSP
       _i2c_rstart
         _wait_MSSP
       _i2c_write
         _wait_MSSP
     _setLumen
       _i2c_read
       _i2c_rstart
       _i2c_write
   _analisisRuido
   _i2c_stop
     _wait_MSSP
   _initActuadoresSegunMemoria
     _getnoPrimerArranque
       _leerMemoria
     _leerMemoria
     _setLED
       _cosasSPI
         _spi_write_read
       _escribirMemoria
         _leerMemoria
     _setPWM
       ___awdiv
       ___bmul
       _escribirMemoria
   _initYo
     _i2c_start
       _wait_MSSP
     _init_ADC
     _init_CCP1_PWM
     _init_I2C
     _init_SPI
     _init_TMR0
     _init_TMR1
     _init_TMR2
     _init_memoria
     _init_uart
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch

 _TRAT_INT (ROOT)
   i1_setLED
     i1_cosasSPI
       i1_spi_write_read
     i1_escribirMemoria
       i1_leerMemoria
   i1_setPWM
     i1___awdiv
     i1___bmul
     i1_escribirMemoria

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      9      35       7       66.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     27      47       5       88.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      8A      12        0.0%
ABS                  0      0      8A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 01 14:57:06 2022

                      _ruidoMasAlto 005C                                   l9 0BE5  
                                 _x 0062                                   pc 0002  
                    ___bmul@product 002B                                  l11 0BEB  
                                l12 0BEC                                  l21 0BFD  
                                l15 0C0F                                  l24 0C4D  
                                l18 0C06                                  l27 0DAD  
                                l28 0DB0                                  l29 0DB9  
                                l38 0E78                                  l39 0E7F  
                      ___awdiv@sign 002F                                  fsr 0004  
                               l212 0C25                                 l221 0C5E  
                               l302 0FFF                                 l230 0BE4  
                               l215 0C6F                                 l224 0D94  
                               l313 0FBC                                 l233 0D40  
                               l250 0C3F                                 l322 071D  
                               l218 0C81                                 l227 0D27  
                               l236 0C19                                 l244 0C93  
                               l317 0F36                                 l309 0FA6  
                               l261 0D5C                                 l254 076D  
                               l247 07B8                                 l239 0C85  
                               l257 0C32                                 l281 0EBB  
                               l266 03F5                                 l291 0E15  
                               l278 044A                                 l287 0D78  
                               l528 0D0F                                 l385 03D5  
                               l299 0528                                 l655 0591  
                               l498 033C                                 l774 07FE  
                               l784 0EF7                                 _PR2 0092  
                     _emitoSensores 00B8                                 _anI 004D  
                      ?_leerMemoria 0070                                 fsr0 0004  
                 i1_escribirMemoria 05F9                                 indf 0000  
                       cosasSPI@azu 002F        ??_initActuadoresSegunMemoria 0039  
                       cosasSPI@roj 0031                          i1_cosasSPI 065E  
                ?i1_escribirMemoria 0071              i1leerMemoria@direccion 0070  
                              l2000 0C43                                l2010 0D9B  
                              l2002 0C45                                l2020 0DB6  
                              l2012 0DA0                                l2004 0C4A  
                              l2014 0DA4                                l2030 03E8  
                              l2110 0537                                l2102 0529  
                              l2016 0DA9                                l2008 0D98  
                              l2040 0402                                l2032 03EE  
                              l2024 03DB                                l2120 054C  
                              l2112 053B                                l2104 052C  
                              l2200 0C68                                l3000 02BA  
                              l2018 0DB1                                l2042 040A  
                              l2034 03F6                                l2050 0424  
                              l2026 03DF                                l2130 056F  
                              l2122 054F                                l2114 0540  
                              l2106 0530                                l2202 0C69  
                              l2210 0C78                                l3010 0317  
                              l3002 02C8                                l2300 077F  
                              l2052 0431                                l2044 040C  
                              l2036 0400                                l2060 044A  
                              l2028 03E2                                l2140 0588  
                              l2132 0575                                l2124 0556  
                              l2116 0544                                l2108 0535  
                              l2220 0C51                                l2204 0C6C  
                              l2212 0C7A                                l3012 031D  
                              l3004 02CE                                l3020 033D  
                              l2310 071E                                l2302 0785  
                              l2070 04D0                                l2054 0439  
                              l2046 0419                                l2038 0401  
                              l2142 058D                                l2134 0576  
                              l2126 055A                                l2118 0546  
                              l2222 0C54                                l2214 0C7D  
                              l2206 0C70                                l2230 0D7F  
                              l3006 02D4                                l3014 032A  
                              l3030 0358                                l3022 0342  
                              l2320 0767                                l2312 0723  
                              l2304 0799                                l2080 04E9  
                              l2072 04D6                                l2064 04C0  
                              l2056 0448                                l2048 041E  
                              l2136 057D                                l2128 055E  
                              l2224 0C5A                                l2216 0C80  
                              l2208 0C74                                l2240 0D89  
                              l2232 0D82                                l3008 02D9  
                              l3032 035D                                l3040 03BE  
                              l3024 0348                                l2322 0C26  
                              l2306 0C33                                l2314 0729  
                              l2330 0D66                                l2082 0507  
                              l2074 04DC                                l2066 04C4  
                              l2058 0449                                l2138 0583  
                              l2090 0CFD                                l2226 0C5C  
                              l2218 0C4E                                l2250 0D10  
                              l2242 0D8C                                l2234 0D84  
                              l3042 03C3                                l3122 0369  
                              l3026 034E                                l2316 073D  
                              l2332 0D6B                                l2076 04E2  
                              l2068 04CA                                l2092 0D01  
                              l2180 0C0A                                l2260 0D24  
                              l2252 0D14                                l2244 0D8D  
                              l2236 0D85                                l2228 0D79  
                              l3124 0263                                l3028 0353  
                              l3036 0362                                l3044 03C8  
                              l2318 075C                                l2342 0D77  
                              l2334 0D70                                l2326 0D5D  
                              l2086 0510                                l2094 0D05  
                              l2350 0E11                                l2270 0D30  
                              l2254 0D1A                                l2262 0BE1  
                              l2190 0C22                                l2246 0D90  
                              l2238 0D86                                l3046 03D0  
                              l3038 0374                                l2336 0D75  
                              l2328 0D5D                                l2360 0FD4  
                              l2352 0FC0                                l2096 0D07  
                              l2088 0CFC                                l2600 06CA  
                              l2280 0D3D                                l2272 0D31  
                              l2264 0D28                                l2256 0D1D  
                              l2192 0C24                                l2184 0C1A  
                              l2248 0D93                                l2362 0FD6  
                              l2354 0FCC                                l2098 0D0E  
                              l2346 0DEA                                l2610 070C  
                              l2602 06DF                                l2178 0C07  
                              l2282 0D3E                                l2274 0D37  
                              l2266 0D2C                                l2258 0D21  
                              l2186 0C1E                                l2194 0C5F  
                              l2540 0BFE                                l2364 0FDE  
                              l2356 0FD0                                l2348 0E09  
                              l2604 06EC                                l2284 0D3F  
                              l2276 0D39                                l2268 0D2F  
                              l2188 0C21                                l2196 0C65  
                              l2294 076E                                l2542 0C01  
                              l2366 0FE9                                l2358 0FD2  
                              l2606 06F8                                l2278 0D3A  
                              l2198 0C66                                l2286 0C10  
                              l2550 0E89                                l2296 0773  
                              l2368 0FF4                                l2608 0702  
                              l2560 0EA2                                l2552 0E8E  
                              l2298 0779                                l2570 0F7A  
                              l2562 0EB6                                l2554 0E93  
                              l2546 0E80                                l2580 0FB3  
                              l2572 0F89                                l2564 0EB9  
                              l2556 0E98                                l2548 0E84  
                              l2590 0F0A                                l2582 0EF8  
                              l2574 0F8E                                l2566 0EBA  
                              l2558 0E9D                                l2910 0C8A  
                              l1960 0BE5                                l2592 0F1B  
                              l2584 0F00                                l2576 0F9D  
                              l2568 0F7A                                l2920 07C6  
                              l2912 0C90                                l2594 0F2C  
                              l2586 0F02                                l2578 0FA2  
                              l1970 0E50                                l1962 0E4D  
                              l2930 07EC                                l2922 07CD  
                              l2914 07B9                                l2596 0F31  
                              l2588 0F06                                l1980 0D44  
                              l1972 0E65                                l1964 0E4E  
                              l2932 07ED                                l2924 07D1  
                              l2916 07BD                                l2940 0EBC  
                              l2908 0C85                                l1990 0D59  
                              l1982 0D48                                l1974 0E6D  
                              l2598 06C0                                l2934 07F4  
                              l2926 07D5                                l2918 07C3  
                              l2950 0ED6                                l2942 0EC4  
                              l1984 0D4C                                l1976 0E6E  
                              l2928 07E6                                l2936 07FA  
                              l2952 0EE0                                l2944 0EC7  
                              l1994 0BF5                                l1986 0D52  
                              l1978 0E74                                l2954 0EE6  
                              l2946 0ECE                                l2970 0237  
                              l2962 0225                                l1996 0BF8  
                              l1988 0D58                                l2956 0EED  
                              l2948 0ED2                                l2980 0271  
                              l2972 023E                                l2964 0228  
                              l2958 0EF3                                l2990 0294  
                              l2982 027B                                l2974 0246  
                              l2966 022E                                l2984 0283  
                              l2968 0235                                l2986 0287  
                              l2978 024F                                l2996 0296  
                              l2988 028F                     spi_write_read@x 002D  
                              STR_1 045B                                u1110 0E74  
                              u1111 0E73                                u1120 0E7F  
                              u1104 0E65                                u1200 0448  
                              u1121 0E7E                                u1201 0447  
                              u1130 0D58                                u1210 04E8  
                              u1131 0D57                                u1211 04E7  
                              u1140 0DA9                                u1300 056F  
                              u1220 0D01                                u1141 0DA8  
                              u1205 0444                                u1301 056E  
                              u1221 0D00                                u1070 0BEB  
                              u1150 03EE                                u1230 0D0E  
                              u1071 0BEA                                u1151 03ED  
                              u1231 0D0D                                u1160 040A  
                              u1320 0583                                u1240 0530  
                              u1161 0409                                u1321 0582  
                              u1305 056B                                u1241 052F  
                              u1090 0E62                                u1170 0419  
                              u1330 0588                                u1250 053B  
                              u2210 07FA                                u2130 0C8A  
                              u1091 0E5E                                u1171 0418  
                              u1331 0587                                u1315 0577  
                              u1251 053A                                u2211 07F9  
                              u2131 0C89                                u1420 0767  
                              u1084 0E58                                u1180 0431  
                              u1260 054C                                u2220 0EC4  
                              u2140 0C90                                u2300 02B9  
                              u1421 0766                                u1085 0E56  
                              u1181 0430                                u1261 054B  
                              u2205 07EE                                u2221 0EC3  
                              u2141 0C8F                                u2301 02B8  
                              u1430 0D6B                                u1190 0439  
                              u2150 07C3                                u2310 02C8  
                              u1431 0D6A                                u1191 0438  
                              u2151 07C2                                u2311 02C7  
                              u1440 0D70                                u1280 055E  
                              u2240 0ED6                                u2320 02CE  
                              u1441 0D6F                                u1185 042D  
                              u1281 055D                                u2241 0ED5  
                              u2321 02CD                                u2305 02B5  
                              u1450 0D75                                u2170 07D5  
                              u2250 0EE0                                u2330 032A  
                              u1451 0D74                                u1275 0550  
                              u2171 07D4                                u2251 0EDF  
                              u2235 0EC8                                u2331 0329  
                              u2340 033C                                u2165 07C7  
                              u2341 033B                                u2190 07E6  
                              u2270 0EF3                                u2350 034E  
                              u1295 055F                                u2191 07E5  
                              u2271 0EF2                                u2255 0EDC  
                              u2351 034D                                u1800 0FB3  
                              u2280 022E                                u2360 03D0  
                              u1801 0FB2                                u2185 07D6  
                              u2265 0EE7                                u2281 022D  
                              u2361 03CF                                u1810 0F00  
                              u2290 0287                                u1811 0EFF  
                              u2195 07E2                                u2291 0286  
                              u1820 06CA                                u1805 0FAF  
                              u1821 06C9                                u1780 0F89  
                              u1781 0F88                                u1790 0F9D  
                              u1791 0F9C                                u1785 0F85  
                              u1795 0F99                                i1l38 0E42  
                              i1l39 0E49                                _TMR0 0001  
                              _TXIF 0064              __end_of_spi_write_read 0E80  
                              _pPWM 0065                 ??i1_escribirMemoria 0072  
                              _main 033D                                btemp 007E  
                              start 0012                        cosasSPI@lumi 0030  
                      cosasSPI@lumo 0032                        cosasSPI@verd 002E  
                 ___bmul@multiplier 002C           __end_ofi1_escribirMemoria 065E  
                             ?_main 0070                      i1___awdiv@sign 0076  
                   __end_of___awdiv 0592                               _EEADR 010D  
                             _EEDAT 010C                               _ANSEL 0188  
                   ___awdiv@divisor 0029                     __end_of___lwdiv 07FF  
                             i1l302 0F79                               i1l340 0123  
                             i1l332 0118                               i1l261 0CF8  
                             i1l350 0181                               i1l342 0177  
                             i1l351 0215                               i1l335 010F  
                             i1l327 00AC                               i1l352 0187  
                   __end_of___lwmod 0EF8                               i1l266 060E  
                             i1l354 020F                               i1l338 010E  
                             i1l370 0215                               i1l291 0DE6  
                             i1l278 065D                               i1l528 0CE2  
                             i1l299 06BF                               i1l655 05F8  
                   ___awdiv@counter 002E                               _RCREG 001A  
                             _TMR1H 000F                               _TMR1L 000E  
                             _SPBRG 0099                               _TRISA 0085  
                             _TRISB 0086                               _TRISC 0087  
                             _TXREG 0019                               _elPR2 004F  
                             _miLED 0056                     __end_of_dpowers 045B  
                  __end_of_TRAT_INT 0222                               _valor 00A0  
                             _putch 0C82                    __end_ofi1___bmul 0CE3  
              leerMemoria@direccion 0029                               pclath 000A  
                      main@ruidoAux 0046                     ?_spi_write_read 0070  
                             status 0003                               wtemp0 007E  
                  __end_ofi1_setLED 0F7A                    __end_ofi1_setPWM 0DE7  
                     setPWM@porcent 0034                     __initialization 0015  
                    i1cosasSPI@lumi 0077                      i1cosasSPI@lumo 0079  
                    i1cosasSPI@verd 0075                        __end_of_main 03D8  
                        _i2c_rstart 0BF5                         i1cosasSPI@i 007A  
                  __end_of_i2c_read 0DBA                    __end_of_i2c_stop 0C07  
                     _init_CCP1_PWM 0C4E               __end_of_analisisResto 0F37  
             __end_of_analisisRuido 0FBD                              ??_main 00D3  
                       ?i1_cosasSPI 0075                              _ADRESH 001E  
                            _EEADRH 010F                              _ADRESL 009E  
                            _EEDATH 010E                              _CCPR1L 0015  
                            _EECON2 018D                    ___awdiv@dividend 002B  
                            ?_putch 0070                              i1l2160 0E38  
                            u200_20 0127                              u200_21 0126  
                            i1l2162 0E3E                              i1l2154 0E1A  
                            i1l2146 0E17                              i1l2170 0CEE  
                            i1l2156 0E2F                              i1l2148 0E18  
                            i1l2172 0CF4                              i1l2164 0CE4  
                            i1l2420 05FE                              i1l2500 0597  
                            i1l2158 0E37                              i1l2174 0CF5  
                            i1l2166 0CE8                              i1l2430 0619  
                            i1l2422 0601                              i1l2510 05AB  
                            i1l2502 059C                              i1l3126 01FE  
                            i1l2168 0CEC                              i1l2440 0630  
                            i1l2432 061A                              i1l2424 0603  
                            i1l2520 05C1                              i1l2512 05AD  
                            i1l2504 059E                              u201_20 0144  
                            u201_21 0143                              i1l2450 065B  
                            i1l2442 0635                              i1l2434 061B  
                            i1l2426 0609                              i1l2418 05FA  
                            i1l2530 05E4                              i1l2522 05C5  
                            i1l2514 05B3                              i1l2506 05A2  
                            i1l2460 0663                              i1l2452 065C  
                            i1l2436 0623                              i1l2428 060F  
                            i1l2444 063B                              i1l2524 05D6  
                            i1l2516 05B6                              i1l2532 05EA  
                            i1l2508 05A7                              i1l2700 006C  
                            u201_25 0140                              i1l2470 0681  
                            i1l2462 0669                              i1l2446 0648  
                            i1l2438 0625                              i1l2454 065D  
                            i1l2534 05EF                              i1l2526 05DC  
                            i1l2518 05BD                              i1l2702 0072  
                            i1l2710 00A2                              i1l2480 06A7  
                            i1l2464 066F                              i1l2448 064E  
                            i1l2536 05F4                              i1l2528 05DD  
                            u210_20 0213                              u202_20 014C  
                            i1l2720 00CF                              i1l2712 00AA  
                            i1l2704 0082                              u210_21 0212  
                            u202_21 014B                              i1l2474 0688  
                            i1l2466 0675                              i1l2458 065F  
                            i1l2490 0CDA                              i1l2482 0CCF  
                            i1l2730 0112                              i1l2722 00D3  
                            i1l2714 00B0                              i1l2706 0091  
                            i1l2476 06A0                              i1l2468 067B  
                            i1l2492 0CE1                              i1l2484 0CD0  
                            i1l2740 0128                              i1l2732 0116  
                            i1l2724 00DB                              i1l2716 00BE  
                            i1l2708 009D                              i1l2486 0CD4  
                            i1l2670 0DBB                              i1l2750 015E  
                            i1l2742 0137                              i1l2734 011C  
                            i1l2726 00ED                              i1l2718 00C2  
                            i1l2680 0F4A                              i1l2496 0592  
                            i1l2488 0CD8                              i1l2672 0DDA  
                            i1l2760 017C                              u203_20 015E  
                            i1l2744 0144                              i1l2752 0169  
                            i1l2736 011F                              i1l2728 00FA  
                            u203_21 015D                              i1l2690 0F63  
                            i1l2682 0F4C                              i1l2498 0593  
                            i1l2674 0DE2                              i1l2770 01A1  
                            i1l2762 0185                              i1l2746 014C  
                            i1l2738 0127                              i1l2692 0F6E  
                            i1l2684 0F4E                              i1l2676 0F38  
                            i1l2780 01CD                              i1l2772 01A7  
                            i1l2764 018B                              i1l2756 016D  
                            i1l2748 0157                              i1l2686 0F50  
                            i1l2678 0F46                              i1l2790 01EC  
                            i1l2782 01D6                              i1l2774 01AD  
                            i1l2766 018C                              i1l2758 017B  
                            i1l2694 004A                              i1l2688 0F58  
                            i1l2792 01F1                              i1l2784 01DD  
                            i1l2768 0199                              i1l2776 01BA  
                            u204_20 017B                              i1l2696 004E  
                            u204_21 017A                              i1l2786 01E0  
                            i1l2778 01C9                              i1l2698 0068  
                            i1l2788 01E7                              i1l2796 01F4  
                            i1l2798 0213                              u205_20 0185  
                            u205_21 0184                              u206_20 018B  
                            u206_21 018A                              u134_24 0E22  
                            u134_25 0E20                              u135_20 0E2C  
                            u207_20 0199                              u135_21 0E28  
                            u207_21 0198                              u207_25 0195  
                            u160_20 0623                              u208_20 01AD  
                            u160_21 0622                              u208_21 01AC  
                            u136_24 0E2F                              u137_20 0E3E  
                            u161_20 0630                              u209_20 01C9  
                            u137_21 0E3D                              u161_21 062F  
                            u209_21 01C8                              u209_25 01C5  
                            u138_20 0E49                              u162_20 0648  
                            u170_20 05B3                              u138_21 0E48  
                            u162_21 0647                              u170_21 05B2  
                            u162_25 0644                              u139_20 0CF4  
                            u163_20 064E                              u139_21 0CF3  
                            u163_21 064D                              u171_25 05B7  
                            u164_20 065B                              u172_20 05C5  
                            u164_21 065A                              u172_21 05C4  
                            u164_25 0657                              u165_20 0687  
                            u165_21 0686                              u173_25 05C6  
                            u174_20 05D6                              u166_20 0CD4  
                            u190_20 004E                              u174_21 05D5  
                            u166_21 0CD3                              u190_21 004D  
                            u174_25 05D2                              u159_20 0609  
                            u167_20 0CE1                              u191_20 0068  
                            u159_21 0608                              u167_21 0CE0  
                            u191_21 0067                              u175_25 05DE  
                            u191_25 0064                              u176_20 05EA  
                            u168_20 0597                              u192_20 0091  
                            u176_21 05E9                              u168_21 0596  
                            u192_21 0090                              u192_25 008D  
                            u177_20 05EF                              u169_20 05A2  
                            u193_20 00B0                              u177_21 05EE  
                            u169_21 05A1                              u193_21 00AF  
                            u194_20 00BE                              u194_21 00BD  
                            u194_25 00BA                              u195_20 00CF  
                            u195_21 00CE                              u195_25 00CB  
                            u196_20 00ED                              u196_21 00EC  
                            u196_25 00E9                              u197_20 00FA  
                            u197_21 00F9                              u197_25 00F6  
                            u198_20 010E                              u198_21 010D  
                            u198_25 010A                              u199_20 011C  
                            u199_21 011B                              _OSCCON 008F  
                            _SPBRGH 009A                              _SSPADD 0093  
                            _SSPBUF 0013                 _porcentajeSubenBaja 0051  
                     ?_init_memoria 0070                         i1setLED@red 007C  
                 ??_escribirMemoria 002B                    __end_of_getLumen 0C40  
                  __end_of_cosasSPI 0529                              ___bmul 0CF9  
                            _getCO2 0C26                           ??___awdiv 002D  
                  __end_of_init_I2C 0D28                    __end_of_init_ADC 0D41  
                         ??___lwdiv 002D                           ??___lwmod 0035  
                  __end_of_init_SPI 0BE5                              _copias 00AC  
                            _setCO2 071E                              _initYo 0E80  
                            _setLED 0FBD                         setLED@green 0035  
                    ?_init_CCP1_PWM 0070                              _setPWM 0DE7  
                  ___awdiv@quotient 0030                              _printf 0222  
                  __end_of_setLumen 07B9                   __end_ofi1___awdiv 05F9  
__end_of_initActuadoresSegunMemoria 071E          _initActuadoresSegunMemoria 06C0  
                      __pdataCOMMON 007D                 i1setLED@luminosidad 0022  
               escribirMemoria@dato 002A                              saved_w 007E  
                            putch@c 0029                      ??_init_memoria 0029  
           __end_of__initialization 0046                 ___bmul@multiplicand 0029  
                 analisisRuido@temp 002B                      __pcstackCOMMON 0070  
                       ?_i2c_rstart 0070                        __pidataBANK0 0CA7  
                      __pidataBANK1 0CBA                     i1setPWM@porcent 007B  
                         ?_TRAT_INT 0070                       __end_of_putch 0C94  
                         ?i1___bmul 0070                    i1_spi_write_read 0E16  
                 __end_of_i2c_start 0C10                   __end_of_i2c_write 0C4E  
                    _OPTION_REGbits 0081                           ?i1_setLED 0020  
                         ?i1_setPWM 0070                       i1_leerMemoria 0CE3  
                  i1___bmul@product 0072                             ??_putch 0029  
                        __pbssBANK0 005A                          __pbssBANK1 00A0  
                         ?_i2c_read 0070                           ?_i2c_stop 0070  
          i1spi_write_read@one_byte 0072              i1spi_write_read@answer 0073  
                        __pmaintext 033D                             ?___bmul 0029  
                           ?_getCO2 0029                     ??_init_CCP1_PWM 0029  
                        __pintentry 0004                          ??_TRAT_INT 0023  
                           ?_setCO2 0070                             ?_initYo 0070  
                           ?_setLED 0035                             ?_setPWM 0070  
                        ??i1___bmul 0071                             ?_printf 0037  
                i1___awdiv@dividend 0072                      ?i1_leerMemoria 0070  
                        ??i1_setLED 007C                          ??i1_setPWM 0079  
         escribirMemoria@confirmado 002B                    ??_spi_write_read 0029  
                         ?_getLumen 0029                           ?_cosasSPI 002E  
                      i1setLED@blue 0021                          __stringtab 044B  
          escribirMemoria@direccion 002D                           ?_init_I2C 0070  
                         ?_init_ADC 0070                          ??_i2c_read 0029  
                 _leoADCHumedadTemp 004B                           ?_init_SPI 0070  
                        ??_i2c_stop 0029                           ?_setLumen 0070  
                i1___awdiv@quotient 0077                spi_write_read@answer 002C  
                           _anINext 00B0                       _deboContinuar 00CA  
                           ___awdiv 0529                             ___lwdiv 07B9  
                           ___lwmod 0EBC                        _direccionLED 0053  
                      _direccionPWM 0054                           _ANSELbits 0188  
                           __ptext1 0222                             __ptext2 0C82  
                           __ptext3 0EBC                             __ptext4 07B9  
                           __ptext5 0E80                             __ptext6 0D79  
                           __ptext7 0C10                             __ptext8 0C70  
                           __ptext9 0C5F                             _copias1 005A  
                 __end_of_init_TMR0 0C26                   __end_of_init_TMR1 0C70  
                 __end_of_init_TMR2 0C82                __end_of_init_memoria 0C1A  
                         _T1CONbits 0010                             _dpowers 0451  
                         _T2CONbits 0012          i1escribirMemoria@direccion 0074  
                 __end_of_init_uart 0D95                 i1___bmul@multiplier 0073  
                      ??i1_cosasSPI 0078                     _escribirMemoria 03D8  
                        ??_getLumen 002B                             clrloop0 0BEE  
                        ??_cosasSPI 0031                end_of_initialization 0046  
                        ??_init_I2C 0029                          ??_init_ADC 0029  
                        ??_init_SPI 0029                   __end_of_wait_MSSP 0BED  
                i2c_read@master_ack 0029                          ??_setLumen 002B  
       i1escribirMemoria@confirmado 0072                           _RCSTAbits 0018  
                           printf@c 00D2                             printf@f 00CD  
                __end_ofi1_cosasSPI 06C0                          _porcentaje 0063  
                         _PORTAbits 0005                           _PORTCbits 0007  
                   ??i1_leerMemoria 0070         ?_initActuadoresSegunMemoria 0070  
                 _emitirMisSensores 00B2                           _TRISCbits 0087  
                        _ruidoMedio 00C4                           i1___awdiv 0592  
   _initActuadoresSegunMemoria$1570 0039     _initActuadoresSegunMemoria$1571 003A  
   _initActuadoresSegunMemoria$1572 003B                         _CCP1CONbits 0017  
          __end_ofi1_spi_write_read 0E4A                           _TXSTAbits 0098  
               _getnoPrimerArranque 0D5D                        ??_i2c_rstart 0029  
                    __end_of___bmul 0D10                      __end_of_getCO2 0C33  
                     __pidataCOMMON 07FF                         _BAUDCTLbits 0187  
                    __end_of_setCO2 076E             __end_of_escribirMemoria 044B  
                    __end_of_initYo 0EBC                      __end_of_setLED 1000  
                    __end_of_setPWM 0E16                ?_getnoPrimerArranque 0070  
                     ??_leerMemoria 0029                      __end_of_printf 033D  
               start_initialization 0015                       i1cosasSPI@azu 0076  
                     i1cosasSPI@roj 0078                           _i2c_start 0C07  
                        ?i1___awdiv 0070                           _i2c_write 0C40  
                __end_of_i2c_rstart 0BFE                            ??___bmul 002A  
                        setLED@blue 0036                            ??_getCO2 002B  
                        init_fetch0 0C94              spi_write_read@one_byte 002B  
                       __pdataBANK0 0047                         __pdataBANK1 00B8  
                  _direccionInicial 0066                            ??_setCO2 002B  
                          ??_initYo 0029                            ??_setLED 0038  
                          ??_setPWM 0032                        _los5msen15ms 0047  
                          ??_printf 0043                        _los5msen1sT0 00C2  
             ??_getnoPrimerArranque 002A                       _analisisResto 0EF8  
                     _analisisRuido 0F7A                           ___latbits 0002  
                     __pcstackBANK0 0020                       __pcstackBANK1 00CC  
                        ?_i2c_start 0070                   i1spi_write_read@x 0074  
                        ?_i2c_write 0070                 __end_of_leerMemoria 0D5D  
                      _init_memoria 0C10                    ___lwdiv@dividend 002B  
                          ?___awdiv 0029                            ?___lwdiv 0029  
                          ?___lwmod 0031                   i1___awdiv@divisor 0070  
             __end_of_init_CCP1_PWM 0C5F                   i1___awdiv@counter 0075  
                         __pstrings 044B              getnoPrimerArranque@aux 002A  
                    ?_analisisResto 0070                      ?_analisisRuido 0070  
                  ?_escribirMemoria 002A                           _continuar 00B6  
                         _eltimer1H 007D                           _eltimer1L 0055  
             i1escribirMemoria@dato 0071             escribirMemoria@contador 002E  
                 _actualizoLecturas 00AE                           _init_TMR0 0C1A  
                         _init_TMR1 0C5F                           _init_TMR2 0C70  
                       ??i1___awdiv 0074                    ___lwdiv@quotient 002F  
                  i2c_read@I2C_data 002A                           _init_uart 0D79  
                         _reciboLED 005E                           _reciboPWM 00B4  
                 interrupt_function 0004           i1escribirMemoria@contador 0075  
                         clear_ram0 0BED                            _PIE1bits 008C  
                          _PIE2bits 008D               i1___bmul@multiplicand 0070  
                         _wait_MSSP 0BE5                            _PIR1bits 000C  
                          _PIR2bits 000D                            _TRAT_INT 004A  
                         _ruidoBajo 00C6                       i1setLED@green 0020  
                          i1___bmul 0CCE                          _ADCON0bits 001F  
                       __stringbase 0450                          _ADCON1bits 009F  
                         cosasSPI@i 0033                          printf@flag 00CC  
                        printf@prec 00CE                         _leerMemoria 0D41  
                          i1_setLED 0F37                            i1_setPWM 0DBA  
                        ?_init_TMR0 0070                          ?_init_TMR1 0070  
                        ?_init_TMR2 0070                         ??_i2c_start 0029  
                       ??_i2c_write 0029                          ?_init_uart 0070  
                          _i2c_read 0D95                            _i2c_stop 0BFE  
                 ?i1_spi_write_read 0070                          _EECON1bits 018C  
                        ?_wait_MSSP 0070                  ??i1_spi_write_read 0070  
                         setLED@red 0038                   i2c_write@I2C_data 0029  
                   ??_analisisResto 002D                     ??_analisisRuido 0029  
                __end_of__stringtab 0451               __end_ofi1_leerMemoria 0CF9  
                   ___lwdiv@divisor 0029                     ___lwdiv@counter 002E  
                          __ptext10 0C1A                            __ptext11 0BE1  
                          __ptext20 0FBD                            __ptext12 0D10  
                          __ptext21 03D8                            __ptext13 0C4E  
                          __ptext30 071E                            __ptext22 04BD  
                          __ptext14 0D28                            __ptext31 0C40  
                          __ptext23 0E4A                            __ptext15 0C07  
                          __ptext40 0592                            __ptext32 0BF5  
                          __ptext24 0D5D                            __ptext16 06C0  
                          __ptext41 0F37                            __ptext33 0D95  
                          __ptext25 0D41                            __ptext17 0DE7  
                          __ptext42 05F9                            __ptext34 0BE5  
                          __ptext26 0BFE                            __ptext18 0CF9  
                          __ptext43 0CE3                            __ptext35 0C33  
                          __ptext27 0F7A                            __ptext19 0529  
                          __ptext44 065E                            __ptext36 0C26  
                          __ptext28 0EF8                            __ptext45 0E16  
                          __ptext37 004A                            __ptext29 076E  
                          __ptext38 0DBA                            __ptext39 0CCE  
                          _getLumen 0C33                            _cosasSPI 04BD  
                          _copias5s 00AA                            _contado1 00C8  
                          _init_I2C 0D10                            _init_ADC 0D28  
                          _init_SPI 0BE1                       _porcentajeMax 0052  
                     _porcentajeMin 0064                   setLED@luminosidad 0037  
                          _setLumen 076E                            _numLedes 0049  
                          _valorI2C 00A6                           printf@val 00D0  
                        _INTCONbits 000B                         ??_init_TMR0 0029  
                       ??_init_TMR1 0029                         ??_init_TMR2 0029  
                          init_ram0 0C98                         ??_init_uart 0029  
                          intlevel1 0000                 _continuoEscribiendo 0060  
                  ___lwmod@dividend 0033                           stringcode 044B  
                       ??_wait_MSSP 0029                            printf@ap 00CF  
       __end_of_getnoPrimerArranque 0D79                     ___lwmod@divisor 0031  
                   ___lwmod@counter 0036                            stringdir 044B  
                          stringtab 044B                         _porcentajeC 0050  
                       _SSPCON2bits 0091                      _spi_write_read 0E4A  
                        _SSPCONbits 0014  
