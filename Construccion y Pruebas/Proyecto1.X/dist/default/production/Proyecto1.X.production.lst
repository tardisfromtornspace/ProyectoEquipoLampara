

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Oct 16 12:53:32 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36     0000                     
    37                           ; Version 2.40
    38                           ; Generated 17/11/2021 GMT
    39                           ; 
    40                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F886 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72     0000                     	;# 
    73     0001                     	;# 
    74     0002                     	;# 
    75     0003                     	;# 
    76     0004                     	;# 
    77     0005                     	;# 
    78     0006                     	;# 
    79     0007                     	;# 
    80     0009                     	;# 
    81     000A                     	;# 
    82     000B                     	;# 
    83     000C                     	;# 
    84     000D                     	;# 
    85     000E                     	;# 
    86     000E                     	;# 
    87     000F                     	;# 
    88     0010                     	;# 
    89     0011                     	;# 
    90     0012                     	;# 
    91     0013                     	;# 
    92     0014                     	;# 
    93     0015                     	;# 
    94     0015                     	;# 
    95     0016                     	;# 
    96     0017                     	;# 
    97     0018                     	;# 
    98     0019                     	;# 
    99     001A                     	;# 
   100     001B                     	;# 
   101     001B                     	;# 
   102     001C                     	;# 
   103     001D                     	;# 
   104     001E                     	;# 
   105     001F                     	;# 
   106     0081                     	;# 
   107     0085                     	;# 
   108     0086                     	;# 
   109     0087                     	;# 
   110     0089                     	;# 
   111     008C                     	;# 
   112     008D                     	;# 
   113     008E                     	;# 
   114     008F                     	;# 
   115     0090                     	;# 
   116     0091                     	;# 
   117     0092                     	;# 
   118     0093                     	;# 
   119     0093                     	;# 
   120     0093                     	;# 
   121     0094                     	;# 
   122     0095                     	;# 
   123     0096                     	;# 
   124     0097                     	;# 
   125     0098                     	;# 
   126     0099                     	;# 
   127     009A                     	;# 
   128     009B                     	;# 
   129     009C                     	;# 
   130     009D                     	;# 
   131     009E                     	;# 
   132     009F                     	;# 
   133     0105                     	;# 
   134     0107                     	;# 
   135     0108                     	;# 
   136     0109                     	;# 
   137     010C                     	;# 
   138     010C                     	;# 
   139     010D                     	;# 
   140     010E                     	;# 
   141     010F                     	;# 
   142     0185                     	;# 
   143     0187                     	;# 
   144     0188                     	;# 
   145     0189                     	;# 
   146     018C                     	;# 
   147     018D                     	;# 
   148     0000                     	;# 
   149     0001                     	;# 
   150     0002                     	;# 
   151     0003                     	;# 
   152     0004                     	;# 
   153     0005                     	;# 
   154     0006                     	;# 
   155     0007                     	;# 
   156     0009                     	;# 
   157     000A                     	;# 
   158     000B                     	;# 
   159     000C                     	;# 
   160     000D                     	;# 
   161     000E                     	;# 
   162     000E                     	;# 
   163     000F                     	;# 
   164     0010                     	;# 
   165     0011                     	;# 
   166     0012                     	;# 
   167     0013                     	;# 
   168     0014                     	;# 
   169     0015                     	;# 
   170     0015                     	;# 
   171     0016                     	;# 
   172     0017                     	;# 
   173     0018                     	;# 
   174     0019                     	;# 
   175     001A                     	;# 
   176     001B                     	;# 
   177     001B                     	;# 
   178     001C                     	;# 
   179     001D                     	;# 
   180     001E                     	;# 
   181     001F                     	;# 
   182     0081                     	;# 
   183     0085                     	;# 
   184     0086                     	;# 
   185     0087                     	;# 
   186     0089                     	;# 
   187     008C                     	;# 
   188     008D                     	;# 
   189     008E                     	;# 
   190     008F                     	;# 
   191     0090                     	;# 
   192     0091                     	;# 
   193     0092                     	;# 
   194     0093                     	;# 
   195     0093                     	;# 
   196     0093                     	;# 
   197     0094                     	;# 
   198     0095                     	;# 
   199     0096                     	;# 
   200     0097                     	;# 
   201     0098                     	;# 
   202     0099                     	;# 
   203     009A                     	;# 
   204     009B                     	;# 
   205     009C                     	;# 
   206     009D                     	;# 
   207     009E                     	;# 
   208     009F                     	;# 
   209     0105                     	;# 
   210     0107                     	;# 
   211     0108                     	;# 
   212     0109                     	;# 
   213     010C                     	;# 
   214     010C                     	;# 
   215     010D                     	;# 
   216     010E                     	;# 
   217     010F                     	;# 
   218     0185                     	;# 
   219     0187                     	;# 
   220     0188                     	;# 
   221     0189                     	;# 
   222     018C                     	;# 
   223     018D                     	;# 
   224                           
   225                           	psect	idataCOMMON
   226     052E                     __pidataCOMMON:
   227                           
   228                           ;initializer for _porcentajeSubenBaja
   229     052E  3401               	retlw	1
   230                           
   231                           ;initializer for _porcentajeMax
   232     052F  3464               	retlw	100
   233                           
   234                           	psect	idataBANK0
   235     0526                     __pidataBANK0:
   236                           
   237                           ;initializer for _los5msen1s
   238     0526  3405               	retlw	5
   239     0527  3400               	retlw	0
   240                           
   241                           ;initializer for _contado1
   242     0528  344C               	retlw	76
   243     0529  343B               	retlw	59
   244                           
   245                           ;initializer for _elPR2
   246     052A  34A7               	retlw	167
   247                           
   248                           ;initializer for _porcentajeC
   249     052B  3464               	retlw	100
   250                           
   251                           ;initializer for _eltimer1L
   252     052C  344D               	retlw	77
   253                           
   254                           ;initializer for _eltimer1H
   255     052D  343B               	retlw	59
   256                           
   257                           	psect	strings
   258     04B9                     __pstrings:
   259     04B9                     stringtab:
   260     04B9                     __stringtab:
   261     04B9                     stringcode:	
   262                           ;	String table - string pointers are 1 byte each
   263                           
   264     04B9                     stringdir:
   265     04B9  3004               	movlw	high stringdir
   266     04BA  008A               	movwf	10
   267     04BB  0804               	movf	4,w
   268     04BC  0A84               	incf	4,f
   269     04BD  0782               	addwf	2,f
   270     04BE                     __stringbase:
   271     04BE  3400               	retlw	0
   272     04BF                     __end_of__stringtab:
   273     04BF                     _dpowers:
   274     04BF  3401               	retlw	1
   275     04C0  3400               	retlw	0
   276     04C1  340A               	retlw	10
   277     04C2  3400               	retlw	0
   278     04C3  3464               	retlw	100
   279     04C4  3400               	retlw	0
   280     04C5  34E8               	retlw	232
   281     04C6  3403               	retlw	3
   282     04C7  3410               	retlw	16
   283     04C8  3427               	retlw	39
   284     04C9                     __end_of_dpowers:
   285     0019                     _TXREG	set	25
   286     0018                     _RCSTAbits	set	24
   287     0006                     _PORTB	set	6
   288     001B                     _CCPR2L	set	27
   289     001D                     _CCP2CONbits	set	29
   290     0015                     _CCPR1L	set	21
   291     0017                     _CCP1CONbits	set	23
   292     000C                     _PIR1bits	set	12
   293     0012                     _T2CONbits	set	18
   294     000B                     _INTCONbits	set	11
   295     0001                     _TMR0	set	1
   296     0064                     _TXIF	set	100
   297     0086                     _TRISB	set	134
   298     008F                     _OSCCON	set	143
   299     0099                     _SPBRG	set	153
   300     009A                     _SPBRGH	set	154
   301     0098                     _TXSTAbits	set	152
   302     0087                     _TRISC	set	135
   303     008C                     _PIE1bits	set	140
   304     0092                     _PR2	set	146
   305     0081                     _OPTION_REGbits	set	129
   306     0187                     _BAUDCTLbits	set	391
   307     0188                     _ANSEL	set	392
   308     04C9                     STR_1:
   309     04C9  3425               	retlw	37	;'%'
   310     04CA  3464               	retlw	100	;'d'
   311     04CB  340D               	retlw	13
   312     04CC  340A               	retlw	10
   313     04CD  3400               	retlw	0
   314                           
   315                           	psect	cinit
   316     0011                     start_initialization:	
   317                           ; #config settings
   318                           
   319     0011                     __initialization:
   320                           
   321                           ; Initialize objects allocated to BANK0
   322     0011  1383               	bcf	3,7	;select IRP bank0
   323     0012  3058               	movlw	low (__pdataBANK0+8)
   324     0013  00FD               	movwf	btemp+-1
   325     0014  3005               	movlw	high __pidataBANK0
   326     0015  00FE               	movwf	btemp
   327     0016  3026               	movlw	low __pidataBANK0
   328     0017  00FF               	movwf	btemp+1
   329     0018  3050               	movlw	low __pdataBANK0
   330     0019  0084               	movwf	4
   331     001A  120A  118A  24E7  120A  118A  	fcall	init_ram0
   332                           
   333                           ; Initialize objects allocated to COMMON
   334     001F  120A  118A  252E  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   335     0024  00FB               	movwf	__pdataCOMMON& (0+127)
   336     0025  120A  118A  252F  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   337     002A  00FC               	movwf	(__pdataCOMMON+1)& (0+127)
   338                           
   339                           ; Clear objects allocated to BANK0
   340     002B  01C8               	clrf	__pbssBANK0& (0+127)
   341     002C  01C9               	clrf	(__pbssBANK0+1)& (0+127)
   342     002D  01CA               	clrf	(__pbssBANK0+2)& (0+127)
   343     002E  01CB               	clrf	(__pbssBANK0+3)& (0+127)
   344     002F  01CC               	clrf	(__pbssBANK0+4)& (0+127)
   345     0030  01CD               	clrf	(__pbssBANK0+5)& (0+127)
   346     0031  01CE               	clrf	(__pbssBANK0+6)& (0+127)
   347     0032  01CF               	clrf	(__pbssBANK0+7)& (0+127)
   348                           
   349                           ; Clear objects allocated to COMMON
   350     0033  01FD               	clrf	__pbssCOMMON& (0+127)
   351     0034                     end_of_initialization:	
   352                           ;End of C runtime variable initialization code
   353                           
   354     0034                     __end_of__initialization:
   355     0034  0183               	clrf	3
   356     0035  120A  118A  2C01   	ljmp	_main	;jump to C main() function
   357                           
   358                           	psect	bssCOMMON
   359     007D                     __pbssCOMMON:
   360     007D                     _porcentajeMin:
   361     007D                     	ds	1
   362                           
   363                           	psect	dataCOMMON
   364     007B                     __pdataCOMMON:
   365     007B                     _porcentajeSubenBaja:
   366     007B                     	ds	1
   367     007C                     _porcentajeMax:
   368     007C                     	ds	1
   369                           
   370                           	psect	bssBANK0
   371     0048                     __pbssBANK0:
   372     0048                     _copias:
   373     0048                     	ds	2
   374     004A                     _valor:
   375     004A                     	ds	2
   376     004C                     _continuar:
   377     004C                     	ds	2
   378     004E                     _x:
   379     004E                     	ds	1
   380     004F                     _porcentaje:
   381     004F                     	ds	1
   382                           
   383                           	psect	dataBANK0
   384     0050                     __pdataBANK0:
   385     0050                     _los5msen1s:
   386     0050                     	ds	2
   387     0052                     _contado1:
   388     0052                     	ds	2
   389     0054                     _elPR2:
   390     0054                     	ds	1
   391     0055                     _porcentajeC:
   392     0055                     	ds	1
   393     0056                     _eltimer1L:
   394     0056                     	ds	1
   395     0057                     _eltimer1H:
   396     0057                     	ds	1
   397                           
   398                           	psect	inittext
   399     04E3                     init_fetch0:	
   400                           ;	Called with low address in FSR and high address in W
   401                           
   402     04E3  087E               	movf	btemp,w
   403     04E4  008A               	movwf	10
   404     04E5  087F               	movf	btemp+1,w
   405     04E6  0082               	movwf	2
   406     04E7                     init_ram0:	
   407                           ;Called with:
   408                           ;	high address of idata address in btemp 
   409                           ;	low address of idata address in btemp+1 
   410                           ;	low address of data in FSR
   411                           ;	high address + 1 of data in btemp-1
   412                           
   413     04E7  120A  118A  24E3  120A  118A  	fcall	init_fetch0
   414     04EC  0080               	movwf	0
   415     04ED  0A84               	incf	4,f
   416     04EE  0804               	movf	4,w
   417     04EF  067D               	xorwf	btemp+-1,w
   418     04F0  1903               	btfsc	3,2
   419     04F1  3400               	retlw	0
   420     04F2  0AFF               	incf	btemp+1,f
   421     04F3  1903               	btfsc	3,2
   422     04F4  0AFE               	incf	btemp,f
   423     04F5  2CE7               	goto	init_ram0
   424                           
   425                           	psect	cstackCOMMON
   426     0070                     __pcstackCOMMON:
   427     0070                     ?_init_TMR0:
   428     0070                     ?_init_TMR2:	
   429                           ; 1 bytes @ 0x0
   430                           
   431     0070                     ?_init_CCP1_PWM:	
   432                           ; 1 bytes @ 0x0
   433                           
   434     0070                     ?_init_CCP2_PWM:	
   435                           ; 1 bytes @ 0x0
   436                           
   437     0070                     ?_TRAT_INT:	
   438                           ; 1 bytes @ 0x0
   439                           
   440     0070                     ?_init_uart:	
   441                           ; 1 bytes @ 0x0
   442                           
   443     0070                     ?_putch:	
   444                           ; 1 bytes @ 0x0
   445                           
   446     0070                     ?_main:	
   447                           ; 1 bytes @ 0x0
   448                           
   449     0070                     ?i1___bmul:	
   450                           ; 1 bytes @ 0x0
   451                           
   452     0070                     ?i1___wmul:	
   453                           ; 1 bytes @ 0x0
   454                           
   455     0070                     i1___bmul@multiplicand:	
   456                           ; 2 bytes @ 0x0
   457                           
   458     0070                     i1___wmul@multiplier:	
   459                           ; 1 bytes @ 0x0
   460                           
   461                           
   462                           ; 2 bytes @ 0x0
   463     0070                     	ds	1
   464     0071                     ??i1___bmul:
   465                           
   466                           ; 1 bytes @ 0x1
   467     0071                     	ds	1
   468     0072                     i1___bmul@product:
   469     0072                     i1___wmul@multiplicand:	
   470                           ; 1 bytes @ 0x2
   471                           
   472                           
   473                           ; 2 bytes @ 0x2
   474     0072                     	ds	1
   475     0073                     i1___bmul@multiplier:
   476                           
   477                           ; 1 bytes @ 0x3
   478     0073                     	ds	1
   479     0074                     ??i1___wmul:
   480     0074                     i1___wmul@product:	
   481                           ; 1 bytes @ 0x4
   482                           
   483                           
   484                           ; 2 bytes @ 0x4
   485     0074                     	ds	2
   486     0076                     ?i1___awdiv:
   487     0076                     i1___awdiv@divisor:	
   488                           ; 2 bytes @ 0x6
   489                           
   490                           
   491                           ; 2 bytes @ 0x6
   492     0076                     	ds	2
   493     0078                     i1___awdiv@dividend:
   494                           
   495                           ; 2 bytes @ 0x8
   496     0078                     	ds	2
   497     007A                     ??i1___awdiv:
   498                           
   499                           ; 1 bytes @ 0xA
   500     007A                     	ds	1
   501                           
   502                           	psect	cstackBANK0
   503     0020                     __pcstackBANK0:
   504     0020                     i1___awdiv@counter:
   505                           
   506                           ; 1 bytes @ 0x0
   507     0020                     	ds	1
   508     0021                     i1___awdiv@sign:
   509                           
   510                           ; 1 bytes @ 0x1
   511     0021                     	ds	1
   512     0022                     i1___awdiv@quotient:
   513                           
   514                           ; 2 bytes @ 0x2
   515     0022                     	ds	2
   516     0024                     ??_TRAT_INT:
   517                           
   518                           ; 1 bytes @ 0x4
   519     0024                     	ds	10
   520     002E                     ??_init_TMR0:
   521     002E                     ??_init_TMR2:	
   522                           ; 1 bytes @ 0xE
   523                           
   524     002E                     ??_init_uart:	
   525                           ; 1 bytes @ 0xE
   526                           
   527     002E                     ??_putch:	
   528                           ; 1 bytes @ 0xE
   529                           
   530     002E                     ?___bmul:	
   531                           ; 1 bytes @ 0xE
   532                           
   533     002E                     ?___wmul:	
   534                           ; 1 bytes @ 0xE
   535                           
   536     002E                     ?___lwdiv:	
   537                           ; 2 bytes @ 0xE
   538                           
   539     002E                     putch@c:	
   540                           ; 2 bytes @ 0xE
   541                           
   542     002E                     ___bmul@multiplicand:	
   543                           ; 1 bytes @ 0xE
   544                           
   545     002E                     ___wmul@multiplier:	
   546                           ; 1 bytes @ 0xE
   547                           
   548     002E                     ___lwdiv@divisor:	
   549                           ; 2 bytes @ 0xE
   550                           
   551                           
   552                           ; 2 bytes @ 0xE
   553     002E                     	ds	1
   554     002F                     ??___bmul:
   555                           
   556                           ; 1 bytes @ 0xF
   557     002F                     	ds	1
   558     0030                     ___bmul@product:
   559     0030                     ___wmul@multiplicand:	
   560                           ; 1 bytes @ 0x10
   561                           
   562     0030                     ___lwdiv@dividend:	
   563                           ; 2 bytes @ 0x10
   564                           
   565                           
   566                           ; 2 bytes @ 0x10
   567     0030                     	ds	1
   568     0031                     ___bmul@multiplier:
   569                           
   570                           ; 1 bytes @ 0x11
   571     0031                     	ds	1
   572     0032                     ??___wmul:
   573     0032                     ??___lwdiv:	
   574                           ; 1 bytes @ 0x12
   575                           
   576     0032                     ___wmul@product:	
   577                           ; 1 bytes @ 0x12
   578                           
   579                           
   580                           ; 2 bytes @ 0x12
   581     0032                     	ds	1
   582     0033                     ___lwdiv@quotient:
   583                           
   584                           ; 2 bytes @ 0x13
   585     0033                     	ds	1
   586     0034                     ?___awdiv:
   587     0034                     ___awdiv@divisor:	
   588                           ; 2 bytes @ 0x14
   589                           
   590                           
   591                           ; 2 bytes @ 0x14
   592     0034                     	ds	1
   593     0035                     ___lwdiv@counter:
   594                           
   595                           ; 1 bytes @ 0x15
   596     0035                     	ds	1
   597     0036                     ?___lwmod:
   598     0036                     ___awdiv@dividend:	
   599                           ; 2 bytes @ 0x16
   600                           
   601     0036                     ___lwmod@divisor:	
   602                           ; 2 bytes @ 0x16
   603                           
   604                           
   605                           ; 2 bytes @ 0x16
   606     0036                     	ds	2
   607     0038                     ??___awdiv:
   608     0038                     ___lwmod@dividend:	
   609                           ; 1 bytes @ 0x18
   610                           
   611                           
   612                           ; 2 bytes @ 0x18
   613     0038                     	ds	1
   614     0039                     ___awdiv@counter:
   615                           
   616                           ; 1 bytes @ 0x19
   617     0039                     	ds	1
   618     003A                     ??___lwmod:
   619     003A                     ___awdiv@sign:	
   620                           ; 1 bytes @ 0x1A
   621                           
   622                           
   623                           ; 1 bytes @ 0x1A
   624     003A                     	ds	1
   625     003B                     ___lwmod@counter:
   626     003B                     ___awdiv@quotient:	
   627                           ; 1 bytes @ 0x1B
   628                           
   629                           
   630                           ; 2 bytes @ 0x1B
   631     003B                     	ds	1
   632     003C                     ?_printf:
   633                           
   634                           ; 2 bytes @ 0x1C
   635     003C                     	ds	1
   636     003D                     ??_init_CCP1_PWM:
   637     003D                     ??_init_CCP2_PWM:	
   638                           ; 1 bytes @ 0x1D
   639                           
   640                           
   641                           ; 1 bytes @ 0x1D
   642     003D                     	ds	1
   643     003E                     ??_printf:
   644                           
   645                           ; 1 bytes @ 0x1E
   646     003E                     	ds	3
   647     0041                     printf@ap:
   648                           
   649                           ; 1 bytes @ 0x21
   650     0041                     	ds	1
   651     0042                     printf@flag:
   652                           
   653                           ; 1 bytes @ 0x22
   654     0042                     	ds	1
   655     0043                     printf@prec:
   656                           
   657                           ; 1 bytes @ 0x23
   658     0043                     	ds	1
   659     0044                     printf@f:
   660                           
   661                           ; 1 bytes @ 0x24
   662     0044                     	ds	1
   663     0045                     printf@val:
   664                           
   665                           ; 2 bytes @ 0x25
   666     0045                     	ds	2
   667     0047                     printf@c:
   668                           
   669                           ; 1 bytes @ 0x27
   670     0047                     	ds	1
   671     0048                     ??_main:
   672                           
   673                           	psect	maintext
   674     0401                     __pmaintext:	
   675                           ; 1 bytes @ 0x28
   676 ;;
   677 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   678 ;;
   679 ;; *************** function _main *****************
   680 ;; Defined at:
   681 ;;		line 211 in file "pwm-1.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;		None
   684 ;; Auto vars:     Size  Location     Type
   685 ;;		None
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   690 ;; Tracked objects:
   691 ;;		On entry : B00/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   695 ;;      Params:         0       0       0       0       0
   696 ;;      Locals:         0       0       0       0       0
   697 ;;      Temps:          0       0       0       0       0
   698 ;;      Totals:         0       0       0       0       0
   699 ;;Total ram usage:        0 bytes
   700 ;; Hardware stack levels required when called: 4
   701 ;; This function calls:
   702 ;;		_init_CCP1_PWM
   703 ;;		_init_CCP2_PWM
   704 ;;		_init_TMR0
   705 ;;		_init_TMR2
   706 ;;		_init_uart
   707 ;;		_printf
   708 ;; This function is called by:
   709 ;;		Startup code after reset
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713     0401                     _main:	
   714                           ;psect for function _main
   715                           
   716     0401                     l1499:	
   717                           ;incstack = 0
   718                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   719                           
   720                           
   721                           ;pwm-1.c: 212:     OSCCON = 0b00001000;
   722     0401  3008               	movlw	8
   723     0402  1683               	bsf	3,5	;RP0=1, select bank1
   724     0403  1303               	bcf	3,6	;RP1=0, select bank1
   725     0404  008F               	movwf	15	;volatile
   726     0405                     l1501:
   727                           
   728                           ;pwm-1.c: 214:     init_uart();
   729     0405  120A  118A  2486  120A  118A  	fcall	_init_uart
   730     040A                     l1503:
   731                           
   732                           ;pwm-1.c: 216:     init_TMR0();
   733     040A  120A  118A  251A  120A  118A  	fcall	_init_TMR0
   734     040F                     l1505:
   735                           
   736                           ;pwm-1.c: 218:     init_TMR2();
   737     040F  120A  118A  2508  120A  118A  	fcall	_init_TMR2
   738     0414                     l1507:
   739                           
   740                           ;pwm-1.c: 220:     init_CCP1_PWM();
   741     0414  120A  118A  2338  120A  118A  	fcall	_init_CCP1_PWM
   742     0419                     l1509:
   743                           
   744                           ;pwm-1.c: 221:     init_CCP2_PWM();
   745     0419  120A  118A  21F9  120A  118A  	fcall	_init_CCP2_PWM
   746     041E                     l1511:
   747                           
   748                           ;pwm-1.c: 223:     TRISB = 0;
   749     041E  1683               	bsf	3,5	;RP0=1, select bank1
   750     041F  1303               	bcf	3,6	;RP1=0, select bank1
   751     0420  0186               	clrf	6	;volatile
   752     0421                     l1513:
   753                           
   754                           ;pwm-1.c: 225:     INTCONbits.GIE = 1;
   755     0421  178B               	bsf	11,7	;volatile
   756     0422                     l1515:
   757                           
   758                           ;pwm-1.c: 226:     INTCONbits.PEIE = 1;
   759     0422  170B               	bsf	11,6	;volatile
   760     0423                     l1517:
   761     0423  1283               	bcf	3,5	;RP0=0, select bank0
   762     0424  1303               	bcf	3,6	;RP1=0, select bank0
   763     0425  084C               	movf	_continuar,w
   764     0426  044D               	iorwf	_continuar+1,w
   765     0427  1903               	btfsc	3,2
   766     0428  2C2A               	goto	u1221
   767     0429  2C2B               	goto	u1220
   768     042A                     u1221:
   769     042A  2C23               	goto	l1517
   770     042B                     u1220:
   771     042B                     l1519:
   772                           
   773                           ;pwm-1.c: 230:         continuar = 0;
   774     042B  01CC               	clrf	_continuar
   775     042C  01CD               	clrf	_continuar+1
   776     042D                     l1521:
   777                           
   778                           ;pwm-1.c: 231:         printf("%d\r\n", valor);
   779     042D  3000               	movlw	0
   780     042E  00BC               	movwf	?_printf
   781     042F  00BD               	movwf	?_printf+1
   782     0430  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   783     0431  120A  118A  2124  120A  118A  	fcall	_printf
   784     0436  2C23               	goto	l1517
   785     0437  120A  118A  280E   	ljmp	start
   786     043A                     __end_of_main:
   787                           
   788                           	psect	text1
   789     0124                     __ptext1:	
   790 ;; *************** function _printf *****************
   791 ;; Defined at:
   792 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;  f               1    wreg     PTR const unsigned char 
   795 ;;		 -> STR_1(5), 
   796 ;; Auto vars:     Size  Location     Type
   797 ;;  f               1   36[BANK0 ] PTR const unsigned char 
   798 ;;		 -> STR_1(5), 
   799 ;;  tmpval          4    0        struct .
   800 ;;  val             2   37[BANK0 ] unsigned int 
   801 ;;  cp              2    0        PTR const unsigned char 
   802 ;;  len             2    0        unsigned int 
   803 ;;  c               1   39[BANK0 ] unsigned char 
   804 ;;  prec            1   35[BANK0 ] char 
   805 ;;  flag            1   34[BANK0 ] unsigned char 
   806 ;;  ap              1   33[BANK0 ] PTR void [1]
   807 ;;		 -> ?_printf(2), 
   808 ;; Return value:  Size  Location     Type
   809 ;;                  2   28[BANK0 ] int 
   810 ;; Registers used:
   811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   817 ;;      Params:         0       2       0       0       0
   818 ;;      Locals:         0       7       0       0       0
   819 ;;      Temps:          0       3       0       0       0
   820 ;;      Totals:         0      12       0       0       0
   821 ;;Total ram usage:       12 bytes
   822 ;; Hardware stack levels used: 1
   823 ;; Hardware stack levels required when called: 3
   824 ;; This function calls:
   825 ;;		___lwdiv
   826 ;;		___lwmod
   827 ;;		_putch
   828 ;; This function is called by:
   829 ;;		_main
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833     0124                     _printf:	
   834                           ;psect for function _printf
   835                           
   836                           
   837                           ;incstack = 0
   838                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   839                           ;printf@f stored from wreg
   840     0124  1283               	bcf	3,5	;RP0=0, select bank0
   841     0125  1303               	bcf	3,6	;RP1=0, select bank0
   842     0126  00C4               	movwf	printf@f
   843     0127                     l1335:
   844                           
   845                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
   846     0127  303C               	movlw	(low (?_printf| 0))& (0+255)
   847     0128  00C1               	movwf	printf@ap
   848                           
   849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   850     0129  29E6               	goto	l1381
   851     012A                     l1337:
   852                           
   853                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   854     012A  3025               	movlw	37
   855     012B  0647               	xorwf	printf@c,w
   856     012C  1903               	btfsc	3,2
   857     012D  292F               	goto	u931
   858     012E  2930               	goto	u930
   859     012F                     u931:
   860     012F  2937               	goto	l1341
   861     0130                     u930:
   862     0130                     l1339:
   863                           
   864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
   865     0130  0847               	movf	printf@c,w
   866     0131  120A  118A  24F6  120A  118A  	fcall	_putch
   867                           
   868                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
   869     0136  29E6               	goto	l1381
   870     0137                     l1341:
   871                           
   872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   873     0137  01C2               	clrf	printf@flag
   874     0138                     l1345:	
   875                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
   876                           
   877     0138  3001               	movlw	1
   878     0139  07C4               	addwf	printf@f,f
   879     013A  30FF               	movlw	-1
   880     013B  0744               	addwf	printf@f,w
   881     013C  0084               	movwf	4
   882     013D  120A  118A  24B9  120A  118A  	fcall	stringdir
   883     0142  00C7               	movwf	printf@c
   884     0143  00BE               	movwf	??_printf
   885     0144  01BF               	clrf	??_printf+1
   886                           
   887                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   888                           ; Switch size 1, requested type "simple"
   889                           ; Number of cases is 1, Range of values is 0 to 0
   890                           ; switch strategies available:
   891                           ; Name         Instructions Cycles
   892                           ; simple_byte            4     3 (average)
   893                           ; direct_byte           11     8 (fixed)
   894                           ; jumptable            260     6 (fixed)
   895                           ;	Chosen strategy is simple_byte
   896     0145  083F               	movf	??_printf+1,w
   897     0146  3A00               	xorlw	0	; case 0
   898     0147  1903               	skipnz
   899     0148  294A               	goto	l1543
   900     0149  29E6               	goto	l1381
   901     014A                     l1543:
   902                           
   903                           ; Switch size 1, requested type "simple"
   904                           ; Number of cases is 3, Range of values is 0 to 105
   905                           ; switch strategies available:
   906                           ; Name         Instructions Cycles
   907                           ; simple_byte           10     6 (average)
   908                           ; jumptable            260     6 (fixed)
   909                           ;	Chosen strategy is simple_byte
   910     014A  083E               	movf	??_printf,w
   911     014B  3A00               	xorlw	0	; case 0
   912     014C  1903               	skipnz
   913     014D  29F8               	goto	l237
   914     014E  3A64               	xorlw	100	; case 100
   915     014F  1903               	skipnz
   916     0150  2955               	goto	l1347
   917     0151  3A0D               	xorlw	13	; case 105
   918     0152  1903               	skipnz
   919     0153  2955               	goto	l1347
   920     0154  29E6               	goto	l1381
   921     0155                     l1347:
   922                           
   923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
   924     0155  0841               	movf	printf@ap,w
   925     0156  0084               	movwf	4
   926     0157  1383               	bcf	3,7	;select IRP bank0
   927     0158  0800               	movf	0,w
   928     0159  00C5               	movwf	printf@val
   929     015A  0A84               	incf	4,f
   930     015B  0800               	movf	0,w
   931     015C  00C6               	movwf	printf@val+1
   932     015D                     l1349:
   933     015D  3002               	movlw	2
   934     015E  00BE               	movwf	??_printf
   935     015F  083E               	movf	??_printf,w
   936     0160  07C1               	addwf	printf@ap,f
   937     0161                     l1351:
   938                           
   939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
   940     0161  1FC6               	btfss	printf@val+1,7
   941     0162  2964               	goto	u941
   942     0163  2965               	goto	u940
   943     0164                     u941:
   944     0164  296E               	goto	l1357
   945     0165                     u940:
   946     0165                     l1353:
   947                           
   948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
   949     0165  3003               	movlw	3
   950     0166  00BE               	movwf	??_printf
   951     0167  083E               	movf	??_printf,w
   952     0168  04C2               	iorwf	printf@flag,f
   953     0169                     l1355:
   954                           
   955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
   956     0169  09C5               	comf	printf@val,f
   957     016A  09C6               	comf	printf@val+1,f
   958     016B  0AC5               	incf	printf@val,f
   959     016C  1903               	skipnz
   960     016D  0AC6               	incf	printf@val+1,f
   961     016E                     l1357:
   962                           
   963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
   964     016E  01C7               	clrf	printf@c
   965     016F  0AC7               	incf	printf@c,f
   966     0170                     l1363:
   967                           
   968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
   969     0170  0847               	movf	printf@c,w
   970     0171  00BE               	movwf	??_printf
   971     0172  073E               	addwf	??_printf,w
   972     0173  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   973     0174  0084               	movwf	4
   974     0175  120A  118A  24B9  120A  118A  	fcall	stringdir
   975     017A  00BF               	movwf	??_printf+1
   976     017B  120A  118A  24B9  120A  118A  	fcall	stringdir
   977     0180  00C0               	movwf	??_printf+2
   978     0181  0840               	movf	??_printf+2,w
   979     0182  0246               	subwf	printf@val+1,w
   980     0183  1D03               	skipz
   981     0184  2987               	goto	u955
   982     0185  083F               	movf	??_printf+1,w
   983     0186  0245               	subwf	printf@val,w
   984     0187                     u955:
   985     0187  1803               	skipnc
   986     0188  298A               	goto	u951
   987     0189  298B               	goto	u950
   988     018A                     u951:
   989     018A  298C               	goto	l1367
   990     018B                     u950:
   991     018B  2996               	goto	l1369
   992     018C                     l1367:
   993     018C  3001               	movlw	1
   994     018D  00BE               	movwf	??_printf
   995     018E  083E               	movf	??_printf,w
   996     018F  07C7               	addwf	printf@c,f
   997     0190  3005               	movlw	5
   998     0191  0647               	xorwf	printf@c,w
   999     0192  1D03               	btfss	3,2
  1000     0193  2995               	goto	u961
  1001     0194  2996               	goto	u960
  1002     0195                     u961:
  1003     0195  2970               	goto	l1363
  1004     0196                     u960:
  1005     0196                     l1369:
  1006                           
  1007                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1008     0196  0842               	movf	printf@flag,w
  1009     0197  3903               	andlw	3
  1010     0198  1903               	btfsc	3,2
  1011     0199  299B               	goto	u971
  1012     019A  299C               	goto	u970
  1013     019B                     u971:
  1014     019B  29A2               	goto	l1373
  1015     019C                     u970:
  1016     019C                     l1371:
  1017                           
  1018                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     (putch(
      +                          '-') );
  1019     019C  302D               	movlw	45
  1020     019D  120A  118A  24F6  120A  118A  	fcall	_putch
  1021     01A2                     l1373:
  1022                           
  1023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1024     01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1025     01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1026     01A4  0847               	movf	printf@c,w
  1027     01A5  00C3               	movwf	printf@prec
  1028                           
  1029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1030     01A6  29DB               	goto	l1379
  1031     01A7                     l1375:
  1032                           
  1033                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1034     01A7  300A               	movlw	10
  1035     01A8  00B6               	movwf	___lwmod@divisor
  1036     01A9  3000               	movlw	0
  1037     01AA  00B7               	movwf	___lwmod@divisor+1
  1038     01AB  0843               	movf	printf@prec,w
  1039     01AC  00BE               	movwf	??_printf
  1040     01AD  073E               	addwf	??_printf,w
  1041     01AE  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1042     01AF  0084               	movwf	4
  1043     01B0  120A  118A  24B9  120A  118A  	fcall	stringdir
  1044     01B5  00AE               	movwf	___lwdiv@divisor
  1045     01B6  120A  118A  24B9  120A  118A  	fcall	stringdir
  1046     01BB  00AF               	movwf	___lwdiv@divisor+1
  1047     01BC  0846               	movf	printf@val+1,w
  1048     01BD  00B1               	movwf	___lwdiv@dividend+1
  1049     01BE  0845               	movf	printf@val,w
  1050     01BF  00B0               	movwf	___lwdiv@dividend
  1051     01C0  120A  118A  237F  120A  118A  	fcall	___lwdiv
  1052     01C5  1283               	bcf	3,5	;RP0=0, select bank0
  1053     01C6  1303               	bcf	3,6	;RP1=0, select bank0
  1054     01C7  082F               	movf	?___lwdiv+1,w
  1055     01C8  00B9               	movwf	___lwmod@dividend+1
  1056     01C9  082E               	movf	?___lwdiv,w
  1057     01CA  00B8               	movwf	___lwmod@dividend
  1058     01CB  120A  118A  23C5  120A  118A  	fcall	___lwmod
  1059     01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1060     01D1  1303               	bcf	3,6	;RP1=0, select bank0
  1061     01D2  0836               	movf	?___lwmod,w
  1062     01D3  3E30               	addlw	48
  1063     01D4  00C7               	movwf	printf@c
  1064     01D5                     l1377:
  1065                           
  1066                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    (putch(c) );
  1067     01D5  0847               	movf	printf@c,w
  1068     01D6  120A  118A  24F6  120A  118A  	fcall	_putch
  1069     01DB                     l1379:
  1070                           
  1071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1072     01DB  30FF               	movlw	255
  1073     01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1074     01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1075     01DE  00BE               	movwf	??_printf
  1076     01DF  083E               	movf	??_printf,w
  1077     01E0  07C3               	addwf	printf@prec,f
  1078     01E1  0A43               	incf	printf@prec,w
  1079     01E2  1D03               	btfss	3,2
  1080     01E3  29E5               	goto	u981
  1081     01E4  29E6               	goto	u980
  1082     01E5                     u981:
  1083     01E5  29A7               	goto	l1375
  1084     01E6                     u980:
  1085     01E6                     l1381:
  1086                           
  1087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1088     01E6  3001               	movlw	1
  1089     01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1090     01E8  1303               	bcf	3,6	;RP1=0, select bank0
  1091     01E9  07C4               	addwf	printf@f,f
  1092     01EA  30FF               	movlw	-1
  1093     01EB  0744               	addwf	printf@f,w
  1094     01EC  0084               	movwf	4
  1095     01ED  120A  118A  24B9  120A  118A  	fcall	stringdir
  1096     01F2  00C7               	movwf	printf@c
  1097     01F3  0847               	movf	printf@c,w
  1098     01F4  1D03               	btfss	3,2
  1099     01F5  29F7               	goto	u991
  1100     01F6  29F8               	goto	u990
  1101     01F7                     u991:
  1102     01F7  292A               	goto	l1337
  1103     01F8                     u990:
  1104     01F8                     l237:
  1105     01F8  0008               	return
  1106     01F9                     __end_of_printf:
  1107                           
  1108                           	psect	text2
  1109     04F6                     __ptext2:	
  1110 ;; *************** function _putch *****************
  1111 ;; Defined at:
  1112 ;;		line 203 in file "pwm-1.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  c               1    wreg     unsigned char 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  c               1   14[BANK0 ] unsigned char 
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1126 ;;      Params:         0       0       0       0       0
  1127 ;;      Locals:         0       1       0       0       0
  1128 ;;      Temps:          0       0       0       0       0
  1129 ;;      Totals:         0       1       0       0       0
  1130 ;;Total ram usage:        1 bytes
  1131 ;; Hardware stack levels used: 1
  1132 ;; Hardware stack levels required when called: 2
  1133 ;; This function calls:
  1134 ;;		Nothing
  1135 ;; This function is called by:
  1136 ;;		_printf
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140     04F6                     _putch:	
  1141                           ;psect for function _putch
  1142                           
  1143                           
  1144                           ;incstack = 0
  1145                           ; Regs used in _putch: [wreg]
  1146                           ;putch@c stored from wreg
  1147     04F6  1283               	bcf	3,5	;RP0=0, select bank0
  1148     04F7  1303               	bcf	3,6	;RP1=0, select bank0
  1149     04F8  00AE               	movwf	putch@c
  1150     04F9                     l1145:
  1151     04F9                     l109:	
  1152                           ;pwm-1.c: 207:     }
  1153                           
  1154                           
  1155                           ;pwm-1.c: 204:     while (!TXIF && !TXSTAbits.TRMT) {
  1156     04F9  1283               	bcf	3,5	;RP0=0, select bank0
  1157     04FA  1A0C               	btfsc	12,4	;volatile
  1158     04FB  2CFD               	goto	u621
  1159     04FC  2CFE               	goto	u620
  1160     04FD                     u621:
  1161     04FD  2D04               	goto	l1149
  1162     04FE                     u620:
  1163     04FE                     l1147:
  1164     04FE  1683               	bsf	3,5	;RP0=1, select bank1
  1165     04FF  1303               	bcf	3,6	;RP1=0, select bank1
  1166     0500  1C98               	btfss	24,1	;volatile
  1167     0501  2D03               	goto	u631
  1168     0502  2D04               	goto	u630
  1169     0503                     u631:
  1170     0503  2CF9               	goto	l109
  1171     0504                     u630:
  1172     0504                     l1149:
  1173                           
  1174                           ;pwm-1.c: 208:     TXREG = c;
  1175     0504  1283               	bcf	3,5	;RP0=0, select bank0
  1176     0505  082E               	movf	putch@c,w
  1177     0506  0099               	movwf	25	;volatile
  1178     0507                     l114:
  1179     0507  0008               	return
  1180     0508                     __end_of_putch:
  1181                           
  1182                           	psect	text3
  1183     03C5                     __ptext3:	
  1184 ;; *************** function ___lwmod *****************
  1185 ;; Defined at:
  1186 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;  divisor         2   22[BANK0 ] unsigned int 
  1189 ;;  dividend        2   24[BANK0 ] unsigned int 
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;  counter         1   27[BANK0 ] unsigned char 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  2   22[BANK0 ] unsigned int 
  1194 ;; Registers used:
  1195 ;;		wreg, status,2, status,0
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1201 ;;      Params:         0       4       0       0       0
  1202 ;;      Locals:         0       1       0       0       0
  1203 ;;      Temps:          0       1       0       0       0
  1204 ;;      Totals:         0       6       0       0       0
  1205 ;;Total ram usage:        6 bytes
  1206 ;; Hardware stack levels used: 1
  1207 ;; Hardware stack levels required when called: 2
  1208 ;; This function calls:
  1209 ;;		Nothing
  1210 ;; This function is called by:
  1211 ;;		_printf
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215     03C5                     ___lwmod:	
  1216                           ;psect for function ___lwmod
  1217                           
  1218     03C5                     l1249:	
  1219                           ;incstack = 0
  1220                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1221                           
  1222     03C5  1283               	bcf	3,5	;RP0=0, select bank0
  1223     03C6  1303               	bcf	3,6	;RP1=0, select bank0
  1224     03C7  0836               	movf	___lwmod@divisor,w
  1225     03C8  0437               	iorwf	___lwmod@divisor+1,w
  1226     03C9  1903               	btfsc	3,2
  1227     03CA  2BCC               	goto	u871
  1228     03CB  2BCD               	goto	u870
  1229     03CC                     u871:
  1230     03CC  2BFC               	goto	l1267
  1231     03CD                     u870:
  1232     03CD                     l1251:
  1233     03CD  01BB               	clrf	___lwmod@counter
  1234     03CE  0ABB               	incf	___lwmod@counter,f
  1235     03CF  2BDB               	goto	l1257
  1236     03D0                     l1253:
  1237     03D0  3001               	movlw	1
  1238     03D1                     u885:
  1239     03D1  1003               	clrc
  1240     03D2  0DB6               	rlf	___lwmod@divisor,f
  1241     03D3  0DB7               	rlf	___lwmod@divisor+1,f
  1242     03D4  3EFF               	addlw	-1
  1243     03D5  1D03               	skipz
  1244     03D6  2BD1               	goto	u885
  1245     03D7                     l1255:
  1246     03D7  3001               	movlw	1
  1247     03D8  00BA               	movwf	??___lwmod
  1248     03D9  083A               	movf	??___lwmod,w
  1249     03DA  07BB               	addwf	___lwmod@counter,f
  1250     03DB                     l1257:
  1251     03DB  1FB7               	btfss	___lwmod@divisor+1,7
  1252     03DC  2BDE               	goto	u891
  1253     03DD  2BDF               	goto	u890
  1254     03DE                     u891:
  1255     03DE  2BD0               	goto	l1253
  1256     03DF                     u890:
  1257     03DF                     l1259:
  1258     03DF  0837               	movf	___lwmod@divisor+1,w
  1259     03E0  0239               	subwf	___lwmod@dividend+1,w
  1260     03E1  1D03               	skipz
  1261     03E2  2BE5               	goto	u905
  1262     03E3  0836               	movf	___lwmod@divisor,w
  1263     03E4  0238               	subwf	___lwmod@dividend,w
  1264     03E5                     u905:
  1265     03E5  1C03               	skipc
  1266     03E6  2BE8               	goto	u901
  1267     03E7  2BE9               	goto	u900
  1268     03E8                     u901:
  1269     03E8  2BEF               	goto	l1263
  1270     03E9                     u900:
  1271     03E9                     l1261:
  1272     03E9  0836               	movf	___lwmod@divisor,w
  1273     03EA  02B8               	subwf	___lwmod@dividend,f
  1274     03EB  0837               	movf	___lwmod@divisor+1,w
  1275     03EC  1C03               	skipc
  1276     03ED  03B9               	decf	___lwmod@dividend+1,f
  1277     03EE  02B9               	subwf	___lwmod@dividend+1,f
  1278     03EF                     l1263:
  1279     03EF  3001               	movlw	1
  1280     03F0                     u915:
  1281     03F0  1003               	clrc
  1282     03F1  0CB7               	rrf	___lwmod@divisor+1,f
  1283     03F2  0CB6               	rrf	___lwmod@divisor,f
  1284     03F3  3EFF               	addlw	-1
  1285     03F4  1D03               	skipz
  1286     03F5  2BF0               	goto	u915
  1287     03F6                     l1265:
  1288     03F6  3001               	movlw	1
  1289     03F7  02BB               	subwf	___lwmod@counter,f
  1290     03F8  1D03               	btfss	3,2
  1291     03F9  2BFB               	goto	u921
  1292     03FA  2BFC               	goto	u920
  1293     03FB                     u921:
  1294     03FB  2BDF               	goto	l1259
  1295     03FC                     u920:
  1296     03FC                     l1267:
  1297     03FC  0839               	movf	___lwmod@dividend+1,w
  1298     03FD  00B7               	movwf	?___lwmod+1
  1299     03FE  0838               	movf	___lwmod@dividend,w
  1300     03FF  00B6               	movwf	?___lwmod
  1301     0400                     l523:
  1302     0400  0008               	return
  1303     0401                     __end_of___lwmod:
  1304                           
  1305                           	psect	text4
  1306     037F                     __ptext4:	
  1307 ;; *************** function ___lwdiv *****************
  1308 ;; Defined at:
  1309 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;  divisor         2   14[BANK0 ] unsigned int 
  1312 ;;  dividend        2   16[BANK0 ] unsigned int 
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;  quotient        2   19[BANK0 ] unsigned int 
  1315 ;;  counter         1   21[BANK0 ] unsigned char 
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  2   14[BANK0 ] unsigned int 
  1318 ;; Registers used:
  1319 ;;		wreg, status,2, status,0
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1325 ;;      Params:         0       4       0       0       0
  1326 ;;      Locals:         0       3       0       0       0
  1327 ;;      Temps:          0       1       0       0       0
  1328 ;;      Totals:         0       8       0       0       0
  1329 ;;Total ram usage:        8 bytes
  1330 ;; Hardware stack levels used: 1
  1331 ;; Hardware stack levels required when called: 2
  1332 ;; This function calls:
  1333 ;;		Nothing
  1334 ;; This function is called by:
  1335 ;;		_printf
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339     037F                     ___lwdiv:	
  1340                           ;psect for function ___lwdiv
  1341                           
  1342     037F                     l1223:	
  1343                           ;incstack = 0
  1344                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1345                           
  1346     037F  1283               	bcf	3,5	;RP0=0, select bank0
  1347     0380  1303               	bcf	3,6	;RP1=0, select bank0
  1348     0381  01B3               	clrf	___lwdiv@quotient
  1349     0382  01B4               	clrf	___lwdiv@quotient+1
  1350     0383                     l1225:
  1351     0383  082E               	movf	___lwdiv@divisor,w
  1352     0384  042F               	iorwf	___lwdiv@divisor+1,w
  1353     0385  1903               	btfsc	3,2
  1354     0386  2B88               	goto	u801
  1355     0387  2B89               	goto	u800
  1356     0388                     u801:
  1357     0388  2BC0               	goto	l1245
  1358     0389                     u800:
  1359     0389                     l1227:
  1360     0389  01B5               	clrf	___lwdiv@counter
  1361     038A  0AB5               	incf	___lwdiv@counter,f
  1362     038B  2B97               	goto	l1233
  1363     038C                     l1229:
  1364     038C  3001               	movlw	1
  1365     038D                     u815:
  1366     038D  1003               	clrc
  1367     038E  0DAE               	rlf	___lwdiv@divisor,f
  1368     038F  0DAF               	rlf	___lwdiv@divisor+1,f
  1369     0390  3EFF               	addlw	-1
  1370     0391  1D03               	skipz
  1371     0392  2B8D               	goto	u815
  1372     0393                     l1231:
  1373     0393  3001               	movlw	1
  1374     0394  00B2               	movwf	??___lwdiv
  1375     0395  0832               	movf	??___lwdiv,w
  1376     0396  07B5               	addwf	___lwdiv@counter,f
  1377     0397                     l1233:
  1378     0397  1FAF               	btfss	___lwdiv@divisor+1,7
  1379     0398  2B9A               	goto	u821
  1380     0399  2B9B               	goto	u820
  1381     039A                     u821:
  1382     039A  2B8C               	goto	l1229
  1383     039B                     u820:
  1384     039B                     l1235:
  1385     039B  3001               	movlw	1
  1386     039C                     u835:
  1387     039C  1003               	clrc
  1388     039D  0DB3               	rlf	___lwdiv@quotient,f
  1389     039E  0DB4               	rlf	___lwdiv@quotient+1,f
  1390     039F  3EFF               	addlw	-1
  1391     03A0  1D03               	skipz
  1392     03A1  2B9C               	goto	u835
  1393     03A2  082F               	movf	___lwdiv@divisor+1,w
  1394     03A3  0231               	subwf	___lwdiv@dividend+1,w
  1395     03A4  1D03               	skipz
  1396     03A5  2BA8               	goto	u845
  1397     03A6  082E               	movf	___lwdiv@divisor,w
  1398     03A7  0230               	subwf	___lwdiv@dividend,w
  1399     03A8                     u845:
  1400     03A8  1C03               	skipc
  1401     03A9  2BAB               	goto	u841
  1402     03AA  2BAC               	goto	u840
  1403     03AB                     u841:
  1404     03AB  2BB3               	goto	l1241
  1405     03AC                     u840:
  1406     03AC                     l1237:
  1407     03AC  082E               	movf	___lwdiv@divisor,w
  1408     03AD  02B0               	subwf	___lwdiv@dividend,f
  1409     03AE  082F               	movf	___lwdiv@divisor+1,w
  1410     03AF  1C03               	skipc
  1411     03B0  03B1               	decf	___lwdiv@dividend+1,f
  1412     03B1  02B1               	subwf	___lwdiv@dividend+1,f
  1413     03B2                     l1239:
  1414     03B2  1433               	bsf	___lwdiv@quotient,0
  1415     03B3                     l1241:
  1416     03B3  3001               	movlw	1
  1417     03B4                     u855:
  1418     03B4  1003               	clrc
  1419     03B5  0CAF               	rrf	___lwdiv@divisor+1,f
  1420     03B6  0CAE               	rrf	___lwdiv@divisor,f
  1421     03B7  3EFF               	addlw	-1
  1422     03B8  1D03               	skipz
  1423     03B9  2BB4               	goto	u855
  1424     03BA                     l1243:
  1425     03BA  3001               	movlw	1
  1426     03BB  02B5               	subwf	___lwdiv@counter,f
  1427     03BC  1D03               	btfss	3,2
  1428     03BD  2BBF               	goto	u861
  1429     03BE  2BC0               	goto	u860
  1430     03BF                     u861:
  1431     03BF  2B9B               	goto	l1235
  1432     03C0                     u860:
  1433     03C0                     l1245:
  1434     03C0  0834               	movf	___lwdiv@quotient+1,w
  1435     03C1  00AF               	movwf	?___lwdiv+1
  1436     03C2  0833               	movf	___lwdiv@quotient,w
  1437     03C3  00AE               	movwf	?___lwdiv
  1438     03C4                     l513:
  1439     03C4  0008               	return
  1440     03C5                     __end_of___lwdiv:
  1441                           
  1442                           	psect	text5
  1443     0486                     __ptext5:	
  1444 ;; *************** function _init_uart *****************
  1445 ;; Defined at:
  1446 ;;		line 180 in file "pwm-1.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;		None
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;		None
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      void 
  1453 ;; Registers used:
  1454 ;;		wreg, status,2
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1460 ;;      Params:         0       0       0       0       0
  1461 ;;      Locals:         0       0       0       0       0
  1462 ;;      Temps:          0       0       0       0       0
  1463 ;;      Totals:         0       0       0       0       0
  1464 ;;Total ram usage:        0 bytes
  1465 ;; Hardware stack levels used: 1
  1466 ;; Hardware stack levels required when called: 2
  1467 ;; This function calls:
  1468 ;;		Nothing
  1469 ;; This function is called by:
  1470 ;;		_main
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474     0486                     _init_uart:	
  1475                           ;psect for function _init_uart
  1476                           
  1477     0486                     l1313:	
  1478                           ;incstack = 0
  1479                           ; Regs used in _init_uart: [wreg+status,2]
  1480                           
  1481                           
  1482                           ;pwm-1.c: 181:     TXSTAbits.BRGH = 0;
  1483     0486  1683               	bsf	3,5	;RP0=1, select bank1
  1484     0487  1303               	bcf	3,6	;RP1=0, select bank1
  1485     0488  1118               	bcf	24,2	;volatile
  1486                           
  1487                           ;pwm-1.c: 182:     BAUDCTLbits.BRG16 = 0;
  1488     0489  1683               	bsf	3,5	;RP0=1, select bank3
  1489     048A  1703               	bsf	3,6	;RP1=1, select bank3
  1490     048B  1187               	bcf	7,3	;volatile
  1491     048C                     l1315:
  1492                           
  1493                           ;pwm-1.c: 185:     SPBRGH = 0;
  1494     048C  1683               	bsf	3,5	;RP0=1, select bank1
  1495     048D  1303               	bcf	3,6	;RP1=0, select bank1
  1496     048E  019A               	clrf	26	;volatile
  1497     048F                     l1317:
  1498                           
  1499                           ;pwm-1.c: 186:     SPBRG = 32;
  1500     048F  3020               	movlw	32
  1501     0490  0099               	movwf	25	;volatile
  1502     0491                     l1319:
  1503                           
  1504                           ;pwm-1.c: 188:     TXSTAbits.SYNC = 0;
  1505     0491  1218               	bcf	24,4	;volatile
  1506     0492                     l1321:
  1507                           
  1508                           ;pwm-1.c: 189:     TXSTAbits.TX9 = 0;
  1509     0492  1318               	bcf	24,6	;volatile
  1510     0493                     l1323:
  1511                           
  1512                           ;pwm-1.c: 190:     RCSTAbits.RX9 = 0;
  1513     0493  1283               	bcf	3,5	;RP0=0, select bank0
  1514     0494  1303               	bcf	3,6	;RP1=0, select bank0
  1515     0495  1318               	bcf	24,6	;volatile
  1516     0496                     l1325:
  1517                           
  1518                           ;pwm-1.c: 193:     PIE1bits.TXIE = 0;
  1519     0496  1683               	bsf	3,5	;RP0=1, select bank1
  1520     0497  1303               	bcf	3,6	;RP1=0, select bank1
  1521     0498  120C               	bcf	12,4	;volatile
  1522     0499                     l1327:
  1523                           
  1524                           ;pwm-1.c: 194:     PIE1bits.RCIE = 0;
  1525     0499  128C               	bcf	12,5	;volatile
  1526     049A                     l1329:
  1527                           
  1528                           ;pwm-1.c: 196:     RCSTAbits.SPEN = 1;
  1529     049A  1283               	bcf	3,5	;RP0=0, select bank0
  1530     049B  1303               	bcf	3,6	;RP1=0, select bank0
  1531     049C  1798               	bsf	24,7	;volatile
  1532     049D                     l1331:
  1533                           
  1534                           ;pwm-1.c: 198:     TXSTAbits.TXEN = 0;
  1535     049D  1683               	bsf	3,5	;RP0=1, select bank1
  1536     049E  1303               	bcf	3,6	;RP1=0, select bank1
  1537     049F  1298               	bcf	24,5	;volatile
  1538     04A0                     l1333:
  1539                           
  1540                           ;pwm-1.c: 199:     TXSTAbits.TXEN = 1;
  1541     04A0  1698               	bsf	24,5	;volatile
  1542     04A1                     l106:
  1543     04A1  0008               	return
  1544     04A2                     __end_of_init_uart:
  1545                           
  1546                           	psect	text6
  1547     0508                     __ptext6:	
  1548 ;; *************** function _init_TMR2 *****************
  1549 ;; Defined at:
  1550 ;;		line 59 in file "pwm-1.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;		None
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;		None
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg, status,2, status,0
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1564 ;;      Params:         0       0       0       0       0
  1565 ;;      Locals:         0       0       0       0       0
  1566 ;;      Temps:          0       0       0       0       0
  1567 ;;      Totals:         0       0       0       0       0
  1568 ;;Total ram usage:        0 bytes
  1569 ;; Hardware stack levels used: 1
  1570 ;; Hardware stack levels required when called: 2
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_main
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578     0508                     _init_TMR2:	
  1579                           ;psect for function _init_TMR2
  1580                           
  1581     0508                     l1281:	
  1582                           ;incstack = 0
  1583                           ; Regs used in _init_TMR2: [wreg+status,2+status,0]
  1584                           
  1585                           
  1586                           ;pwm-1.c: 60:     PR2 = 167;
  1587     0508  30A7               	movlw	167
  1588     0509  1683               	bsf	3,5	;RP0=1, select bank1
  1589     050A  1303               	bcf	3,6	;RP1=0, select bank1
  1590     050B  0092               	movwf	18	;volatile
  1591     050C                     l1283:
  1592                           
  1593                           ;pwm-1.c: 62:     T2CONbits.T2CKPS = 0b00;
  1594     050C  30FC               	movlw	-4
  1595     050D  1283               	bcf	3,5	;RP0=0, select bank0
  1596     050E  1303               	bcf	3,6	;RP1=0, select bank0
  1597     050F  0592               	andwf	18,f	;volatile
  1598     0510                     l1285:
  1599                           
  1600                           ;pwm-1.c: 63:     T2CONbits.TOUTPS = 0b0000;
  1601     0510  3087               	movlw	-121
  1602     0511  0592               	andwf	18,f	;volatile
  1603     0512                     l1287:
  1604                           
  1605                           ;pwm-1.c: 64:     PIE1bits.TMR2IE = 1;
  1606     0512  1683               	bsf	3,5	;RP0=1, select bank1
  1607     0513  1303               	bcf	3,6	;RP1=0, select bank1
  1608     0514  148C               	bsf	12,1	;volatile
  1609     0515                     l1289:
  1610                           
  1611                           ;pwm-1.c: 65:     PIR1bits.TMR2IF = 0;
  1612     0515  1283               	bcf	3,5	;RP0=0, select bank0
  1613     0516  1303               	bcf	3,6	;RP1=0, select bank0
  1614     0517  108C               	bcf	12,1	;volatile
  1615     0518                     l1291:
  1616                           
  1617                           ;pwm-1.c: 66:     T2CONbits.TMR2ON = 1;
  1618     0518  1512               	bsf	18,2	;volatile
  1619     0519                     l82:
  1620     0519  0008               	return
  1621     051A                     __end_of_init_TMR2:
  1622                           
  1623                           	psect	text7
  1624     051A                     __ptext7:	
  1625 ;; *************** function _init_TMR0 *****************
  1626 ;; Defined at:
  1627 ;;		line 37 in file "pwm-1.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;		None
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;		None
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		wreg, status,2, status,0
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1641 ;;      Params:         0       0       0       0       0
  1642 ;;      Locals:         0       0       0       0       0
  1643 ;;      Temps:          0       0       0       0       0
  1644 ;;      Totals:         0       0       0       0       0
  1645 ;;Total ram usage:        0 bytes
  1646 ;; Hardware stack levels used: 1
  1647 ;; Hardware stack levels required when called: 2
  1648 ;; This function calls:
  1649 ;;		Nothing
  1650 ;; This function is called by:
  1651 ;;		_main
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655     051A                     _init_TMR0:	
  1656                           ;psect for function _init_TMR0
  1657                           
  1658     051A                     l1271:	
  1659                           ;incstack = 0
  1660                           ; Regs used in _init_TMR0: [wreg+status,2+status,0]
  1661                           
  1662                           
  1663                           ;pwm-1.c: 38:     TMR0 = 61;
  1664     051A  303D               	movlw	61
  1665     051B  1283               	bcf	3,5	;RP0=0, select bank0
  1666     051C  1303               	bcf	3,6	;RP1=0, select bank0
  1667     051D  0081               	movwf	1	;volatile
  1668     051E                     l1273:
  1669                           
  1670                           ;pwm-1.c: 41:     OPTION_REGbits.T0CS = 0;
  1671     051E  1683               	bsf	3,5	;RP0=1, select bank1
  1672     051F  1303               	bcf	3,6	;RP1=0, select bank1
  1673     0520  1281               	bcf	1,5	;volatile
  1674     0521                     l1275:
  1675                           
  1676                           ;pwm-1.c: 42:     OPTION_REGbits.PSA = 0;
  1677     0521  1181               	bcf	1,3	;volatile
  1678     0522                     l1277:
  1679                           
  1680                           ;pwm-1.c: 43:     OPTION_REGbits.PS = 0b111;
  1681     0522  3007               	movlw	7
  1682     0523  0481               	iorwf	1,f	;volatile
  1683     0524                     l1279:
  1684                           
  1685                           ;pwm-1.c: 44:     INTCONbits.T0IE = 1;
  1686     0524  168B               	bsf	11,5	;volatile
  1687     0525                     l79:
  1688     0525  0008               	return
  1689     0526                     __end_of_init_TMR0:
  1690                           
  1691                           	psect	text8
  1692     01F9                     __ptext8:	
  1693 ;; *************** function _init_CCP2_PWM *****************
  1694 ;; Defined at:
  1695 ;;		line 80 in file "pwm-1.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;		None
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;		None
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      void 
  1702 ;; Registers used:
  1703 ;;		wreg, status,2, status,0, pclath, cstack
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1709 ;;      Params:         0       0       0       0       0
  1710 ;;      Locals:         0       0       0       0       0
  1711 ;;      Temps:          0       8       0       0       0
  1712 ;;      Totals:         0       8       0       0       0
  1713 ;;Total ram usage:        8 bytes
  1714 ;; Hardware stack levels used: 1
  1715 ;; Hardware stack levels required when called: 3
  1716 ;; This function calls:
  1717 ;;		___awdiv
  1718 ;;		___bmul
  1719 ;;		___wmul
  1720 ;; This function is called by:
  1721 ;;		_main
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725     01F9                     _init_CCP2_PWM:	
  1726                           ;psect for function _init_CCP2_PWM
  1727                           
  1728     01F9                     l1303:	
  1729                           ;incstack = 0
  1730                           ; Regs used in _init_CCP2_PWM: [wreg+status,2+status,0+pclath+cstack]
  1731                           
  1732                           
  1733                           ;pwm-1.c: 81:     TRISC = 0;
  1734     01F9  1683               	bsf	3,5	;RP0=1, select bank1
  1735     01FA  1303               	bcf	3,6	;RP1=0, select bank1
  1736     01FB  0187               	clrf	7	;volatile
  1737                           
  1738                           ;pwm-1.c: 82:     ANSEL = 0;
  1739     01FC  1683               	bsf	3,5	;RP0=1, select bank3
  1740     01FD  1703               	bsf	3,6	;RP1=1, select bank3
  1741     01FE  0188               	clrf	8	;volatile
  1742     01FF                     l1305:
  1743                           
  1744                           ;pwm-1.c: 83:     CCP2CONbits.CCP2M = 0b1100;
  1745     01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1746     0200  1303               	bcf	3,6	;RP1=0, select bank0
  1747     0201  081D               	movf	29,w	;volatile
  1748     0202  39F0               	andlw	-16
  1749     0203  380C               	iorlw	12
  1750     0204  009D               	movwf	29	;volatile
  1751     0205                     l1307:
  1752                           
  1753                           ;pwm-1.c: 87:     CCPR2L = porcentajeC * elPR2 / 4;
  1754     0205  3004               	movlw	4
  1755     0206  00B4               	movwf	___awdiv@divisor
  1756     0207  3000               	movlw	0
  1757     0208  00B5               	movwf	___awdiv@divisor+1
  1758     0209  0855               	movf	_porcentajeC,w
  1759     020A  00BD               	movwf	??_init_CCP2_PWM
  1760     020B  01BE               	clrf	??_init_CCP2_PWM+1
  1761     020C  083D               	movf	??_init_CCP2_PWM,w
  1762     020D  00AE               	movwf	___wmul@multiplier
  1763     020E  083E               	movf	??_init_CCP2_PWM+1,w
  1764     020F  00AF               	movwf	___wmul@multiplier+1
  1765     0210  0854               	movf	_elPR2,w
  1766     0211  00BF               	movwf	??_init_CCP2_PWM+2
  1767     0212  01C0               	clrf	??_init_CCP2_PWM+3
  1768     0213  083F               	movf	??_init_CCP2_PWM+2,w
  1769     0214  00B0               	movwf	___wmul@multiplicand
  1770     0215  0840               	movf	??_init_CCP2_PWM+3,w
  1771     0216  00B1               	movwf	___wmul@multiplicand+1
  1772     0217  120A  118A  243A  120A  118A  	fcall	___wmul
  1773     021C  1283               	bcf	3,5	;RP0=0, select bank0
  1774     021D  1303               	bcf	3,6	;RP1=0, select bank0
  1775     021E  082F               	movf	?___wmul+1,w
  1776     021F  00B7               	movwf	___awdiv@dividend+1
  1777     0220  082E               	movf	?___wmul,w
  1778     0221  00B6               	movwf	___awdiv@dividend
  1779     0222  120A  118A  2266  120A  118A  	fcall	___awdiv
  1780     0227  1283               	bcf	3,5	;RP0=0, select bank0
  1781     0228  1303               	bcf	3,6	;RP1=0, select bank0
  1782     0229  0834               	movf	?___awdiv,w
  1783     022A  009B               	movwf	27	;volatile
  1784     022B                     l1309:
  1785                           
  1786                           ;pwm-1.c: 88:     CCP2CONbits.DC2B1 = (unsigned char) (( porcentajeC * elPR2 % 4) >> 1 <
      +                          < 1);
  1787     022B  0855               	movf	_porcentajeC,w
  1788     022C  00BD               	movwf	??_init_CCP2_PWM
  1789     022D  01BE               	clrf	??_init_CCP2_PWM+1
  1790     022E  083D               	movf	??_init_CCP2_PWM,w
  1791     022F  00AE               	movwf	___wmul@multiplier
  1792     0230  083E               	movf	??_init_CCP2_PWM+1,w
  1793     0231  00AF               	movwf	___wmul@multiplier+1
  1794     0232  0854               	movf	_elPR2,w
  1795     0233  00BF               	movwf	??_init_CCP2_PWM+2
  1796     0234  01C0               	clrf	??_init_CCP2_PWM+3
  1797     0235  083F               	movf	??_init_CCP2_PWM+2,w
  1798     0236  00B0               	movwf	___wmul@multiplicand
  1799     0237  0840               	movf	??_init_CCP2_PWM+3,w
  1800     0238  00B1               	movwf	___wmul@multiplicand+1
  1801     0239  120A  118A  243A  120A  118A  	fcall	___wmul
  1802     023E  1283               	bcf	3,5	;RP0=0, select bank0
  1803     023F  1303               	bcf	3,6	;RP1=0, select bank0
  1804     0240  082E               	movf	?___wmul,w
  1805     0241  00C1               	movwf	??_init_CCP2_PWM+4
  1806     0242  082F               	movf	?___wmul+1,w
  1807     0243  00C2               	movwf	??_init_CCP2_PWM+5
  1808     0244  0D42               	rlf	??_init_CCP2_PWM+5,w
  1809     0245  0CC2               	rrf	??_init_CCP2_PWM+5,f
  1810     0246  0CC1               	rrf	??_init_CCP2_PWM+4,f
  1811     0247  0841               	movf	??_init_CCP2_PWM+4,w
  1812     0248  3901               	andlw	1
  1813     0249  00C3               	movwf	??_init_CCP2_PWM+6
  1814     024A  0743               	addwf	??_init_CCP2_PWM+6,w
  1815     024B  00C4               	movwf	??_init_CCP2_PWM+7
  1816     024C  0EC4               	swapf	??_init_CCP2_PWM+7,f
  1817     024D  0DC4               	rlf	??_init_CCP2_PWM+7,f
  1818     024E  081D               	movf	29,w	;volatile
  1819     024F  0644               	xorwf	??_init_CCP2_PWM+7,w
  1820     0250  39DF               	andlw	-33
  1821     0251  0644               	xorwf	??_init_CCP2_PWM+7,w
  1822     0252  009D               	movwf	29	;volatile
  1823     0253                     l1311:
  1824                           
  1825                           ;pwm-1.c: 89:     CCP2CONbits.DC2B0 = (unsigned char) (porcentajeC * elPR2 % 2);
  1826     0253  0854               	movf	_elPR2,w
  1827     0254  00AE               	movwf	___bmul@multiplicand
  1828     0255  0855               	movf	_porcentajeC,w
  1829     0256  120A  118A  24A2  120A  118A  	fcall	___bmul
  1830     025B  3901               	andlw	1
  1831     025C  1283               	bcf	3,5	;RP0=0, select bank0
  1832     025D  1303               	bcf	3,6	;RP1=0, select bank0
  1833     025E  00BD               	movwf	??_init_CCP2_PWM
  1834     025F  0EBD               	swapf	??_init_CCP2_PWM,f
  1835     0260  081D               	movf	29,w	;volatile
  1836     0261  063D               	xorwf	??_init_CCP2_PWM,w
  1837     0262  39EF               	andlw	-17
  1838     0263  063D               	xorwf	??_init_CCP2_PWM,w
  1839     0264  009D               	movwf	29	;volatile
  1840     0265                     l88:
  1841     0265  0008               	return
  1842     0266                     __end_of_init_CCP2_PWM:
  1843                           
  1844                           	psect	text9
  1845     0338                     __ptext9:	
  1846 ;; *************** function _init_CCP1_PWM *****************
  1847 ;; Defined at:
  1848 ;;		line 69 in file "pwm-1.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;		None
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;		None
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  1    wreg      void 
  1855 ;; Registers used:
  1856 ;;		wreg, status,2, status,0, pclath, cstack
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1862 ;;      Params:         0       0       0       0       0
  1863 ;;      Locals:         0       0       0       0       0
  1864 ;;      Temps:          0       4       0       0       0
  1865 ;;      Totals:         0       4       0       0       0
  1866 ;;Total ram usage:        4 bytes
  1867 ;; Hardware stack levels used: 1
  1868 ;; Hardware stack levels required when called: 3
  1869 ;; This function calls:
  1870 ;;		___awdiv
  1871 ;;		___bmul
  1872 ;;		___wmul
  1873 ;; This function is called by:
  1874 ;;		_main
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878     0338                     _init_CCP1_PWM:	
  1879                           ;psect for function _init_CCP1_PWM
  1880                           
  1881     0338                     l1293:	
  1882                           ;incstack = 0
  1883                           ; Regs used in _init_CCP1_PWM: [wreg+status,2+status,0+pclath+cstack]
  1884                           
  1885                           
  1886                           ;pwm-1.c: 70:     TRISC = 0;
  1887     0338  1683               	bsf	3,5	;RP0=1, select bank1
  1888     0339  1303               	bcf	3,6	;RP1=0, select bank1
  1889     033A  0187               	clrf	7	;volatile
  1890                           
  1891                           ;pwm-1.c: 71:     ANSEL = 0;
  1892     033B  1683               	bsf	3,5	;RP0=1, select bank3
  1893     033C  1703               	bsf	3,6	;RP1=1, select bank3
  1894     033D  0188               	clrf	8	;volatile
  1895     033E                     l1295:
  1896                           
  1897                           ;pwm-1.c: 72:     CCP1CONbits.CCP1M = 0b1100;
  1898     033E  1283               	bcf	3,5	;RP0=0, select bank0
  1899     033F  1303               	bcf	3,6	;RP1=0, select bank0
  1900     0340  0817               	movf	23,w	;volatile
  1901     0341  39F0               	andlw	-16
  1902     0342  380C               	iorlw	12
  1903     0343  0097               	movwf	23	;volatile
  1904     0344                     l1297:
  1905                           
  1906                           ;pwm-1.c: 73:     CCP1CONbits.P1M = 0b00;
  1907     0344  303F               	movlw	-193
  1908     0345  0597               	andwf	23,f	;volatile
  1909     0346                     l1299:
  1910                           
  1911                           ;pwm-1.c: 75:     CCPR1L = (porcentaje * elPR2 / 4);
  1912     0346  3004               	movlw	4
  1913     0347  00B4               	movwf	___awdiv@divisor
  1914     0348  3000               	movlw	0
  1915     0349  00B5               	movwf	___awdiv@divisor+1
  1916     034A  084F               	movf	_porcentaje,w
  1917     034B  00BD               	movwf	??_init_CCP1_PWM
  1918     034C  01BE               	clrf	??_init_CCP1_PWM+1
  1919     034D  083D               	movf	??_init_CCP1_PWM,w
  1920     034E  00AE               	movwf	___wmul@multiplier
  1921     034F  083E               	movf	??_init_CCP1_PWM+1,w
  1922     0350  00AF               	movwf	___wmul@multiplier+1
  1923     0351  0854               	movf	_elPR2,w
  1924     0352  00BF               	movwf	??_init_CCP1_PWM+2
  1925     0353  01C0               	clrf	??_init_CCP1_PWM+3
  1926     0354  083F               	movf	??_init_CCP1_PWM+2,w
  1927     0355  00B0               	movwf	___wmul@multiplicand
  1928     0356  0840               	movf	??_init_CCP1_PWM+3,w
  1929     0357  00B1               	movwf	___wmul@multiplicand+1
  1930     0358  120A  118A  243A  120A  118A  	fcall	___wmul
  1931     035D  1283               	bcf	3,5	;RP0=0, select bank0
  1932     035E  1303               	bcf	3,6	;RP1=0, select bank0
  1933     035F  082F               	movf	?___wmul+1,w
  1934     0360  00B7               	movwf	___awdiv@dividend+1
  1935     0361  082E               	movf	?___wmul,w
  1936     0362  00B6               	movwf	___awdiv@dividend
  1937     0363  120A  118A  2266  120A  118A  	fcall	___awdiv
  1938     0368  1283               	bcf	3,5	;RP0=0, select bank0
  1939     0369  1303               	bcf	3,6	;RP1=0, select bank0
  1940     036A  0834               	movf	?___awdiv,w
  1941     036B  0095               	movwf	21	;volatile
  1942     036C                     l1301:
  1943                           
  1944                           ;pwm-1.c: 76:     CCP1CONbits.DC1B = porcentaje * elPR2 % 4;
  1945     036C  0854               	movf	_elPR2,w
  1946     036D  00AE               	movwf	___bmul@multiplicand
  1947     036E  084F               	movf	_porcentaje,w
  1948     036F  120A  118A  24A2  120A  118A  	fcall	___bmul
  1949     0374  3903               	andlw	3
  1950     0375  1283               	bcf	3,5	;RP0=0, select bank0
  1951     0376  1303               	bcf	3,6	;RP1=0, select bank0
  1952     0377  00BD               	movwf	??_init_CCP1_PWM
  1953     0378  0EBD               	swapf	??_init_CCP1_PWM,f
  1954     0379  0817               	movf	23,w	;volatile
  1955     037A  063D               	xorwf	??_init_CCP1_PWM,w
  1956     037B  39CF               	andlw	-49
  1957     037C  063D               	xorwf	??_init_CCP1_PWM,w
  1958     037D  0097               	movwf	23	;volatile
  1959     037E                     l85:
  1960     037E  0008               	return
  1961     037F                     __end_of_init_CCP1_PWM:
  1962                           
  1963                           	psect	text10
  1964     043A                     __ptext10:	
  1965 ;; *************** function ___wmul *****************
  1966 ;; Defined at:
  1967 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  multiplier      2   14[BANK0 ] unsigned int 
  1970 ;;  multiplicand    2   16[BANK0 ] unsigned int 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;  product         2   18[BANK0 ] unsigned int 
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  2   14[BANK0 ] unsigned int 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2, status,0
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1982 ;;      Params:         0       4       0       0       0
  1983 ;;      Locals:         0       2       0       0       0
  1984 ;;      Temps:          0       0       0       0       0
  1985 ;;      Totals:         0       6       0       0       0
  1986 ;;Total ram usage:        6 bytes
  1987 ;; Hardware stack levels used: 1
  1988 ;; Hardware stack levels required when called: 2
  1989 ;; This function calls:
  1990 ;;		Nothing
  1991 ;; This function is called by:
  1992 ;;		_init_CCP1_PWM
  1993 ;;		_init_CCP2_PWM
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997     043A                     ___wmul:	
  1998                           ;psect for function ___wmul
  1999                           
  2000     043A                     l1151:	
  2001                           ;incstack = 0
  2002                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2003                           
  2004     043A  1283               	bcf	3,5	;RP0=0, select bank0
  2005     043B  1303               	bcf	3,6	;RP1=0, select bank0
  2006     043C  01B2               	clrf	___wmul@product
  2007     043D  01B3               	clrf	___wmul@product+1
  2008     043E                     l1153:
  2009     043E  1C2E               	btfss	___wmul@multiplier,0
  2010     043F  2C41               	goto	u641
  2011     0440  2C42               	goto	u640
  2012     0441                     u641:
  2013     0441  2C48               	goto	l241
  2014     0442                     u640:
  2015     0442                     l1155:
  2016     0442  0830               	movf	___wmul@multiplicand,w
  2017     0443  07B2               	addwf	___wmul@product,f
  2018     0444  1803               	skipnc
  2019     0445  0AB3               	incf	___wmul@product+1,f
  2020     0446  0831               	movf	___wmul@multiplicand+1,w
  2021     0447  07B3               	addwf	___wmul@product+1,f
  2022     0448                     l241:
  2023     0448  3001               	movlw	1
  2024     0449                     u655:
  2025     0449  1003               	clrc
  2026     044A  0DB0               	rlf	___wmul@multiplicand,f
  2027     044B  0DB1               	rlf	___wmul@multiplicand+1,f
  2028     044C  3EFF               	addlw	-1
  2029     044D  1D03               	skipz
  2030     044E  2C49               	goto	u655
  2031     044F                     l1157:
  2032     044F  3001               	movlw	1
  2033     0450                     u665:
  2034     0450  1003               	clrc
  2035     0451  0CAF               	rrf	___wmul@multiplier+1,f
  2036     0452  0CAE               	rrf	___wmul@multiplier,f
  2037     0453  3EFF               	addlw	-1
  2038     0454  1D03               	skipz
  2039     0455  2C50               	goto	u665
  2040     0456                     l1159:
  2041     0456  082E               	movf	___wmul@multiplier,w
  2042     0457  042F               	iorwf	___wmul@multiplier+1,w
  2043     0458  1D03               	btfss	3,2
  2044     0459  2C5B               	goto	u671
  2045     045A  2C5C               	goto	u670
  2046     045B                     u671:
  2047     045B  2C3E               	goto	l1153
  2048     045C                     u670:
  2049     045C                     l1161:
  2050     045C  0833               	movf	___wmul@product+1,w
  2051     045D  00AF               	movwf	?___wmul+1
  2052     045E  0832               	movf	___wmul@product,w
  2053     045F  00AE               	movwf	?___wmul
  2054     0460                     l243:
  2055     0460  0008               	return
  2056     0461                     __end_of___wmul:
  2057                           
  2058                           	psect	text11
  2059     04A2                     __ptext11:	
  2060 ;; *************** function ___bmul *****************
  2061 ;; Defined at:
  2062 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  multiplier      1    wreg     unsigned char 
  2065 ;;  multiplicand    1   14[BANK0 ] unsigned char 
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;  multiplier      1   17[BANK0 ] unsigned char 
  2068 ;;  product         1   16[BANK0 ] unsigned char 
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      unsigned char 
  2071 ;; Registers used:
  2072 ;;		wreg, status,2, status,0
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2078 ;;      Params:         0       1       0       0       0
  2079 ;;      Locals:         0       2       0       0       0
  2080 ;;      Temps:          0       1       0       0       0
  2081 ;;      Totals:         0       4       0       0       0
  2082 ;;Total ram usage:        4 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; Hardware stack levels required when called: 2
  2085 ;; This function calls:
  2086 ;;		Nothing
  2087 ;; This function is called by:
  2088 ;;		_init_CCP1_PWM
  2089 ;;		_init_CCP2_PWM
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093     04A2                     ___bmul:	
  2094                           ;psect for function ___bmul
  2095                           
  2096                           
  2097                           ;incstack = 0
  2098                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2099                           ;___bmul@multiplier stored from wreg
  2100     04A2  1283               	bcf	3,5	;RP0=0, select bank0
  2101     04A3  1303               	bcf	3,6	;RP1=0, select bank0
  2102     04A4  00B1               	movwf	___bmul@multiplier
  2103     04A5                     l1165:
  2104     04A5  01B0               	clrf	___bmul@product
  2105     04A6                     l1167:
  2106     04A6  1C31               	btfss	___bmul@multiplier,0
  2107     04A7  2CA9               	goto	u681
  2108     04A8  2CAA               	goto	u680
  2109     04A9                     u681:
  2110     04A9  2CAE               	goto	l1171
  2111     04AA                     u680:
  2112     04AA                     l1169:
  2113     04AA  082E               	movf	___bmul@multiplicand,w
  2114     04AB  00AF               	movwf	??___bmul
  2115     04AC  082F               	movf	??___bmul,w
  2116     04AD  07B0               	addwf	___bmul@product,f
  2117     04AE                     l1171:
  2118     04AE  1003               	clrc
  2119     04AF  0DAE               	rlf	___bmul@multiplicand,f
  2120     04B0                     l1173:
  2121     04B0  1003               	clrc
  2122     04B1  0CB1               	rrf	___bmul@multiplier,f
  2123     04B2  0831               	movf	___bmul@multiplier,w
  2124     04B3  1D03               	btfss	3,2
  2125     04B4  2CB6               	goto	u691
  2126     04B5  2CB7               	goto	u690
  2127     04B6                     u691:
  2128     04B6  2CA6               	goto	l1167
  2129     04B7                     u690:
  2130     04B7                     l1175:
  2131     04B7  0830               	movf	___bmul@product,w
  2132     04B8                     l267:
  2133     04B8  0008               	return
  2134     04B9                     __end_of___bmul:
  2135                           
  2136                           	psect	text12
  2137     0266                     __ptext12:	
  2138 ;; *************** function ___awdiv *****************
  2139 ;; Defined at:
  2140 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;  divisor         2   20[BANK0 ] int 
  2143 ;;  dividend        2   22[BANK0 ] int 
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;  quotient        2   27[BANK0 ] int 
  2146 ;;  sign            1   26[BANK0 ] unsigned char 
  2147 ;;  counter         1   25[BANK0 ] unsigned char 
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  2   20[BANK0 ] int 
  2150 ;; Registers used:
  2151 ;;		wreg, status,2, status,0
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2157 ;;      Params:         0       4       0       0       0
  2158 ;;      Locals:         0       4       0       0       0
  2159 ;;      Temps:          0       1       0       0       0
  2160 ;;      Totals:         0       9       0       0       0
  2161 ;;Total ram usage:        9 bytes
  2162 ;; Hardware stack levels used: 1
  2163 ;; Hardware stack levels required when called: 2
  2164 ;; This function calls:
  2165 ;;		Nothing
  2166 ;; This function is called by:
  2167 ;;		_init_CCP1_PWM
  2168 ;;		_init_CCP2_PWM
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172     0266                     ___awdiv:	
  2173                           ;psect for function ___awdiv
  2174                           
  2175     0266                     l1179:	
  2176                           ;incstack = 0
  2177                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2178                           
  2179     0266  1283               	bcf	3,5	;RP0=0, select bank0
  2180     0267  1303               	bcf	3,6	;RP1=0, select bank0
  2181     0268  01BA               	clrf	___awdiv@sign
  2182     0269                     l1181:
  2183     0269  1FB5               	btfss	___awdiv@divisor+1,7
  2184     026A  2A6C               	goto	u701
  2185     026B  2A6D               	goto	u700
  2186     026C                     u701:
  2187     026C  2A74               	goto	l1187
  2188     026D                     u700:
  2189     026D                     l1183:
  2190     026D  09B4               	comf	___awdiv@divisor,f
  2191     026E  09B5               	comf	___awdiv@divisor+1,f
  2192     026F  0AB4               	incf	___awdiv@divisor,f
  2193     0270  1903               	skipnz
  2194     0271  0AB5               	incf	___awdiv@divisor+1,f
  2195     0272                     l1185:
  2196     0272  01BA               	clrf	___awdiv@sign
  2197     0273  0ABA               	incf	___awdiv@sign,f
  2198     0274                     l1187:
  2199     0274  1FB7               	btfss	___awdiv@dividend+1,7
  2200     0275  2A77               	goto	u711
  2201     0276  2A78               	goto	u710
  2202     0277                     u711:
  2203     0277  2A81               	goto	l1193
  2204     0278                     u710:
  2205     0278                     l1189:
  2206     0278  09B6               	comf	___awdiv@dividend,f
  2207     0279  09B7               	comf	___awdiv@dividend+1,f
  2208     027A  0AB6               	incf	___awdiv@dividend,f
  2209     027B  1903               	skipnz
  2210     027C  0AB7               	incf	___awdiv@dividend+1,f
  2211     027D                     l1191:
  2212     027D  3001               	movlw	1
  2213     027E  00B8               	movwf	??___awdiv
  2214     027F  0838               	movf	??___awdiv,w
  2215     0280  06BA               	xorwf	___awdiv@sign,f
  2216     0281                     l1193:
  2217     0281  01BB               	clrf	___awdiv@quotient
  2218     0282  01BC               	clrf	___awdiv@quotient+1
  2219     0283                     l1195:
  2220     0283  0834               	movf	___awdiv@divisor,w
  2221     0284  0435               	iorwf	___awdiv@divisor+1,w
  2222     0285  1903               	btfsc	3,2
  2223     0286  2A88               	goto	u721
  2224     0287  2A89               	goto	u720
  2225     0288                     u721:
  2226     0288  2AC0               	goto	l1215
  2227     0289                     u720:
  2228     0289                     l1197:
  2229     0289  01B9               	clrf	___awdiv@counter
  2230     028A  0AB9               	incf	___awdiv@counter,f
  2231     028B  2A97               	goto	l1203
  2232     028C                     l1199:
  2233     028C  3001               	movlw	1
  2234     028D                     u735:
  2235     028D  1003               	clrc
  2236     028E  0DB4               	rlf	___awdiv@divisor,f
  2237     028F  0DB5               	rlf	___awdiv@divisor+1,f
  2238     0290  3EFF               	addlw	-1
  2239     0291  1D03               	skipz
  2240     0292  2A8D               	goto	u735
  2241     0293                     l1201:
  2242     0293  3001               	movlw	1
  2243     0294  00B8               	movwf	??___awdiv
  2244     0295  0838               	movf	??___awdiv,w
  2245     0296  07B9               	addwf	___awdiv@counter,f
  2246     0297                     l1203:
  2247     0297  1FB5               	btfss	___awdiv@divisor+1,7
  2248     0298  2A9A               	goto	u741
  2249     0299  2A9B               	goto	u740
  2250     029A                     u741:
  2251     029A  2A8C               	goto	l1199
  2252     029B                     u740:
  2253     029B                     l1205:
  2254     029B  3001               	movlw	1
  2255     029C                     u755:
  2256     029C  1003               	clrc
  2257     029D  0DBB               	rlf	___awdiv@quotient,f
  2258     029E  0DBC               	rlf	___awdiv@quotient+1,f
  2259     029F  3EFF               	addlw	-1
  2260     02A0  1D03               	skipz
  2261     02A1  2A9C               	goto	u755
  2262     02A2  0835               	movf	___awdiv@divisor+1,w
  2263     02A3  0237               	subwf	___awdiv@dividend+1,w
  2264     02A4  1D03               	skipz
  2265     02A5  2AA8               	goto	u765
  2266     02A6  0834               	movf	___awdiv@divisor,w
  2267     02A7  0236               	subwf	___awdiv@dividend,w
  2268     02A8                     u765:
  2269     02A8  1C03               	skipc
  2270     02A9  2AAB               	goto	u761
  2271     02AA  2AAC               	goto	u760
  2272     02AB                     u761:
  2273     02AB  2AB3               	goto	l1211
  2274     02AC                     u760:
  2275     02AC                     l1207:
  2276     02AC  0834               	movf	___awdiv@divisor,w
  2277     02AD  02B6               	subwf	___awdiv@dividend,f
  2278     02AE  0835               	movf	___awdiv@divisor+1,w
  2279     02AF  1C03               	skipc
  2280     02B0  03B7               	decf	___awdiv@dividend+1,f
  2281     02B1  02B7               	subwf	___awdiv@dividend+1,f
  2282     02B2                     l1209:
  2283     02B2  143B               	bsf	___awdiv@quotient,0
  2284     02B3                     l1211:
  2285     02B3  3001               	movlw	1
  2286     02B4                     u775:
  2287     02B4  1003               	clrc
  2288     02B5  0CB5               	rrf	___awdiv@divisor+1,f
  2289     02B6  0CB4               	rrf	___awdiv@divisor,f
  2290     02B7  3EFF               	addlw	-1
  2291     02B8  1D03               	skipz
  2292     02B9  2AB4               	goto	u775
  2293     02BA                     l1213:
  2294     02BA  3001               	movlw	1
  2295     02BB  02B9               	subwf	___awdiv@counter,f
  2296     02BC  1D03               	btfss	3,2
  2297     02BD  2ABF               	goto	u781
  2298     02BE  2AC0               	goto	u780
  2299     02BF                     u781:
  2300     02BF  2A9B               	goto	l1205
  2301     02C0                     u780:
  2302     02C0                     l1215:
  2303     02C0  083A               	movf	___awdiv@sign,w
  2304     02C1  1903               	btfsc	3,2
  2305     02C2  2AC4               	goto	u791
  2306     02C3  2AC5               	goto	u790
  2307     02C4                     u791:
  2308     02C4  2ACA               	goto	l1219
  2309     02C5                     u790:
  2310     02C5                     l1217:
  2311     02C5  09BB               	comf	___awdiv@quotient,f
  2312     02C6  09BC               	comf	___awdiv@quotient+1,f
  2313     02C7  0ABB               	incf	___awdiv@quotient,f
  2314     02C8  1903               	skipnz
  2315     02C9  0ABC               	incf	___awdiv@quotient+1,f
  2316     02CA                     l1219:
  2317     02CA  083C               	movf	___awdiv@quotient+1,w
  2318     02CB  00B5               	movwf	?___awdiv+1
  2319     02CC  083B               	movf	___awdiv@quotient,w
  2320     02CD  00B4               	movwf	?___awdiv
  2321     02CE                     l394:
  2322     02CE  0008               	return
  2323     02CF                     __end_of___awdiv:
  2324                           
  2325                           	psect	text13
  2326     0038                     __ptext13:	
  2327 ;; *************** function _TRAT_INT *****************
  2328 ;; Defined at:
  2329 ;;		line 110 in file "pwm-1.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;		None
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;		None
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  1    wreg      void 
  2336 ;; Registers used:
  2337 ;;		wreg, status,2, status,0, pclath, cstack
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2343 ;;      Params:         0       0       0       0       0
  2344 ;;      Locals:         0       0       0       0       0
  2345 ;;      Temps:          0      10       0       0       0
  2346 ;;      Totals:         0      10       0       0       0
  2347 ;;Total ram usage:       10 bytes
  2348 ;; Hardware stack levels used: 1
  2349 ;; Hardware stack levels required when called: 1
  2350 ;; This function calls:
  2351 ;;		i1___awdiv
  2352 ;;		i1___bmul
  2353 ;;		i1___wmul
  2354 ;; This function is called by:
  2355 ;;		Interrupt level 1
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359     0038                     _TRAT_INT:	
  2360                           ;psect for function _TRAT_INT
  2361                           
  2362     0038                     i1l1459:
  2363                           
  2364                           ;pwm-1.c: 111:     if (INTCONbits.TMR0IF)
  2365     0038  1D0B               	btfss	11,2	;volatile
  2366     0039  283B               	goto	u116_21
  2367     003A  283C               	goto	u116_20
  2368     003B                     u116_21:
  2369     003B  2913               	goto	i1l93
  2370     003C                     u116_20:
  2371     003C                     i1l1461:
  2372                           
  2373                           ;pwm-1.c: 112:     {;pwm-1.c: 114:         TMR0 = 61;
  2374     003C  303D               	movlw	61
  2375     003D  0081               	movwf	1	;volatile
  2376                           
  2377                           ;pwm-1.c: 115:         if (copias >= los5msen1s) {
  2378     003E  0849               	movf	_copias+1,w
  2379     003F  3A80               	xorlw	128
  2380     0040  00A4               	movwf	??_TRAT_INT
  2381     0041  0851               	movf	_los5msen1s+1,w
  2382     0042  3A80               	xorlw	128
  2383     0043  0224               	subwf	??_TRAT_INT,w
  2384     0044  1D03               	skipz
  2385     0045  2848               	goto	u117_25
  2386     0046  0850               	movf	_los5msen1s,w
  2387     0047  0248               	subwf	_copias,w
  2388     0048                     u117_25:
  2389     0048  1C03               	skipc
  2390     0049  284B               	goto	u117_21
  2391     004A  284C               	goto	u117_20
  2392     004B                     u117_21:
  2393     004B  2909               	goto	i1l1491
  2394     004C                     u117_20:
  2395     004C                     i1l1463:
  2396                           
  2397                           ;pwm-1.c: 116:             copias = 0;
  2398     004C  1283               	bcf	3,5	;RP0=0, select bank0
  2399     004D  1303               	bcf	3,6	;RP1=0, select bank0
  2400     004E  01C8               	clrf	_copias
  2401     004F  01C9               	clrf	_copias+1
  2402     0050                     i1l1465:
  2403                           
  2404                           ;pwm-1.c: 117:             if (porcentaje <= porcentajeMin) {
  2405     0050  084F               	movf	_porcentaje,w
  2406     0051  027D               	subwf	_porcentajeMin,w
  2407     0052  1C03               	skipc
  2408     0053  2855               	goto	u118_21
  2409     0054  2856               	goto	u118_20
  2410     0055                     u118_21:
  2411     0055  2859               	goto	i1l1469
  2412     0056                     u118_20:
  2413     0056                     i1l1467:
  2414                           
  2415                           ;pwm-1.c: 118:                 porcentajeSubenBaja = 1;
  2416     0056  01FB               	clrf	_porcentajeSubenBaja
  2417     0057  0AFB               	incf	_porcentajeSubenBaja,f
  2418                           
  2419                           ;pwm-1.c: 119:             } else {
  2420     0058  2860               	goto	i1l1473
  2421     0059                     i1l1469:
  2422                           
  2423                           ;pwm-1.c: 120:                 if (porcentaje >= porcentajeMax) {
  2424     0059  087C               	movf	_porcentajeMax,w
  2425     005A  024F               	subwf	_porcentaje,w
  2426     005B  1C03               	skipc
  2427     005C  285E               	goto	u119_21
  2428     005D  285F               	goto	u119_20
  2429     005E                     u119_21:
  2430     005E  2860               	goto	i1l1473
  2431     005F                     u119_20:
  2432     005F                     i1l1471:
  2433                           
  2434                           ;pwm-1.c: 121:                     porcentajeSubenBaja = 0;
  2435     005F  01FB               	clrf	_porcentajeSubenBaja
  2436     0060                     i1l1473:
  2437                           
  2438                           ;pwm-1.c: 124:             if (porcentajeSubenBaja == 0) {
  2439     0060  087B               	movf	_porcentajeSubenBaja,w
  2440     0061  1D03               	btfss	3,2
  2441     0062  2864               	goto	u120_21
  2442     0063  2865               	goto	u120_20
  2443     0064                     u120_21:
  2444     0064  286C               	goto	i1l1477
  2445     0065                     u120_20:
  2446     0065                     i1l1475:
  2447                           
  2448                           ;pwm-1.c: 125:                 porcentaje -= 1;
  2449     0065  3001               	movlw	1
  2450     0066  02CF               	subwf	_porcentaje,f
  2451                           
  2452                           ;pwm-1.c: 126:                 porcentajeC += 1;
  2453     0067  3001               	movlw	1
  2454     0068  00A4               	movwf	??_TRAT_INT
  2455     0069  0824               	movf	??_TRAT_INT,w
  2456     006A  07D5               	addwf	_porcentajeC,f
  2457                           
  2458                           ;pwm-1.c: 127:             } else {
  2459     006B  2872               	goto	i1l1479
  2460     006C                     i1l1477:
  2461                           
  2462                           ;pwm-1.c: 128:                 porcentaje += 1;
  2463     006C  3001               	movlw	1
  2464     006D  00A4               	movwf	??_TRAT_INT
  2465     006E  0824               	movf	??_TRAT_INT,w
  2466     006F  07CF               	addwf	_porcentaje,f
  2467                           
  2468                           ;pwm-1.c: 129:                 porcentajeC -= 1;
  2469     0070  3001               	movlw	1
  2470     0071  02D5               	subwf	_porcentajeC,f
  2471     0072                     i1l1479:
  2472                           
  2473                           ;pwm-1.c: 131:             PORTB = porcentaje;
  2474     0072  084F               	movf	_porcentaje,w
  2475     0073  0086               	movwf	6	;volatile
  2476     0074                     i1l1481:
  2477                           
  2478                           ;pwm-1.c: 133:             CCPR1L = porcentaje * elPR2 / 4;
  2479     0074  3004               	movlw	4
  2480     0075  00F6               	movwf	i1___awdiv@divisor
  2481     0076  3000               	movlw	0
  2482     0077  00F7               	movwf	i1___awdiv@divisor+1
  2483     0078  084F               	movf	_porcentaje,w
  2484     0079  00A4               	movwf	??_TRAT_INT
  2485     007A  01A5               	clrf	??_TRAT_INT+1
  2486     007B  0824               	movf	??_TRAT_INT,w
  2487     007C  00F0               	movwf	i1___wmul@multiplier
  2488     007D  0825               	movf	??_TRAT_INT+1,w
  2489     007E  00F1               	movwf	i1___wmul@multiplier+1
  2490     007F  0854               	movf	_elPR2,w
  2491     0080  00A6               	movwf	??_TRAT_INT+2
  2492     0081  01A7               	clrf	??_TRAT_INT+3
  2493     0082  0826               	movf	??_TRAT_INT+2,w
  2494     0083  00F2               	movwf	i1___wmul@multiplicand
  2495     0084  0827               	movf	??_TRAT_INT+3,w
  2496     0085  00F3               	movwf	i1___wmul@multiplicand+1
  2497     0086  120A  118A  2461  120A  118A  	fcall	i1___wmul
  2498     008B  0871               	movf	?i1___wmul+1,w
  2499     008C  00F9               	movwf	i1___awdiv@dividend+1
  2500     008D  0870               	movf	?i1___wmul,w
  2501     008E  00F8               	movwf	i1___awdiv@dividend
  2502     008F  120A  118A  22CF  120A  118A  	fcall	i1___awdiv
  2503     0094  0876               	movf	?i1___awdiv,w
  2504     0095  1283               	bcf	3,5	;RP0=0, select bank0
  2505     0096  1303               	bcf	3,6	;RP1=0, select bank0
  2506     0097  0095               	movwf	21	;volatile
  2507     0098                     i1l1483:
  2508                           
  2509                           ;pwm-1.c: 134:             CCP1CONbits.DC1B = porcentaje * elPR2 % 4;
  2510     0098  0854               	movf	_elPR2,w
  2511     0099  00F0               	movwf	i1___bmul@multiplicand
  2512     009A  084F               	movf	_porcentaje,w
  2513     009B  120A  118A  24CE  120A  118A  	fcall	i1___bmul
  2514     00A0  3903               	andlw	3
  2515     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  2516     00A2  1303               	bcf	3,6	;RP1=0, select bank0
  2517     00A3  00A4               	movwf	??_TRAT_INT
  2518     00A4  0EA4               	swapf	??_TRAT_INT,f
  2519     00A5  0817               	movf	23,w	;volatile
  2520     00A6  0624               	xorwf	??_TRAT_INT,w
  2521     00A7  39CF               	andlw	-49
  2522     00A8  0624               	xorwf	??_TRAT_INT,w
  2523     00A9  0097               	movwf	23	;volatile
  2524     00AA                     i1l1485:
  2525                           
  2526                           ;pwm-1.c: 137:             CCPR2L = porcentajeC * elPR2 / 4;
  2527     00AA  3004               	movlw	4
  2528     00AB  00F6               	movwf	i1___awdiv@divisor
  2529     00AC  3000               	movlw	0
  2530     00AD  00F7               	movwf	i1___awdiv@divisor+1
  2531     00AE  0855               	movf	_porcentajeC,w
  2532     00AF  00A4               	movwf	??_TRAT_INT
  2533     00B0  01A5               	clrf	??_TRAT_INT+1
  2534     00B1  0824               	movf	??_TRAT_INT,w
  2535     00B2  00F0               	movwf	i1___wmul@multiplier
  2536     00B3  0825               	movf	??_TRAT_INT+1,w
  2537     00B4  00F1               	movwf	i1___wmul@multiplier+1
  2538     00B5  0854               	movf	_elPR2,w
  2539     00B6  00A6               	movwf	??_TRAT_INT+2
  2540     00B7  01A7               	clrf	??_TRAT_INT+3
  2541     00B8  0826               	movf	??_TRAT_INT+2,w
  2542     00B9  00F2               	movwf	i1___wmul@multiplicand
  2543     00BA  0827               	movf	??_TRAT_INT+3,w
  2544     00BB  00F3               	movwf	i1___wmul@multiplicand+1
  2545     00BC  120A  118A  2461  120A  118A  	fcall	i1___wmul
  2546     00C1  0871               	movf	?i1___wmul+1,w
  2547     00C2  00F9               	movwf	i1___awdiv@dividend+1
  2548     00C3  0870               	movf	?i1___wmul,w
  2549     00C4  00F8               	movwf	i1___awdiv@dividend
  2550     00C5  120A  118A  22CF  120A  118A  	fcall	i1___awdiv
  2551     00CA  0876               	movf	?i1___awdiv,w
  2552     00CB  1283               	bcf	3,5	;RP0=0, select bank0
  2553     00CC  1303               	bcf	3,6	;RP1=0, select bank0
  2554     00CD  009B               	movwf	27	;volatile
  2555     00CE                     i1l1487:
  2556                           
  2557                           ;pwm-1.c: 138:             CCP2CONbits.DC2B1 = (unsigned char) ((porcentajeC * elPR2 % 4
      +                          ) >> 1 << 1);
  2558     00CE  0855               	movf	_porcentajeC,w
  2559     00CF  00A4               	movwf	??_TRAT_INT
  2560     00D0  01A5               	clrf	??_TRAT_INT+1
  2561     00D1  0824               	movf	??_TRAT_INT,w
  2562     00D2  00F0               	movwf	i1___wmul@multiplier
  2563     00D3  0825               	movf	??_TRAT_INT+1,w
  2564     00D4  00F1               	movwf	i1___wmul@multiplier+1
  2565     00D5  0854               	movf	_elPR2,w
  2566     00D6  00A6               	movwf	??_TRAT_INT+2
  2567     00D7  01A7               	clrf	??_TRAT_INT+3
  2568     00D8  0826               	movf	??_TRAT_INT+2,w
  2569     00D9  00F2               	movwf	i1___wmul@multiplicand
  2570     00DA  0827               	movf	??_TRAT_INT+3,w
  2571     00DB  00F3               	movwf	i1___wmul@multiplicand+1
  2572     00DC  120A  118A  2461  120A  118A  	fcall	i1___wmul
  2573     00E1  0870               	movf	?i1___wmul,w
  2574     00E2  1283               	bcf	3,5	;RP0=0, select bank0
  2575     00E3  1303               	bcf	3,6	;RP1=0, select bank0
  2576     00E4  00A8               	movwf	??_TRAT_INT+4
  2577     00E5  0871               	movf	?i1___wmul+1,w
  2578     00E6  00A9               	movwf	??_TRAT_INT+5
  2579     00E7  0D29               	rlf	??_TRAT_INT+5,w
  2580     00E8  0CA9               	rrf	??_TRAT_INT+5,f
  2581     00E9  0CA8               	rrf	??_TRAT_INT+4,f
  2582     00EA  0828               	movf	??_TRAT_INT+4,w
  2583     00EB  3901               	andlw	1
  2584     00EC  00AA               	movwf	??_TRAT_INT+6
  2585     00ED  072A               	addwf	??_TRAT_INT+6,w
  2586     00EE  00AB               	movwf	??_TRAT_INT+7
  2587     00EF  0EAB               	swapf	??_TRAT_INT+7,f
  2588     00F0  0DAB               	rlf	??_TRAT_INT+7,f
  2589     00F1  081D               	movf	29,w	;volatile
  2590     00F2  062B               	xorwf	??_TRAT_INT+7,w
  2591     00F3  39DF               	andlw	-33
  2592     00F4  062B               	xorwf	??_TRAT_INT+7,w
  2593     00F5  009D               	movwf	29	;volatile
  2594     00F6                     i1l1489:
  2595                           
  2596                           ;pwm-1.c: 139:             CCP2CONbits.DC2B0 = (unsigned char) (porcentajeC * elPR2 % 2)
      +                          ;
  2597     00F6  0854               	movf	_elPR2,w
  2598     00F7  00F0               	movwf	i1___bmul@multiplicand
  2599     00F8  0855               	movf	_porcentajeC,w
  2600     00F9  120A  118A  24CE  120A  118A  	fcall	i1___bmul
  2601     00FE  3901               	andlw	1
  2602     00FF  1283               	bcf	3,5	;RP0=0, select bank0
  2603     0100  1303               	bcf	3,6	;RP1=0, select bank0
  2604     0101  00A4               	movwf	??_TRAT_INT
  2605     0102  0EA4               	swapf	??_TRAT_INT,f
  2606     0103  081D               	movf	29,w	;volatile
  2607     0104  0624               	xorwf	??_TRAT_INT,w
  2608     0105  39EF               	andlw	-17
  2609     0106  0624               	xorwf	??_TRAT_INT,w
  2610     0107  009D               	movwf	29	;volatile
  2611                           
  2612                           ;pwm-1.c: 142:         } else {
  2613     0108  2911               	goto	i1l1493
  2614     0109                     i1l1491:
  2615                           
  2616                           ;pwm-1.c: 143:             copias += 1;
  2617     0109  3001               	movlw	1
  2618     010A  1283               	bcf	3,5	;RP0=0, select bank0
  2619     010B  1303               	bcf	3,6	;RP1=0, select bank0
  2620     010C  07C8               	addwf	_copias,f
  2621     010D  1803               	skipnc
  2622     010E  0AC9               	incf	_copias+1,f
  2623     010F  3000               	movlw	0
  2624     0110  07C9               	addwf	_copias+1,f
  2625     0111                     i1l1493:
  2626                           
  2627                           ;pwm-1.c: 147:         INTCONbits.T0IF = 0;
  2628     0111  110B               	bcf	11,2	;volatile
  2629                           
  2630                           ;pwm-1.c: 163:     } else {
  2631     0112  291D               	goto	i1l103
  2632     0113                     i1l93:
  2633                           
  2634                           ;pwm-1.c: 164:         if (PIR1bits.TMR2IF)
  2635     0113  1C8C               	btfss	12,1	;volatile
  2636     0114  2916               	goto	u121_21
  2637     0115  2917               	goto	u121_20
  2638     0116                     u121_21:
  2639     0116  291D               	goto	i1l103
  2640     0117                     u121_20:
  2641     0117                     i1l1495:
  2642                           
  2643                           ;pwm-1.c: 165:         {;pwm-1.c: 167:             TRISC = 0;
  2644     0117  1683               	bsf	3,5	;RP0=1, select bank1
  2645     0118  1303               	bcf	3,6	;RP1=0, select bank1
  2646     0119  0187               	clrf	7	;volatile
  2647     011A                     i1l1497:
  2648                           
  2649                           ;pwm-1.c: 168:             PIR1bits.TMR2IF = 0;
  2650     011A  1283               	bcf	3,5	;RP0=0, select bank0
  2651     011B  1303               	bcf	3,6	;RP1=0, select bank0
  2652     011C  108C               	bcf	12,1	;volatile
  2653     011D                     i1l103:
  2654     011D  082D               	movf	??_TRAT_INT+9,w
  2655     011E  008A               	movwf	10
  2656     011F  0E2C               	swapf	??_TRAT_INT+8,w
  2657     0120  0083               	movwf	3
  2658     0121  0EFE               	swapf	btemp,f
  2659     0122  0E7E               	swapf	btemp,w
  2660     0123  0009               	retfie
  2661     0124                     __end_of_TRAT_INT:
  2662                           
  2663                           	psect	intentry
  2664     0004                     __pintentry:	
  2665                           ;incstack = 0
  2666                           ; Regs used in _TRAT_INT: [wreg+status,2+status,0+pclath+cstack]
  2667                           
  2668     0004                     interrupt_function:
  2669     007E                     saved_w	set	btemp
  2670     0004  00FE               	movwf	btemp
  2671     0005  0E03               	swapf	3,w
  2672     0006  1283               	bcf	3,5	;RP0=0, select bank0
  2673     0007  1303               	bcf	3,6	;RP1=0, select bank0
  2674     0008  00AC               	movwf	??_TRAT_INT+8
  2675     0009  080A               	movf	10,w
  2676     000A  00AD               	movwf	??_TRAT_INT+9
  2677     000B  120A  118A  2838   	ljmp	_TRAT_INT
  2678                           
  2679                           	psect	text14
  2680     0461                     __ptext14:	
  2681 ;; *************** function i1___wmul *****************
  2682 ;; Defined at:
  2683 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2684 ;; Parameters:    Size  Location     Type
  2685 ;;  multiplier      2    0[COMMON] unsigned int 
  2686 ;;  multiplicand    2    2[COMMON] unsigned int 
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;  product         2    4[COMMON] unsigned int 
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  2    0[COMMON] unsigned int 
  2691 ;; Registers used:
  2692 ;;		wreg, status,2, status,0
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2698 ;;      Params:         4       0       0       0       0
  2699 ;;      Locals:         2       0       0       0       0
  2700 ;;      Temps:          0       0       0       0       0
  2701 ;;      Totals:         6       0       0       0       0
  2702 ;;Total ram usage:        6 bytes
  2703 ;; Hardware stack levels used: 1
  2704 ;; This function calls:
  2705 ;;		Nothing
  2706 ;; This function is called by:
  2707 ;;		_TRAT_INT
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711     0461                     i1___wmul:	
  2712                           ;psect for function i1___wmul
  2713                           
  2714     0461                     i1l1387:	
  2715                           ;incstack = 0
  2716                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  2717                           
  2718     0461  01F4               	clrf	i1___wmul@product
  2719     0462  01F5               	clrf	i1___wmul@product+1
  2720     0463                     i1l1389:
  2721     0463  1C70               	btfss	i1___wmul@multiplier,0
  2722     0464  2C66               	goto	u100_21
  2723     0465  2C67               	goto	u100_20
  2724     0466                     u100_21:
  2725     0466  2C6D               	goto	i1l241
  2726     0467                     u100_20:
  2727     0467                     i1l1391:
  2728     0467  0872               	movf	i1___wmul@multiplicand,w
  2729     0468  07F4               	addwf	i1___wmul@product,f
  2730     0469  1803               	skipnc
  2731     046A  0AF5               	incf	i1___wmul@product+1,f
  2732     046B  0873               	movf	i1___wmul@multiplicand+1,w
  2733     046C  07F5               	addwf	i1___wmul@product+1,f
  2734     046D                     i1l241:
  2735     046D  3001               	movlw	1
  2736     046E                     u101_25:
  2737     046E  1003               	clrc
  2738     046F  0DF2               	rlf	i1___wmul@multiplicand,f
  2739     0470  0DF3               	rlf	i1___wmul@multiplicand+1,f
  2740     0471  3EFF               	addlw	-1
  2741     0472  1D03               	skipz
  2742     0473  2C6E               	goto	u101_25
  2743     0474                     i1l1393:
  2744     0474  3001               	movlw	1
  2745     0475                     u102_25:
  2746     0475  1003               	clrc
  2747     0476  0CF1               	rrf	i1___wmul@multiplier+1,f
  2748     0477  0CF0               	rrf	i1___wmul@multiplier,f
  2749     0478  3EFF               	addlw	-1
  2750     0479  1D03               	skipz
  2751     047A  2C75               	goto	u102_25
  2752     047B                     i1l1395:
  2753     047B  0870               	movf	i1___wmul@multiplier,w
  2754     047C  0471               	iorwf	i1___wmul@multiplier+1,w
  2755     047D  1D03               	btfss	3,2
  2756     047E  2C80               	goto	u103_21
  2757     047F  2C81               	goto	u103_20
  2758     0480                     u103_21:
  2759     0480  2C63               	goto	i1l1389
  2760     0481                     u103_20:
  2761     0481                     i1l1397:
  2762     0481  0875               	movf	i1___wmul@product+1,w
  2763     0482  00F1               	movwf	?i1___wmul+1
  2764     0483  0874               	movf	i1___wmul@product,w
  2765     0484  00F0               	movwf	?i1___wmul
  2766     0485                     i1l243:
  2767     0485  0008               	return
  2768     0486                     __end_ofi1___wmul:
  2769                           
  2770                           	psect	text15
  2771     04CE                     __ptext15:	
  2772 ;; *************** function i1___bmul *****************
  2773 ;; Defined at:
  2774 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;  multiplier      1    wreg     unsigned char 
  2777 ;;  multiplicand    1    0[COMMON] unsigned char 
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;  multiplier      1    3[COMMON] unsigned char 
  2780 ;;  product         1    2[COMMON] unsigned char 
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      unsigned char 
  2783 ;; Registers used:
  2784 ;;		wreg, status,2, status,0
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2790 ;;      Params:         1       0       0       0       0
  2791 ;;      Locals:         2       0       0       0       0
  2792 ;;      Temps:          1       0       0       0       0
  2793 ;;      Totals:         4       0       0       0       0
  2794 ;;Total ram usage:        4 bytes
  2795 ;; Hardware stack levels used: 1
  2796 ;; This function calls:
  2797 ;;		Nothing
  2798 ;; This function is called by:
  2799 ;;		_TRAT_INT
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803     04CE                     i1___bmul:	
  2804                           ;psect for function i1___bmul
  2805                           
  2806                           
  2807                           ;incstack = 0
  2808                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  2809                           ;i1___bmul@multiplier stored from wreg
  2810     04CE  00F3               	movwf	i1___bmul@multiplier
  2811     04CF                     i1l1401:
  2812     04CF  01F2               	clrf	i1___bmul@product
  2813     04D0                     i1l1403:
  2814     04D0  1C73               	btfss	i1___bmul@multiplier,0
  2815     04D1  2CD3               	goto	u104_21
  2816     04D2  2CD4               	goto	u104_20
  2817     04D3                     u104_21:
  2818     04D3  2CD8               	goto	i1l1407
  2819     04D4                     u104_20:
  2820     04D4                     i1l1405:
  2821     04D4  0870               	movf	i1___bmul@multiplicand,w
  2822     04D5  00F1               	movwf	??i1___bmul
  2823     04D6  0871               	movf	??i1___bmul,w
  2824     04D7  07F2               	addwf	i1___bmul@product,f
  2825     04D8                     i1l1407:
  2826     04D8  1003               	clrc
  2827     04D9  0DF0               	rlf	i1___bmul@multiplicand,f
  2828     04DA                     i1l1409:
  2829     04DA  1003               	clrc
  2830     04DB  0CF3               	rrf	i1___bmul@multiplier,f
  2831     04DC  0873               	movf	i1___bmul@multiplier,w
  2832     04DD  1D03               	btfss	3,2
  2833     04DE  2CE0               	goto	u105_21
  2834     04DF  2CE1               	goto	u105_20
  2835     04E0                     u105_21:
  2836     04E0  2CD0               	goto	i1l1403
  2837     04E1                     u105_20:
  2838     04E1                     i1l1411:
  2839     04E1  0872               	movf	i1___bmul@product,w
  2840     04E2                     i1l267:
  2841     04E2  0008               	return
  2842     04E3                     __end_ofi1___bmul:
  2843                           
  2844                           	psect	text16
  2845     02CF                     __ptext16:	
  2846 ;; *************** function i1___awdiv *****************
  2847 ;; Defined at:
  2848 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;  divisor         2    6[COMMON] int 
  2851 ;;  dividend        2    8[COMMON] int 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;  quotient        2    2[BANK0 ] int 
  2854 ;;  sign            1    1[BANK0 ] unsigned char 
  2855 ;;  counter         1    0[BANK0 ] unsigned char 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  2    6[COMMON] int 
  2858 ;; Registers used:
  2859 ;;		wreg, status,2, status,0
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2865 ;;      Params:         4       0       0       0       0
  2866 ;;      Locals:         0       4       0       0       0
  2867 ;;      Temps:          1       0       0       0       0
  2868 ;;      Totals:         5       4       0       0       0
  2869 ;;Total ram usage:        9 bytes
  2870 ;; Hardware stack levels used: 1
  2871 ;; This function calls:
  2872 ;;		Nothing
  2873 ;; This function is called by:
  2874 ;;		_TRAT_INT
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878     02CF                     i1___awdiv:	
  2879                           ;psect for function i1___awdiv
  2880                           
  2881     02CF                     i1l1415:	
  2882                           ;incstack = 0
  2883                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  2884                           
  2885     02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2886     02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2887     02D1  01A1               	clrf	i1___awdiv@sign
  2888     02D2                     i1l1417:
  2889     02D2  1FF7               	btfss	i1___awdiv@divisor+1,7
  2890     02D3  2AD5               	goto	u106_21
  2891     02D4  2AD6               	goto	u106_20
  2892     02D5                     u106_21:
  2893     02D5  2ADD               	goto	i1l1423
  2894     02D6                     u106_20:
  2895     02D6                     i1l1419:
  2896     02D6  09F6               	comf	i1___awdiv@divisor,f
  2897     02D7  09F7               	comf	i1___awdiv@divisor+1,f
  2898     02D8  0AF6               	incf	i1___awdiv@divisor,f
  2899     02D9  1903               	skipnz
  2900     02DA  0AF7               	incf	i1___awdiv@divisor+1,f
  2901     02DB                     i1l1421:
  2902     02DB  01A1               	clrf	i1___awdiv@sign
  2903     02DC  0AA1               	incf	i1___awdiv@sign,f
  2904     02DD                     i1l1423:
  2905     02DD  1FF9               	btfss	i1___awdiv@dividend+1,7
  2906     02DE  2AE0               	goto	u107_21
  2907     02DF  2AE1               	goto	u107_20
  2908     02E0                     u107_21:
  2909     02E0  2AEA               	goto	i1l1429
  2910     02E1                     u107_20:
  2911     02E1                     i1l1425:
  2912     02E1  09F8               	comf	i1___awdiv@dividend,f
  2913     02E2  09F9               	comf	i1___awdiv@dividend+1,f
  2914     02E3  0AF8               	incf	i1___awdiv@dividend,f
  2915     02E4  1903               	skipnz
  2916     02E5  0AF9               	incf	i1___awdiv@dividend+1,f
  2917     02E6                     i1l1427:
  2918     02E6  3001               	movlw	1
  2919     02E7  00FA               	movwf	??i1___awdiv
  2920     02E8  087A               	movf	??i1___awdiv,w
  2921     02E9  06A1               	xorwf	i1___awdiv@sign,f
  2922     02EA                     i1l1429:
  2923     02EA  01A2               	clrf	i1___awdiv@quotient
  2924     02EB  01A3               	clrf	i1___awdiv@quotient+1
  2925     02EC                     i1l1431:
  2926     02EC  0876               	movf	i1___awdiv@divisor,w
  2927     02ED  0477               	iorwf	i1___awdiv@divisor+1,w
  2928     02EE  1903               	btfsc	3,2
  2929     02EF  2AF1               	goto	u108_21
  2930     02F0  2AF2               	goto	u108_20
  2931     02F1                     u108_21:
  2932     02F1  2B29               	goto	i1l1451
  2933     02F2                     u108_20:
  2934     02F2                     i1l1433:
  2935     02F2  01A0               	clrf	i1___awdiv@counter
  2936     02F3  0AA0               	incf	i1___awdiv@counter,f
  2937     02F4  2B00               	goto	i1l1439
  2938     02F5                     i1l1435:
  2939     02F5  3001               	movlw	1
  2940     02F6                     u109_25:
  2941     02F6  1003               	clrc
  2942     02F7  0DF6               	rlf	i1___awdiv@divisor,f
  2943     02F8  0DF7               	rlf	i1___awdiv@divisor+1,f
  2944     02F9  3EFF               	addlw	-1
  2945     02FA  1D03               	skipz
  2946     02FB  2AF6               	goto	u109_25
  2947     02FC                     i1l1437:
  2948     02FC  3001               	movlw	1
  2949     02FD  00FA               	movwf	??i1___awdiv
  2950     02FE  087A               	movf	??i1___awdiv,w
  2951     02FF  07A0               	addwf	i1___awdiv@counter,f
  2952     0300                     i1l1439:
  2953     0300  1FF7               	btfss	i1___awdiv@divisor+1,7
  2954     0301  2B03               	goto	u110_21
  2955     0302  2B04               	goto	u110_20
  2956     0303                     u110_21:
  2957     0303  2AF5               	goto	i1l1435
  2958     0304                     u110_20:
  2959     0304                     i1l1441:
  2960     0304  3001               	movlw	1
  2961     0305                     u111_25:
  2962     0305  1003               	clrc
  2963     0306  0DA2               	rlf	i1___awdiv@quotient,f
  2964     0307  0DA3               	rlf	i1___awdiv@quotient+1,f
  2965     0308  3EFF               	addlw	-1
  2966     0309  1D03               	skipz
  2967     030A  2B05               	goto	u111_25
  2968     030B  0877               	movf	i1___awdiv@divisor+1,w
  2969     030C  0279               	subwf	i1___awdiv@dividend+1,w
  2970     030D  1D03               	skipz
  2971     030E  2B11               	goto	u112_25
  2972     030F  0876               	movf	i1___awdiv@divisor,w
  2973     0310  0278               	subwf	i1___awdiv@dividend,w
  2974     0311                     u112_25:
  2975     0311  1C03               	skipc
  2976     0312  2B14               	goto	u112_21
  2977     0313  2B15               	goto	u112_20
  2978     0314                     u112_21:
  2979     0314  2B1C               	goto	i1l1447
  2980     0315                     u112_20:
  2981     0315                     i1l1443:
  2982     0315  0876               	movf	i1___awdiv@divisor,w
  2983     0316  02F8               	subwf	i1___awdiv@dividend,f
  2984     0317  0877               	movf	i1___awdiv@divisor+1,w
  2985     0318  1C03               	skipc
  2986     0319  03F9               	decf	i1___awdiv@dividend+1,f
  2987     031A  02F9               	subwf	i1___awdiv@dividend+1,f
  2988     031B                     i1l1445:
  2989     031B  1422               	bsf	i1___awdiv@quotient,0
  2990     031C                     i1l1447:
  2991     031C  3001               	movlw	1
  2992     031D                     u113_25:
  2993     031D  1003               	clrc
  2994     031E  0CF7               	rrf	i1___awdiv@divisor+1,f
  2995     031F  0CF6               	rrf	i1___awdiv@divisor,f
  2996     0320  3EFF               	addlw	-1
  2997     0321  1D03               	skipz
  2998     0322  2B1D               	goto	u113_25
  2999     0323                     i1l1449:
  3000     0323  3001               	movlw	1
  3001     0324  02A0               	subwf	i1___awdiv@counter,f
  3002     0325  1D03               	btfss	3,2
  3003     0326  2B28               	goto	u114_21
  3004     0327  2B29               	goto	u114_20
  3005     0328                     u114_21:
  3006     0328  2B04               	goto	i1l1441
  3007     0329                     u114_20:
  3008     0329                     i1l1451:
  3009     0329  0821               	movf	i1___awdiv@sign,w
  3010     032A  1903               	btfsc	3,2
  3011     032B  2B2D               	goto	u115_21
  3012     032C  2B2E               	goto	u115_20
  3013     032D                     u115_21:
  3014     032D  2B33               	goto	i1l1455
  3015     032E                     u115_20:
  3016     032E                     i1l1453:
  3017     032E  09A2               	comf	i1___awdiv@quotient,f
  3018     032F  09A3               	comf	i1___awdiv@quotient+1,f
  3019     0330  0AA2               	incf	i1___awdiv@quotient,f
  3020     0331  1903               	skipnz
  3021     0332  0AA3               	incf	i1___awdiv@quotient+1,f
  3022     0333                     i1l1455:
  3023     0333  0823               	movf	i1___awdiv@quotient+1,w
  3024     0334  00F7               	movwf	?i1___awdiv+1
  3025     0335  0822               	movf	i1___awdiv@quotient,w
  3026     0336  00F6               	movwf	?i1___awdiv
  3027     0337                     i1l394:
  3028     0337  0008               	return
  3029     0338                     __end_ofi1___awdiv:
  3030     007E                     btemp	set	126	;btemp
  3031     007E                     wtemp0	set	126
  3032                           
  3033                           	psect	idloc
  3034                           
  3035                           ;Config register IDLOC0 @ 0x2000
  3036                           ;	unspecified, using default values
  3037     2000                     	org	8192
  3038     2000  3FFF               	dw	16383
  3039                           
  3040                           ;Config register IDLOC1 @ 0x2001
  3041                           ;	unspecified, using default values
  3042     2001                     	org	8193
  3043     2001  3FFF               	dw	16383
  3044                           
  3045                           ;Config register IDLOC2 @ 0x2002
  3046                           ;	unspecified, using default values
  3047     2002                     	org	8194
  3048     2002  3FFF               	dw	16383
  3049                           
  3050                           ;Config register IDLOC3 @ 0x2003
  3051                           ;	unspecified, using default values
  3052     2003                     	org	8195
  3053     2003  3FFF               	dw	16383
  3054                           
  3055                           	psect	config
  3056                           
  3057                           ;Config register CONFIG1 @ 0x2007
  3058                           ;	Oscillator Selection bits
  3059                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  3060                           ;	Watchdog Timer Enable bit
  3061                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3062                           ;	Power-up Timer Enable bit
  3063                           ;	PWRTE = ON, PWRT enabled
  3064                           ;	RE3/MCLR pin function select bit
  3065                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  3066                           ;	Code Protection bit
  3067                           ;	CP = OFF, Program memory code protection is disabled
  3068                           ;	Data Code Protection bit
  3069                           ;	CPD = OFF, Data memory code protection is disabled
  3070                           ;	Brown Out Reset Selection bits
  3071                           ;	BOREN = OFF, BOR disabled
  3072                           ;	Internal External Switchover bit
  3073                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3074                           ;	Fail-Safe Clock Monitor Enabled bit
  3075                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3076                           ;	Low Voltage Programming Enable bit
  3077                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3078                           ;	In-Circuit Debugger Mode bit
  3079                           ;	DEBUG = OFF, In-Circuit Debugger disabled, RB6/ICSPCLK and RB7/ICSPDAT are general pur
      +                          pose I/O pins
  3080     2007                     	org	8199
  3081     2007  20E2               	dw	8418
  3082                           
  3083                           ;Config register CONFIG2 @ 0x2008
  3084                           ;	Brown-out Reset Selection bit
  3085                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  3086                           ;	Flash Program Memory Self Write Enable bits
  3087                           ;	WRT = OFF, Write protection off
  3088     2008                     	org	8200
  3089     2008  3EFF               	dw	16127

Data Sizes:
    Strings     5
    Constant    10
    Data        10
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     40      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _TRAT_INT in COMMON

    _TRAT_INT->i1___awdiv
    i1___awdiv->i1___wmul

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv
    _init_CCP2_PWM->___awdiv
    _init_CCP1_PWM->___awdiv
    ___awdiv->___wmul

Critical Paths under _TRAT_INT in BANK0

    _TRAT_INT->i1___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _TRAT_INT in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TRAT_INT in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TRAT_INT in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5058
                      _init_CCP1_PWM
                      _init_CCP2_PWM
                          _init_TMR0
                          _init_TMR2
                          _init_uart
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              20    18      2    1066
                                             28 BANK0     12    10      2
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                             22 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                             14 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_TMR2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_TMR0                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_CCP2_PWM                                        8     8      0    1996
                                             29 BANK0      8     8      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _init_CCP1_PWM                                        4     4      0    1996
                                             29 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     848
                                             14 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     344
                                             14 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     804
                                             20 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _TRAT_INT                                            10    10      0     796
                                              4 BANK0     10    10      0
                          i1___awdiv
                           i1___bmul
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1___wmul                                             6     2      4     248
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) i1___bmul                                             4     3      1     144
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) i1___awdiv                                            9     5      4     404
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_CCP1_PWM
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
   _init_CCP2_PWM
     ___awdiv
     ___bmul
     ___wmul
   _init_TMR0
   _init_TMR2
   _init_uart
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch

 _TRAT_INT (ROOT)
   i1___awdiv
     i1___wmul (ARG)
   i1___bmul
   i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     28      38       5       70.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      46      12        0.0%
ABS                  0      0      46       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Oct 16 12:53:32 2022

                      _x 004E                        pc 0002           ___bmul@product 0030  
                     l82 0519                       l85 037E                       l79 0525  
                     l88 0265             ___awdiv@sign 003A                       fsr 0004  
    ___wmul@multiplicand 0030         i1___wmul@product 0074                      l106 04A1  
                    l114 0507                      l109 04F9                      l241 0448  
                    l243 0460                      l237 01F8                      l513 03C4  
                    l267 04B8                      l523 0400                      l394 02CE  
                    _PR2 0092                      u700 026D                      u620 04FE  
                    u701 026C                      u621 04FD                      u710 0278  
                    u630 0504                      u711 0277                      u631 0503  
                    u720 0289                      u640 0442                      u800 0389  
                    u721 0288                      u641 0441                      u801 0388  
                    u740 029B                      u820 039B                      u900 03E9  
                    u741 029A                      u821 039A                      u901 03E8  
                    u670 045C                      u735 028D                      u671 045B  
                    u655 0449                      u815 038D                      u760 02AC  
                    u680 04AA                      u840 03AC                      u920 03FC  
                    u761 02AB                      u681 04A9                      u665 0450  
                    u841 03AB                      u921 03FB                      u905 03E5  
                    u690 04B7                      u930 0130                      u755 029C  
                    u691 04B6                      u835 039C                      u915 03F0  
                    u931 012F                      u780 02C0                      u860 03C0  
                    u940 0165                      u781 02BF                      u765 02A8  
                    u861 03BF                      u845 03A8                      u941 0164  
                    u790 02C5                      u870 03CD                      u950 018B  
                    u791 02C4                      u775 02B4                      u855 03B4  
                    u871 03CC                      u951 018A                      u960 0196  
                    u961 0195                      u890 03DF                      u970 019C  
                    u891 03DE                      u971 019B                      u955 0187  
                    u980 01E6                      u885 03D1                      u981 01E5  
                    u990 01F8                      u991 01F7                      fsr0 0004  
                    indf 0000                     l1201 0293                     l1211 02B3  
                   l1203 0297                     l1213 02BA                     l1205 029B  
                   l1301 036C                     l1207 02AC                     l1215 02C0  
                   l1151 043A                     l1311 0253                     l1303 01F9  
                   l1231 0393                     l1223 037F                     l1217 02C5  
                   l1209 02B2                     l1161 045C                     l1153 043E  
                   l1305 01FF                     l1321 0492                     l1313 0486  
                   l1241 03B3                     l1233 0397                     l1225 0383  
                   l1145 04F9                     l1219 02CA                     l1171 04AE  
                   l1155 0442                     l1307 0205                     l1331 049D  
                   l1323 0493                     l1315 048C                     l1243 03BA  
                   l1235 039B                     l1227 0389                     l1251 03CD  
                   l1147 04FE                     l1181 0269                     l1173 04B0  
                   l1165 04A5                     l1157 044F                     l1309 022B  
                   l1333 04A0                     l1325 0496                     l1317 048F  
                   l1237 03AC                     l1229 038C                     l1245 03C0  
                   l1261 03E9                     l1253 03D0                     l1149 0504  
                   l1341 0137                     l1501 0405                     l1191 027D  
                   l1183 026D                     l1175 04B7                     l1167 04A6  
                   l1159 0456                     l1271 051A                     l1327 0499  
                   l1319 0491                     l1239 03B2                     l1263 03EF  
                   l1255 03D7                     l1351 0161                     l1335 0127  
                   l1511 041E                     l1503 040A                     l1193 0281  
                   l1185 0272                     l1169 04AA                     l1273 051E  
                   l1281 0508                     l1329 049A                     l1265 03F6  
                   l1257 03DB                     l1249 03C5                     l1353 0165  
                   l1345 0138                     l1337 012A                     l1521 042D  
                   l1513 0421                     l1505 040F                     l1195 0283  
                   l1187 0274                     l1179 0266                     l1275 0521  
                   l1291 0518                     l1283 050C                     l1259 03DF  
                   l1267 03FC                     l1371 019C                     l1363 0170  
                   l1355 0169                     l1347 0155                     l1339 0130  
                   l1515 0422                     l1507 0414                     l1197 0289  
                   l1189 0278                     l1293 0338                     l1277 0522  
                   l1285 0510                     l1373 01A2                     l1357 016E  
                   l1349 015D                     l1381 01E6                     l1517 0423  
                   l1509 0419                     l1199 028C                     l1295 033E  
                   l1279 0524                     l1287 0512                     l1375 01A7  
                   l1367 018C                     l1543 014A                     l1519 042B  
                   l1297 0344                     l1289 0515                     l1377 01D5  
                   l1369 0196                     l1299 0346                     l1379 01DB  
                   l1499 0401                     STR_1 04C9                     u1220 042B  
                   u1221 042A                     i1l93 0113                     _TMR0 0001  
                   _TXIF 0064                     _main 0401                     btemp 007E  
                   start 000E        ___bmul@multiplier 0031                    ?_main 0070  
         i1___awdiv@sign 0021          __end_of___awdiv 02CF                    _ANSEL 0188  
        ___awdiv@divisor 0034          __end_of___lwdiv 03C5                    i1l103 011D  
                  i1l241 046D                    i1l243 0485          __end_of___lwmod 0401  
                  i1l267 04E2                    i1l394 0337          ___awdiv@counter 0039  
                  _SPBRG 0099                    _PORTB 0006                    _TRISB 0086  
                  _TRISC 0087                    _TXREG 0019                    _elPR2 0054  
        __end_of_dpowers 04C9         __end_of_TRAT_INT 0124                    _valor 004A  
                  _putch 04F6         __end_ofi1___bmul 04E3                    pclath 000A  
       __end_ofi1___wmul 0486                    status 0003      i1___wmul@multiplier 0070  
                  wtemp0 007E          __initialization 0011             __end_of_main 043A  
          _init_CCP1_PWM 0338            _init_CCP2_PWM 01F9                   ??_main 0048  
                 _CCPR1L 0015                   _CCPR2L 001B         ___awdiv@dividend 0036  
                 ?_putch 0070                   u100_20 0467                   u100_21 0466  
                 u101_25 046E                   u110_20 0304                   u110_21 0303  
                 u102_25 0475                   u103_20 0481                   i1l1401 04CF  
                 u103_21 0480                   i1l1411 04E1                   i1l1403 04D0  
                 u111_25 0305                   i1l1421 02DB                   i1l1405 04D4  
                 i1l1431 02EC                   i1l1423 02DD                   i1l1415 02CF  
                 i1l1407 04D8                   u112_20 0315                   u104_20 04D4  
                 u120_20 0065                   u112_21 0314                   i1l1441 0304  
                 i1l1433 02F2                   i1l1425 02E1                   i1l1417 02D2  
                 i1l1409 04DA                   u104_21 04D3                   u120_21 0064  
                 i1l1443 0315                   i1l1435 02F5                   i1l1451 0329  
                 i1l1427 02E6                   i1l1419 02D6                   i1l1453 032E  
                 i1l1445 031B                   u112_25 0311                   i1l1437 02FC  
                 i1l1429 02EA                   i1l1461 003C                   i1l1455 0333  
                 i1l1447 031C                   i1l1439 0300                   i1l1391 0467  
                 i1l1471 005F                   i1l1463 004C                   u105_20 04E1  
                 u121_20 0117                   i1l1449 0323                   u105_21 04E0  
                 i1l1393 0474                   u121_21 0116                   i1l1481 0074  
                 i1l1473 0060                   i1l1465 0050                   i1l1395 047B  
                 i1l1387 0461                   i1l1483 0098                   i1l1475 0065  
                 i1l1467 0056                   i1l1491 0109                   i1l1459 0038  
                 u113_25 031D                   i1l1397 0481                   i1l1389 0463  
                 i1l1493 0111                   i1l1485 00AA                   i1l1477 006C  
                 i1l1469 0059                   i1l1495 0117                   i1l1487 00CE  
                 i1l1479 0072                   u114_20 0329                   u106_20 02D6  
                 u114_21 0328                   u106_21 02D5                   i1l1497 011A  
                 i1l1489 00F6                   u115_20 032E                   u107_20 02E1  
                 u115_21 032D                   u107_21 02E0                   u108_20 02F2  
                 u116_20 003C                   u108_21 02F1                   u116_21 003B  
                 u117_20 004C                   u117_21 004B                   u109_25 02F6  
                 u117_25 0048                   u118_20 0056                   u118_21 0055  
                 u119_20 005F                   u119_21 005E                   _OSCCON 008F  
                 _SPBRGH 009A      _porcentajeSubenBaja 007B                   ___bmul 04A2  
                 ___wmul 043A                ??___awdiv 0038                ??___lwdiv 0032  
              ??___lwmod 003A                   _copias 0048           ?_init_CCP1_PWM 0070  
         ?_init_CCP2_PWM 0070         ___awdiv@quotient 003B                   _printf 0124  
      __end_ofi1___awdiv 0338             __pdataCOMMON 007B                   saved_w 007E  
                 putch@c 002E  __end_of__initialization 0034      ___bmul@multiplicand 002E  
         __pcstackCOMMON 0070             __pidataBANK0 0526                ?_TRAT_INT 0070  
          __end_of_putch 0508                ?i1___bmul 0070                ?i1___wmul 0070  
         _OPTION_REGbits 0081         i1___bmul@product 0072                  ??_putch 002E  
             __pbssBANK0 0048               __pmaintext 0401                  ?___bmul 002E  
                ?___wmul 002E          ??_init_CCP1_PWM 003D          ??_init_CCP2_PWM 003D  
             __pintentry 0004               ??_TRAT_INT 0024               ??i1___bmul 0071  
                ?_printf 003C               ??i1___wmul 0074       i1___awdiv@dividend 0078  
             __stringtab 04B9       i1___awdiv@quotient 0022               _los5msen1s 0050  
                ___awdiv 0266                  ___lwdiv 037F                  ___lwmod 03C5  
                __ptext1 0124                  __ptext2 04F6                  __ptext3 03C5  
                __ptext4 037F                  __ptext5 0486                  __ptext6 0508  
                __ptext7 051A                  __ptext8 01F9                  __ptext9 0338  
      __end_of_init_TMR0 0526        __end_of_init_TMR2 051A                  _dpowers 04BF  
              _T2CONbits 0012        __end_of_init_uart 04A2      i1___bmul@multiplier 0073  
   end_of_initialization 0034                _RCSTAbits 0018                  printf@c 0047  
                printf@f 0044    i1___wmul@multiplicand 0072               _porcentaje 004F  
              i1___awdiv 02CF              _CCP1CONbits 0017              _CCP2CONbits 001D  
              _TXSTAbits 0098           __end_of___bmul 04B9           __end_of___wmul 0461  
          __pidataCOMMON 052E              _BAUDCTLbits 0187           __end_of_printf 01F9  
    start_initialization 0011               ?i1___awdiv 0076                 ??___bmul 002F  
               ??___wmul 0032               init_fetch0 04E3              __pdataBANK0 0050  
               ??_printf 003E              __pbssCOMMON 007D                ___latbits 0002  
          __pcstackBANK0 0020         ___lwdiv@dividend 0030                 ?___awdiv 0034  
               ?___lwdiv 002E                 ?___lwmod 0036        i1___awdiv@divisor 0076  
  __end_of_init_CCP1_PWM 037F    __end_of_init_CCP2_PWM 0266        i1___awdiv@counter 0020  
              __pstrings 04B9                _continuar 004C                _eltimer1H 0057  
              _eltimer1L 0056                _init_TMR0 051A                _init_TMR2 0508  
            ??i1___awdiv 007A         ___lwdiv@quotient 0033                _init_uart 0486  
      interrupt_function 0004           ___wmul@product 0032                 _PIE1bits 008C  
  i1___bmul@multiplicand 0070                 _PIR1bits 000C                 _TRAT_INT 0038  
               i1___bmul 04CE              __stringbase 04BE        ___wmul@multiplier 002E  
               i1___wmul 0461               printf@flag 0042               printf@prec 0043  
             ?_init_TMR0 0070               ?_init_TMR2 0070               ?_init_uart 0070  
     __end_of__stringtab 04BF          ___lwdiv@divisor 002E          ___lwdiv@counter 0035  
               __ptext10 043A                 __ptext11 04A2                 __ptext12 0266  
               __ptext13 0038                 __ptext14 0461                 __ptext15 04CE  
               __ptext16 02CF                 _contado1 0052            _porcentajeMax 007C  
          _porcentajeMin 007D                printf@val 0045               _INTCONbits 000B  
            ??_init_TMR0 002E              ??_init_TMR2 002E                 init_ram0 04E7  
            ??_init_uart 002E                 intlevel1 0000         ___lwmod@dividend 0038  
              stringcode 04B9                 printf@ap 0041          ___lwmod@divisor 0036  
        ___lwmod@counter 003B                 stringdir 04B9                 stringtab 04B9  
            _porcentajeC 0055  
