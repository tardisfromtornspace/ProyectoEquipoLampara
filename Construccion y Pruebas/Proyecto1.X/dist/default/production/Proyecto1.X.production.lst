

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Nov 18 13:07:48 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	intentry,global,class=CODE,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    68                           	dabs	1,0x7E,2
    69     0000                     
    70                           ; Version 2.40
    71                           ; Generated 17/11/2021 GMT
    72                           ; 
    73                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution. Publication is not required when
    87                           ;        this file is used in an embedded application.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC16F886 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105     0000                     	;# 
   106     0001                     	;# 
   107     0002                     	;# 
   108     0003                     	;# 
   109     0004                     	;# 
   110     0005                     	;# 
   111     0006                     	;# 
   112     0007                     	;# 
   113     0009                     	;# 
   114     000A                     	;# 
   115     000B                     	;# 
   116     000C                     	;# 
   117     000D                     	;# 
   118     000E                     	;# 
   119     000E                     	;# 
   120     000F                     	;# 
   121     0010                     	;# 
   122     0011                     	;# 
   123     0012                     	;# 
   124     0013                     	;# 
   125     0014                     	;# 
   126     0015                     	;# 
   127     0015                     	;# 
   128     0016                     	;# 
   129     0017                     	;# 
   130     0018                     	;# 
   131     0019                     	;# 
   132     001A                     	;# 
   133     001B                     	;# 
   134     001B                     	;# 
   135     001C                     	;# 
   136     001D                     	;# 
   137     001E                     	;# 
   138     001F                     	;# 
   139     0081                     	;# 
   140     0085                     	;# 
   141     0086                     	;# 
   142     0087                     	;# 
   143     0089                     	;# 
   144     008C                     	;# 
   145     008D                     	;# 
   146     008E                     	;# 
   147     008F                     	;# 
   148     0090                     	;# 
   149     0091                     	;# 
   150     0092                     	;# 
   151     0093                     	;# 
   152     0093                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0095                     	;# 
   156     0096                     	;# 
   157     0097                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009A                     	;# 
   161     009B                     	;# 
   162     009C                     	;# 
   163     009D                     	;# 
   164     009E                     	;# 
   165     009F                     	;# 
   166     0105                     	;# 
   167     0107                     	;# 
   168     0108                     	;# 
   169     0109                     	;# 
   170     010C                     	;# 
   171     010C                     	;# 
   172     010D                     	;# 
   173     010E                     	;# 
   174     010F                     	;# 
   175     0185                     	;# 
   176     0187                     	;# 
   177     0188                     	;# 
   178     0189                     	;# 
   179     018C                     	;# 
   180     018D                     	;# 
   181     0000                     	;# 
   182     0001                     	;# 
   183     0002                     	;# 
   184     0003                     	;# 
   185     0004                     	;# 
   186     0005                     	;# 
   187     0006                     	;# 
   188     0007                     	;# 
   189     0009                     	;# 
   190     000A                     	;# 
   191     000B                     	;# 
   192     000C                     	;# 
   193     000D                     	;# 
   194     000E                     	;# 
   195     000E                     	;# 
   196     000F                     	;# 
   197     0010                     	;# 
   198     0011                     	;# 
   199     0012                     	;# 
   200     0013                     	;# 
   201     0014                     	;# 
   202     0015                     	;# 
   203     0015                     	;# 
   204     0016                     	;# 
   205     0017                     	;# 
   206     0018                     	;# 
   207     0019                     	;# 
   208     001A                     	;# 
   209     001B                     	;# 
   210     001B                     	;# 
   211     001C                     	;# 
   212     001D                     	;# 
   213     001E                     	;# 
   214     001F                     	;# 
   215     0081                     	;# 
   216     0085                     	;# 
   217     0086                     	;# 
   218     0087                     	;# 
   219     0089                     	;# 
   220     008C                     	;# 
   221     008D                     	;# 
   222     008E                     	;# 
   223     008F                     	;# 
   224     0090                     	;# 
   225     0091                     	;# 
   226     0092                     	;# 
   227     0093                     	;# 
   228     0093                     	;# 
   229     0093                     	;# 
   230     0094                     	;# 
   231     0095                     	;# 
   232     0096                     	;# 
   233     0097                     	;# 
   234     0098                     	;# 
   235     0099                     	;# 
   236     009A                     	;# 
   237     009B                     	;# 
   238     009C                     	;# 
   239     009D                     	;# 
   240     009E                     	;# 
   241     009F                     	;# 
   242     0105                     	;# 
   243     0107                     	;# 
   244     0108                     	;# 
   245     0109                     	;# 
   246     010C                     	;# 
   247     010C                     	;# 
   248     010D                     	;# 
   249     010E                     	;# 
   250     010F                     	;# 
   251     0185                     	;# 
   252     0187                     	;# 
   253     0188                     	;# 
   254     0189                     	;# 
   255     018C                     	;# 
   256     018D                     	;# 
   257     0000                     	;# 
   258     0001                     	;# 
   259     0002                     	;# 
   260     0003                     	;# 
   261     0004                     	;# 
   262     0005                     	;# 
   263     0006                     	;# 
   264     0007                     	;# 
   265     0009                     	;# 
   266     000A                     	;# 
   267     000B                     	;# 
   268     000C                     	;# 
   269     000D                     	;# 
   270     000E                     	;# 
   271     000E                     	;# 
   272     000F                     	;# 
   273     0010                     	;# 
   274     0011                     	;# 
   275     0012                     	;# 
   276     0013                     	;# 
   277     0014                     	;# 
   278     0015                     	;# 
   279     0015                     	;# 
   280     0016                     	;# 
   281     0017                     	;# 
   282     0018                     	;# 
   283     0019                     	;# 
   284     001A                     	;# 
   285     001B                     	;# 
   286     001B                     	;# 
   287     001C                     	;# 
   288     001D                     	;# 
   289     001E                     	;# 
   290     001F                     	;# 
   291     0081                     	;# 
   292     0085                     	;# 
   293     0086                     	;# 
   294     0087                     	;# 
   295     0089                     	;# 
   296     008C                     	;# 
   297     008D                     	;# 
   298     008E                     	;# 
   299     008F                     	;# 
   300     0090                     	;# 
   301     0091                     	;# 
   302     0092                     	;# 
   303     0093                     	;# 
   304     0093                     	;# 
   305     0093                     	;# 
   306     0094                     	;# 
   307     0095                     	;# 
   308     0096                     	;# 
   309     0097                     	;# 
   310     0098                     	;# 
   311     0099                     	;# 
   312     009A                     	;# 
   313     009B                     	;# 
   314     009C                     	;# 
   315     009D                     	;# 
   316     009E                     	;# 
   317     009F                     	;# 
   318     0105                     	;# 
   319     0107                     	;# 
   320     0108                     	;# 
   321     0109                     	;# 
   322     010C                     	;# 
   323     010C                     	;# 
   324     010D                     	;# 
   325     010E                     	;# 
   326     010F                     	;# 
   327     0185                     	;# 
   328     0187                     	;# 
   329     0188                     	;# 
   330     0189                     	;# 
   331     018C                     	;# 
   332     018D                     	;# 
   333     0000                     	;# 
   334     0001                     	;# 
   335     0002                     	;# 
   336     0003                     	;# 
   337     0004                     	;# 
   338     0005                     	;# 
   339     0006                     	;# 
   340     0007                     	;# 
   341     0009                     	;# 
   342     000A                     	;# 
   343     000B                     	;# 
   344     000C                     	;# 
   345     000D                     	;# 
   346     000E                     	;# 
   347     000E                     	;# 
   348     000F                     	;# 
   349     0010                     	;# 
   350     0011                     	;# 
   351     0012                     	;# 
   352     0013                     	;# 
   353     0014                     	;# 
   354     0015                     	;# 
   355     0015                     	;# 
   356     0016                     	;# 
   357     0017                     	;# 
   358     0018                     	;# 
   359     0019                     	;# 
   360     001A                     	;# 
   361     001B                     	;# 
   362     001B                     	;# 
   363     001C                     	;# 
   364     001D                     	;# 
   365     001E                     	;# 
   366     001F                     	;# 
   367     0081                     	;# 
   368     0085                     	;# 
   369     0086                     	;# 
   370     0087                     	;# 
   371     0089                     	;# 
   372     008C                     	;# 
   373     008D                     	;# 
   374     008E                     	;# 
   375     008F                     	;# 
   376     0090                     	;# 
   377     0091                     	;# 
   378     0092                     	;# 
   379     0093                     	;# 
   380     0093                     	;# 
   381     0093                     	;# 
   382     0094                     	;# 
   383     0095                     	;# 
   384     0096                     	;# 
   385     0097                     	;# 
   386     0098                     	;# 
   387     0099                     	;# 
   388     009A                     	;# 
   389     009B                     	;# 
   390     009C                     	;# 
   391     009D                     	;# 
   392     009E                     	;# 
   393     009F                     	;# 
   394     0105                     	;# 
   395     0107                     	;# 
   396     0108                     	;# 
   397     0109                     	;# 
   398     010C                     	;# 
   399     010C                     	;# 
   400     010D                     	;# 
   401     010E                     	;# 
   402     010F                     	;# 
   403     0185                     	;# 
   404     0187                     	;# 
   405     0188                     	;# 
   406     0189                     	;# 
   407     018C                     	;# 
   408     018D                     	;# 
   409                           
   410                           	psect	idataCOMMON
   411     07FF                     __pidataCOMMON:
   412                           
   413                           ;initializer for _eltimer1H
   414     07FF  3461               	retlw	97
   415                           
   416                           	psect	idataBANK0
   417     0DA1                     __pidataBANK0:
   418                           
   419                           ;initializer for _los5msen15ms
   420     0DA1  3403               	retlw	3
   421     0DA2  3400               	retlw	0
   422                           
   423                           ;initializer for _numLedes
   424     0DA3  340A               	retlw	10
   425     0DA4  3400               	retlw	0
   426                           
   427                           ;initializer for _leoADCHumedadTemp
   428     0DA5  3402               	retlw	2
   429     0DA6  3400               	retlw	0
   430                           
   431                           ;initializer for _anI
   432     0DA7  3401               	retlw	1
   433     0DA8  3400               	retlw	0
   434                           
   435                           ;initializer for _deboContinuar
   436     0DA9  3401               	retlw	1
   437     0DAA  3400               	retlw	0
   438                           
   439                           ;initializer for _elPR2
   440     0DAB  34A7               	retlw	167
   441                           
   442                           ;initializer for _porcentajeC
   443     0DAC  34A7               	retlw	167
   444                           
   445                           ;initializer for _porcentajeSubenBaja
   446     0DAD  3401               	retlw	1
   447                           
   448                           ;initializer for _porcentajeMax
   449     0DAE  34A7               	retlw	167
   450                           
   451                           ;initializer for _direccionLED
   452     0DAF  3402               	retlw	2
   453                           
   454                           ;initializer for _direccionPWM
   455     0DB0  3401               	retlw	1
   456                           
   457                           ;initializer for _eltimer1L
   458     0DB1  34A9               	retlw	169
   459                           
   460                           ;initializer for _miLED
   461     0DB2  34FF               	retlw	255
   462     0DB3  34FF               	retlw	255
   463     0DB4  34FF               	retlw	255
   464     0DB5  341F               	retlw	31
   465                           
   466                           	psect	idataBANK1
   467     0CE0                     __pidataBANK1:
   468                           
   469                           ;initializer for _los5msen1sT0
   470     0CE0  3464               	retlw	100
   471     0CE1  3400               	retlw	0
   472                           
   473                           ;initializer for _ruidoMedio
   474     0CE2  3484               	retlw	132
   475     0CE3  3403               	retlw	3
   476                           
   477                           ;initializer for _ruidoBajo
   478     0CE4  3490               	retlw	144
   479     0CE5  3401               	retlw	1
   480                           
   481                           ;initializer for _contado1
   482     0CE6  34A8               	retlw	168
   483     0CE7  3461               	retlw	97
   484                           
   485                           	psect	strings
   486     0800                     __pstrings:
   487     0800                     stringtab:
   488     0800                     __stringtab:
   489     0800                     stringcode:	
   490                           ;	String table - string pointers are 1 byte each
   491                           
   492     0800                     stringdir:
   493     0800  3008               	movlw	high stringdir
   494     0801  008A               	movwf	10
   495     0802  0804               	movf	4,w
   496     0803  0A84               	incf	4,f
   497     0804  0782               	addwf	2,f
   498     0805                     __stringbase:
   499     0805  3400               	retlw	0
   500     0806                     __end_of__stringtab:
   501     0806                     _dpowers:
   502     0806  3401               	retlw	1
   503     0807  3400               	retlw	0
   504     0808  340A               	retlw	10
   505     0809  3400               	retlw	0
   506     080A  3464               	retlw	100
   507     080B  3400               	retlw	0
   508     080C  34E8               	retlw	232
   509     080D  3403               	retlw	3
   510     080E  3410               	retlw	16
   511     080F  3427               	retlw	39
   512     0810                     __end_of_dpowers:
   513     001A                     _RCREG	set	26
   514     001E                     _ADRESH	set	30
   515     0019                     _TXREG	set	25
   516     000D                     _PIR2bits	set	13
   517     001F                     _ADCON0bits	set	31
   518     0014                     _SSPCONbits	set	20
   519     0018                     _RCSTAbits	set	24
   520     0015                     _CCPR1L	set	21
   521     0017                     _CCP1CONbits	set	23
   522     0012                     _T2CONbits	set	18
   523     0010                     _T1CONbits	set	16
   524     000E                     _TMR1L	set	14
   525     000F                     _TMR1H	set	15
   526     000B                     _INTCONbits	set	11
   527     0001                     _TMR0	set	1
   528     0005                     _PORTAbits	set	5
   529     0007                     _PORTCbits	set	7
   530     0013                     _SSPBUF	set	19
   531     000C                     _PIR1bits	set	12
   532     0064                     _TXIF	set	100
   533     009E                     _ADRESL	set	158
   534     0087                     _TRISC	set	135
   535     0086                     _TRISB	set	134
   536     008F                     _OSCCON	set	143
   537     008D                     _PIE2bits	set	141
   538     009F                     _ADCON1bits	set	159
   539     0085                     _TRISA	set	133
   540     0093                     _SSPADD	set	147
   541     0099                     _SPBRG	set	153
   542     009A                     _SPBRGH	set	154
   543     0098                     _TXSTAbits	set	152
   544     0087                     _TRISCbits	set	135
   545     0092                     _PR2	set	146
   546     008C                     _PIE1bits	set	140
   547     0081                     _OPTION_REGbits	set	129
   548     0091                     _SSPCON2bits	set	145
   549     010C                     _EEDAT	set	268
   550     010D                     _EEADR	set	269
   551     010F                     _EEADRH	set	271
   552     010E                     _EEDATH	set	270
   553     018D                     _EECON2	set	397
   554     018C                     _EECON1bits	set	396
   555     0188                     _ANSELbits	set	392
   556     0187                     _BAUDCTLbits	set	391
   557     0188                     _ANSEL	set	392
   558     0810                     STR_1:
   559     0810  3441               	retlw	65	;'A'
   560     0811  3425               	retlw	37	;'%'
   561     0812  3463               	retlw	99	;'c'
   562     0813  3420               	retlw	32	;' '
   563     0814  343D               	retlw	61	;'='
   564     0815  3420               	retlw	32	;' '
   565     0816  3425               	retlw	37	;'%'
   566     0817  3464               	retlw	100	;'d'
   567     0818  340D               	retlw	13
   568     0819  340A               	retlw	10
   569     081A  3400               	retlw	0
   570                           
   571                           	psect	cinit
   572     0015                     start_initialization:	
   573                           ; #config settings
   574                           
   575     0015                     __initialization:
   576                           
   577                           ; Initialize objects allocated to BANK1
   578     0015  1383               	bcf	3,7	;select IRP bank0
   579     0016  30CD               	movlw	low (__pdataBANK1+8)
   580     0017  00FD               	movwf	btemp+-1
   581     0018  300C               	movlw	high __pidataBANK1
   582     0019  00FE               	movwf	btemp
   583     001A  30E0               	movlw	low __pidataBANK1
   584     001B  00FF               	movwf	btemp+1
   585     001C  30C5               	movlw	low __pdataBANK1
   586     001D  0084               	movwf	4
   587     001E  120A  158A  257D  120A  118A  	fcall	init_ram0
   588                           
   589                           ; Initialize objects allocated to BANK0
   590     0023  3064               	movlw	low (__pdataBANK0+21)
   591     0024  00FD               	movwf	btemp+-1
   592     0025  300D               	movlw	high __pidataBANK0
   593     0026  00FE               	movwf	btemp
   594     0027  30A1               	movlw	low __pidataBANK0
   595     0028  00FF               	movwf	btemp+1
   596     0029  304F               	movlw	low __pdataBANK0
   597     002A  0084               	movwf	4
   598     002B  120A  158A  257D  120A  118A  	fcall	init_ram0
   599                           
   600                           ; Initialize objects allocated to COMMON
   601     0030  120A  118A  27FF  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   602     0035  00FD               	movwf	__pdataCOMMON& (0+127)
   603                           
   604                           ; Clear objects allocated to BANK1
   605     0036  30A0               	movlw	low __pbssBANK1
   606     0037  0084               	movwf	4
   607     0038  30BA               	movlw	low (__pbssBANK1+26)
   608     0039  120A  158A  24D8  120A  118A  	fcall	clear_ram0
   609                           
   610                           ; Clear objects allocated to BANK0
   611     003E  303A               	movlw	low __pbssBANK0
   612     003F  0084               	movwf	4
   613     0040  304F               	movlw	low (__pbssBANK0+21)
   614     0041  120A  158A  24D8  120A  118A  	fcall	clear_ram0
   615     0046                     end_of_initialization:	
   616                           ;End of C runtime variable initialization code
   617                           
   618     0046                     __end_of__initialization:
   619     0046  0183               	clrf	3
   620     0047  120A  158A  2F1D   	ljmp	_main	;jump to C main() function
   621                           
   622                           	psect	dataCOMMON
   623     007D                     __pdataCOMMON:
   624     007D                     _eltimer1H:
   625     007D                     	ds	1
   626                           
   627                           	psect	bssBANK0
   628     003A                     __pbssBANK0:
   629     003A                     _copias:
   630     003A                     	ds	2
   631     003C                     _copias1:
   632     003C                     	ds	2
   633     003E                     _actualizoLecturas:
   634     003E                     	ds	2
   635     0040                     _ruidoMasAlto:
   636     0040                     	ds	2
   637     0042                     _emitirMisSensores:
   638     0042                     	ds	2
   639     0044                     _reciboPWM:
   640     0044                     	ds	2
   641     0046                     _reciboLED:
   642     0046                     	ds	2
   643     0048                     _continuoEscribiendo:
   644     0048                     	ds	2
   645     004A                     _x:
   646     004A                     	ds	1
   647     004B                     _porcentaje:
   648     004B                     	ds	1
   649     004C                     _porcentajeMin:
   650     004C                     	ds	1
   651     004D                     _pPWM:
   652     004D                     	ds	1
   653     004E                     _direccionInicial:
   654     004E                     	ds	1
   655                           
   656                           	psect	dataBANK0
   657     004F                     __pdataBANK0:
   658     004F                     _los5msen15ms:
   659     004F                     	ds	2
   660     0051                     _numLedes:
   661     0051                     	ds	2
   662     0053                     _leoADCHumedadTemp:
   663     0053                     	ds	2
   664     0055                     _anI:
   665     0055                     	ds	2
   666     0057                     _deboContinuar:
   667     0057                     	ds	2
   668     0059                     _elPR2:
   669     0059                     	ds	1
   670     005A                     _porcentajeC:
   671     005A                     	ds	1
   672     005B                     _porcentajeSubenBaja:
   673     005B                     	ds	1
   674     005C                     _porcentajeMax:
   675     005C                     	ds	1
   676     005D                     _direccionLED:
   677     005D                     	ds	1
   678     005E                     _direccionPWM:
   679     005E                     	ds	1
   680     005F                     _eltimer1L:
   681     005F                     	ds	1
   682     0060                     _miLED:
   683     0060                     	ds	4
   684                           
   685                           	psect	bssBANK1
   686     00A0                     __pbssBANK1:
   687     00A0                     _valor:
   688     00A0                     	ds	6
   689     00A6                     _valorI2C:
   690     00A6                     	ds	4
   691     00AA                     _copias5s:
   692     00AA                     	ds	2
   693     00AC                     _anINext:
   694     00AC                     	ds	2
   695     00AE                     _continuar:
   696     00AE                     	ds	2
   697     00B0                     _emitoSensores:
   698     00B0                     	ds	10
   699                           
   700                           	psect	dataBANK1
   701     00C5                     __pdataBANK1:
   702     00C5                     _los5msen1sT0:
   703     00C5                     	ds	2
   704     00C7                     _ruidoMedio:
   705     00C7                     	ds	2
   706     00C9                     _ruidoBajo:
   707     00C9                     	ds	2
   708     00CB                     _contado1:
   709     00CB                     	ds	2
   710                           
   711                           	psect	inittext
   712     0D79                     init_fetch0:	
   713                           ;	Called with low address in FSR and high address in W
   714                           
   715     0D79  087E               	movf	btemp,w
   716     0D7A  008A               	movwf	10
   717     0D7B  087F               	movf	btemp+1,w
   718     0D7C  0082               	movwf	2
   719     0D7D                     init_ram0:	
   720                           ;Called with:
   721                           ;	high address of idata address in btemp 
   722                           ;	low address of idata address in btemp+1 
   723                           ;	low address of data in FSR
   724                           ;	high address + 1 of data in btemp-1
   725                           
   726     0D7D  120A  158A  2579  120A  158A  	fcall	init_fetch0
   727     0D82  0080               	movwf	0
   728     0D83  0A84               	incf	4,f
   729     0D84  0804               	movf	4,w
   730     0D85  067D               	xorwf	btemp+-1,w
   731     0D86  1903               	btfsc	3,2
   732     0D87  3400               	retlw	0
   733     0D88  0AFF               	incf	btemp+1,f
   734     0D89  1903               	btfsc	3,2
   735     0D8A  0AFE               	incf	btemp,f
   736     0D8B  2D7D               	goto	init_ram0
   737                           
   738                           	psect	clrtext
   739     0CD8                     clear_ram0:	
   740                           ;	Called with FSR containing the base address, and
   741                           ;	W with the last address+1
   742                           
   743     0CD8  0064               	clrwdt	;clear the watchdog before getting into this loop
   744     0CD9                     clrloop0:
   745     0CD9  0180               	clrf	0	;clear RAM location pointed to by FSR
   746     0CDA  0A84               	incf	4,f	;increment pointer
   747     0CDB  0604               	xorwf	4,w	;XOR with final address
   748     0CDC  1903               	btfsc	3,2	;have we reached the end yet?
   749     0CDD  3400               	retlw	0	;all done for this memory range, return
   750     0CDE  0604               	xorwf	4,w	;XOR again to restore value
   751     0CDF  2CD9               	goto	clrloop0	;do the next byte
   752                           
   753                           	psect	cstackBANK1
   754     00BA                     __pcstackBANK1:
   755     00BA                     ?_setLED:
   756     00BA                     ?_printf:	
   757                           ; 1 bytes @ 0x0
   758                           
   759     00BA                     setLED@green:	
   760                           ; 2 bytes @ 0x0
   761                           
   762                           
   763                           ; 1 bytes @ 0x0
   764     00BA                     	ds	1
   765     00BB                     ??_printf:
   766     00BB                     setLED@blue:	
   767                           ; 1 bytes @ 0x1
   768                           
   769                           
   770                           ; 1 bytes @ 0x1
   771     00BB                     	ds	1
   772     00BC                     setLED@luminosidad:
   773                           
   774                           ; 1 bytes @ 0x2
   775     00BC                     	ds	1
   776     00BD                     _initActuadoresSegunMemoria$1569:
   777                           
   778                           ; 1 bytes @ 0x3
   779     00BD                     	ds	1
   780     00BE                     printf@flag:
   781     00BE                     _initActuadoresSegunMemoria$1570:	
   782                           ; 1 bytes @ 0x4
   783                           
   784                           
   785                           ; 1 bytes @ 0x4
   786     00BE                     	ds	1
   787     00BF                     printf@f:
   788     00BF                     _initActuadoresSegunMemoria$1571:	
   789                           ; 1 bytes @ 0x5
   790                           
   791                           
   792                           ; 1 bytes @ 0x5
   793     00BF                     	ds	1
   794     00C0                     printf@prec:
   795                           
   796                           ; 1 bytes @ 0x6
   797     00C0                     	ds	1
   798     00C1                     printf@ap:
   799                           
   800                           ; 1 bytes @ 0x7
   801     00C1                     	ds	1
   802     00C2                     printf@val:
   803                           
   804                           ; 2 bytes @ 0x8
   805     00C2                     	ds	2
   806     00C4                     printf@c:
   807                           
   808                           ; 1 bytes @ 0xA
   809     00C4                     	ds	1
   810                           
   811                           	psect	cstackCOMMON
   812     0070                     __pcstackCOMMON:
   813     0070                     ?_wait_MSSP:
   814     0070                     ?_i2c_start:	
   815                           ; 1 bytes @ 0x0
   816                           
   817     0070                     ?_i2c_stop:	
   818                           ; 1 bytes @ 0x0
   819                           
   820     0070                     ?_i2c_rstart:	
   821                           ; 1 bytes @ 0x0
   822                           
   823     0070                     ?_i2c_write:	
   824                           ; 1 bytes @ 0x0
   825                           
   826     0070                     ?_i2c_read:	
   827                           ; 1 bytes @ 0x0
   828                           
   829     0070                     ?_spi_write_read:	
   830                           ; 1 bytes @ 0x0
   831                           
   832     0070                     ?_init_TMR0:	
   833                           ; 1 bytes @ 0x0
   834                           
   835     0070                     ?_init_TMR1:	
   836                           ; 1 bytes @ 0x0
   837                           
   838     0070                     ?_init_TMR2:	
   839                           ; 1 bytes @ 0x0
   840                           
   841     0070                     ?_init_CCP1_PWM:	
   842                           ; 1 bytes @ 0x0
   843                           
   844     0070                     ?_init_uart:	
   845                           ; 1 bytes @ 0x0
   846                           
   847     0070                     ?_init_I2C:	
   848                           ; 1 bytes @ 0x0
   849                           
   850     0070                     ?_init_SPI:	
   851                           ; 1 bytes @ 0x0
   852                           
   853     0070                     ?_init_ADC:	
   854                           ; 1 bytes @ 0x0
   855                           
   856     0070                     ?_init_memoria:	
   857                           ; 1 bytes @ 0x0
   858                           
   859     0070                     ?_putch:	
   860                           ; 1 bytes @ 0x0
   861                           
   862     0070                     ?_setLumen:	
   863                           ; 1 bytes @ 0x0
   864                           
   865     0070                     ?_setCO2:	
   866                           ; 1 bytes @ 0x0
   867                           
   868     0070                     ?_leerMemoria:	
   869                           ; 1 bytes @ 0x0
   870                           
   871     0070                     ?_initYo:	
   872                           ; 1 bytes @ 0x0
   873                           
   874     0070                     ?_getnoPrimerArranque:	
   875                           ; 1 bytes @ 0x0
   876                           
   877     0070                     ?_setPWM:	
   878                           ; 1 bytes @ 0x0
   879                           
   880     0070                     ?_analisisRuido:	
   881                           ; 1 bytes @ 0x0
   882                           
   883     0070                     ?_analisisResto:	
   884                           ; 1 bytes @ 0x0
   885                           
   886     0070                     ?_initActuadoresSegunMemoria:	
   887                           ; 1 bytes @ 0x0
   888                           
   889     0070                     ?_TRAT_INT:	
   890                           ; 1 bytes @ 0x0
   891                           
   892     0070                     ?_main:	
   893                           ; 1 bytes @ 0x0
   894                           
   895     0070                     ?i1_spi_write_read:	
   896                           ; 1 bytes @ 0x0
   897                           
   898     0070                     ??i1_spi_write_read:	
   899                           ; 1 bytes @ 0x0
   900                           
   901     0070                     ?i1_leerMemoria:	
   902                           ; 1 bytes @ 0x0
   903                           
   904     0070                     ??i1_leerMemoria:	
   905                           ; 1 bytes @ 0x0
   906                           
   907     0070                     ?i1_setPWM:	
   908                           ; 1 bytes @ 0x0
   909                           
   910     0070                     ?i1___bmul:	
   911                           ; 1 bytes @ 0x0
   912                           
   913     0070                     ?i1___awdiv:	
   914                           ; 1 bytes @ 0x0
   915                           
   916     0070                     i1leerMemoria@direccion:	
   917                           ; 2 bytes @ 0x0
   918                           
   919     0070                     i1___bmul@multiplicand:	
   920                           ; 1 bytes @ 0x0
   921                           
   922     0070                     i1___awdiv@divisor:	
   923                           ; 1 bytes @ 0x0
   924                           
   925                           
   926                           ; 2 bytes @ 0x0
   927     0070                     	ds	1
   928     0071                     ??i1___bmul:
   929     0071                     ?i1_escribirMemoria:	
   930                           ; 1 bytes @ 0x1
   931                           
   932     0071                     i1escribirMemoria@dato:	
   933                           ; 2 bytes @ 0x1
   934                           
   935                           
   936                           ; 1 bytes @ 0x1
   937     0071                     	ds	1
   938     0072                     ??i1_escribirMemoria:
   939     0072                     i1spi_write_read@one_byte:	
   940                           ; 1 bytes @ 0x2
   941                           
   942     0072                     i1___bmul@product:	
   943                           ; 1 bytes @ 0x2
   944                           
   945     0072                     i1escribirMemoria@confirmado:	
   946                           ; 1 bytes @ 0x2
   947                           
   948     0072                     i1___awdiv@dividend:	
   949                           ; 2 bytes @ 0x2
   950                           
   951                           
   952                           ; 2 bytes @ 0x2
   953     0072                     	ds	1
   954     0073                     i1spi_write_read@answer:
   955     0073                     i1___bmul@multiplier:	
   956                           ; 1 bytes @ 0x3
   957                           
   958                           
   959                           ; 1 bytes @ 0x3
   960     0073                     	ds	1
   961     0074                     ??i1___awdiv:
   962     0074                     i1spi_write_read@x:	
   963                           ; 1 bytes @ 0x4
   964                           
   965     0074                     i1escribirMemoria@direccion:	
   966                           ; 1 bytes @ 0x4
   967                           
   968                           
   969                           ; 1 bytes @ 0x4
   970     0074                     	ds	1
   971     0075                     ?i1_cosasSPI:
   972     0075                     i1cosasSPI@verd:	
   973                           ; 1 bytes @ 0x5
   974                           
   975     0075                     i1___awdiv@counter:	
   976                           ; 1 bytes @ 0x5
   977                           
   978     0075                     i1escribirMemoria@contador:	
   979                           ; 1 bytes @ 0x5
   980                           
   981                           
   982                           ; 2 bytes @ 0x5
   983     0075                     	ds	1
   984     0076                     i1cosasSPI@azu:
   985     0076                     i1___awdiv@sign:	
   986                           ; 1 bytes @ 0x6
   987                           
   988                           
   989                           ; 1 bytes @ 0x6
   990     0076                     	ds	1
   991     0077                     i1cosasSPI@lumi:
   992     0077                     i1___awdiv@quotient:	
   993                           ; 1 bytes @ 0x7
   994                           
   995                           
   996                           ; 2 bytes @ 0x7
   997     0077                     	ds	1
   998     0078                     ??i1_cosasSPI:
   999     0078                     i1cosasSPI@roj:	
  1000                           ; 1 bytes @ 0x8
  1001                           
  1002                           
  1003                           ; 1 bytes @ 0x8
  1004     0078                     	ds	1
  1005     0079                     ??i1_setPWM:
  1006     0079                     i1cosasSPI@lumo:	
  1007                           ; 1 bytes @ 0x9
  1008                           
  1009                           
  1010                           ; 1 bytes @ 0x9
  1011     0079                     	ds	1
  1012     007A                     i1cosasSPI@i:
  1013                           
  1014                           ; 2 bytes @ 0xA
  1015     007A                     	ds	1
  1016     007B                     i1setPWM@porcent:
  1017                           
  1018                           ; 1 bytes @ 0xB
  1019     007B                     	ds	1
  1020     007C                     ??i1_setLED:
  1021     007C                     i1setLED@red:	
  1022                           ; 1 bytes @ 0xC
  1023                           
  1024                           
  1025                           ; 1 bytes @ 0xC
  1026     007C                     	ds	1
  1027                           
  1028                           	psect	cstackBANK0
  1029     0020                     __pcstackBANK0:
  1030     0020                     ?i1_setLED:
  1031     0020                     i1setLED@green:	
  1032                           ; 1 bytes @ 0x0
  1033                           
  1034                           
  1035                           ; 1 bytes @ 0x0
  1036     0020                     	ds	1
  1037     0021                     i1setLED@blue:
  1038                           
  1039                           ; 1 bytes @ 0x1
  1040     0021                     	ds	1
  1041     0022                     i1setLED@luminosidad:
  1042                           
  1043                           ; 1 bytes @ 0x2
  1044     0022                     	ds	1
  1045     0023                     ??_TRAT_INT:
  1046                           
  1047                           ; 1 bytes @ 0x3
  1048     0023                     	ds	9
  1049     002C                     ??_wait_MSSP:
  1050     002C                     ??_i2c_start:	
  1051                           ; 1 bytes @ 0xC
  1052                           
  1053     002C                     ??_i2c_stop:	
  1054                           ; 1 bytes @ 0xC
  1055                           
  1056     002C                     ??_i2c_rstart:	
  1057                           ; 1 bytes @ 0xC
  1058                           
  1059     002C                     ??_i2c_write:	
  1060                           ; 1 bytes @ 0xC
  1061                           
  1062     002C                     ??_i2c_read:	
  1063                           ; 1 bytes @ 0xC
  1064                           
  1065     002C                     ??_spi_write_read:	
  1066                           ; 1 bytes @ 0xC
  1067                           
  1068     002C                     ??_init_TMR0:	
  1069                           ; 1 bytes @ 0xC
  1070                           
  1071     002C                     ??_init_TMR1:	
  1072                           ; 1 bytes @ 0xC
  1073                           
  1074     002C                     ??_init_TMR2:	
  1075                           ; 1 bytes @ 0xC
  1076                           
  1077     002C                     ??_init_CCP1_PWM:	
  1078                           ; 1 bytes @ 0xC
  1079                           
  1080     002C                     ??_init_uart:	
  1081                           ; 1 bytes @ 0xC
  1082                           
  1083     002C                     ??_init_I2C:	
  1084                           ; 1 bytes @ 0xC
  1085                           
  1086     002C                     ??_init_SPI:	
  1087                           ; 1 bytes @ 0xC
  1088                           
  1089     002C                     ??_init_ADC:	
  1090                           ; 1 bytes @ 0xC
  1091                           
  1092     002C                     ??_init_memoria:	
  1093                           ; 1 bytes @ 0xC
  1094                           
  1095     002C                     ??_putch:	
  1096                           ; 1 bytes @ 0xC
  1097                           
  1098     002C                     ??_leerMemoria:	
  1099                           ; 1 bytes @ 0xC
  1100                           
  1101     002C                     ??_initYo:	
  1102                           ; 1 bytes @ 0xC
  1103                           
  1104     002C                     ??_analisisRuido:	
  1105                           ; 1 bytes @ 0xC
  1106                           
  1107     002C                     ?___bmul:	
  1108                           ; 1 bytes @ 0xC
  1109                           
  1110     002C                     ?_getLumen:	
  1111                           ; 1 bytes @ 0xC
  1112                           
  1113     002C                     ?_getCO2:	
  1114                           ; 2 bytes @ 0xC
  1115                           
  1116     002C                     ?___awdiv:	
  1117                           ; 2 bytes @ 0xC
  1118                           
  1119     002C                     ?___lwdiv:	
  1120                           ; 2 bytes @ 0xC
  1121                           
  1122     002C                     i2c_write@I2C_data:	
  1123                           ; 2 bytes @ 0xC
  1124                           
  1125     002C                     i2c_read@master_ack:	
  1126                           ; 1 bytes @ 0xC
  1127                           
  1128     002C                     putch@c:	
  1129                           ; 1 bytes @ 0xC
  1130                           
  1131     002C                     leerMemoria@direccion:	
  1132                           ; 1 bytes @ 0xC
  1133                           
  1134     002C                     ___bmul@multiplicand:	
  1135                           ; 1 bytes @ 0xC
  1136                           
  1137     002C                     ___awdiv@divisor:	
  1138                           ; 1 bytes @ 0xC
  1139                           
  1140     002C                     ___lwdiv@divisor:	
  1141                           ; 2 bytes @ 0xC
  1142                           
  1143                           
  1144                           ; 2 bytes @ 0xC
  1145     002C                     	ds	1
  1146     002D                     ??_getnoPrimerArranque:
  1147     002D                     ??___bmul:	
  1148                           ; 1 bytes @ 0xD
  1149                           
  1150     002D                     ?_escribirMemoria:	
  1151                           ; 1 bytes @ 0xD
  1152                           
  1153     002D                     i2c_read@I2C_data:	
  1154                           ; 2 bytes @ 0xD
  1155                           
  1156     002D                     escribirMemoria@dato:	
  1157                           ; 1 bytes @ 0xD
  1158                           
  1159     002D                     getnoPrimerArranque@aux:	
  1160                           ; 1 bytes @ 0xD
  1161                           
  1162                           
  1163                           ; 1 bytes @ 0xD
  1164     002D                     	ds	1
  1165     002E                     ??_setLumen:
  1166     002E                     ??_getLumen:	
  1167                           ; 1 bytes @ 0xE
  1168                           
  1169     002E                     ??_setCO2:	
  1170                           ; 1 bytes @ 0xE
  1171                           
  1172     002E                     ??_getCO2:	
  1173                           ; 1 bytes @ 0xE
  1174                           
  1175     002E                     ??_escribirMemoria:	
  1176                           ; 1 bytes @ 0xE
  1177                           
  1178     002E                     spi_write_read@one_byte:	
  1179                           ; 1 bytes @ 0xE
  1180                           
  1181     002E                     analisisRuido@temp:	
  1182                           ; 1 bytes @ 0xE
  1183                           
  1184     002E                     ___bmul@product:	
  1185                           ; 1 bytes @ 0xE
  1186                           
  1187     002E                     escribirMemoria@confirmado:	
  1188                           ; 1 bytes @ 0xE
  1189                           
  1190     002E                     ___awdiv@dividend:	
  1191                           ; 2 bytes @ 0xE
  1192                           
  1193     002E                     ___lwdiv@dividend:	
  1194                           ; 2 bytes @ 0xE
  1195                           
  1196                           
  1197                           ; 2 bytes @ 0xE
  1198     002E                     	ds	1
  1199     002F                     spi_write_read@answer:
  1200     002F                     ___bmul@multiplier:	
  1201                           ; 1 bytes @ 0xF
  1202                           
  1203                           
  1204                           ; 1 bytes @ 0xF
  1205     002F                     	ds	1
  1206     0030                     ??_analisisResto:
  1207     0030                     ??___awdiv:	
  1208                           ; 1 bytes @ 0x10
  1209                           
  1210     0030                     ??___lwdiv:	
  1211                           ; 1 bytes @ 0x10
  1212                           
  1213     0030                     spi_write_read@x:	
  1214                           ; 1 bytes @ 0x10
  1215                           
  1216     0030                     escribirMemoria@direccion:	
  1217                           ; 1 bytes @ 0x10
  1218                           
  1219                           
  1220                           ; 1 bytes @ 0x10
  1221     0030                     	ds	1
  1222     0031                     ?_cosasSPI:
  1223     0031                     cosasSPI@verd:	
  1224                           ; 1 bytes @ 0x11
  1225                           
  1226     0031                     ___awdiv@counter:	
  1227                           ; 1 bytes @ 0x11
  1228                           
  1229     0031                     ___lwdiv@counter:	
  1230                           ; 1 bytes @ 0x11
  1231                           
  1232     0031                     escribirMemoria@contador:	
  1233                           ; 1 bytes @ 0x11
  1234                           
  1235                           
  1236                           ; 2 bytes @ 0x11
  1237     0031                     	ds	1
  1238     0032                     cosasSPI@azu:
  1239     0032                     ___awdiv@sign:	
  1240                           ; 1 bytes @ 0x12
  1241                           
  1242     0032                     ___lwdiv@quotient:	
  1243                           ; 1 bytes @ 0x12
  1244                           
  1245                           
  1246                           ; 2 bytes @ 0x12
  1247     0032                     	ds	1
  1248     0033                     cosasSPI@lumi:
  1249     0033                     ___awdiv@quotient:	
  1250                           ; 1 bytes @ 0x13
  1251                           
  1252                           
  1253                           ; 2 bytes @ 0x13
  1254     0033                     	ds	1
  1255     0034                     ??_cosasSPI:
  1256     0034                     ?___lwmod:	
  1257                           ; 1 bytes @ 0x14
  1258                           
  1259     0034                     cosasSPI@roj:	
  1260                           ; 2 bytes @ 0x14
  1261                           
  1262     0034                     ___lwmod@divisor:	
  1263                           ; 1 bytes @ 0x14
  1264                           
  1265                           
  1266                           ; 2 bytes @ 0x14
  1267     0034                     	ds	1
  1268     0035                     ??_setPWM:
  1269     0035                     cosasSPI@lumo:	
  1270                           ; 1 bytes @ 0x15
  1271                           
  1272                           
  1273                           ; 1 bytes @ 0x15
  1274     0035                     	ds	1
  1275     0036                     cosasSPI@i:
  1276     0036                     ___lwmod@dividend:	
  1277                           ; 2 bytes @ 0x16
  1278                           
  1279                           
  1280                           ; 2 bytes @ 0x16
  1281     0036                     	ds	1
  1282     0037                     setPWM@porcent:
  1283                           
  1284                           ; 1 bytes @ 0x17
  1285     0037                     	ds	1
  1286     0038                     ??_setLED:
  1287     0038                     ??___lwmod:	
  1288                           ; 1 bytes @ 0x18
  1289                           
  1290     0038                     setLED@red:	
  1291                           ; 1 bytes @ 0x18
  1292                           
  1293                           
  1294                           ; 1 bytes @ 0x18
  1295     0038                     	ds	1
  1296     0039                     ??_initActuadoresSegunMemoria:
  1297     0039                     ___lwmod@counter:	
  1298                           ; 1 bytes @ 0x19
  1299                           
  1300                           
  1301                           ; 1 bytes @ 0x19
  1302     0039                     	ds	1
  1303     003A                     ??_main:
  1304                           
  1305                           	psect	maintext
  1306     0F1D                     __pmaintext:	
  1307                           ; 1 bytes @ 0x1A
  1308 ;;
  1309 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1310 ;;
  1311 ;; *************** function _main *****************
  1312 ;; Defined at:
  1313 ;;		line 588 in file "main.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : B00/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         0       0       0       0       0
  1328 ;;      Locals:         0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0
  1330 ;;      Totals:         0       0       0       0       0
  1331 ;;Total ram usage:        0 bytes
  1332 ;; Hardware stack levels required when called: 8
  1333 ;; This function calls:
  1334 ;;		_analisisResto
  1335 ;;		_analisisRuido
  1336 ;;		_i2c_stop
  1337 ;;		_initActuadoresSegunMemoria
  1338 ;;		_initYo
  1339 ;;		_printf
  1340 ;; This function is called by:
  1341 ;;		Startup code after reset
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345     0F1D                     _main:	
  1346                           ;psect for function _main
  1347                           
  1348     0F1D                     l3145:	
  1349                           ;incstack = 0
  1350                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1351                           
  1352                           
  1353                           ;main.c: 589:     initYo();
  1354     0F1D  120A  158A  2788  120A  158A  	fcall	_initYo
  1355     0F22                     l3147:
  1356                           
  1357                           ;main.c: 590:     initActuadoresSegunMemoria();
  1358     0F22  120A  118A  2539  120A  158A  	fcall	_initActuadoresSegunMemoria
  1359                           
  1360                           ;main.c: 592:     while (deboContinuar) {
  1361     0F27  2F42               	goto	l3157
  1362     0F28                     l3149:
  1363                           
  1364                           ;main.c: 593:         if (emitirMisSensores) {
  1365     0F28  0842               	movf	_emitirMisSensores,w
  1366     0F29  0443               	iorwf	_emitirMisSensores+1,w
  1367     0F2A  1903               	btfsc	3,2
  1368     0F2B  2F2D               	goto	u2621
  1369     0F2C  2F2E               	goto	u2620
  1370     0F2D                     u2621:
  1371     0F2D  2F38               	goto	l3153
  1372     0F2E                     u2620:
  1373     0F2E                     l3151:
  1374                           
  1375                           ;main.c: 594:             printf("A%c = %d\r\n", emitoSensores);
  1376     0F2E  30B0               	movlw	(low (_emitoSensores| 0))& (0+255)
  1377     0F2F  1683               	bsf	3,5	;RP0=1, select bank1
  1378     0F30  1303               	bcf	3,6	;RP1=0, select bank1
  1379     0F31  00BA               	movwf	?_printf^(0+128)
  1380     0F32  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1381     0F33  120A  118A  222C  120A  158A  	fcall	_printf
  1382     0F38                     l3153:
  1383                           
  1384                           ;main.c: 597:         analisisRuido();
  1385     0F38  120A  118A  272A  120A  158A  	fcall	_analisisRuido
  1386     0F3D                     l3155:
  1387                           
  1388                           ;main.c: 598:         analisisResto();
  1389     0F3D  120A  118A  27B0  120A  158A  	fcall	_analisisResto
  1390     0F42                     l3157:
  1391                           
  1392                           ;main.c: 592:     while (deboContinuar) {
  1393     0F42  1283               	bcf	3,5	;RP0=0, select bank0
  1394     0F43  1303               	bcf	3,6	;RP1=0, select bank0
  1395     0F44  0857               	movf	_deboContinuar,w
  1396     0F45  0458               	iorwf	_deboContinuar+1,w
  1397     0F46  1D03               	btfss	3,2
  1398     0F47  2F49               	goto	u2631
  1399     0F48  2F4A               	goto	u2630
  1400     0F49                     u2631:
  1401     0F49  2F28               	goto	l3149
  1402     0F4A                     u2630:
  1403     0F4A                     l3159:
  1404                           
  1405                           ;main.c: 605:     i2c_stop();
  1406     0F4A  120A  158A  24F1  120A  158A  	fcall	_i2c_stop
  1407     0F4F                     l378:
  1408     0F4F  120A  118A  2812   	ljmp	start
  1409     0F52                     __end_of_main:
  1410                           
  1411                           	psect	text1
  1412     022C                     __ptext1:	
  1413 ;; *************** function _printf *****************
  1414 ;; Defined at:
  1415 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;  f               1    wreg     PTR const unsigned char 
  1418 ;;		 -> STR_1(11), 
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;  f               1    5[BANK1 ] PTR const unsigned char 
  1421 ;;		 -> STR_1(11), 
  1422 ;;  tmpval          4    0        struct .
  1423 ;;  val             2    8[BANK1 ] unsigned int 
  1424 ;;  cp              2    0        PTR const unsigned char 
  1425 ;;  len             2    0        unsigned int 
  1426 ;;  c               1   10[BANK1 ] unsigned char 
  1427 ;;  ap              1    7[BANK1 ] PTR void [1]
  1428 ;;		 -> ?_printf(2), 
  1429 ;;  prec            1    6[BANK1 ] char 
  1430 ;;  flag            1    4[BANK1 ] unsigned char 
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  2    0[BANK1 ] int 
  1433 ;; Registers used:
  1434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1440 ;;      Params:         0       0       1       0       0
  1441 ;;      Locals:         0       0       7       0       0
  1442 ;;      Temps:          0       0       3       0       0
  1443 ;;      Totals:         0       0      11       0       0
  1444 ;;Total ram usage:       11 bytes
  1445 ;; Hardware stack levels used: 1
  1446 ;; Hardware stack levels required when called: 5
  1447 ;; This function calls:
  1448 ;;		___lwdiv
  1449 ;;		___lwmod
  1450 ;;		_putch
  1451 ;; This function is called by:
  1452 ;;		_main
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456     022C                     _printf:	
  1457                           ;psect for function _printf
  1458                           
  1459                           
  1460                           ;incstack = 0
  1461                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1462                           ;printf@f stored from wreg
  1463     022C  1683               	bsf	3,5	;RP0=1, select bank1
  1464     022D  1303               	bcf	3,6	;RP1=0, select bank1
  1465     022E  00BF               	movwf	printf@f^(0+128)
  1466     022F                     l3087:
  1467                           
  1468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
  1469     022F  30BA               	movlw	(low (?_printf| 0))& (0+255)
  1470     0230  00C1               	movwf	printf@ap^(0+128)
  1471                           
  1472                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1473     0231  2B12               	goto	l3139
  1474     0232                     l3089:
  1475                           
  1476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1477     0232  3025               	movlw	37
  1478     0233  0644               	xorwf	printf@c^(0+128),w
  1479     0234  1903               	btfsc	3,2
  1480     0235  2A37               	goto	u2551
  1481     0236  2A38               	goto	u2550
  1482     0237                     u2551:
  1483     0237  2A3F               	goto	l3093
  1484     0238                     u2550:
  1485     0238                     l3091:
  1486                           
  1487                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
  1488     0238  0844               	movf	printf@c^(0+128),w
  1489     0239  120A  158A  2567  120A  118A  	fcall	_putch
  1490                           
  1491                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1492     023E  2B12               	goto	l3139
  1493     023F                     l3093:
  1494                           
  1495                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1496     023F  01BE               	clrf	printf@flag^(0+128)
  1497                           
  1498                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1499     0240  2A51               	goto	l3103
  1500     0241                     l3095:
  1501                           
  1502                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 825:    c = (char
      +                          )(*(int *)__va_arg((*(int **)ap), (int)0));
  1503     0241  0841               	movf	printf@ap^(0+128),w
  1504     0242  0084               	movwf	4
  1505     0243  1383               	bcf	3,7	;select IRP bank0
  1506     0244  0800               	movf	0,w
  1507     0245  00C4               	movwf	printf@c^(0+128)
  1508     0246                     l3097:
  1509     0246  3002               	movlw	2
  1510     0247  00BB               	movwf	??_printf^(0+128)
  1511     0248  083B               	movf	??_printf^(0+128),w
  1512     0249  07C1               	addwf	printf@ap^(0+128),f
  1513     024A                     l3099:
  1514                           
  1515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 835:    (putch(c)
      +                           );
  1516     024A  0844               	movf	printf@c^(0+128),w
  1517     024B  120A  158A  2567  120A  118A  	fcall	_putch
  1518                           
  1519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 836:    continue;
  1520     0250  2B12               	goto	l3139
  1521     0251                     l3103:
  1522     0251  3001               	movlw	1
  1523     0252  07BF               	addwf	printf@f^(0+128),f
  1524     0253  30FF               	movlw	-1
  1525     0254  073F               	addwf	printf@f^(0+128),w
  1526     0255  0084               	movwf	4
  1527     0256  120A  158A  2000  120A  118A  	fcall	stringdir
  1528     025B  00C4               	movwf	printf@c^(0+128)
  1529     025C  00BB               	movwf	??_printf^(0+128)
  1530     025D  01BC               	clrf	(??_printf^(0+128)+1)
  1531                           
  1532                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1533                           ; Switch size 1, requested type "simple"
  1534                           ; Number of cases is 1, Range of values is 0 to 0
  1535                           ; switch strategies available:
  1536                           ; Name         Instructions Cycles
  1537                           ; simple_byte            4     3 (average)
  1538                           ; direct_byte           11     8 (fixed)
  1539                           ; jumptable            260     6 (fixed)
  1540                           ;	Chosen strategy is simple_byte
  1541     025E  083C               	movf	(??_printf+1)^(0+128),w
  1542     025F  3A00               	xorlw	0	; case 0
  1543     0260  1903               	skipnz
  1544     0261  2A63               	goto	l3211
  1545     0262  2A4A               	goto	l3099
  1546     0263                     l3211:
  1547                           
  1548                           ; Switch size 1, requested type "simple"
  1549                           ; Number of cases is 4, Range of values is 0 to 105
  1550                           ; switch strategies available:
  1551                           ; Name         Instructions Cycles
  1552                           ; simple_byte           13     7 (average)
  1553                           ; jumptable            260     6 (fixed)
  1554                           ;	Chosen strategy is simple_byte
  1555     0263  083B               	movf	??_printf^(0+128),w
  1556     0264  3A00               	xorlw	0	; case 0
  1557     0265  1903               	skipnz
  1558     0266  2B24               	goto	l491
  1559     0267  3A63               	xorlw	99	; case 99
  1560     0268  1903               	skipnz
  1561     0269  2A41               	goto	l3095
  1562     026A  3A07               	xorlw	7	; case 100
  1563     026B  1903               	skipnz
  1564     026C  2A71               	goto	l3105
  1565     026D  3A0D               	xorlw	13	; case 105
  1566     026E  1903               	skipnz
  1567     026F  2A71               	goto	l3105
  1568     0270  2A4A               	goto	l3099
  1569     0271                     l3105:
  1570                           
  1571                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1572     0271  0841               	movf	printf@ap^(0+128),w
  1573     0272  0084               	movwf	4
  1574     0273  1383               	bcf	3,7	;select IRP bank0
  1575     0274  0800               	movf	0,w
  1576     0275  00C2               	movwf	printf@val^(0+128)
  1577     0276  0A84               	incf	4,f
  1578     0277  0800               	movf	0,w
  1579     0278  00C3               	movwf	(printf@val+1)^(0+128)
  1580     0279                     l3107:
  1581     0279  3002               	movlw	2
  1582     027A  00BB               	movwf	??_printf^(0+128)
  1583     027B  083B               	movf	??_printf^(0+128),w
  1584     027C  07C1               	addwf	printf@ap^(0+128),f
  1585     027D                     l3109:
  1586                           
  1587                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1588     027D  1FC3               	btfss	(printf@val+1)^(0+128),7
  1589     027E  2A80               	goto	u2561
  1590     027F  2A81               	goto	u2560
  1591     0280                     u2561:
  1592     0280  2A8A               	goto	l3115
  1593     0281                     u2560:
  1594     0281                     l3111:
  1595                           
  1596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1597     0281  3003               	movlw	3
  1598     0282  00BB               	movwf	??_printf^(0+128)
  1599     0283  083B               	movf	??_printf^(0+128),w
  1600     0284  04BE               	iorwf	printf@flag^(0+128),f
  1601     0285                     l3113:
  1602                           
  1603                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1604     0285  09C2               	comf	printf@val^(0+128),f
  1605     0286  09C3               	comf	(printf@val+1)^(0+128),f
  1606     0287  0AC2               	incf	printf@val^(0+128),f
  1607     0288  1903               	skipnz
  1608     0289  0AC3               	incf	(printf@val+1)^(0+128),f
  1609     028A                     l3115:
  1610                           
  1611                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1612     028A  01C4               	clrf	printf@c^(0+128)
  1613     028B  0AC4               	incf	printf@c^(0+128),f
  1614     028C                     l3121:
  1615                           
  1616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1617     028C  0844               	movf	printf@c^(0+128),w
  1618     028D  00BB               	movwf	??_printf^(0+128)
  1619     028E  073B               	addwf	??_printf^(0+128),w
  1620     028F  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1621     0290  0084               	movwf	4
  1622     0291  120A  158A  2000  120A  118A  	fcall	stringdir
  1623     0296  00BC               	movwf	(??_printf+1)^(0+128)
  1624     0297  120A  158A  2000  120A  118A  	fcall	stringdir
  1625     029C  00BD               	movwf	((??_printf+1)^(0+128)+1)
  1626     029D  083D               	movf	(??_printf+2)^(0+128),w
  1627     029E  0243               	subwf	(printf@val+1)^(0+128),w
  1628     029F  1D03               	skipz
  1629     02A0  2AA3               	goto	u2575
  1630     02A1  083C               	movf	(??_printf+1)^(0+128),w
  1631     02A2  0242               	subwf	printf@val^(0+128),w
  1632     02A3                     u2575:
  1633     02A3  1803               	skipnc
  1634     02A4  2AA6               	goto	u2571
  1635     02A5  2AA7               	goto	u2570
  1636     02A6                     u2571:
  1637     02A6  2AA8               	goto	l3125
  1638     02A7                     u2570:
  1639     02A7  2AB2               	goto	l3127
  1640     02A8                     l3125:
  1641     02A8  3001               	movlw	1
  1642     02A9  00BB               	movwf	??_printf^(0+128)
  1643     02AA  083B               	movf	??_printf^(0+128),w
  1644     02AB  07C4               	addwf	printf@c^(0+128),f
  1645     02AC  3005               	movlw	5
  1646     02AD  0644               	xorwf	printf@c^(0+128),w
  1647     02AE  1D03               	btfss	3,2
  1648     02AF  2AB1               	goto	u2581
  1649     02B0  2AB2               	goto	u2580
  1650     02B1                     u2581:
  1651     02B1  2A8C               	goto	l3121
  1652     02B2                     u2580:
  1653     02B2                     l3127:
  1654                           
  1655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1656     02B2  083E               	movf	printf@flag^(0+128),w
  1657     02B3  3903               	andlw	3
  1658     02B4  1903               	btfsc	3,2
  1659     02B5  2AB7               	goto	u2591
  1660     02B6  2AB8               	goto	u2590
  1661     02B7                     u2591:
  1662     02B7  2ABE               	goto	l3131
  1663     02B8                     u2590:
  1664     02B8                     l3129:
  1665                           
  1666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     (putch(
      +                          '-') );
  1667     02B8  302D               	movlw	45
  1668     02B9  120A  158A  2567  120A  118A  	fcall	_putch
  1669     02BE                     l3131:
  1670                           
  1671                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1672     02BE  1683               	bsf	3,5	;RP0=1, select bank1
  1673     02BF  1303               	bcf	3,6	;RP1=0, select bank1
  1674     02C0  0844               	movf	printf@c^(0+128),w
  1675     02C1  00C0               	movwf	printf@prec^(0+128)
  1676                           
  1677                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1678     02C2  2B07               	goto	l3137
  1679     02C3                     l3133:
  1680                           
  1681                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1682     02C3  300A               	movlw	10
  1683     02C4  1283               	bcf	3,5	;RP0=0, select bank0
  1684     02C5  1303               	bcf	3,6	;RP1=0, select bank0
  1685     02C6  00B4               	movwf	___lwmod@divisor
  1686     02C7  3000               	movlw	0
  1687     02C8  00B5               	movwf	___lwmod@divisor+1
  1688     02C9  1683               	bsf	3,5	;RP0=1, select bank1
  1689     02CA  1303               	bcf	3,6	;RP1=0, select bank1
  1690     02CB  0840               	movf	printf@prec^(0+128),w
  1691     02CC  00BB               	movwf	??_printf^(0+128)
  1692     02CD  073B               	addwf	??_printf^(0+128),w
  1693     02CE  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1694     02CF  0084               	movwf	4
  1695     02D0  120A  158A  2000  120A  118A  	fcall	stringdir
  1696     02D5  1283               	bcf	3,5	;RP0=0, select bank0
  1697     02D6  1303               	bcf	3,6	;RP1=0, select bank0
  1698     02D7  00AC               	movwf	___lwdiv@divisor
  1699     02D8  120A  158A  2000  120A  118A  	fcall	stringdir
  1700     02DD  00AD               	movwf	___lwdiv@divisor+1
  1701     02DE  1683               	bsf	3,5	;RP0=1, select bank1
  1702     02DF  1303               	bcf	3,6	;RP1=0, select bank1
  1703     02E0  0843               	movf	(printf@val+1)^(0+128),w
  1704     02E1  1283               	bcf	3,5	;RP0=0, select bank0
  1705     02E2  1303               	bcf	3,6	;RP1=0, select bank0
  1706     02E3  00AF               	movwf	___lwdiv@dividend+1
  1707     02E4  1683               	bsf	3,5	;RP0=1, select bank1
  1708     02E5  1303               	bcf	3,6	;RP1=0, select bank1
  1709     02E6  0842               	movf	printf@val^(0+128),w
  1710     02E7  1283               	bcf	3,5	;RP0=0, select bank0
  1711     02E8  1303               	bcf	3,6	;RP1=0, select bank0
  1712     02E9  00AE               	movwf	___lwdiv@dividend
  1713     02EA  120A  118A  265A  120A  118A  	fcall	___lwdiv
  1714     02EF  1283               	bcf	3,5	;RP0=0, select bank0
  1715     02F0  1303               	bcf	3,6	;RP1=0, select bank0
  1716     02F1  082D               	movf	?___lwdiv+1,w
  1717     02F2  00B7               	movwf	___lwmod@dividend+1
  1718     02F3  082C               	movf	?___lwdiv,w
  1719     02F4  00B6               	movwf	___lwmod@dividend
  1720     02F5  120A  158A  27C4  120A  118A  	fcall	___lwmod
  1721     02FA  1283               	bcf	3,5	;RP0=0, select bank0
  1722     02FB  1303               	bcf	3,6	;RP1=0, select bank0
  1723     02FC  0834               	movf	?___lwmod,w
  1724     02FD  3E30               	addlw	48
  1725     02FE  1683               	bsf	3,5	;RP0=1, select bank1
  1726     02FF  1303               	bcf	3,6	;RP1=0, select bank1
  1727     0300  00C4               	movwf	printf@c^(0+128)
  1728     0301                     l3135:
  1729                           
  1730                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    (putch(c) );
  1731     0301  0844               	movf	printf@c^(0+128),w
  1732     0302  120A  158A  2567  120A  118A  	fcall	_putch
  1733     0307                     l3137:
  1734                           
  1735                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1736     0307  30FF               	movlw	255
  1737     0308  1683               	bsf	3,5	;RP0=1, select bank1
  1738     0309  1303               	bcf	3,6	;RP1=0, select bank1
  1739     030A  00BB               	movwf	??_printf^(0+128)
  1740     030B  083B               	movf	??_printf^(0+128),w
  1741     030C  07C0               	addwf	printf@prec^(0+128),f
  1742     030D  0A40               	incf	printf@prec^(0+128),w
  1743     030E  1D03               	btfss	3,2
  1744     030F  2B11               	goto	u2601
  1745     0310  2B12               	goto	u2600
  1746     0311                     u2601:
  1747     0311  2AC3               	goto	l3133
  1748     0312                     u2600:
  1749     0312                     l3139:
  1750                           
  1751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1752     0312  3001               	movlw	1
  1753     0313  1683               	bsf	3,5	;RP0=1, select bank1
  1754     0314  1303               	bcf	3,6	;RP1=0, select bank1
  1755     0315  07BF               	addwf	printf@f^(0+128),f
  1756     0316  30FF               	movlw	-1
  1757     0317  073F               	addwf	printf@f^(0+128),w
  1758     0318  0084               	movwf	4
  1759     0319  120A  158A  2000  120A  118A  	fcall	stringdir
  1760     031E  00C4               	movwf	printf@c^(0+128)
  1761     031F  0844               	movf	printf@c^(0+128),w
  1762     0320  1D03               	btfss	3,2
  1763     0321  2B23               	goto	u2611
  1764     0322  2B24               	goto	u2610
  1765     0323                     u2611:
  1766     0323  2A32               	goto	l3089
  1767     0324                     u2610:
  1768     0324                     l491:
  1769     0324  0008               	return
  1770     0325                     __end_of_printf:
  1771                           
  1772                           	psect	text2
  1773     0D67                     __ptext2:	
  1774 ;; *************** function _putch *****************
  1775 ;; Defined at:
  1776 ;;		line 233 in file "main.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  c               1    wreg     unsigned char 
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;  c               1   12[BANK0 ] unsigned char 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		wreg
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1790 ;;      Params:         0       0       0       0       0
  1791 ;;      Locals:         0       1       0       0       0
  1792 ;;      Temps:          0       0       0       0       0
  1793 ;;      Totals:         0       1       0       0       0
  1794 ;;Total ram usage:        1 bytes
  1795 ;; Hardware stack levels used: 1
  1796 ;; Hardware stack levels required when called: 4
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_printf
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804     0D67                     _putch:	
  1805                           ;psect for function _putch
  1806                           
  1807                           
  1808                           ;incstack = 0
  1809                           ; Regs used in _putch: [wreg]
  1810                           ;putch@c stored from wreg
  1811     0D67  1283               	bcf	3,5	;RP0=0, select bank0
  1812     0D68  1303               	bcf	3,6	;RP1=0, select bank0
  1813     0D69  00AC               	movwf	putch@c
  1814     0D6A                     l2975:
  1815     0D6A                     l239:	
  1816                           ;main.c: 237:     }
  1817                           
  1818                           
  1819                           ;main.c: 234:     while (!TXIF && !TXSTAbits.TRMT) {
  1820     0D6A  1283               	bcf	3,5	;RP0=0, select bank0
  1821     0D6B  1A0C               	btfsc	12,4	;volatile
  1822     0D6C  2D6E               	goto	u2361
  1823     0D6D  2D6F               	goto	u2360
  1824     0D6E                     u2361:
  1825     0D6E  2D75               	goto	l2979
  1826     0D6F                     u2360:
  1827     0D6F                     l2977:
  1828     0D6F  1683               	bsf	3,5	;RP0=1, select bank1
  1829     0D70  1303               	bcf	3,6	;RP1=0, select bank1
  1830     0D71  1C98               	btfss	24,1	;volatile
  1831     0D72  2D74               	goto	u2371
  1832     0D73  2D75               	goto	u2370
  1833     0D74                     u2371:
  1834     0D74  2D6A               	goto	l239
  1835     0D75                     u2370:
  1836     0D75                     l2979:
  1837                           
  1838                           ;main.c: 238:     TXREG = c;
  1839     0D75  1283               	bcf	3,5	;RP0=0, select bank0
  1840     0D76  082C               	movf	putch@c,w
  1841     0D77  0099               	movwf	25	;volatile
  1842     0D78                     l244:
  1843     0D78  0008               	return
  1844     0D79                     __end_of_putch:
  1845                           
  1846                           	psect	text3
  1847     0FC4                     __ptext3:	
  1848 ;; *************** function ___lwmod *****************
  1849 ;; Defined at:
  1850 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  divisor         2   20[BANK0 ] unsigned int 
  1853 ;;  dividend        2   22[BANK0 ] unsigned int 
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;  counter         1   25[BANK0 ] unsigned char 
  1856 ;; Return value:  Size  Location     Type
  1857 ;;                  2   20[BANK0 ] unsigned int 
  1858 ;; Registers used:
  1859 ;;		wreg, status,2, status,0
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1865 ;;      Params:         0       4       0       0       0
  1866 ;;      Locals:         0       1       0       0       0
  1867 ;;      Temps:          0       1       0       0       0
  1868 ;;      Totals:         0       6       0       0       0
  1869 ;;Total ram usage:        6 bytes
  1870 ;; Hardware stack levels used: 1
  1871 ;; Hardware stack levels required when called: 4
  1872 ;; This function calls:
  1873 ;;		Nothing
  1874 ;; This function is called by:
  1875 ;;		_printf
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879     0FC4                     ___lwmod:	
  1880                           ;psect for function ___lwmod
  1881                           
  1882     0FC4                     l3051:	
  1883                           ;incstack = 0
  1884                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1885                           
  1886     0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  1887     0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  1888     0FC6  0834               	movf	___lwmod@divisor,w
  1889     0FC7  0435               	iorwf	___lwmod@divisor+1,w
  1890     0FC8  1903               	btfsc	3,2
  1891     0FC9  2FCB               	goto	u2481
  1892     0FCA  2FCC               	goto	u2480
  1893     0FCB                     u2481:
  1894     0FCB  2FFB               	goto	l3069
  1895     0FCC                     u2480:
  1896     0FCC                     l3053:
  1897     0FCC  01B9               	clrf	___lwmod@counter
  1898     0FCD  0AB9               	incf	___lwmod@counter,f
  1899     0FCE  2FDA               	goto	l3059
  1900     0FCF                     l3055:
  1901     0FCF  3001               	movlw	1
  1902     0FD0                     u2495:
  1903     0FD0  1003               	clrc
  1904     0FD1  0DB4               	rlf	___lwmod@divisor,f
  1905     0FD2  0DB5               	rlf	___lwmod@divisor+1,f
  1906     0FD3  3EFF               	addlw	-1
  1907     0FD4  1D03               	skipz
  1908     0FD5  2FD0               	goto	u2495
  1909     0FD6                     l3057:
  1910     0FD6  3001               	movlw	1
  1911     0FD7  00B8               	movwf	??___lwmod
  1912     0FD8  0838               	movf	??___lwmod,w
  1913     0FD9  07B9               	addwf	___lwmod@counter,f
  1914     0FDA                     l3059:
  1915     0FDA  1FB5               	btfss	___lwmod@divisor+1,7
  1916     0FDB  2FDD               	goto	u2501
  1917     0FDC  2FDE               	goto	u2500
  1918     0FDD                     u2501:
  1919     0FDD  2FCF               	goto	l3055
  1920     0FDE                     u2500:
  1921     0FDE                     l3061:
  1922     0FDE  0835               	movf	___lwmod@divisor+1,w
  1923     0FDF  0237               	subwf	___lwmod@dividend+1,w
  1924     0FE0  1D03               	skipz
  1925     0FE1  2FE4               	goto	u2515
  1926     0FE2  0834               	movf	___lwmod@divisor,w
  1927     0FE3  0236               	subwf	___lwmod@dividend,w
  1928     0FE4                     u2515:
  1929     0FE4  1C03               	skipc
  1930     0FE5  2FE7               	goto	u2511
  1931     0FE6  2FE8               	goto	u2510
  1932     0FE7                     u2511:
  1933     0FE7  2FEE               	goto	l3065
  1934     0FE8                     u2510:
  1935     0FE8                     l3063:
  1936     0FE8  0834               	movf	___lwmod@divisor,w
  1937     0FE9  02B6               	subwf	___lwmod@dividend,f
  1938     0FEA  0835               	movf	___lwmod@divisor+1,w
  1939     0FEB  1C03               	skipc
  1940     0FEC  03B7               	decf	___lwmod@dividend+1,f
  1941     0FED  02B7               	subwf	___lwmod@dividend+1,f
  1942     0FEE                     l3065:
  1943     0FEE  3001               	movlw	1
  1944     0FEF                     u2525:
  1945     0FEF  1003               	clrc
  1946     0FF0  0CB5               	rrf	___lwmod@divisor+1,f
  1947     0FF1  0CB4               	rrf	___lwmod@divisor,f
  1948     0FF2  3EFF               	addlw	-1
  1949     0FF3  1D03               	skipz
  1950     0FF4  2FEF               	goto	u2525
  1951     0FF5                     l3067:
  1952     0FF5  3001               	movlw	1
  1953     0FF6  02B9               	subwf	___lwmod@counter,f
  1954     0FF7  1D03               	btfss	3,2
  1955     0FF8  2FFA               	goto	u2531
  1956     0FF9  2FFB               	goto	u2530
  1957     0FFA                     u2531:
  1958     0FFA  2FDE               	goto	l3061
  1959     0FFB                     u2530:
  1960     0FFB                     l3069:
  1961     0FFB  0837               	movf	___lwmod@dividend+1,w
  1962     0FFC  00B5               	movwf	?___lwmod+1
  1963     0FFD  0836               	movf	___lwmod@dividend,w
  1964     0FFE  00B4               	movwf	?___lwmod
  1965     0FFF                     l777:
  1966     0FFF  0008               	return
  1967     1000                     __end_of___lwmod:
  1968                           
  1969                           	psect	text4
  1970     065A                     __ptext4:	
  1971 ;; *************** function ___lwdiv *****************
  1972 ;; Defined at:
  1973 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  divisor         2   12[BANK0 ] unsigned int 
  1976 ;;  dividend        2   14[BANK0 ] unsigned int 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;  quotient        2   18[BANK0 ] unsigned int 
  1979 ;;  counter         1   17[BANK0 ] unsigned char 
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  2   12[BANK0 ] unsigned int 
  1982 ;; Registers used:
  1983 ;;		wreg, status,2, status,0
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1989 ;;      Params:         0       4       0       0       0
  1990 ;;      Locals:         0       3       0       0       0
  1991 ;;      Temps:          0       1       0       0       0
  1992 ;;      Totals:         0       8       0       0       0
  1993 ;;Total ram usage:        8 bytes
  1994 ;; Hardware stack levels used: 1
  1995 ;; Hardware stack levels required when called: 4
  1996 ;; This function calls:
  1997 ;;		Nothing
  1998 ;; This function is called by:
  1999 ;;		_printf
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003     065A                     ___lwdiv:	
  2004                           ;psect for function ___lwdiv
  2005                           
  2006     065A                     l3025:	
  2007                           ;incstack = 0
  2008                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2009                           
  2010     065A  1283               	bcf	3,5	;RP0=0, select bank0
  2011     065B  1303               	bcf	3,6	;RP1=0, select bank0
  2012     065C  01B2               	clrf	___lwdiv@quotient
  2013     065D  01B3               	clrf	___lwdiv@quotient+1
  2014     065E                     l3027:
  2015     065E  082C               	movf	___lwdiv@divisor,w
  2016     065F  042D               	iorwf	___lwdiv@divisor+1,w
  2017     0660  1903               	btfsc	3,2
  2018     0661  2E63               	goto	u2411
  2019     0662  2E64               	goto	u2410
  2020     0663                     u2411:
  2021     0663  2E9B               	goto	l3047
  2022     0664                     u2410:
  2023     0664                     l3029:
  2024     0664  01B1               	clrf	___lwdiv@counter
  2025     0665  0AB1               	incf	___lwdiv@counter,f
  2026     0666  2E72               	goto	l3035
  2027     0667                     l3031:
  2028     0667  3001               	movlw	1
  2029     0668                     u2425:
  2030     0668  1003               	clrc
  2031     0669  0DAC               	rlf	___lwdiv@divisor,f
  2032     066A  0DAD               	rlf	___lwdiv@divisor+1,f
  2033     066B  3EFF               	addlw	-1
  2034     066C  1D03               	skipz
  2035     066D  2E68               	goto	u2425
  2036     066E                     l3033:
  2037     066E  3001               	movlw	1
  2038     066F  00B0               	movwf	??___lwdiv
  2039     0670  0830               	movf	??___lwdiv,w
  2040     0671  07B1               	addwf	___lwdiv@counter,f
  2041     0672                     l3035:
  2042     0672  1FAD               	btfss	___lwdiv@divisor+1,7
  2043     0673  2E75               	goto	u2431
  2044     0674  2E76               	goto	u2430
  2045     0675                     u2431:
  2046     0675  2E67               	goto	l3031
  2047     0676                     u2430:
  2048     0676                     l3037:
  2049     0676  3001               	movlw	1
  2050     0677                     u2445:
  2051     0677  1003               	clrc
  2052     0678  0DB2               	rlf	___lwdiv@quotient,f
  2053     0679  0DB3               	rlf	___lwdiv@quotient+1,f
  2054     067A  3EFF               	addlw	-1
  2055     067B  1D03               	skipz
  2056     067C  2E77               	goto	u2445
  2057     067D  082D               	movf	___lwdiv@divisor+1,w
  2058     067E  022F               	subwf	___lwdiv@dividend+1,w
  2059     067F  1D03               	skipz
  2060     0680  2E83               	goto	u2455
  2061     0681  082C               	movf	___lwdiv@divisor,w
  2062     0682  022E               	subwf	___lwdiv@dividend,w
  2063     0683                     u2455:
  2064     0683  1C03               	skipc
  2065     0684  2E86               	goto	u2451
  2066     0685  2E87               	goto	u2450
  2067     0686                     u2451:
  2068     0686  2E8E               	goto	l3043
  2069     0687                     u2450:
  2070     0687                     l3039:
  2071     0687  082C               	movf	___lwdiv@divisor,w
  2072     0688  02AE               	subwf	___lwdiv@dividend,f
  2073     0689  082D               	movf	___lwdiv@divisor+1,w
  2074     068A  1C03               	skipc
  2075     068B  03AF               	decf	___lwdiv@dividend+1,f
  2076     068C  02AF               	subwf	___lwdiv@dividend+1,f
  2077     068D                     l3041:
  2078     068D  1432               	bsf	___lwdiv@quotient,0
  2079     068E                     l3043:
  2080     068E  3001               	movlw	1
  2081     068F                     u2465:
  2082     068F  1003               	clrc
  2083     0690  0CAD               	rrf	___lwdiv@divisor+1,f
  2084     0691  0CAC               	rrf	___lwdiv@divisor,f
  2085     0692  3EFF               	addlw	-1
  2086     0693  1D03               	skipz
  2087     0694  2E8F               	goto	u2465
  2088     0695                     l3045:
  2089     0695  3001               	movlw	1
  2090     0696  02B1               	subwf	___lwdiv@counter,f
  2091     0697  1D03               	btfss	3,2
  2092     0698  2E9A               	goto	u2471
  2093     0699  2E9B               	goto	u2470
  2094     069A                     u2471:
  2095     069A  2E76               	goto	l3037
  2096     069B                     u2470:
  2097     069B                     l3047:
  2098     069B  0833               	movf	___lwdiv@quotient+1,w
  2099     069C  00AD               	movwf	?___lwdiv+1
  2100     069D  0832               	movf	___lwdiv@quotient,w
  2101     069E  00AC               	movwf	?___lwdiv
  2102     069F                     l767:
  2103     069F  0008               	return
  2104     06A0                     __end_of___lwdiv:
  2105                           
  2106                           	psect	text5
  2107     0F88                     __ptext5:	
  2108 ;; *************** function _initYo *****************
  2109 ;; Defined at:
  2110 ;;		line 314 in file "main.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0, pclath, cstack
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2124 ;;      Params:         0       0       0       0       0
  2125 ;;      Locals:         0       0       0       0       0
  2126 ;;      Temps:          0       0       0       0       0
  2127 ;;      Totals:         0       0       0       0       0
  2128 ;;Total ram usage:        0 bytes
  2129 ;; Hardware stack levels used: 1
  2130 ;; Hardware stack levels required when called: 6
  2131 ;; This function calls:
  2132 ;;		_i2c_start
  2133 ;;		_init_ADC
  2134 ;;		_init_CCP1_PWM
  2135 ;;		_init_I2C
  2136 ;;		_init_SPI
  2137 ;;		_init_TMR0
  2138 ;;		_init_TMR1
  2139 ;;		_init_TMR2
  2140 ;;		_init_memoria
  2141 ;;		_init_uart
  2142 ;; This function is called by:
  2143 ;;		_main
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147     0F88                     _initYo:	
  2148                           ;psect for function _initYo
  2149                           
  2150     0F88                     l2495:	
  2151                           ;incstack = 0
  2152                           ; Regs used in _initYo: [wreg+status,2+status,0+pclath+cstack]
  2153                           
  2154                           
  2155                           ;main.c: 315:     OSCCON = 0b00001000;
  2156     0F88  3008               	movlw	8
  2157     0F89  1683               	bsf	3,5	;RP0=1, select bank1
  2158     0F8A  1303               	bcf	3,6	;RP1=0, select bank1
  2159     0F8B  008F               	movwf	15	;volatile
  2160     0F8C                     l2497:
  2161                           
  2162                           ;main.c: 317:     init_uart();
  2163     0F8C  120A  158A  264C  120A  158A  	fcall	_init_uart
  2164     0F91                     l2499:
  2165                           
  2166                           ;main.c: 318:     init_ADC();
  2167     0F91  120A  158A  25FB  120A  158A  	fcall	_init_ADC
  2168     0F96                     l2501:
  2169                           
  2170                           ;main.c: 319:     init_TMR0();
  2171     0F96  120A  158A  250D  120A  158A  	fcall	_init_TMR0
  2172     0F9B                     l2503:
  2173                           
  2174                           ;main.c: 320:     init_TMR1();
  2175     0F9B  120A  158A  2544  120A  158A  	fcall	_init_TMR1
  2176     0FA0                     l2505:
  2177                           
  2178                           ;main.c: 321:     init_TMR2();
  2179     0FA0  120A  158A  2555  120A  158A  	fcall	_init_TMR2
  2180     0FA5                     l2507:
  2181                           
  2182                           ;main.c: 323:     init_CCP1_PWM();
  2183     0FA5  120A  158A  2533  120A  158A  	fcall	_init_CCP1_PWM
  2184     0FAA                     l2509:
  2185                           
  2186                           ;main.c: 325:     init_I2C();
  2187     0FAA  120A  158A  25E3  120A  158A  	fcall	_init_I2C
  2188                           
  2189                           ;main.c: 326:     init_SPI();
  2190     0FAF  120A  158A  24CC  120A  158A  	fcall	_init_SPI
  2191                           
  2192                           ;main.c: 327:     i2c_start();
  2193     0FB4  120A  158A  24FA  120A  158A  	fcall	_i2c_start
  2194                           
  2195                           ;main.c: 328:     init_memoria();
  2196     0FB9  120A  158A  2503  120A  158A  	fcall	_init_memoria
  2197     0FBE                     l2511:
  2198                           
  2199                           ;main.c: 330:     TRISB = 0;
  2200     0FBE  1683               	bsf	3,5	;RP0=1, select bank1
  2201     0FBF  1303               	bcf	3,6	;RP1=0, select bank1
  2202     0FC0  0186               	clrf	6	;volatile
  2203     0FC1                     l2513:
  2204                           
  2205                           ;main.c: 332:     INTCONbits.GIE = 1;
  2206     0FC1  178B               	bsf	11,7	;volatile
  2207     0FC2                     l2515:
  2208                           
  2209                           ;main.c: 333:     INTCONbits.PEIE = 1;
  2210     0FC2  170B               	bsf	11,6	;volatile
  2211     0FC3                     l280:
  2212     0FC3  0008               	return
  2213     0FC4                     __end_of_initYo:
  2214                           
  2215                           	psect	text6
  2216     0E4C                     __ptext6:	
  2217 ;; *************** function _init_uart *****************
  2218 ;; Defined at:
  2219 ;;		line 129 in file "main.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;		None
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;		None
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      void 
  2226 ;; Registers used:
  2227 ;;		wreg, status,2
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2233 ;;      Params:         0       0       0       0       0
  2234 ;;      Locals:         0       0       0       0       0
  2235 ;;      Temps:          0       0       0       0       0
  2236 ;;      Totals:         0       0       0       0       0
  2237 ;;Total ram usage:        0 bytes
  2238 ;; Hardware stack levels used: 1
  2239 ;; Hardware stack levels required when called: 4
  2240 ;; This function calls:
  2241 ;;		Nothing
  2242 ;; This function is called by:
  2243 ;;		_initYo
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247     0E4C                     _init_uart:	
  2248                           ;psect for function _init_uart
  2249                           
  2250     0E4C                     l2181:	
  2251                           ;incstack = 0
  2252                           ; Regs used in _init_uart: [wreg+status,2]
  2253                           
  2254                           
  2255                           ;main.c: 130:     TXSTAbits.BRGH = 0;
  2256     0E4C  1683               	bsf	3,5	;RP0=1, select bank1
  2257     0E4D  1303               	bcf	3,6	;RP1=0, select bank1
  2258     0E4E  1118               	bcf	24,2	;volatile
  2259                           
  2260                           ;main.c: 131:     BAUDCTLbits.BRG16 = 0;
  2261     0E4F  1683               	bsf	3,5	;RP0=1, select bank3
  2262     0E50  1703               	bsf	3,6	;RP1=1, select bank3
  2263     0E51  1187               	bcf	7,3	;volatile
  2264     0E52                     l2183:
  2265                           
  2266                           ;main.c: 134:     SPBRGH = 0;
  2267     0E52  1683               	bsf	3,5	;RP0=1, select bank1
  2268     0E53  1303               	bcf	3,6	;RP1=0, select bank1
  2269     0E54  019A               	clrf	26	;volatile
  2270     0E55                     l2185:
  2271                           
  2272                           ;main.c: 135:     SPBRG = 32;
  2273     0E55  3020               	movlw	32
  2274     0E56  0099               	movwf	25	;volatile
  2275     0E57                     l2187:
  2276                           
  2277                           ;main.c: 137:     TXSTAbits.SYNC = 0;
  2278     0E57  1218               	bcf	24,4	;volatile
  2279     0E58                     l2189:
  2280                           
  2281                           ;main.c: 138:     TXSTAbits.TX9 = 0;
  2282     0E58  1318               	bcf	24,6	;volatile
  2283     0E59                     l2191:
  2284                           
  2285                           ;main.c: 139:     RCSTAbits.RX9 = 0;
  2286     0E59  1283               	bcf	3,5	;RP0=0, select bank0
  2287     0E5A  1303               	bcf	3,6	;RP1=0, select bank0
  2288     0E5B  1318               	bcf	24,6	;volatile
  2289     0E5C                     l2193:
  2290                           
  2291                           ;main.c: 141:     PIE1bits.TXIE = 1;
  2292     0E5C  1683               	bsf	3,5	;RP0=1, select bank1
  2293     0E5D  1303               	bcf	3,6	;RP1=0, select bank1
  2294     0E5E  160C               	bsf	12,4	;volatile
  2295     0E5F                     l2195:
  2296                           
  2297                           ;main.c: 142:     PIE1bits.RCIE = 1;
  2298     0E5F  168C               	bsf	12,5	;volatile
  2299     0E60                     l2197:
  2300                           
  2301                           ;main.c: 144:     RCSTAbits.SPEN = 1;
  2302     0E60  1283               	bcf	3,5	;RP0=0, select bank0
  2303     0E61  1303               	bcf	3,6	;RP1=0, select bank0
  2304     0E62  1798               	bsf	24,7	;volatile
  2305     0E63                     l2199:
  2306                           
  2307                           ;main.c: 146:     TXSTAbits.TXEN = 0;
  2308     0E63  1683               	bsf	3,5	;RP0=1, select bank1
  2309     0E64  1303               	bcf	3,6	;RP1=0, select bank1
  2310     0E65  1298               	bcf	24,5	;volatile
  2311     0E66                     l2201:
  2312                           
  2313                           ;main.c: 147:     TXSTAbits.TXEN = 1;
  2314     0E66  1698               	bsf	24,5	;volatile
  2315     0E67                     l224:
  2316     0E67  0008               	return
  2317     0E68                     __end_of_init_uart:
  2318                           
  2319                           	psect	text7
  2320     0D03                     __ptext7:	
  2321 ;; *************** function _init_memoria *****************
  2322 ;; Defined at:
  2323 ;;		line 226 in file "main.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;		None
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;		None
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		None
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2337 ;;      Params:         0       0       0       0       0
  2338 ;;      Locals:         0       0       0       0       0
  2339 ;;      Temps:          0       0       0       0       0
  2340 ;;      Totals:         0       0       0       0       0
  2341 ;;Total ram usage:        0 bytes
  2342 ;; Hardware stack levels used: 1
  2343 ;; Hardware stack levels required when called: 4
  2344 ;; This function calls:
  2345 ;;		Nothing
  2346 ;; This function is called by:
  2347 ;;		_initYo
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351     0D03                     _init_memoria:	
  2352                           ;psect for function _init_memoria
  2353                           
  2354     0D03                     l2239:	
  2355                           ;incstack = 0
  2356                           ; Regs used in _init_memoria: []
  2357                           
  2358                           
  2359                           ;main.c: 227:     EECON1bits.EEPGD = 0;
  2360     0D03  1683               	bsf	3,5	;RP0=1, select bank3
  2361     0D04  1703               	bsf	3,6	;RP1=1, select bank3
  2362     0D05  138C               	bcf	12,7	;volsfr
  2363                           
  2364                           ;main.c: 228:     PIR2bits.EEIF = 0;
  2365     0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2366     0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2367     0D08  120D               	bcf	13,4	;volatile
  2368                           
  2369                           ;main.c: 229:     PIE2bits.EEIE = 1;
  2370     0D09  1683               	bsf	3,5	;RP0=1, select bank1
  2371     0D0A  1303               	bcf	3,6	;RP1=0, select bank1
  2372     0D0B  160D               	bsf	13,4	;volatile
  2373     0D0C                     l236:
  2374     0D0C  0008               	return
  2375     0D0D                     __end_of_init_memoria:
  2376                           
  2377                           	psect	text8
  2378     0D55                     __ptext8:	
  2379 ;; *************** function _init_TMR2 *****************
  2380 ;; Defined at:
  2381 ;;		line 93 in file "main.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;		None
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;		None
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  1    wreg      void 
  2388 ;; Registers used:
  2389 ;;		wreg, status,2, status,0
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2395 ;;      Params:         0       0       0       0       0
  2396 ;;      Locals:         0       0       0       0       0
  2397 ;;      Temps:          0       0       0       0       0
  2398 ;;      Totals:         0       0       0       0       0
  2399 ;;Total ram usage:        0 bytes
  2400 ;; Hardware stack levels used: 1
  2401 ;; Hardware stack levels required when called: 4
  2402 ;; This function calls:
  2403 ;;		Nothing
  2404 ;; This function is called by:
  2405 ;;		_initYo
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409     0D55                     _init_TMR2:	
  2410                           ;psect for function _init_TMR2
  2411                           
  2412     0D55                     l2159:	
  2413                           ;incstack = 0
  2414                           ; Regs used in _init_TMR2: [wreg+status,2+status,0]
  2415                           
  2416                           
  2417                           ;main.c: 94:     PR2 = 167;
  2418     0D55  30A7               	movlw	167
  2419     0D56  1683               	bsf	3,5	;RP0=1, select bank1
  2420     0D57  1303               	bcf	3,6	;RP1=0, select bank1
  2421     0D58  0092               	movwf	18	;volatile
  2422     0D59                     l2161:
  2423                           
  2424                           ;main.c: 96:     T2CONbits.T2CKPS = 0b00;
  2425     0D59  30FC               	movlw	-4
  2426     0D5A  1283               	bcf	3,5	;RP0=0, select bank0
  2427     0D5B  1303               	bcf	3,6	;RP1=0, select bank0
  2428     0D5C  0592               	andwf	18,f	;volatile
  2429     0D5D                     l2163:
  2430                           
  2431                           ;main.c: 97:     T2CONbits.TOUTPS = 0b0000;
  2432     0D5D  3087               	movlw	-121
  2433     0D5E  0592               	andwf	18,f	;volatile
  2434     0D5F                     l2165:
  2435                           
  2436                           ;main.c: 98:     PIE1bits.TMR2IE = 1;
  2437     0D5F  1683               	bsf	3,5	;RP0=1, select bank1
  2438     0D60  1303               	bcf	3,6	;RP1=0, select bank1
  2439     0D61  148C               	bsf	12,1	;volatile
  2440     0D62                     l2167:
  2441                           
  2442                           ;main.c: 99:     PIR1bits.TMR2IF = 0;
  2443     0D62  1283               	bcf	3,5	;RP0=0, select bank0
  2444     0D63  1303               	bcf	3,6	;RP1=0, select bank0
  2445     0D64  108C               	bcf	12,1	;volatile
  2446     0D65                     l2169:
  2447                           
  2448                           ;main.c: 100:     T2CONbits.TMR2ON = 1;
  2449     0D65  1512               	bsf	18,2	;volatile
  2450     0D66                     l218:
  2451     0D66  0008               	return
  2452     0D67                     __end_of_init_TMR2:
  2453                           
  2454                           	psect	text9
  2455     0D44                     __ptext9:	
  2456 ;; *************** function _init_TMR1 *****************
  2457 ;; Defined at:
  2458 ;;		line 82 in file "main.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;		None
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;		None
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg, status,2, status,0
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2472 ;;      Params:         0       0       0       0       0
  2473 ;;      Locals:         0       0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0
  2475 ;;      Totals:         0       0       0       0       0
  2476 ;;Total ram usage:        0 bytes
  2477 ;; Hardware stack levels used: 1
  2478 ;; Hardware stack levels required when called: 4
  2479 ;; This function calls:
  2480 ;;		Nothing
  2481 ;; This function is called by:
  2482 ;;		_initYo
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486     0D44                     _init_TMR1:	
  2487                           ;psect for function _init_TMR1
  2488                           
  2489     0D44                     l2147:	
  2490                           ;incstack = 0
  2491                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
  2492                           
  2493                           
  2494                           ;main.c: 83:     TMR1H = eltimer1H;
  2495     0D44  087D               	movf	_eltimer1H,w
  2496     0D45  1283               	bcf	3,5	;RP0=0, select bank0
  2497     0D46  1303               	bcf	3,6	;RP1=0, select bank0
  2498     0D47  008F               	movwf	15	;volatile
  2499                           
  2500                           ;main.c: 84:     TMR1L = eltimer1L;
  2501     0D48  085F               	movf	_eltimer1L,w
  2502     0D49  008E               	movwf	14	;volatile
  2503     0D4A                     l2149:
  2504                           
  2505                           ;main.c: 85:     T1CONbits.TMR1CS = 0;
  2506     0D4A  1090               	bcf	16,1	;volatile
  2507     0D4B                     l2151:
  2508                           
  2509                           ;main.c: 87:     T1CONbits.T1CKPS = 0b00;
  2510     0D4B  30CF               	movlw	-49
  2511     0D4C  0590               	andwf	16,f	;volatile
  2512     0D4D                     l2153:
  2513                           
  2514                           ;main.c: 88:     T1CONbits.TMR1GE = 0;
  2515     0D4D  1310               	bcf	16,6	;volatile
  2516     0D4E                     l2155:
  2517                           
  2518                           ;main.c: 89:     PIE1bits.TMR1IE = 1;
  2519     0D4E  1683               	bsf	3,5	;RP0=1, select bank1
  2520     0D4F  1303               	bcf	3,6	;RP1=0, select bank1
  2521     0D50  140C               	bsf	12,0	;volatile
  2522     0D51                     l2157:
  2523                           
  2524                           ;main.c: 90:     T1CONbits.TMR1ON = 1;
  2525     0D51  1283               	bcf	3,5	;RP0=0, select bank0
  2526     0D52  1303               	bcf	3,6	;RP1=0, select bank0
  2527     0D53  1410               	bsf	16,0	;volatile
  2528     0D54                     l215:
  2529     0D54  0008               	return
  2530     0D55                     __end_of_init_TMR1:
  2531                           
  2532                           	psect	text10
  2533     0D0D                     __ptext10:	
  2534 ;; *************** function _init_TMR0 *****************
  2535 ;; Defined at:
  2536 ;;		line 72 in file "main.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;		None
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;		None
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      void 
  2543 ;; Registers used:
  2544 ;;		wreg, status,2, status,0
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2550 ;;      Params:         0       0       0       0       0
  2551 ;;      Locals:         0       0       0       0       0
  2552 ;;      Temps:          0       0       0       0       0
  2553 ;;      Totals:         0       0       0       0       0
  2554 ;;Total ram usage:        0 bytes
  2555 ;; Hardware stack levels used: 1
  2556 ;; Hardware stack levels required when called: 4
  2557 ;; This function calls:
  2558 ;;		Nothing
  2559 ;; This function is called by:
  2560 ;;		_initYo
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564     0D0D                     _init_TMR0:	
  2565                           ;psect for function _init_TMR0
  2566                           
  2567     0D0D                     l2137:	
  2568                           ;incstack = 0
  2569                           ; Regs used in _init_TMR0: [wreg+status,2+status,0]
  2570                           
  2571                           
  2572                           ;main.c: 73:     TMR0 = 61;
  2573     0D0D  303D               	movlw	61
  2574     0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  2575     0D0F  1303               	bcf	3,6	;RP1=0, select bank0
  2576     0D10  0081               	movwf	1	;volatile
  2577     0D11                     l2139:
  2578                           
  2579                           ;main.c: 76:     OPTION_REGbits.T0CS = 0;
  2580     0D11  1683               	bsf	3,5	;RP0=1, select bank1
  2581     0D12  1303               	bcf	3,6	;RP1=0, select bank1
  2582     0D13  1281               	bcf	1,5	;volatile
  2583     0D14                     l2141:
  2584                           
  2585                           ;main.c: 77:     OPTION_REGbits.PSA = 0;
  2586     0D14  1181               	bcf	1,3	;volatile
  2587     0D15                     l2143:
  2588                           
  2589                           ;main.c: 78:     OPTION_REGbits.PS = 0b111;
  2590     0D15  3007               	movlw	7
  2591     0D16  0481               	iorwf	1,f	;volatile
  2592     0D17                     l2145:
  2593                           
  2594                           ;main.c: 79:     INTCONbits.T0IE = 1;
  2595     0D17  168B               	bsf	11,5	;volatile
  2596     0D18                     l212:
  2597     0D18  0008               	return
  2598     0D19                     __end_of_init_TMR0:
  2599                           
  2600                           	psect	text11
  2601     0CCC                     __ptext11:	
  2602 ;; *************** function _init_SPI *****************
  2603 ;; Defined at:
  2604 ;;		line 201 in file "main.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;		None
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;		None
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		None
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2618 ;;      Params:         0       0       0       0       0
  2619 ;;      Locals:         0       0       0       0       0
  2620 ;;      Temps:          0       0       0       0       0
  2621 ;;      Totals:         0       0       0       0       0
  2622 ;;Total ram usage:        0 bytes
  2623 ;; Hardware stack levels used: 1
  2624 ;; Hardware stack levels required when called: 4
  2625 ;; This function calls:
  2626 ;;		Nothing
  2627 ;; This function is called by:
  2628 ;;		_initYo
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632     0CCC                     _init_SPI:	
  2633                           ;psect for function _init_SPI
  2634                           
  2635     0CCC                     l2215:	
  2636                           ;incstack = 0
  2637                           ; Regs used in _init_SPI: []
  2638                           
  2639                           
  2640                           ;main.c: 207:     TRISCbits.TRISC5 = 0;
  2641     0CCC  1683               	bsf	3,5	;RP0=1, select bank1
  2642     0CCD  1303               	bcf	3,6	;RP1=0, select bank1
  2643     0CCE  1287               	bcf	7,5	;volatile
  2644     0CCF                     l230:
  2645     0CCF  0008               	return
  2646     0CD0                     __end_of_init_SPI:
  2647                           
  2648                           	psect	text12
  2649     0DE3                     __ptext12:	
  2650 ;; *************** function _init_I2C *****************
  2651 ;; Defined at:
  2652 ;;		line 150 in file "main.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;		None
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;		None
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      void 
  2659 ;; Registers used:
  2660 ;;		wreg, status,2, status,0
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2666 ;;      Params:         0       0       0       0       0
  2667 ;;      Locals:         0       0       0       0       0
  2668 ;;      Temps:          0       0       0       0       0
  2669 ;;      Totals:         0       0       0       0       0
  2670 ;;Total ram usage:        0 bytes
  2671 ;; Hardware stack levels used: 1
  2672 ;; Hardware stack levels required when called: 4
  2673 ;; This function calls:
  2674 ;;		Nothing
  2675 ;; This function is called by:
  2676 ;;		_initYo
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680     0DE3                     _init_I2C:	
  2681                           ;psect for function _init_I2C
  2682                           
  2683     0DE3                     l2203:	
  2684                           ;incstack = 0
  2685                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
  2686                           
  2687                           
  2688                           ;main.c: 153:     TRISCbits.TRISC3 = 1;
  2689     0DE3  1683               	bsf	3,5	;RP0=1, select bank1
  2690     0DE4  1303               	bcf	3,6	;RP1=0, select bank1
  2691     0DE5  1587               	bsf	7,3	;volatile
  2692                           
  2693                           ;main.c: 154:     TRISCbits.TRISC4 = 1;
  2694     0DE6  1607               	bsf	7,4	;volatile
  2695     0DE7                     l2205:
  2696                           
  2697                           ;main.c: 157:     SSPCONbits.SSPM = 0;
  2698     0DE7  30F0               	movlw	-16
  2699     0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2700     0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2701     0DEA  0594               	andwf	20,f	;volatile
  2702                           
  2703                           ;main.c: 158:     SSPCONbits.SSPM = 0;
  2704     0DEB  30F0               	movlw	-16
  2705     0DEC  0594               	andwf	20,f	;volatile
  2706     0DED                     l2207:
  2707                           
  2708                           ;main.c: 160:     ANSEL = 0;
  2709     0DED  1683               	bsf	3,5	;RP0=1, select bank3
  2710     0DEE  1703               	bsf	3,6	;RP1=1, select bank3
  2711     0DEF  0188               	clrf	8	;volatile
  2712     0DF0                     l2209:
  2713                           
  2714                           ;main.c: 176:     SSPADD = (20000000 / 4) - 1;
  2715     0DF0  303F               	movlw	63
  2716     0DF1  1683               	bsf	3,5	;RP0=1, select bank1
  2717     0DF2  1303               	bcf	3,6	;RP1=0, select bank1
  2718     0DF3  0093               	movwf	19	;volatile
  2719     0DF4                     l2211:
  2720                           
  2721                           ;main.c: 178:     PIR1bits.SSPIF = 0;
  2722     0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  2723     0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  2724     0DF6  118C               	bcf	12,3	;volatile
  2725     0DF7                     l2213:
  2726                           
  2727                           ;main.c: 179:     PIE1bits.SSPIE = 1;
  2728     0DF7  1683               	bsf	3,5	;RP0=1, select bank1
  2729     0DF8  1303               	bcf	3,6	;RP1=0, select bank1
  2730     0DF9  158C               	bsf	12,3	;volatile
  2731     0DFA                     l227:
  2732     0DFA  0008               	return
  2733     0DFB                     __end_of_init_I2C:
  2734                           
  2735                           	psect	text13
  2736     0D33                     __ptext13:	
  2737 ;; *************** function _init_CCP1_PWM *****************
  2738 ;; Defined at:
  2739 ;;		line 103 in file "main.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;		None
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;		None
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      void 
  2746 ;; Registers used:
  2747 ;;		wreg, status,2, status,0
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2753 ;;      Params:         0       0       0       0       0
  2754 ;;      Locals:         0       0       0       0       0
  2755 ;;      Temps:          0       0       0       0       0
  2756 ;;      Totals:         0       0       0       0       0
  2757 ;;Total ram usage:        0 bytes
  2758 ;; Hardware stack levels used: 1
  2759 ;; Hardware stack levels required when called: 4
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_initYo
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767     0D33                     _init_CCP1_PWM:	
  2768                           ;psect for function _init_CCP1_PWM
  2769                           
  2770     0D33                     l2171:	
  2771                           ;incstack = 0
  2772                           ; Regs used in _init_CCP1_PWM: [wreg+status,2+status,0]
  2773                           
  2774                           
  2775                           ;main.c: 105:     TRISCbits.TRISC2 = 0;
  2776     0D33  1683               	bsf	3,5	;RP0=1, select bank1
  2777     0D34  1303               	bcf	3,6	;RP1=0, select bank1
  2778     0D35  1107               	bcf	7,2	;volatile
  2779     0D36                     l2173:
  2780                           
  2781                           ;main.c: 106:     ANSEL = 0;
  2782     0D36  1683               	bsf	3,5	;RP0=1, select bank3
  2783     0D37  1703               	bsf	3,6	;RP1=1, select bank3
  2784     0D38  0188               	clrf	8	;volatile
  2785     0D39                     l2175:
  2786                           
  2787                           ;main.c: 107:     CCP1CONbits.CCP1M = 0b1100;
  2788     0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2789     0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2790     0D3B  0817               	movf	23,w	;volatile
  2791     0D3C  39F0               	andlw	-16
  2792     0D3D  380C               	iorlw	12
  2793     0D3E  0097               	movwf	23	;volatile
  2794     0D3F                     l2177:
  2795                           
  2796                           ;main.c: 108:     CCP1CONbits.P1M = 0b00;
  2797     0D3F  303F               	movlw	-193
  2798     0D40  0597               	andwf	23,f	;volatile
  2799     0D41                     l2179:
  2800                           
  2801                           ;main.c: 110:     CCPR1L = porcentaje;
  2802     0D41  084B               	movf	_porcentaje,w
  2803     0D42  0095               	movwf	21	;volatile
  2804     0D43                     l221:
  2805     0D43  0008               	return
  2806     0D44                     __end_of_init_CCP1_PWM:
  2807                           
  2808                           	psect	text14
  2809     0DFB                     __ptext14:	
  2810 ;; *************** function _init_ADC *****************
  2811 ;; Defined at:
  2812 ;;		line 210 in file "main.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;		None
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;		None
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  1    wreg      void 
  2819 ;; Registers used:
  2820 ;;		wreg, status,2, status,0
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2826 ;;      Params:         0       0       0       0       0
  2827 ;;      Locals:         0       0       0       0       0
  2828 ;;      Temps:          0       0       0       0       0
  2829 ;;      Totals:         0       0       0       0       0
  2830 ;;Total ram usage:        0 bytes
  2831 ;; Hardware stack levels used: 1
  2832 ;; Hardware stack levels required when called: 4
  2833 ;; This function calls:
  2834 ;;		Nothing
  2835 ;; This function is called by:
  2836 ;;		_initYo
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840     0DFB                     _init_ADC:	
  2841                           ;psect for function _init_ADC
  2842                           
  2843     0DFB                     l2217:	
  2844                           ;incstack = 0
  2845                           ; Regs used in _init_ADC: [wreg+status,2+status,0]
  2846                           
  2847                           
  2848                           ;main.c: 211:     TRISA = 1;
  2849     0DFB  3001               	movlw	1
  2850     0DFC  1683               	bsf	3,5	;RP0=1, select bank1
  2851     0DFD  1303               	bcf	3,6	;RP1=0, select bank1
  2852     0DFE  0085               	movwf	5	;volatile
  2853     0DFF                     l2219:
  2854                           
  2855                           ;main.c: 212:     ANSELbits.ANS0 = 1;
  2856     0DFF  1683               	bsf	3,5	;RP0=1, select bank3
  2857     0E00  1703               	bsf	3,6	;RP1=1, select bank3
  2858     0E01  1408               	bsf	8,0	;volatile
  2859     0E02                     l2221:
  2860                           
  2861                           ;main.c: 213:     ANSELbits.ANS1 = 1;
  2862     0E02  1488               	bsf	8,1	;volatile
  2863     0E03                     l2223:
  2864                           
  2865                           ;main.c: 214:     ANSELbits.ANS2 = 1;
  2866     0E03  1508               	bsf	8,2	;volatile
  2867     0E04                     l2225:
  2868                           
  2869                           ;main.c: 215:     ADCON0bits.ADCS = 0b10;
  2870     0E04  1283               	bcf	3,5	;RP0=0, select bank0
  2871     0E05  1303               	bcf	3,6	;RP1=0, select bank0
  2872     0E06  081F               	movf	31,w	;volatile
  2873     0E07  393F               	andlw	-193
  2874     0E08  3880               	iorlw	128
  2875     0E09  009F               	movwf	31	;volatile
  2876     0E0A                     l2227:
  2877                           
  2878                           ;main.c: 216:     ADCON0bits.CHS = 0b0000;
  2879     0E0A  30C3               	movlw	-61
  2880     0E0B  059F               	andwf	31,f	;volatile
  2881     0E0C                     l2229:
  2882                           
  2883                           ;main.c: 217:     ADCON0bits.ADON = 1;
  2884     0E0C  141F               	bsf	31,0	;volatile
  2885     0E0D                     l2231:
  2886                           
  2887                           ;main.c: 218:     ADCON1bits.ADFM = 1;
  2888     0E0D  1683               	bsf	3,5	;RP0=1, select bank1
  2889     0E0E  1303               	bcf	3,6	;RP1=0, select bank1
  2890     0E0F  179F               	bsf	31,7	;volatile
  2891     0E10                     l2233:
  2892                           
  2893                           ;main.c: 220:     ADCON1bits.VCFG1 = 0;
  2894     0E10  129F               	bcf	31,5	;volatile
  2895     0E11                     l2235:
  2896                           
  2897                           ;main.c: 221:     ADCON1bits.VCFG0 = 0;
  2898     0E11  121F               	bcf	31,4	;volatile
  2899     0E12                     l2237:
  2900                           
  2901                           ;main.c: 223:     PIE1bits.ADIE = 1;
  2902     0E12  170C               	bsf	12,6	;volatile
  2903     0E13                     l233:
  2904     0E13  0008               	return
  2905     0E14                     __end_of_init_ADC:
  2906                           
  2907                           	psect	text15
  2908     0CFA                     __ptext15:	
  2909 ;; *************** function _i2c_start *****************
  2910 ;; Defined at:
  2911 ;;		line 16 in file "i2c-v2.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;		None
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;		None
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  1    wreg      void 
  2918 ;; Registers used:
  2919 ;;		status,2, status,0, pclath, cstack
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2925 ;;      Params:         0       0       0       0       0
  2926 ;;      Locals:         0       0       0       0       0
  2927 ;;      Temps:          0       0       0       0       0
  2928 ;;      Totals:         0       0       0       0       0
  2929 ;;Total ram usage:        0 bytes
  2930 ;; Hardware stack levels used: 1
  2931 ;; Hardware stack levels required when called: 5
  2932 ;; This function calls:
  2933 ;;		_wait_MSSP
  2934 ;; This function is called by:
  2935 ;;		_initYo
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939     0CFA                     _i2c_start:	
  2940                           ;psect for function _i2c_start
  2941                           
  2942     0CFA                     l2131:	
  2943                           ;incstack = 0
  2944                           ; Regs used in _i2c_start: [status,2+status,0+pclath+cstack]
  2945                           
  2946                           
  2947                           ;i2c-v2.c: 18:     SSPCON2bits.SEN = 1;
  2948     0CFA  1683               	bsf	3,5	;RP0=1, select bank1
  2949     0CFB  1303               	bcf	3,6	;RP1=0, select bank1
  2950     0CFC  1411               	bsf	17,0	;volatile
  2951     0CFD                     l2133:
  2952                           
  2953                           ;i2c-v2.c: 19:     wait_MSSP();
  2954     0CFD  120A  158A  24D0  120A  158A  	fcall	_wait_MSSP
  2955     0D02                     l15:
  2956     0D02  0008               	return
  2957     0D03                     __end_of_i2c_start:
  2958                           
  2959                           	psect	text16
  2960     0539                     __ptext16:	
  2961 ;; *************** function _initActuadoresSegunMemoria *****************
  2962 ;; Defined at:
  2963 ;;		line 428 in file "main.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;		None
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;		None
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  1    wreg      void 
  2970 ;; Registers used:
  2971 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2977 ;;      Params:         0       0       0       0       0
  2978 ;;      Locals:         0       0       3       0       0
  2979 ;;      Temps:          0       0       0       0       0
  2980 ;;      Totals:         0       0       3       0       0
  2981 ;;Total ram usage:        3 bytes
  2982 ;; Hardware stack levels used: 1
  2983 ;; Hardware stack levels required when called: 7
  2984 ;; This function calls:
  2985 ;;		_getnoPrimerArranque
  2986 ;;		_leerMemoria
  2987 ;;		_setLED
  2988 ;;		_setPWM
  2989 ;; This function is called by:
  2990 ;;		_main
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994     0539                     _initActuadoresSegunMemoria:	
  2995                           ;psect for function _initActuadoresSegunMemoria
  2996                           
  2997     0539                     l3073:	
  2998                           ;incstack = 0
  2999                           ; Regs used in _initActuadoresSegunMemoria: [wreg+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  3000                           
  3001                           
  3002                           ;main.c: 429:     if (getnoPrimerArranque() == FALSE) {
  3003     0539  120A  158A  2630  120A  118A  	fcall	_getnoPrimerArranque
  3004     053E  3A00               	xorlw	0
  3005     053F  1D03               	skipz
  3006     0540  2D42               	goto	u2541
  3007     0541  2D43               	goto	u2540
  3008     0542                     u2541:
  3009     0542  2D58               	goto	l3077
  3010     0543                     u2540:
  3011     0543                     l3075:
  3012                           
  3013                           ;main.c: 430:         setPWM(0);
  3014     0543  3000               	movlw	0
  3015     0544  120A  158A  26BA  120A  118A  	fcall	_setPWM
  3016                           
  3017                           ;main.c: 431:         setLED(255, 255, 255, 31);
  3018     0549  30FF               	movlw	255
  3019     054A  1683               	bsf	3,5	;RP0=1, select bank1
  3020     054B  1303               	bcf	3,6	;RP1=0, select bank1
  3021     054C  00BA               	movwf	setLED@green^(0+128)
  3022     054D  30FF               	movlw	255
  3023     054E  00BB               	movwf	setLED@blue^(0+128)
  3024     054F  301F               	movlw	31
  3025     0550  00BC               	movwf	setLED@luminosidad^(0+128)
  3026     0551  30FF               	movlw	255
  3027     0552  120A  118A  25FF  120A  118A  	fcall	_setLED
  3028                           
  3029                           ;main.c: 432:     } else {
  3030     0557  2D9C               	goto	l321
  3031     0558                     l3077:
  3032                           
  3033                           ;main.c: 433:         setPWM(leerMemoria(direccionPWM));
  3034     0558  1283               	bcf	3,5	;RP0=0, select bank0
  3035     0559  1303               	bcf	3,6	;RP1=0, select bank0
  3036     055A  085E               	movf	_direccionPWM,w
  3037     055B  120A  158A  2614  120A  118A  	fcall	_leerMemoria
  3038     0560  120A  158A  26BA  120A  118A  	fcall	_setPWM
  3039     0565                     l3079:
  3040                           
  3041                           ;main.c: 434:         setLED(leerMemoria(direccionLED), leerMemoria(direccionLED + 1 * 8
      +                          ), leerMemoria(direccionLED + 2 * 8), leerMemoria(direccionLED + 3 * 8));
  3042     0565  1283               	bcf	3,5	;RP0=0, select bank0
  3043     0566  1303               	bcf	3,6	;RP1=0, select bank0
  3044     0567  085D               	movf	_direccionLED,w
  3045     0568  3E08               	addlw	8
  3046     0569  120A  158A  2614  120A  118A  	fcall	_leerMemoria
  3047     056E  1683               	bsf	3,5	;RP0=1, select bank1
  3048     056F  1303               	bcf	3,6	;RP1=0, select bank1
  3049     0570  00BD               	movwf	_initActuadoresSegunMemoria$1569^(0+128)
  3050     0571                     l3081:
  3051                           
  3052                           ;main.c: 434:         setLED(leerMemoria(direccionLED), leerMemoria(direccionLED + 1 * 8
      +                          ), leerMemoria(direccionLED + 2 * 8), leerMemoria(direccionLED + 3 * 8));
  3053     0571  1283               	bcf	3,5	;RP0=0, select bank0
  3054     0572  1303               	bcf	3,6	;RP1=0, select bank0
  3055     0573  085D               	movf	_direccionLED,w
  3056     0574  3E10               	addlw	16
  3057     0575  120A  158A  2614  120A  118A  	fcall	_leerMemoria
  3058     057A  1683               	bsf	3,5	;RP0=1, select bank1
  3059     057B  1303               	bcf	3,6	;RP1=0, select bank1
  3060     057C  00BE               	movwf	_initActuadoresSegunMemoria$1570^(0+128)
  3061     057D                     l3083:
  3062                           
  3063                           ;main.c: 434:         setLED(leerMemoria(direccionLED), leerMemoria(direccionLED + 1 * 8
      +                          ), leerMemoria(direccionLED + 2 * 8), leerMemoria(direccionLED + 3 * 8));
  3064     057D  1283               	bcf	3,5	;RP0=0, select bank0
  3065     057E  1303               	bcf	3,6	;RP1=0, select bank0
  3066     057F  085D               	movf	_direccionLED,w
  3067     0580  3E18               	addlw	24
  3068     0581  120A  158A  2614  120A  118A  	fcall	_leerMemoria
  3069     0586  1683               	bsf	3,5	;RP0=1, select bank1
  3070     0587  1303               	bcf	3,6	;RP1=0, select bank1
  3071     0588  00BF               	movwf	_initActuadoresSegunMemoria$1571^(0+128)
  3072     0589                     l3085:
  3073                           
  3074                           ;main.c: 434:         setLED(leerMemoria(direccionLED), leerMemoria(direccionLED + 1 * 8
      +                          ), leerMemoria(direccionLED + 2 * 8), leerMemoria(direccionLED + 3 * 8));
  3075     0589  083D               	movf	_initActuadoresSegunMemoria$1569^(0+128),w
  3076     058A  00BA               	movwf	setLED@green^(0+128)
  3077     058B  083E               	movf	_initActuadoresSegunMemoria$1570^(0+128),w
  3078     058C  00BB               	movwf	setLED@blue^(0+128)
  3079     058D  083F               	movf	_initActuadoresSegunMemoria$1571^(0+128),w
  3080     058E  00BC               	movwf	setLED@luminosidad^(0+128)
  3081     058F  1283               	bcf	3,5	;RP0=0, select bank0
  3082     0590  1303               	bcf	3,6	;RP1=0, select bank0
  3083     0591  085D               	movf	_direccionLED,w
  3084     0592  120A  158A  2614  120A  118A  	fcall	_leerMemoria
  3085     0597  120A  118A  25FF  120A  118A  	fcall	_setLED
  3086     059C                     l321:
  3087     059C  0008               	return
  3088     059D                     __end_of_initActuadoresSegunMemoria:
  3089                           
  3090                           	psect	text17
  3091     0EBA                     __ptext17:	
  3092 ;; *************** function _setPWM *****************
  3093 ;; Defined at:
  3094 ;;		line 346 in file "main.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;  porcent         1    wreg     unsigned char 
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;  porcent         1   23[BANK0 ] unsigned char 
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    wreg      void 
  3101 ;; Registers used:
  3102 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3108 ;;      Params:         0       0       0       0       0
  3109 ;;      Locals:         0       1       0       0       0
  3110 ;;      Temps:          0       2       0       0       0
  3111 ;;      Totals:         0       3       0       0       0
  3112 ;;Total ram usage:        3 bytes
  3113 ;; Hardware stack levels used: 1
  3114 ;; Hardware stack levels required when called: 6
  3115 ;; This function calls:
  3116 ;;		___awdiv
  3117 ;;		___bmul
  3118 ;;		_escribirMemoria
  3119 ;; This function is called by:
  3120 ;;		_initActuadoresSegunMemoria
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124     0EBA                     _setPWM:	
  3125                           ;psect for function _setPWM
  3126                           
  3127                           
  3128                           ;incstack = 0
  3129                           ; Regs used in _setPWM: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3130                           ;setPWM@porcent stored from wreg
  3131     0EBA  1283               	bcf	3,5	;RP0=0, select bank0
  3132     0EBB  1303               	bcf	3,6	;RP1=0, select bank0
  3133     0EBC  00B7               	movwf	setPWM@porcent
  3134     0EBD                     l3001:
  3135                           
  3136                           ;main.c: 347:     porcentaje = (char) (porcent / 100);
  3137     0EBD  3064               	movlw	100
  3138     0EBE  00AC               	movwf	___awdiv@divisor
  3139     0EBF  3000               	movlw	0
  3140     0EC0  00AD               	movwf	___awdiv@divisor+1
  3141     0EC1  0837               	movf	setPWM@porcent,w
  3142     0EC2  00B5               	movwf	??_setPWM
  3143     0EC3  01B6               	clrf	??_setPWM+1
  3144     0EC4  0835               	movf	??_setPWM,w
  3145     0EC5  00AE               	movwf	___awdiv@dividend
  3146     0EC6  0836               	movf	??_setPWM+1,w
  3147     0EC7  00AF               	movwf	___awdiv@dividend+1
  3148     0EC8  120A  118A  2404  120A  158A  	fcall	___awdiv
  3149     0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  3150     0ECE  1303               	bcf	3,6	;RP1=0, select bank0
  3151     0ECF  082C               	movf	?___awdiv,w
  3152     0ED0  00CB               	movwf	_porcentaje
  3153                           
  3154                           ;main.c: 348:     CCPR1L = porcentaje * porcentajeMax;
  3155     0ED1  085C               	movf	_porcentajeMax,w
  3156     0ED2  00AC               	movwf	___bmul@multiplicand
  3157     0ED3  084B               	movf	_porcentaje,w
  3158     0ED4  120A  158A  25CC  120A  158A  	fcall	___bmul
  3159     0ED9  1283               	bcf	3,5	;RP0=0, select bank0
  3160     0EDA  1303               	bcf	3,6	;RP1=0, select bank0
  3161     0EDB  0095               	movwf	21	;volatile
  3162     0EDC                     l3003:
  3163                           
  3164                           ;main.c: 349:     escribirMemoria(direccionPWM, porcent);
  3165     0EDC  0837               	movf	setPWM@porcent,w
  3166     0EDD  00AD               	movwf	escribirMemoria@dato
  3167     0EDE  085E               	movf	_direccionPWM,w
  3168     0EDF  120A  118A  2325  120A  158A  	fcall	_escribirMemoria
  3169     0EE4                     l3005:
  3170                           
  3171                           ;main.c: 350:     pPWM = porcent;
  3172     0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  3173     0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  3174     0EE6  0837               	movf	setPWM@porcent,w
  3175     0EE7  00CD               	movwf	_pPWM
  3176     0EE8                     l290:
  3177     0EE8  0008               	return
  3178     0EE9                     __end_of_setPWM:
  3179                           
  3180                           	psect	text18
  3181     0DCC                     __ptext18:	
  3182 ;; *************** function ___bmul *****************
  3183 ;; Defined at:
  3184 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  multiplier      1    wreg     unsigned char 
  3187 ;;  multiplicand    1   12[BANK0 ] unsigned char 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;  multiplier      1   15[BANK0 ] unsigned char 
  3190 ;;  product         1   14[BANK0 ] unsigned char 
  3191 ;; Return value:  Size  Location     Type
  3192 ;;                  1    wreg      unsigned char 
  3193 ;; Registers used:
  3194 ;;		wreg, status,2, status,0
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3200 ;;      Params:         0       1       0       0       0
  3201 ;;      Locals:         0       2       0       0       0
  3202 ;;      Temps:          0       1       0       0       0
  3203 ;;      Totals:         0       4       0       0       0
  3204 ;;Total ram usage:        4 bytes
  3205 ;; Hardware stack levels used: 1
  3206 ;; Hardware stack levels required when called: 4
  3207 ;; This function calls:
  3208 ;;		Nothing
  3209 ;; This function is called by:
  3210 ;;		_setPWM
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214     0DCC                     ___bmul:	
  3215                           ;psect for function ___bmul
  3216                           
  3217                           
  3218                           ;incstack = 0
  3219                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3220                           ;___bmul@multiplier stored from wreg
  3221     0DCC  1283               	bcf	3,5	;RP0=0, select bank0
  3222     0DCD  1303               	bcf	3,6	;RP1=0, select bank0
  3223     0DCE  00AF               	movwf	___bmul@multiplier
  3224     0DCF                     l2917:
  3225     0DCF  01AE               	clrf	___bmul@product
  3226     0DD0                     l2919:
  3227     0DD0  1C2F               	btfss	___bmul@multiplier,0
  3228     0DD1  2DD3               	goto	u2241
  3229     0DD2  2DD4               	goto	u2240
  3230     0DD3                     u2241:
  3231     0DD3  2DD8               	goto	l2923
  3232     0DD4                     u2240:
  3233     0DD4                     l2921:
  3234     0DD4  082C               	movf	___bmul@multiplicand,w
  3235     0DD5  00AD               	movwf	??___bmul
  3236     0DD6  082D               	movf	??___bmul,w
  3237     0DD7  07AE               	addwf	___bmul@product,f
  3238     0DD8                     l2923:
  3239     0DD8  1003               	clrc
  3240     0DD9  0DAC               	rlf	___bmul@multiplicand,f
  3241     0DDA                     l2925:
  3242     0DDA  1003               	clrc
  3243     0DDB  0CAF               	rrf	___bmul@multiplier,f
  3244     0DDC  082F               	movf	___bmul@multiplier,w
  3245     0DDD  1D03               	btfss	3,2
  3246     0DDE  2DE0               	goto	u2251
  3247     0DDF  2DE1               	goto	u2250
  3248     0DE0                     u2251:
  3249     0DE0  2DD0               	goto	l2919
  3250     0DE1                     u2250:
  3251     0DE1                     l2927:
  3252     0DE1  082E               	movf	___bmul@product,w
  3253     0DE2                     l521:
  3254     0DE2  0008               	return
  3255     0DE3                     __end_of___bmul:
  3256                           
  3257                           	psect	text19
  3258     0404                     __ptext19:	
  3259 ;; *************** function ___awdiv *****************
  3260 ;; Defined at:
  3261 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  divisor         2   12[BANK0 ] int 
  3264 ;;  dividend        2   14[BANK0 ] int 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  quotient        2   19[BANK0 ] int 
  3267 ;;  sign            1   18[BANK0 ] unsigned char 
  3268 ;;  counter         1   17[BANK0 ] unsigned char 
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  2   12[BANK0 ] int 
  3271 ;; Registers used:
  3272 ;;		wreg, status,2, status,0
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3278 ;;      Params:         0       4       0       0       0
  3279 ;;      Locals:         0       4       0       0       0
  3280 ;;      Temps:          0       1       0       0       0
  3281 ;;      Totals:         0       9       0       0       0
  3282 ;;Total ram usage:        9 bytes
  3283 ;; Hardware stack levels used: 1
  3284 ;; Hardware stack levels required when called: 4
  3285 ;; This function calls:
  3286 ;;		Nothing
  3287 ;; This function is called by:
  3288 ;;		_setPWM
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292     0404                     ___awdiv:	
  3293                           ;psect for function ___awdiv
  3294                           
  3295     0404                     l2931:	
  3296                           ;incstack = 0
  3297                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3298                           
  3299     0404  1283               	bcf	3,5	;RP0=0, select bank0
  3300     0405  1303               	bcf	3,6	;RP1=0, select bank0
  3301     0406  01B2               	clrf	___awdiv@sign
  3302     0407                     l2933:
  3303     0407  1FAD               	btfss	___awdiv@divisor+1,7
  3304     0408  2C0A               	goto	u2261
  3305     0409  2C0B               	goto	u2260
  3306     040A                     u2261:
  3307     040A  2C12               	goto	l2939
  3308     040B                     u2260:
  3309     040B                     l2935:
  3310     040B  09AC               	comf	___awdiv@divisor,f
  3311     040C  09AD               	comf	___awdiv@divisor+1,f
  3312     040D  0AAC               	incf	___awdiv@divisor,f
  3313     040E  1903               	skipnz
  3314     040F  0AAD               	incf	___awdiv@divisor+1,f
  3315     0410                     l2937:
  3316     0410  01B2               	clrf	___awdiv@sign
  3317     0411  0AB2               	incf	___awdiv@sign,f
  3318     0412                     l2939:
  3319     0412  1FAF               	btfss	___awdiv@dividend+1,7
  3320     0413  2C15               	goto	u2271
  3321     0414  2C16               	goto	u2270
  3322     0415                     u2271:
  3323     0415  2C1F               	goto	l2945
  3324     0416                     u2270:
  3325     0416                     l2941:
  3326     0416  09AE               	comf	___awdiv@dividend,f
  3327     0417  09AF               	comf	___awdiv@dividend+1,f
  3328     0418  0AAE               	incf	___awdiv@dividend,f
  3329     0419  1903               	skipnz
  3330     041A  0AAF               	incf	___awdiv@dividend+1,f
  3331     041B                     l2943:
  3332     041B  3001               	movlw	1
  3333     041C  00B0               	movwf	??___awdiv
  3334     041D  0830               	movf	??___awdiv,w
  3335     041E  06B2               	xorwf	___awdiv@sign,f
  3336     041F                     l2945:
  3337     041F  01B3               	clrf	___awdiv@quotient
  3338     0420  01B4               	clrf	___awdiv@quotient+1
  3339     0421                     l2947:
  3340     0421  082C               	movf	___awdiv@divisor,w
  3341     0422  042D               	iorwf	___awdiv@divisor+1,w
  3342     0423  1903               	btfsc	3,2
  3343     0424  2C26               	goto	u2281
  3344     0425  2C27               	goto	u2280
  3345     0426                     u2281:
  3346     0426  2C5E               	goto	l2967
  3347     0427                     u2280:
  3348     0427                     l2949:
  3349     0427  01B1               	clrf	___awdiv@counter
  3350     0428  0AB1               	incf	___awdiv@counter,f
  3351     0429  2C35               	goto	l2955
  3352     042A                     l2951:
  3353     042A  3001               	movlw	1
  3354     042B                     u2295:
  3355     042B  1003               	clrc
  3356     042C  0DAC               	rlf	___awdiv@divisor,f
  3357     042D  0DAD               	rlf	___awdiv@divisor+1,f
  3358     042E  3EFF               	addlw	-1
  3359     042F  1D03               	skipz
  3360     0430  2C2B               	goto	u2295
  3361     0431                     l2953:
  3362     0431  3001               	movlw	1
  3363     0432  00B0               	movwf	??___awdiv
  3364     0433  0830               	movf	??___awdiv,w
  3365     0434  07B1               	addwf	___awdiv@counter,f
  3366     0435                     l2955:
  3367     0435  1FAD               	btfss	___awdiv@divisor+1,7
  3368     0436  2C38               	goto	u2301
  3369     0437  2C39               	goto	u2300
  3370     0438                     u2301:
  3371     0438  2C2A               	goto	l2951
  3372     0439                     u2300:
  3373     0439                     l2957:
  3374     0439  3001               	movlw	1
  3375     043A                     u2315:
  3376     043A  1003               	clrc
  3377     043B  0DB3               	rlf	___awdiv@quotient,f
  3378     043C  0DB4               	rlf	___awdiv@quotient+1,f
  3379     043D  3EFF               	addlw	-1
  3380     043E  1D03               	skipz
  3381     043F  2C3A               	goto	u2315
  3382     0440  082D               	movf	___awdiv@divisor+1,w
  3383     0441  022F               	subwf	___awdiv@dividend+1,w
  3384     0442  1D03               	skipz
  3385     0443  2C46               	goto	u2325
  3386     0444  082C               	movf	___awdiv@divisor,w
  3387     0445  022E               	subwf	___awdiv@dividend,w
  3388     0446                     u2325:
  3389     0446  1C03               	skipc
  3390     0447  2C49               	goto	u2321
  3391     0448  2C4A               	goto	u2320
  3392     0449                     u2321:
  3393     0449  2C51               	goto	l2963
  3394     044A                     u2320:
  3395     044A                     l2959:
  3396     044A  082C               	movf	___awdiv@divisor,w
  3397     044B  02AE               	subwf	___awdiv@dividend,f
  3398     044C  082D               	movf	___awdiv@divisor+1,w
  3399     044D  1C03               	skipc
  3400     044E  03AF               	decf	___awdiv@dividend+1,f
  3401     044F  02AF               	subwf	___awdiv@dividend+1,f
  3402     0450                     l2961:
  3403     0450  1433               	bsf	___awdiv@quotient,0
  3404     0451                     l2963:
  3405     0451  3001               	movlw	1
  3406     0452                     u2335:
  3407     0452  1003               	clrc
  3408     0453  0CAD               	rrf	___awdiv@divisor+1,f
  3409     0454  0CAC               	rrf	___awdiv@divisor,f
  3410     0455  3EFF               	addlw	-1
  3411     0456  1D03               	skipz
  3412     0457  2C52               	goto	u2335
  3413     0458                     l2965:
  3414     0458  3001               	movlw	1
  3415     0459  02B1               	subwf	___awdiv@counter,f
  3416     045A  1D03               	btfss	3,2
  3417     045B  2C5D               	goto	u2341
  3418     045C  2C5E               	goto	u2340
  3419     045D                     u2341:
  3420     045D  2C39               	goto	l2957
  3421     045E                     u2340:
  3422     045E                     l2967:
  3423     045E  0832               	movf	___awdiv@sign,w
  3424     045F  1903               	btfsc	3,2
  3425     0460  2C62               	goto	u2351
  3426     0461  2C63               	goto	u2350
  3427     0462                     u2351:
  3428     0462  2C68               	goto	l2971
  3429     0463                     u2350:
  3430     0463                     l2969:
  3431     0463  09B3               	comf	___awdiv@quotient,f
  3432     0464  09B4               	comf	___awdiv@quotient+1,f
  3433     0465  0AB3               	incf	___awdiv@quotient,f
  3434     0466  1903               	skipnz
  3435     0467  0AB4               	incf	___awdiv@quotient+1,f
  3436     0468                     l2971:
  3437     0468  0834               	movf	___awdiv@quotient+1,w
  3438     0469  00AD               	movwf	?___awdiv+1
  3439     046A  0833               	movf	___awdiv@quotient,w
  3440     046B  00AC               	movwf	?___awdiv
  3441     046C                     l648:
  3442     046C  0008               	return
  3443     046D                     __end_of___awdiv:
  3444                           
  3445                           	psect	text20
  3446     05FF                     __ptext20:	
  3447 ;; *************** function _setLED *****************
  3448 ;; Defined at:
  3449 ;;		line 378 in file "main.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  red             1    wreg     unsigned char 
  3452 ;;  green           1    0[BANK1 ] unsigned char 
  3453 ;;  blue            1    1[BANK1 ] unsigned char 
  3454 ;;  luminosidad     1    2[BANK1 ] unsigned char 
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;  red             1   24[BANK0 ] unsigned char 
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  1    wreg      void 
  3459 ;; Registers used:
  3460 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3466 ;;      Params:         0       0       3       0       0
  3467 ;;      Locals:         0       1       0       0       0
  3468 ;;      Temps:          0       0       0       0       0
  3469 ;;      Totals:         0       1       3       0       0
  3470 ;;Total ram usage:        4 bytes
  3471 ;; Hardware stack levels used: 1
  3472 ;; Hardware stack levels required when called: 6
  3473 ;; This function calls:
  3474 ;;		_cosasSPI
  3475 ;;		_escribirMemoria
  3476 ;; This function is called by:
  3477 ;;		_initActuadoresSegunMemoria
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481     05FF                     _setLED:	
  3482                           ;psect for function _setLED
  3483                           
  3484                           
  3485                           ;incstack = 0
  3486                           ; Regs used in _setLED: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3487                           ;setLED@red stored from wreg
  3488     05FF  1283               	bcf	3,5	;RP0=0, select bank0
  3489     0600  1303               	bcf	3,6	;RP1=0, select bank0
  3490     0601  00B8               	movwf	setLED@red
  3491     0602                     l3007:
  3492                           
  3493                           ;main.c: 380:     cosasSPI(red, green, blue, luminosidad);
  3494     0602  1683               	bsf	3,5	;RP0=1, select bank1
  3495     0603  1303               	bcf	3,6	;RP1=0, select bank1
  3496     0604  083A               	movf	setLED@green^(0+128),w
  3497     0605  1283               	bcf	3,5	;RP0=0, select bank0
  3498     0606  1303               	bcf	3,6	;RP1=0, select bank0
  3499     0607  00B1               	movwf	cosasSPI@verd
  3500     0608  1683               	bsf	3,5	;RP0=1, select bank1
  3501     0609  1303               	bcf	3,6	;RP1=0, select bank1
  3502     060A  083B               	movf	setLED@blue^(0+128),w
  3503     060B  1283               	bcf	3,5	;RP0=0, select bank0
  3504     060C  1303               	bcf	3,6	;RP1=0, select bank0
  3505     060D  00B2               	movwf	cosasSPI@azu
  3506     060E  1683               	bsf	3,5	;RP0=1, select bank1
  3507     060F  1303               	bcf	3,6	;RP1=0, select bank1
  3508     0610  083C               	movf	setLED@luminosidad^(0+128),w
  3509     0611  1283               	bcf	3,5	;RP0=0, select bank0
  3510     0612  1303               	bcf	3,6	;RP1=0, select bank0
  3511     0613  00B3               	movwf	cosasSPI@lumi
  3512     0614  0838               	movf	setLED@red,w
  3513     0615  120A  118A  2398  120A  118A  	fcall	_cosasSPI
  3514     061A                     l3009:
  3515                           
  3516                           ;main.c: 382:     miLED[0] = red;
  3517     061A  1283               	bcf	3,5	;RP0=0, select bank0
  3518     061B  1303               	bcf	3,6	;RP1=0, select bank0
  3519     061C  0838               	movf	setLED@red,w
  3520     061D  00E0               	movwf	_miLED
  3521     061E                     l3011:
  3522                           
  3523                           ;main.c: 383:     miLED[1] = green;
  3524     061E  1683               	bsf	3,5	;RP0=1, select bank1
  3525     061F  1303               	bcf	3,6	;RP1=0, select bank1
  3526     0620  083A               	movf	setLED@green^(0+128),w
  3527     0621  1283               	bcf	3,5	;RP0=0, select bank0
  3528     0622  1303               	bcf	3,6	;RP1=0, select bank0
  3529     0623  00E1               	movwf	_miLED+1
  3530     0624                     l3013:
  3531                           
  3532                           ;main.c: 384:     miLED[2] = blue;
  3533     0624  1683               	bsf	3,5	;RP0=1, select bank1
  3534     0625  1303               	bcf	3,6	;RP1=0, select bank1
  3535     0626  083B               	movf	setLED@blue^(0+128),w
  3536     0627  1283               	bcf	3,5	;RP0=0, select bank0
  3537     0628  1303               	bcf	3,6	;RP1=0, select bank0
  3538     0629  00E2               	movwf	_miLED+2
  3539     062A                     l3015:
  3540                           
  3541                           ;main.c: 385:     miLED[3] = luminosidad;
  3542     062A  1683               	bsf	3,5	;RP0=1, select bank1
  3543     062B  1303               	bcf	3,6	;RP1=0, select bank1
  3544     062C  083C               	movf	setLED@luminosidad^(0+128),w
  3545     062D  1283               	bcf	3,5	;RP0=0, select bank0
  3546     062E  1303               	bcf	3,6	;RP1=0, select bank0
  3547     062F  00E3               	movwf	_miLED+3
  3548     0630                     l3017:
  3549                           
  3550                           ;main.c: 387:     escribirMemoria(direccionLED, miLED[0]);
  3551     0630  0860               	movf	_miLED,w
  3552     0631  00AD               	movwf	escribirMemoria@dato
  3553     0632  085D               	movf	_direccionLED,w
  3554     0633  120A  118A  2325  120A  118A  	fcall	_escribirMemoria
  3555     0638                     l3019:
  3556                           
  3557                           ;main.c: 388:     escribirMemoria(direccionLED + 1 * sizeof(char), miLED[1]);
  3558     0638  1283               	bcf	3,5	;RP0=0, select bank0
  3559     0639  1303               	bcf	3,6	;RP1=0, select bank0
  3560     063A  0861               	movf	_miLED+1,w
  3561     063B  00AD               	movwf	escribirMemoria@dato
  3562     063C  085D               	movf	_direccionLED,w
  3563     063D  3E01               	addlw	1
  3564     063E  120A  118A  2325  120A  118A  	fcall	_escribirMemoria
  3565     0643                     l3021:
  3566                           
  3567                           ;main.c: 389:     escribirMemoria(direccionLED + 2 * sizeof(char), miLED[2]);
  3568     0643  1283               	bcf	3,5	;RP0=0, select bank0
  3569     0644  1303               	bcf	3,6	;RP1=0, select bank0
  3570     0645  0862               	movf	_miLED+2,w
  3571     0646  00AD               	movwf	escribirMemoria@dato
  3572     0647  085D               	movf	_direccionLED,w
  3573     0648  3E02               	addlw	2
  3574     0649  120A  118A  2325  120A  118A  	fcall	_escribirMemoria
  3575     064E                     l3023:
  3576                           
  3577                           ;main.c: 390:     escribirMemoria(direccionLED + 3 * sizeof(char), miLED[3]);
  3578     064E  1283               	bcf	3,5	;RP0=0, select bank0
  3579     064F  1303               	bcf	3,6	;RP1=0, select bank0
  3580     0650  0863               	movf	_miLED+3,w
  3581     0651  00AD               	movwf	escribirMemoria@dato
  3582     0652  085D               	movf	_direccionLED,w
  3583     0653  3E03               	addlw	3
  3584     0654  120A  118A  2325  120A  118A  	fcall	_escribirMemoria
  3585     0659                     l301:
  3586     0659  0008               	return
  3587     065A                     __end_of_setLED:
  3588                           
  3589                           	psect	text21
  3590     0325                     __ptext21:	
  3591 ;; *************** function _escribirMemoria *****************
  3592 ;; Defined at:
  3593 ;;		line 283 in file "main.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  direccion       1    wreg     unsigned char 
  3596 ;;  dato            1   13[BANK0 ] unsigned char 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  direccion       1   16[BANK0 ] unsigned char 
  3599 ;;  contador        2   17[BANK0 ] int 
  3600 ;;  confirmado      2   14[BANK0 ] int 
  3601 ;;  valorSal        2    0        int 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  2   13[BANK0 ] int 
  3604 ;; Registers used:
  3605 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3611 ;;      Params:         0       1       0       0       0
  3612 ;;      Locals:         0       5       0       0       0
  3613 ;;      Temps:          0       0       0       0       0
  3614 ;;      Totals:         0       6       0       0       0
  3615 ;;Total ram usage:        6 bytes
  3616 ;; Hardware stack levels used: 1
  3617 ;; Hardware stack levels required when called: 5
  3618 ;; This function calls:
  3619 ;;		_leerMemoria
  3620 ;; This function is called by:
  3621 ;;		_setPWM
  3622 ;;		_setLED
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626     0325                     _escribirMemoria:	
  3627                           ;psect for function _escribirMemoria
  3628                           
  3629                           
  3630                           ;incstack = 0
  3631                           ; Regs used in _escribirMemoria: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3632                           ;escribirMemoria@direccion stored from wreg
  3633     0325  1283               	bcf	3,5	;RP0=0, select bank0
  3634     0326  1303               	bcf	3,6	;RP1=0, select bank0
  3635     0327  00B0               	movwf	escribirMemoria@direccion
  3636     0328                     l2853:
  3637                           
  3638                           ;main.c: 284:     int valorSal;;main.c: 285:     EECON1bits.EEPGD = 0;
  3639     0328  1683               	bsf	3,5	;RP0=1, select bank3
  3640     0329  1703               	bsf	3,6	;RP1=1, select bank3
  3641     032A  138C               	bcf	12,7	;volsfr
  3642                           
  3643                           ;main.c: 287:     EECON1bits.WREN = 1;
  3644     032B  150C               	bsf	12,2	;volsfr
  3645     032C                     l2855:
  3646                           
  3647                           ;main.c: 288:     EEADRH = 0;
  3648     032C  1283               	bcf	3,5	;RP0=0, select bank2
  3649     032D  1703               	bsf	3,6	;RP1=1, select bank2
  3650     032E  018F               	clrf	15	;volatile
  3651     032F                     l2857:
  3652                           
  3653                           ;main.c: 289:     EEADR = direccion;
  3654     032F  1283               	bcf	3,5	;RP0=0, select bank0
  3655     0330  1303               	bcf	3,6	;RP1=0, select bank0
  3656     0331  0830               	movf	escribirMemoria@direccion,w
  3657     0332  1283               	bcf	3,5	;RP0=0, select bank2
  3658     0333  1703               	bsf	3,6	;RP1=1, select bank2
  3659     0334  008D               	movwf	13	;volatile
  3660     0335                     l2859:
  3661                           
  3662                           ;main.c: 290:     if (EECON1bits.RD == 0) {
  3663     0335  1683               	bsf	3,5	;RP0=1, select bank3
  3664     0336  1703               	bsf	3,6	;RP1=1, select bank3
  3665     0337  180C               	btfsc	12,0	;volsfr
  3666     0338  2B3A               	goto	u2171
  3667     0339  2B3B               	goto	u2170
  3668     033A                     u2171:
  3669     033A  2B97               	goto	l2889
  3670     033B                     u2170:
  3671     033B                     l2861:
  3672                           
  3673                           ;main.c: 291:         int contador = 0;
  3674     033B  1283               	bcf	3,5	;RP0=0, select bank0
  3675     033C  1303               	bcf	3,6	;RP1=0, select bank0
  3676     033D  01B1               	clrf	escribirMemoria@contador
  3677     033E  01B2               	clrf	escribirMemoria@contador+1
  3678                           
  3679                           ;main.c: 292:         int confirmado = 0;
  3680     033F  01AE               	clrf	escribirMemoria@confirmado
  3681     0340  01AF               	clrf	escribirMemoria@confirmado+1
  3682                           
  3683                           ;main.c: 293:         while (contador < 10 && confirmado == 0) {
  3684     0341  2B71               	goto	l2879
  3685     0342                     l265:
  3686                           
  3687                           ;main.c: 294:             INTCONbits.GIE = 0;
  3688     0342  138B               	bcf	11,7	;volatile
  3689     0343                     l2863:
  3690                           
  3691                           ;main.c: 295:             EEDAT = dato;
  3692     0343  082D               	movf	escribirMemoria@dato,w
  3693     0344  1283               	bcf	3,5	;RP0=0, select bank2
  3694     0345  1703               	bsf	3,6	;RP1=1, select bank2
  3695     0346  008C               	movwf	12	;volatile
  3696                           
  3697                           ;main.c: 296:             EECON2 = 0x55;
  3698     0347  3055               	movlw	85
  3699     0348  1683               	bsf	3,5	;RP0=1, select bank3
  3700     0349  1703               	bsf	3,6	;RP1=1, select bank3
  3701     034A  008D               	movwf	13	;volsfr
  3702                           
  3703                           ;main.c: 297:             EECON2 = 0xAA;
  3704     034B  30AA               	movlw	170
  3705     034C  008D               	movwf	13	;volsfr
  3706     034D                     l2865:
  3707                           
  3708                           ;main.c: 298:             EECON1bits.WR = 1;
  3709     034D  148C               	bsf	12,1	;volsfr
  3710     034E                     l2867:
  3711                           
  3712                           ;main.c: 299:             INTCONbits.GIE = 1;
  3713     034E  178B               	bsf	11,7	;volatile
  3714     034F                     l2869:	
  3715                           ;main.c: 300:             while (!continuoEscribiendo);
  3716                           
  3717     034F  1283               	bcf	3,5	;RP0=0, select bank0
  3718     0350  1303               	bcf	3,6	;RP1=0, select bank0
  3719     0351  0848               	movf	_continuoEscribiendo,w
  3720     0352  0449               	iorwf	_continuoEscribiendo+1,w
  3721     0353  1903               	btfsc	3,2
  3722     0354  2B56               	goto	u2181
  3723     0355  2B57               	goto	u2180
  3724     0356                     u2181:
  3725     0356  2B4F               	goto	l2869
  3726     0357                     u2180:
  3727     0357                     l2871:
  3728                           
  3729                           ;main.c: 301:             continuoEscribiendo = 0;
  3730     0357  01C8               	clrf	_continuoEscribiendo
  3731     0358  01C9               	clrf	_continuoEscribiendo+1
  3732     0359                     l2873:
  3733                           
  3734                           ;main.c: 302:             if (leerMemoria(direccion) == dato)
  3735     0359  0830               	movf	escribirMemoria@direccion,w
  3736     035A  120A  158A  2614  120A  118A  	fcall	_leerMemoria
  3737     035F  1283               	bcf	3,5	;RP0=0, select bank0
  3738     0360  1303               	bcf	3,6	;RP1=0, select bank0
  3739     0361  062D               	xorwf	escribirMemoria@dato,w
  3740     0362  1D03               	skipz
  3741     0363  2B65               	goto	u2191
  3742     0364  2B66               	goto	u2190
  3743     0365                     u2191:
  3744     0365  2B6B               	goto	l2877
  3745     0366                     u2190:
  3746     0366                     l2875:
  3747                           
  3748                           ;main.c: 303:                 confirmado = 1;
  3749     0366  3001               	movlw	1
  3750     0367  00AE               	movwf	escribirMemoria@confirmado
  3751     0368  3000               	movlw	0
  3752     0369  00AF               	movwf	escribirMemoria@confirmado+1
  3753     036A  2B71               	goto	l2879
  3754     036B                     l2877:
  3755                           
  3756                           ;main.c: 305:                 contador++;
  3757     036B  3001               	movlw	1
  3758     036C  07B1               	addwf	escribirMemoria@contador,f
  3759     036D  1803               	skipnc
  3760     036E  0AB2               	incf	escribirMemoria@contador+1,f
  3761     036F  3000               	movlw	0
  3762     0370  07B2               	addwf	escribirMemoria@contador+1,f
  3763     0371                     l2879:
  3764                           
  3765                           ;main.c: 293:         while (contador < 10 && confirmado == 0) {
  3766     0371  0832               	movf	escribirMemoria@contador+1,w
  3767     0372  3A80               	xorlw	128
  3768     0373  00FF               	movwf	btemp+1
  3769     0374  3080               	movlw	128
  3770     0375  027F               	subwf	btemp+1,w
  3771     0376  1D03               	skipz
  3772     0377  2B7A               	goto	u2205
  3773     0378  300A               	movlw	10
  3774     0379  0231               	subwf	escribirMemoria@contador,w
  3775     037A                     u2205:
  3776     037A  1803               	skipnc
  3777     037B  2B7D               	goto	u2201
  3778     037C  2B7E               	goto	u2200
  3779     037D                     u2201:
  3780     037D  2B86               	goto	l2883
  3781     037E                     u2200:
  3782     037E                     l2881:
  3783     037E  1283               	bcf	3,5	;RP0=0, select bank0
  3784     037F  1303               	bcf	3,6	;RP1=0, select bank0
  3785     0380  082E               	movf	escribirMemoria@confirmado,w
  3786     0381  042F               	iorwf	escribirMemoria@confirmado+1,w
  3787     0382  1903               	btfsc	3,2
  3788     0383  2B85               	goto	u2211
  3789     0384  2B86               	goto	u2210
  3790     0385                     u2211:
  3791     0385  2B42               	goto	l265
  3792     0386                     u2210:
  3793     0386                     l2883:
  3794                           
  3795                           ;main.c: 307:         if (contador >= 10) valorSal = 1;
  3796     0386  1283               	bcf	3,5	;RP0=0, select bank0
  3797     0387  1303               	bcf	3,6	;RP1=0, select bank0
  3798     0388  0832               	movf	escribirMemoria@contador+1,w
  3799     0389  3A80               	xorlw	128
  3800     038A  00FF               	movwf	btemp+1
  3801     038B  3080               	movlw	128
  3802     038C  027F               	subwf	btemp+1,w
  3803     038D  1D03               	skipz
  3804     038E  2B91               	goto	u2225
  3805     038F  300A               	movlw	10
  3806     0390  0231               	subwf	escribirMemoria@contador,w
  3807     0391                     u2225:
  3808     0391  1C03               	skipc
  3809     0392  2B94               	goto	u2221
  3810     0393  2B95               	goto	u2220
  3811     0394                     u2221:
  3812     0394  2B96               	goto	l2887
  3813     0395                     u2220:
  3814     0395                     l2885:
  3815     0395  2B97               	goto	l277
  3816     0396                     l2887:
  3817     0396  2B97               	goto	l277
  3818     0397                     l2889:
  3819     0397                     l277:
  3820     0397  0008               	return
  3821     0398                     __end_of_escribirMemoria:
  3822                           
  3823                           	psect	text22
  3824     0398                     __ptext22:	
  3825 ;; *************** function _cosasSPI *****************
  3826 ;; Defined at:
  3827 ;;		line 358 in file "main.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;  roj             1    wreg     unsigned char 
  3830 ;;  verd            1   17[BANK0 ] unsigned char 
  3831 ;;  azu             1   18[BANK0 ] unsigned char 
  3832 ;;  lumi            1   19[BANK0 ] unsigned char 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  roj             1   20[BANK0 ] unsigned char 
  3835 ;;  i               2   22[BANK0 ] int 
  3836 ;;  lumo            1   21[BANK0 ] unsigned char 
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1    wreg      void 
  3839 ;; Registers used:
  3840 ;;		wreg, status,2, status,0, pclath, cstack
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3846 ;;      Params:         0       3       0       0       0
  3847 ;;      Locals:         0       4       0       0       0
  3848 ;;      Temps:          0       0       0       0       0
  3849 ;;      Totals:         0       7       0       0       0
  3850 ;;Total ram usage:        7 bytes
  3851 ;; Hardware stack levels used: 1
  3852 ;; Hardware stack levels required when called: 5
  3853 ;; This function calls:
  3854 ;;		_spi_write_read
  3855 ;; This function is called by:
  3856 ;;		_setLED
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860     0398                     _cosasSPI:	
  3861                           ;psect for function _cosasSPI
  3862                           
  3863                           
  3864                           ;incstack = 0
  3865                           ; Regs used in _cosasSPI: [wreg+status,2+status,0+pclath+cstack]
  3866                           ;cosasSPI@roj stored from wreg
  3867     0398  1283               	bcf	3,5	;RP0=0, select bank0
  3868     0399  1303               	bcf	3,6	;RP1=0, select bank0
  3869     039A  00B4               	movwf	cosasSPI@roj
  3870     039B                     l2893:
  3871                           
  3872                           ;main.c: 359:     int i;;main.c: 360:     char lumo = 0b11100000 + (lumi % 32);
  3873     039B  0833               	movf	cosasSPI@lumi,w
  3874     039C  391F               	andlw	31
  3875     039D  3EE0               	addlw	224
  3876     039E  00B5               	movwf	cosasSPI@lumo
  3877     039F                     l2895:
  3878                           
  3879                           ;main.c: 361:     spi_write_read(0x00);
  3880     039F  3000               	movlw	0
  3881     03A0  120A  158A  2752  120A  118A  	fcall	_spi_write_read
  3882     03A5                     l2897:
  3883                           
  3884                           ;main.c: 362:     spi_write_read(0x00);
  3885     03A5  3000               	movlw	0
  3886     03A6  120A  158A  2752  120A  118A  	fcall	_spi_write_read
  3887     03AB                     l2899:
  3888                           
  3889                           ;main.c: 363:     spi_write_read(0x00);
  3890     03AB  3000               	movlw	0
  3891     03AC  120A  158A  2752  120A  118A  	fcall	_spi_write_read
  3892     03B1                     l2901:
  3893                           
  3894                           ;main.c: 364:     spi_write_read(0x00);
  3895     03B1  3000               	movlw	0
  3896     03B2  120A  158A  2752  120A  118A  	fcall	_spi_write_read
  3897     03B7                     l2903:
  3898                           
  3899                           ;main.c: 365:     for (i = numLedes; i == 0; i--) {
  3900     03B7  1283               	bcf	3,5	;RP0=0, select bank0
  3901     03B8  1303               	bcf	3,6	;RP1=0, select bank0
  3902     03B9  0852               	movf	_numLedes+1,w
  3903     03BA  00B7               	movwf	cosasSPI@i+1
  3904     03BB  0851               	movf	_numLedes,w
  3905     03BC  00B6               	movwf	cosasSPI@i
  3906     03BD                     l2905:
  3907     03BD  0836               	movf	cosasSPI@i,w
  3908     03BE  0437               	iorwf	cosasSPI@i+1,w
  3909     03BF  1903               	btfsc	3,2
  3910     03C0  2BC2               	goto	u2231
  3911     03C1  2BC3               	goto	u2230
  3912     03C2                     u2231:
  3913     03C2  2BC4               	goto	l2909
  3914     03C3                     u2230:
  3915     03C3  2BEB               	goto	l2915
  3916     03C4                     l2909:
  3917                           
  3918                           ;main.c: 366:         spi_write_read(lumo);
  3919     03C4  0835               	movf	cosasSPI@lumo,w
  3920     03C5  120A  158A  2752  120A  118A  	fcall	_spi_write_read
  3921                           
  3922                           ;main.c: 367:         spi_write_read(azu);
  3923     03CA  1283               	bcf	3,5	;RP0=0, select bank0
  3924     03CB  1303               	bcf	3,6	;RP1=0, select bank0
  3925     03CC  0832               	movf	cosasSPI@azu,w
  3926     03CD  120A  158A  2752  120A  118A  	fcall	_spi_write_read
  3927                           
  3928                           ;main.c: 368:         spi_write_read(verd);
  3929     03D2  1283               	bcf	3,5	;RP0=0, select bank0
  3930     03D3  1303               	bcf	3,6	;RP1=0, select bank0
  3931     03D4  0831               	movf	cosasSPI@verd,w
  3932     03D5  120A  158A  2752  120A  118A  	fcall	_spi_write_read
  3933                           
  3934                           ;main.c: 369:         spi_write_read(roj);
  3935     03DA  1283               	bcf	3,5	;RP0=0, select bank0
  3936     03DB  1303               	bcf	3,6	;RP1=0, select bank0
  3937     03DC  0834               	movf	cosasSPI@roj,w
  3938     03DD  120A  158A  2752  120A  118A  	fcall	_spi_write_read
  3939     03E2                     l2911:
  3940                           
  3941                           ;main.c: 370:     }
  3942     03E2  30FF               	movlw	255
  3943     03E3  1283               	bcf	3,5	;RP0=0, select bank0
  3944     03E4  1303               	bcf	3,6	;RP1=0, select bank0
  3945     03E5  07B6               	addwf	cosasSPI@i,f
  3946     03E6  1803               	skipnc
  3947     03E7  0AB7               	incf	cosasSPI@i+1,f
  3948     03E8  30FF               	movlw	255
  3949     03E9  07B7               	addwf	cosasSPI@i+1,f
  3950     03EA  2BBD               	goto	l2905
  3951     03EB                     l2915:
  3952                           
  3953                           ;main.c: 371:     spi_write_read(0xFF);
  3954     03EB  30FF               	movlw	255
  3955     03EC  120A  158A  2752  120A  118A  	fcall	_spi_write_read
  3956                           
  3957                           ;main.c: 372:     spi_write_read(0xFF);
  3958     03F1  30FF               	movlw	255
  3959     03F2  120A  158A  2752  120A  118A  	fcall	_spi_write_read
  3960                           
  3961                           ;main.c: 373:     spi_write_read(0xFF);
  3962     03F7  30FF               	movlw	255
  3963     03F8  120A  158A  2752  120A  118A  	fcall	_spi_write_read
  3964                           
  3965                           ;main.c: 374:     spi_write_read(0xFF);
  3966     03FD  30FF               	movlw	255
  3967     03FE  120A  158A  2752  120A  118A  	fcall	_spi_write_read
  3968     0403                     l298:
  3969     0403  0008               	return
  3970     0404                     __end_of_cosasSPI:
  3971                           
  3972                           	psect	text23
  3973     0F52                     __ptext23:	
  3974 ;; *************** function _spi_write_read *****************
  3975 ;; Defined at:
  3976 ;;		line 8 in file "spi-master-v1.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  one_byte        1    wreg     unsigned char 
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;  one_byte        1   14[BANK0 ] unsigned char 
  3981 ;;  x               1   16[BANK0 ] unsigned char 
  3982 ;;  answer          1   15[BANK0 ] unsigned char 
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  1    wreg      unsigned char 
  3985 ;; Registers used:
  3986 ;;		wreg, status,2, status,0
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3992 ;;      Params:         0       0       0       0       0
  3993 ;;      Locals:         0       3       0       0       0
  3994 ;;      Temps:          0       2       0       0       0
  3995 ;;      Totals:         0       5       0       0       0
  3996 ;;Total ram usage:        5 bytes
  3997 ;; Hardware stack levels used: 1
  3998 ;; Hardware stack levels required when called: 4
  3999 ;; This function calls:
  4000 ;;		Nothing
  4001 ;; This function is called by:
  4002 ;;		_cosasSPI
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006     0F52                     _spi_write_read:	
  4007                           ;psect for function _spi_write_read
  4008                           
  4009                           
  4010                           ;incstack = 0
  4011                           ; Regs used in _spi_write_read: [wreg+status,2+status,0]
  4012                           ;spi_write_read@one_byte stored from wreg
  4013     0F52  1283               	bcf	3,5	;RP0=0, select bank0
  4014     0F53  1303               	bcf	3,6	;RP1=0, select bank0
  4015     0F54  00AE               	movwf	spi_write_read@one_byte
  4016     0F55                     l2821:
  4017                           
  4018                           ;spi-master-v1.c: 8: char spi_write_read(char one_byte);spi-master-v1.c: 9: {;spi-master
      +                          -v1.c: 11:     char answer, x;;spi-master-v1.c: 13:     answer = 0;
  4019     0F55  01AF               	clrf	spi_write_read@answer
  4020     0F56                     l2823:
  4021                           
  4022                           ;spi-master-v1.c: 15:     for(x = 8; x > 0; x--)
  4023     0F56  3008               	movlw	8
  4024     0F57  00B0               	movwf	spi_write_read@x
  4025     0F58                     l2829:
  4026                           
  4027                           ;spi-master-v1.c: 16:     {;spi-master-v1.c: 17:         PORTCbits.RC0 = (__bit)((one_by
      +                          te >> (x - 1)) & 0b00000001);
  4028     0F58  082E               	movf	spi_write_read@one_byte,w
  4029     0F59  00AC               	movwf	??_spi_write_read
  4030     0F5A  0830               	movf	spi_write_read@x,w
  4031     0F5B  3EFF               	addlw	-1
  4032     0F5C  3E01               	addlw	1
  4033     0F5D  2F60               	goto	u2114
  4034     0F5E                     u2115:
  4035     0F5E  1003               	clrc
  4036     0F5F  0CAC               	rrf	??_spi_write_read,f
  4037     0F60                     u2114:
  4038     0F60  3EFF               	addlw	-1
  4039     0F61  1D03               	skipz
  4040     0F62  2F5E               	goto	u2115
  4041     0F63  182C               	btfsc	??_spi_write_read,0
  4042     0F64  2F66               	goto	u2121
  4043     0F65  2F6A               	goto	u2120
  4044     0F66                     u2121:
  4045     0F66  1283               	bcf	3,5	;RP0=0, select bank0
  4046     0F67  1303               	bcf	3,6	;RP1=0, select bank0
  4047     0F68  1407               	bsf	7,0	;volatile
  4048     0F69  2F6D               	goto	u2134
  4049     0F6A                     u2120:
  4050     0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  4051     0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  4052     0F6C  1007               	bcf	7,0	;volatile
  4053     0F6D                     u2134:
  4054     0F6D                     l2831:
  4055                           
  4056                           ;spi-master-v1.c: 19:         PORTCbits.RC5 = 1;
  4057     0F6D  1687               	bsf	7,5	;volatile
  4058                           
  4059                           ;spi-master-v1.c: 21:         answer |= (char)PORTAbits.RA5;
  4060     0F6E  0E05               	swapf	5,w	;volatile
  4061     0F6F  00AC               	movwf	??_spi_write_read
  4062     0F70  0C2C               	rrf	??_spi_write_read,w
  4063     0F71  3901               	andlw	1
  4064     0F72  00AD               	movwf	??_spi_write_read+1
  4065     0F73  082D               	movf	??_spi_write_read+1,w
  4066     0F74  04AF               	iorwf	spi_write_read@answer,f
  4067     0F75                     l2833:
  4068                           
  4069                           ;spi-master-v1.c: 22:         PORTCbits.RC5 = 0;
  4070     0F75  1287               	bcf	7,5	;volatile
  4071     0F76                     l2835:
  4072                           
  4073                           ;spi-master-v1.c: 24:         if(x > 1)
  4074     0F76  3002               	movlw	2
  4075     0F77  0230               	subwf	spi_write_read@x,w
  4076     0F78  1C03               	skipc
  4077     0F79  2F7B               	goto	u2141
  4078     0F7A  2F7C               	goto	u2140
  4079     0F7B                     u2141:
  4080     0F7B  2F80               	goto	l38
  4081     0F7C                     u2140:
  4082     0F7C                     l2837:
  4083                           
  4084                           ;spi-master-v1.c: 25:             answer = answer << 1;
  4085     0F7C  082F               	movf	spi_write_read@answer,w
  4086     0F7D  00AC               	movwf	??_spi_write_read
  4087     0F7E  072C               	addwf	??_spi_write_read,w
  4088     0F7F  00AF               	movwf	spi_write_read@answer
  4089     0F80                     l38:
  4090                           
  4091                           ;spi-master-v1.c: 26:     }
  4092     0F80  3001               	movlw	1
  4093     0F81  02B0               	subwf	spi_write_read@x,f
  4094     0F82  0830               	movf	spi_write_read@x,w
  4095     0F83  1D03               	btfss	3,2
  4096     0F84  2F86               	goto	u2151
  4097     0F85  2F87               	goto	u2150
  4098     0F86                     u2151:
  4099     0F86  2F58               	goto	l2829
  4100     0F87                     u2150:
  4101     0F87                     l39:
  4102     0F87  0008               	return
  4103     0F88                     __end_of_spi_write_read:
  4104                           
  4105                           	psect	text24
  4106     0E30                     __ptext24:	
  4107 ;; *************** function _getnoPrimerArranque *****************
  4108 ;; Defined at:
  4109 ;;		line 338 in file "main.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;		None
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;  aux             1   13[BANK0 ] unsigned char 
  4114 ;;  direccion       1    0        unsigned char 
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  1    wreg      enum E1298
  4117 ;; Registers used:
  4118 ;;		wreg, status,2, status,0, pclath, cstack
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4124 ;;      Params:         0       0       0       0       0
  4125 ;;      Locals:         0       1       0       0       0
  4126 ;;      Temps:          0       0       0       0       0
  4127 ;;      Totals:         0       1       0       0       0
  4128 ;;Total ram usage:        1 bytes
  4129 ;; Hardware stack levels used: 1
  4130 ;; Hardware stack levels required when called: 5
  4131 ;; This function calls:
  4132 ;;		_leerMemoria
  4133 ;; This function is called by:
  4134 ;;		_initActuadoresSegunMemoria
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138     0E30                     _getnoPrimerArranque:	
  4139                           ;psect for function _getnoPrimerArranque
  4140                           
  4141     0E30                     l2981:	
  4142                           ;incstack = 0
  4143                           ; Regs used in _getnoPrimerArranque: [wreg+status,2+status,0+pclath+cstack]
  4144                           
  4145     0E30                     l2983:
  4146                           
  4147                           ;main.c: 340:     char aux = leerMemoria(direccion);
  4148     0E30  3000               	movlw	0
  4149     0E31  120A  158A  2614  120A  158A  	fcall	_leerMemoria
  4150     0E36  1283               	bcf	3,5	;RP0=0, select bank0
  4151     0E37  1303               	bcf	3,6	;RP1=0, select bank0
  4152     0E38  00AD               	movwf	getnoPrimerArranque@aux
  4153     0E39                     l2985:
  4154                           
  4155                           ;main.c: 341:     if (aux == (0) || aux == 0 || aux == (char) 0b00000000) return FALSE;
  4156     0E39  082D               	movf	getnoPrimerArranque@aux,w
  4157     0E3A  1903               	btfsc	3,2
  4158     0E3B  2E3D               	goto	u2381
  4159     0E3C  2E3E               	goto	u2380
  4160     0E3D                     u2381:
  4161     0E3D  2E48               	goto	l2991
  4162     0E3E                     u2380:
  4163     0E3E                     l2987:
  4164     0E3E  082D               	movf	getnoPrimerArranque@aux,w
  4165     0E3F  1903               	btfsc	3,2
  4166     0E40  2E42               	goto	u2391
  4167     0E41  2E43               	goto	u2390
  4168     0E42                     u2391:
  4169     0E42  2E48               	goto	l2991
  4170     0E43                     u2390:
  4171     0E43                     l2989:
  4172     0E43  082D               	movf	getnoPrimerArranque@aux,w
  4173     0E44  1D03               	btfss	3,2
  4174     0E45  2E47               	goto	u2401
  4175     0E46  2E48               	goto	u2400
  4176     0E47                     u2401:
  4177     0E47  2E4A               	goto	l2997
  4178     0E48                     u2400:
  4179     0E48                     l2991:
  4180     0E48  3000               	movlw	0
  4181     0E49  2E4B               	goto	l286
  4182     0E4A                     l2997:
  4183     0E4A  3001               	movlw	1
  4184     0E4B                     l286:
  4185     0E4B  0008               	return
  4186     0E4C                     __end_of_getnoPrimerArranque:
  4187                           
  4188                           	psect	text25
  4189     0E14                     __ptext25:	
  4190 ;; *************** function _leerMemoria *****************
  4191 ;; Defined at:
  4192 ;;		line 270 in file "main.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;  direccion       1    wreg     unsigned char 
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;  direccion       1   12[BANK0 ] unsigned char 
  4197 ;; Return value:  Size  Location     Type
  4198 ;;                  1    wreg      unsigned char 
  4199 ;; Registers used:
  4200 ;;		wreg, status,2
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4206 ;;      Params:         0       0       0       0       0
  4207 ;;      Locals:         0       1       0       0       0
  4208 ;;      Temps:          0       0       0       0       0
  4209 ;;      Totals:         0       1       0       0       0
  4210 ;;Total ram usage:        1 bytes
  4211 ;; Hardware stack levels used: 1
  4212 ;; Hardware stack levels required when called: 4
  4213 ;; This function calls:
  4214 ;;		Nothing
  4215 ;; This function is called by:
  4216 ;;		_escribirMemoria
  4217 ;;		_getnoPrimerArranque
  4218 ;;		_initActuadoresSegunMemoria
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222     0E14                     _leerMemoria:	
  4223                           ;psect for function _leerMemoria
  4224                           
  4225                           
  4226                           ;incstack = 0
  4227                           ; Regs used in _leerMemoria: [wreg+status,2]
  4228                           ;leerMemoria@direccion stored from wreg
  4229     0E14  1283               	bcf	3,5	;RP0=0, select bank0
  4230     0E15  1303               	bcf	3,6	;RP1=0, select bank0
  4231     0E16  00AC               	movwf	leerMemoria@direccion
  4232     0E17                     l2839:
  4233                           
  4234                           ;main.c: 271:     EECON1bits.EEPGD = 0;
  4235     0E17  1683               	bsf	3,5	;RP0=1, select bank3
  4236     0E18  1703               	bsf	3,6	;RP1=1, select bank3
  4237     0E19  138C               	bcf	12,7	;volsfr
  4238                           
  4239                           ;main.c: 273:     EECON1bits.WREN = 0;
  4240     0E1A  110C               	bcf	12,2	;volsfr
  4241     0E1B                     l2841:
  4242                           
  4243                           ;main.c: 274:     EEDATH = 0;
  4244     0E1B  1283               	bcf	3,5	;RP0=0, select bank2
  4245     0E1C  1703               	bsf	3,6	;RP1=1, select bank2
  4246     0E1D  018E               	clrf	14	;volatile
  4247                           
  4248                           ;main.c: 275:     EEADRH = 0;
  4249     0E1E  018F               	clrf	15	;volatile
  4250     0E1F                     l2843:
  4251                           
  4252                           ;main.c: 276:     EEADR = direccion;
  4253     0E1F  1283               	bcf	3,5	;RP0=0, select bank0
  4254     0E20  1303               	bcf	3,6	;RP1=0, select bank0
  4255     0E21  082C               	movf	leerMemoria@direccion,w
  4256     0E22  1283               	bcf	3,5	;RP0=0, select bank2
  4257     0E23  1703               	bsf	3,6	;RP1=1, select bank2
  4258     0E24  008D               	movwf	13	;volatile
  4259     0E25                     l2845:
  4260                           
  4261                           ;main.c: 277:     if (EECON1bits.WR == 0)
  4262     0E25  1683               	bsf	3,5	;RP0=1, select bank3
  4263     0E26  1703               	bsf	3,6	;RP1=1, select bank3
  4264     0E27  188C               	btfsc	12,1	;volsfr
  4265     0E28  2E2A               	goto	u2161
  4266     0E29  2E2B               	goto	u2160
  4267     0E2A                     u2161:
  4268     0E2A  2E2C               	goto	l2849
  4269     0E2B                     u2160:
  4270     0E2B                     l2847:
  4271                           
  4272                           ;main.c: 278:         EECON1bits.RD = 1;
  4273     0E2B  140C               	bsf	12,0	;volsfr
  4274     0E2C                     l2849:
  4275                           
  4276                           ;main.c: 280:     return EEDAT;
  4277     0E2C  1283               	bcf	3,5	;RP0=0, select bank2
  4278     0E2D  1703               	bsf	3,6	;RP1=1, select bank2
  4279     0E2E  080C               	movf	12,w	;volatile
  4280     0E2F                     l260:
  4281     0E2F  0008               	return
  4282     0E30                     __end_of_leerMemoria:
  4283                           
  4284                           	psect	text26
  4285     0CF1                     __ptext26:	
  4286 ;; *************** function _i2c_stop *****************
  4287 ;; Defined at:
  4288 ;;		line 23 in file "i2c-v2.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;		None
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;		None
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      void 
  4295 ;; Registers used:
  4296 ;;		status,2, status,0, pclath, cstack
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4302 ;;      Params:         0       0       0       0       0
  4303 ;;      Locals:         0       0       0       0       0
  4304 ;;      Temps:          0       0       0       0       0
  4305 ;;      Totals:         0       0       0       0       0
  4306 ;;Total ram usage:        0 bytes
  4307 ;; Hardware stack levels used: 1
  4308 ;; Hardware stack levels required when called: 5
  4309 ;; This function calls:
  4310 ;;		_wait_MSSP
  4311 ;; This function is called by:
  4312 ;;		_main
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316     0CF1                     _i2c_stop:	
  4317                           ;psect for function _i2c_stop
  4318                           
  4319     0CF1                     l2489:	
  4320                           ;incstack = 0
  4321                           ; Regs used in _i2c_stop: [status,2+status,0+pclath+cstack]
  4322                           
  4323                           
  4324                           ;i2c-v2.c: 25:     SSPCON2bits.PEN = 1;
  4325     0CF1  1683               	bsf	3,5	;RP0=1, select bank1
  4326     0CF2  1303               	bcf	3,6	;RP1=0, select bank1
  4327     0CF3  1511               	bsf	17,2	;volatile
  4328     0CF4                     l2491:
  4329                           
  4330                           ;i2c-v2.c: 26:     wait_MSSP();
  4331     0CF4  120A  158A  24D0  120A  158A  	fcall	_wait_MSSP
  4332     0CF9                     l18:
  4333     0CF9  0008               	return
  4334     0CFA                     __end_of_i2c_stop:
  4335                           
  4336                           	psect	text27
  4337     072A                     __ptext27:	
  4338 ;; *************** function _analisisRuido *****************
  4339 ;; Defined at:
  4340 ;;		line 398 in file "main.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;		None
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;  temp            1   14[BANK0 ] unsigned char 
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  1    wreg      void 
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, btemp+1
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4354 ;;      Params:         0       0       0       0       0
  4355 ;;      Locals:         0       1       0       0       0
  4356 ;;      Temps:          0       2       0       0       0
  4357 ;;      Totals:         0       3       0       0       0
  4358 ;;Total ram usage:        3 bytes
  4359 ;; Hardware stack levels used: 1
  4360 ;; Hardware stack levels required when called: 4
  4361 ;; This function calls:
  4362 ;;		Nothing
  4363 ;; This function is called by:
  4364 ;;		_main
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368     072A                     _analisisRuido:	
  4369                           ;psect for function _analisisRuido
  4370                           
  4371     072A                     l2517:	
  4372                           ;incstack = 0
  4373                           ; Regs used in _analisisRuido: [wreg+status,2+btemp+1]
  4374                           
  4375     072A                     l2519:
  4376                           
  4377                           ;main.c: 403:     if (valor[0] < ruidoBajo) temp = 1;
  4378     072A  1683               	bsf	3,5	;RP0=1, select bank1
  4379     072B  1303               	bcf	3,6	;RP1=0, select bank1
  4380     072C  0821               	movf	(_valor+1)^(0+128),w
  4381     072D  3A80               	xorlw	128
  4382     072E  00FF               	movwf	btemp+1
  4383     072F  3081               	movlw	129
  4384     0730  027F               	subwf	btemp+1,w
  4385     0731  1D03               	skipz
  4386     0732  2F35               	goto	u1765
  4387     0733  3090               	movlw	144
  4388     0734  0220               	subwf	_valor^(0+128),w
  4389     0735                     u1765:
  4390     0735  1803               	skipnc
  4391     0736  2F38               	goto	u1761
  4392     0737  2F39               	goto	u1760
  4393     0738                     u1761:
  4394     0738  2F3E               	goto	l2523
  4395     0739                     u1760:
  4396     0739                     l2521:
  4397     0739  1283               	bcf	3,5	;RP0=0, select bank0
  4398     073A  1303               	bcf	3,6	;RP1=0, select bank0
  4399     073B  01AE               	clrf	analisisRuido@temp
  4400     073C  0AAE               	incf	analisisRuido@temp,f
  4401     073D  2F56               	goto	l308
  4402     073E                     l2523:
  4403     073E  1683               	bsf	3,5	;RP0=1, select bank1
  4404     073F  1303               	bcf	3,6	;RP1=0, select bank1
  4405     0740  0821               	movf	(_valor+1)^(0+128),w
  4406     0741  3A80               	xorlw	128
  4407     0742  00FF               	movwf	btemp+1
  4408     0743  3083               	movlw	131
  4409     0744  027F               	subwf	btemp+1,w
  4410     0745  1D03               	skipz
  4411     0746  2F49               	goto	u1775
  4412     0747  3084               	movlw	132
  4413     0748  0220               	subwf	_valor^(0+128),w
  4414     0749                     u1775:
  4415     0749  1803               	skipnc
  4416     074A  2F4C               	goto	u1771
  4417     074B  2F4D               	goto	u1770
  4418     074C                     u1771:
  4419     074C  2F52               	goto	l2527
  4420     074D                     u1770:
  4421     074D                     l2525:
  4422     074D  3002               	movlw	2
  4423     074E  1283               	bcf	3,5	;RP0=0, select bank0
  4424     074F  1303               	bcf	3,6	;RP1=0, select bank0
  4425     0750  00AE               	movwf	analisisRuido@temp
  4426     0751  2F56               	goto	l308
  4427     0752                     l2527:
  4428     0752  3003               	movlw	3
  4429     0753  1283               	bcf	3,5	;RP0=0, select bank0
  4430     0754  1303               	bcf	3,6	;RP1=0, select bank0
  4431     0755  00AE               	movwf	analisisRuido@temp
  4432     0756                     l308:
  4433                           
  4434                           ;main.c: 407:     if (temp > ruidoMasAlto) ruidoMasAlto = temp;
  4435     0756  0841               	movf	_ruidoMasAlto+1,w
  4436     0757  3A80               	xorlw	128
  4437     0758  00AC               	movwf	??_analisisRuido
  4438     0759  3080               	movlw	128
  4439     075A  022C               	subwf	??_analisisRuido,w
  4440     075B  1D03               	skipz
  4441     075C  2F5F               	goto	u1785
  4442     075D  082E               	movf	analisisRuido@temp,w
  4443     075E  0240               	subwf	_ruidoMasAlto,w
  4444     075F                     u1785:
  4445     075F  1803               	skipnc
  4446     0760  2F62               	goto	u1781
  4447     0761  2F63               	goto	u1780
  4448     0762                     u1781:
  4449     0762  2F6C               	goto	l312
  4450     0763                     u1780:
  4451     0763                     l2529:
  4452     0763  1283               	bcf	3,5	;RP0=0, select bank0
  4453     0764  1303               	bcf	3,6	;RP1=0, select bank0
  4454     0765  082E               	movf	analisisRuido@temp,w
  4455     0766  00AC               	movwf	??_analisisRuido
  4456     0767  01AD               	clrf	??_analisisRuido+1
  4457     0768  082C               	movf	??_analisisRuido,w
  4458     0769  00C0               	movwf	_ruidoMasAlto
  4459     076A  082D               	movf	??_analisisRuido+1,w
  4460     076B  00C1               	movwf	_ruidoMasAlto+1
  4461     076C                     l312:
  4462     076C  0008               	return
  4463     076D                     __end_of_analisisRuido:
  4464                           
  4465                           	psect	text28
  4466     07B0                     __ptext28:	
  4467 ;; *************** function _analisisResto *****************
  4468 ;; Defined at:
  4469 ;;		line 412 in file "main.c"
  4470 ;; Parameters:    Size  Location     Type
  4471 ;;		None
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;		None
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  1    wreg      void 
  4476 ;; Registers used:
  4477 ;;		wreg, status,2, status,0, pclath, cstack
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4483 ;;      Params:         0       0       0       0       0
  4484 ;;      Locals:         0       0       0       0       0
  4485 ;;      Temps:          0       0       0       0       0
  4486 ;;      Totals:         0       0       0       0       0
  4487 ;;Total ram usage:        0 bytes
  4488 ;; Hardware stack levels used: 1
  4489 ;; Hardware stack levels required when called: 7
  4490 ;; This function calls:
  4491 ;;		_getCO2
  4492 ;;		_getLumen
  4493 ;;		_setCO2
  4494 ;;		_setLumen
  4495 ;; This function is called by:
  4496 ;;		_main
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500     07B0                     _analisisResto:	
  4501                           ;psect for function _analisisResto
  4502                           
  4503     07B0                     l2531:	
  4504                           ;incstack = 0
  4505                           ; Regs used in _analisisResto: [wreg+status,2+status,0+pclath+cstack]
  4506                           
  4507                           
  4508                           ;main.c: 414:     if (actualizoLecturas)
  4509     07B0  1283               	bcf	3,5	;RP0=0, select bank0
  4510     07B1  1303               	bcf	3,6	;RP1=0, select bank0
  4511     07B2  083E               	movf	_actualizoLecturas,w
  4512     07B3  043F               	iorwf	_actualizoLecturas+1,w
  4513     07B4  1903               	btfsc	3,2
  4514     07B5  2FB7               	goto	u1791
  4515     07B6  2FB8               	goto	u1790
  4516     07B7                     u1791:
  4517     07B7  2FF0               	goto	l316
  4518     07B8                     u1790:
  4519     07B8                     l2533:
  4520                           
  4521                           ;main.c: 415:     {;main.c: 416:         actualizoLecturas = 0;
  4522     07B8  01BE               	clrf	_actualizoLecturas
  4523     07B9  01BF               	clrf	_actualizoLecturas+1
  4524     07BA                     l2535:
  4525                           
  4526                           ;main.c: 418:         emitoSensores[1] = valor[1];
  4527     07BA  1683               	bsf	3,5	;RP0=1, select bank1
  4528     07BB  1303               	bcf	3,6	;RP1=0, select bank1
  4529     07BC  0823               	movf	((_valor+1)^(0+128)+2),w
  4530     07BD  00B3               	movwf	((_emitoSensores+1)^(0+128)+2)
  4531     07BE  0822               	movf	(_valor^(0+128)+2),w
  4532     07BF  00B2               	movwf	(_emitoSensores^(0+128)+2)
  4533     07C0                     l2537:
  4534                           
  4535                           ;main.c: 419:         emitoSensores[2] = valor[2];
  4536     07C0  0825               	movf	((_valor+1)^(0+128)+4),w
  4537     07C1  00B5               	movwf	((_emitoSensores+1)^(0+128)+4)
  4538     07C2  0824               	movf	(_valor^(0+128)+4),w
  4539     07C3  00B4               	movwf	(_emitoSensores^(0+128)+4)
  4540     07C4                     l2539:
  4541                           
  4542                           ;main.c: 420:         emitoSensores[3] = getCO2();
  4543     07C4  120A  158A  2519  120A  118A  	fcall	_getCO2
  4544     07C9  1283               	bcf	3,5	;RP0=0, select bank0
  4545     07CA  1303               	bcf	3,6	;RP1=0, select bank0
  4546     07CB  082D               	movf	?_getCO2+1,w
  4547     07CC  1683               	bsf	3,5	;RP0=1, select bank1
  4548     07CD  1303               	bcf	3,6	;RP1=0, select bank1
  4549     07CE  00B7               	movwf	((_emitoSensores+1)^(0+128)+6)
  4550     07CF  1283               	bcf	3,5	;RP0=0, select bank0
  4551     07D0  1303               	bcf	3,6	;RP1=0, select bank0
  4552     07D1  082C               	movf	?_getCO2,w
  4553     07D2  1683               	bsf	3,5	;RP0=1, select bank1
  4554     07D3  1303               	bcf	3,6	;RP1=0, select bank1
  4555     07D4  00B6               	movwf	(_emitoSensores^(0+128)+6)
  4556     07D5                     l2541:
  4557                           
  4558                           ;main.c: 421:         emitoSensores[4] = getLumen();
  4559     07D5  120A  158A  2526  120A  118A  	fcall	_getLumen
  4560     07DA  1283               	bcf	3,5	;RP0=0, select bank0
  4561     07DB  1303               	bcf	3,6	;RP1=0, select bank0
  4562     07DC  082D               	movf	?_getLumen+1,w
  4563     07DD  1683               	bsf	3,5	;RP0=1, select bank1
  4564     07DE  1303               	bcf	3,6	;RP1=0, select bank1
  4565     07DF  00B9               	movwf	((_emitoSensores+1)^(0+128)+8)
  4566     07E0  1283               	bcf	3,5	;RP0=0, select bank0
  4567     07E1  1303               	bcf	3,6	;RP1=0, select bank0
  4568     07E2  082C               	movf	?_getLumen,w
  4569     07E3  1683               	bsf	3,5	;RP0=1, select bank1
  4570     07E4  1303               	bcf	3,6	;RP1=0, select bank1
  4571     07E5  00B8               	movwf	(_emitoSensores^(0+128)+8)
  4572     07E6                     l2543:
  4573                           
  4574                           ;main.c: 422:         setCO2();
  4575     07E6  120A  118A  26E5  120A  118A  	fcall	_setCO2
  4576     07EB                     l2545:
  4577                           
  4578                           ;main.c: 423:         setLumen();
  4579     07EB  120A  118A  26A0  120A  118A  	fcall	_setLumen
  4580     07F0                     l316:
  4581     07F0  0008               	return
  4582     07F1                     __end_of_analisisResto:
  4583                           
  4584                           	psect	text29
  4585     06A0                     __ptext29:	
  4586 ;; *************** function _setLumen *****************
  4587 ;; Defined at:
  4588 ;;		line 242 in file "main.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;		None
  4591 ;; Auto vars:     Size  Location     Type
  4592 ;;		None
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  1    wreg      void 
  4595 ;; Registers used:
  4596 ;;		wreg, status,2, status,0, pclath, cstack
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4602 ;;      Params:         0       0       0       0       0
  4603 ;;      Locals:         0       0       0       0       0
  4604 ;;      Temps:          0       2       0       0       0
  4605 ;;      Totals:         0       2       0       0       0
  4606 ;;Total ram usage:        2 bytes
  4607 ;; Hardware stack levels used: 1
  4608 ;; Hardware stack levels required when called: 6
  4609 ;; This function calls:
  4610 ;;		_i2c_read
  4611 ;;		_i2c_rstart
  4612 ;;		_i2c_write
  4613 ;; This function is called by:
  4614 ;;		_analisisResto
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618     06A0                     _setLumen:	
  4619                           ;psect for function _setLumen
  4620                           
  4621     06A0                     l2247:	
  4622                           ;incstack = 0
  4623                           ; Regs used in _setLumen: [wreg+status,2+status,0+pclath+cstack]
  4624                           
  4625                           
  4626                           ;main.c: 244:     i2c_rstart();
  4627     06A0  120A  158A  24E8  120A  118A  	fcall	_i2c_rstart
  4628     06A5                     l2249:
  4629                           
  4630                           ;main.c: 245:     i2c_write(0x21);
  4631     06A5  3021               	movlw	33
  4632     06A6  120A  118A  27F1  120A  118A  	fcall	_i2c_write
  4633     06AB                     l2251:
  4634                           
  4635                           ;main.c: 246:     i2c_write(0x04);
  4636     06AB  3004               	movlw	4
  4637     06AC  120A  118A  27F1  120A  118A  	fcall	_i2c_write
  4638     06B1                     l2253:
  4639                           
  4640                           ;main.c: 247:     valorI2C[1] = i2c_read(1);
  4641     06B1  3001               	movlw	1
  4642     06B2  120A  158A  2668  120A  118A  	fcall	_i2c_read
  4643     06B7  1283               	bcf	3,5	;RP0=0, select bank0
  4644     06B8  1303               	bcf	3,6	;RP1=0, select bank0
  4645     06B9  00AE               	movwf	??_setLumen
  4646     06BA  01AF               	clrf	??_setLumen+1
  4647     06BB  082E               	movf	??_setLumen,w
  4648     06BC  1683               	bsf	3,5	;RP0=1, select bank1
  4649     06BD  1303               	bcf	3,6	;RP1=0, select bank1
  4650     06BE  00A8               	movwf	(_valorI2C^(0+128)+2)
  4651     06BF  1283               	bcf	3,5	;RP0=0, select bank0
  4652     06C0  1303               	bcf	3,6	;RP1=0, select bank0
  4653     06C1  082F               	movf	??_setLumen+1,w
  4654     06C2  1683               	bsf	3,5	;RP0=1, select bank1
  4655     06C3  1303               	bcf	3,6	;RP1=0, select bank1
  4656     06C4  00A9               	movwf	((_valorI2C+1)^(0+128)+2)
  4657     06C5                     l2255:
  4658                           
  4659                           ;main.c: 248:     valorI2C[1] += (i2c_read(1) * 0x10);
  4660     06C5  3001               	movlw	1
  4661     06C6  120A  158A  2668  120A  118A  	fcall	_i2c_read
  4662     06CB  1283               	bcf	3,5	;RP0=0, select bank0
  4663     06CC  1303               	bcf	3,6	;RP1=0, select bank0
  4664     06CD  00AE               	movwf	??_setLumen
  4665     06CE  01AF               	clrf	??_setLumen+1
  4666     06CF  0EAE               	swapf	??_setLumen,f
  4667     06D0  0EAF               	swapf	??_setLumen+1,f
  4668     06D1  30F0               	movlw	240
  4669     06D2  05AF               	andwf	??_setLumen+1,f
  4670     06D3  082E               	movf	??_setLumen,w
  4671     06D4  390F               	andlw	15
  4672     06D5  04AF               	iorwf	??_setLumen+1,f
  4673     06D6  30F0               	movlw	240
  4674     06D7  05AE               	andwf	??_setLumen,f
  4675     06D8  082E               	movf	??_setLumen,w
  4676     06D9  1683               	bsf	3,5	;RP0=1, select bank1
  4677     06DA  1303               	bcf	3,6	;RP1=0, select bank1
  4678     06DB  07A8               	addwf	(_valorI2C^(0+128)+2),f
  4679     06DC  1803               	skipnc
  4680     06DD  0AA9               	incf	((_valorI2C+1)^(0+128)+2),f
  4681     06DE  1283               	bcf	3,5	;RP0=0, select bank0
  4682     06DF  1303               	bcf	3,6	;RP1=0, select bank0
  4683     06E0  082F               	movf	??_setLumen+1,w
  4684     06E1  1683               	bsf	3,5	;RP0=1, select bank1
  4685     06E2  1303               	bcf	3,6	;RP1=0, select bank1
  4686     06E3  07A9               	addwf	((_valorI2C+1)^(0+128)+2),f
  4687     06E4                     l247:
  4688     06E4  0008               	return
  4689     06E5                     __end_of_setLumen:
  4690                           
  4691                           	psect	text30
  4692     06E5                     __ptext30:	
  4693 ;; *************** function _setCO2 *****************
  4694 ;; Defined at:
  4695 ;;		line 256 in file "main.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;		None
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;		None
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  1    wreg      void 
  4702 ;; Registers used:
  4703 ;;		wreg, status,2, status,0, pclath, cstack
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4709 ;;      Params:         0       0       0       0       0
  4710 ;;      Locals:         0       0       0       0       0
  4711 ;;      Temps:          0       2       0       0       0
  4712 ;;      Totals:         0       2       0       0       0
  4713 ;;Total ram usage:        2 bytes
  4714 ;; Hardware stack levels used: 1
  4715 ;; Hardware stack levels required when called: 6
  4716 ;; This function calls:
  4717 ;;		_i2c_read
  4718 ;;		_i2c_rstart
  4719 ;;		_i2c_write
  4720 ;; This function is called by:
  4721 ;;		_analisisResto
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725     06E5                     _setCO2:	
  4726                           ;psect for function _setCO2
  4727                           
  4728     06E5                     l2261:	
  4729                           ;incstack = 0
  4730                           ; Regs used in _setCO2: [wreg+status,2+status,0+pclath+cstack]
  4731                           
  4732                           
  4733                           ;main.c: 258:     i2c_rstart();
  4734     06E5  120A  158A  24E8  120A  118A  	fcall	_i2c_rstart
  4735     06EA                     l2263:
  4736                           
  4737                           ;main.c: 259:     i2c_write(0x5A);
  4738     06EA  305A               	movlw	90
  4739     06EB  120A  118A  27F1  120A  118A  	fcall	_i2c_write
  4740     06F0                     l2265:
  4741                           
  4742                           ;main.c: 260:     i2c_write(0xB5);
  4743     06F0  30B5               	movlw	181
  4744     06F1  120A  118A  27F1  120A  118A  	fcall	_i2c_write
  4745     06F6                     l2267:
  4746                           
  4747                           ;main.c: 261:     valorI2C[0] = i2c_read(1);
  4748     06F6  3001               	movlw	1
  4749     06F7  120A  158A  2668  120A  118A  	fcall	_i2c_read
  4750     06FC  1283               	bcf	3,5	;RP0=0, select bank0
  4751     06FD  1303               	bcf	3,6	;RP1=0, select bank0
  4752     06FE  00AE               	movwf	??_setCO2
  4753     06FF  01AF               	clrf	??_setCO2+1
  4754     0700  082E               	movf	??_setCO2,w
  4755     0701  1683               	bsf	3,5	;RP0=1, select bank1
  4756     0702  1303               	bcf	3,6	;RP1=0, select bank1
  4757     0703  00A6               	movwf	_valorI2C^(0+128)
  4758     0704  1283               	bcf	3,5	;RP0=0, select bank0
  4759     0705  1303               	bcf	3,6	;RP1=0, select bank0
  4760     0706  082F               	movf	??_setCO2+1,w
  4761     0707  1683               	bsf	3,5	;RP0=1, select bank1
  4762     0708  1303               	bcf	3,6	;RP1=0, select bank1
  4763     0709  00A7               	movwf	(_valorI2C+1)^(0+128)
  4764     070A                     l2269:
  4765                           
  4766                           ;main.c: 262:     valorI2C[0] += (i2c_read(1) * 0x10);
  4767     070A  3001               	movlw	1
  4768     070B  120A  158A  2668  120A  118A  	fcall	_i2c_read
  4769     0710  1283               	bcf	3,5	;RP0=0, select bank0
  4770     0711  1303               	bcf	3,6	;RP1=0, select bank0
  4771     0712  00AE               	movwf	??_setCO2
  4772     0713  01AF               	clrf	??_setCO2+1
  4773     0714  0EAE               	swapf	??_setCO2,f
  4774     0715  0EAF               	swapf	??_setCO2+1,f
  4775     0716  30F0               	movlw	240
  4776     0717  05AF               	andwf	??_setCO2+1,f
  4777     0718  082E               	movf	??_setCO2,w
  4778     0719  390F               	andlw	15
  4779     071A  04AF               	iorwf	??_setCO2+1,f
  4780     071B  30F0               	movlw	240
  4781     071C  05AE               	andwf	??_setCO2,f
  4782     071D  082E               	movf	??_setCO2,w
  4783     071E  1683               	bsf	3,5	;RP0=1, select bank1
  4784     071F  1303               	bcf	3,6	;RP1=0, select bank1
  4785     0720  07A6               	addwf	_valorI2C^(0+128),f
  4786     0721  1803               	skipnc
  4787     0722  0AA7               	incf	(_valorI2C+1)^(0+128),f
  4788     0723  1283               	bcf	3,5	;RP0=0, select bank0
  4789     0724  1303               	bcf	3,6	;RP1=0, select bank0
  4790     0725  082F               	movf	??_setCO2+1,w
  4791     0726  1683               	bsf	3,5	;RP0=1, select bank1
  4792     0727  1303               	bcf	3,6	;RP1=0, select bank1
  4793     0728  07A7               	addwf	(_valorI2C+1)^(0+128),f
  4794     0729                     l253:
  4795     0729  0008               	return
  4796     072A                     __end_of_setCO2:
  4797                           
  4798                           	psect	text31
  4799     07F1                     __ptext31:	
  4800 ;; *************** function _i2c_write *****************
  4801 ;; Defined at:
  4802 ;;		line 37 in file "i2c-v2.c"
  4803 ;; Parameters:    Size  Location     Type
  4804 ;;  I2C_data        1    wreg     unsigned char 
  4805 ;; Auto vars:     Size  Location     Type
  4806 ;;  I2C_data        1   12[BANK0 ] unsigned char 
  4807 ;; Return value:  Size  Location     Type
  4808 ;;                  1    wreg      unsigned char 
  4809 ;; Registers used:
  4810 ;;		wreg, status,2, status,0, pclath, cstack
  4811 ;; Tracked objects:
  4812 ;;		On entry : 0/0
  4813 ;;		On exit  : 0/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4816 ;;      Params:         0       0       0       0       0
  4817 ;;      Locals:         0       1       0       0       0
  4818 ;;      Temps:          0       0       0       0       0
  4819 ;;      Totals:         0       1       0       0       0
  4820 ;;Total ram usage:        1 bytes
  4821 ;; Hardware stack levels used: 1
  4822 ;; Hardware stack levels required when called: 5
  4823 ;; This function calls:
  4824 ;;		_wait_MSSP
  4825 ;; This function is called by:
  4826 ;;		_setLumen
  4827 ;;		_setCO2
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831     07F1                     _i2c_write:	
  4832                           ;psect for function _i2c_write
  4833                           
  4834                           
  4835                           ;incstack = 0
  4836                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  4837                           ;i2c_write@I2C_data stored from wreg
  4838     07F1  1283               	bcf	3,5	;RP0=0, select bank0
  4839     07F2  1303               	bcf	3,6	;RP1=0, select bank0
  4840     07F3  00AC               	movwf	i2c_write@I2C_data
  4841     07F4                     l1953:
  4842                           
  4843                           ;i2c-v2.c: 37: unsigned char i2c_write(unsigned char I2C_data);i2c-v2.c: 38: {;i2c-v2.c:
      +                           39:     SSPBUF = I2C_data;
  4844     07F4  082C               	movf	i2c_write@I2C_data,w
  4845     07F5  0093               	movwf	19	;volatile
  4846     07F6                     l1955:
  4847                           
  4848                           ;i2c-v2.c: 40:     wait_MSSP();
  4849     07F6  120A  158A  24D0  120A  118A  	fcall	_wait_MSSP
  4850     07FB                     l1957:
  4851                           
  4852                           ;i2c-v2.c: 41:     return((unsigned char)!SSPCON2bits.ACKSTAT);;	Return value of _i2c_wr
      +                          ite is never used
  4853     07FB  1683               	bsf	3,5	;RP0=1, select bank1
  4854     07FC  1303               	bcf	3,6	;RP1=0, select bank1
  4855     07FD  0811               	movf	17,w	;volatile
  4856     07FE                     l24:
  4857     07FE  0008               	return
  4858     07FF                     __end_of_i2c_write:
  4859                           
  4860                           	psect	text32
  4861     0CE8                     __ptext32:	
  4862 ;; *************** function _i2c_rstart *****************
  4863 ;; Defined at:
  4864 ;;		line 30 in file "i2c-v2.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;		None
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;		None
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  1    wreg      void 
  4871 ;; Registers used:
  4872 ;;		status,2, status,0, pclath, cstack
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4878 ;;      Params:         0       0       0       0       0
  4879 ;;      Locals:         0       0       0       0       0
  4880 ;;      Temps:          0       0       0       0       0
  4881 ;;      Totals:         0       0       0       0       0
  4882 ;;Total ram usage:        0 bytes
  4883 ;; Hardware stack levels used: 1
  4884 ;; Hardware stack levels required when called: 5
  4885 ;; This function calls:
  4886 ;;		_wait_MSSP
  4887 ;; This function is called by:
  4888 ;;		_setLumen
  4889 ;;		_setCO2
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893     0CE8                     _i2c_rstart:	
  4894                           ;psect for function _i2c_rstart
  4895                           
  4896     0CE8                     l1947:	
  4897                           ;incstack = 0
  4898                           ; Regs used in _i2c_rstart: [status,2+status,0+pclath+cstack]
  4899                           
  4900                           
  4901                           ;i2c-v2.c: 32:     SSPCON2bits.RSEN = 1;
  4902     0CE8  1683               	bsf	3,5	;RP0=1, select bank1
  4903     0CE9  1303               	bcf	3,6	;RP1=0, select bank1
  4904     0CEA  1491               	bsf	17,1	;volatile
  4905     0CEB                     l1949:
  4906                           
  4907                           ;i2c-v2.c: 33:     wait_MSSP();
  4908     0CEB  120A  158A  24D0  120A  158A  	fcall	_wait_MSSP
  4909     0CF0                     l21:
  4910     0CF0  0008               	return
  4911     0CF1                     __end_of_i2c_rstart:
  4912                           
  4913                           	psect	text33
  4914     0E68                     __ptext33:	
  4915 ;; *************** function _i2c_read *****************
  4916 ;; Defined at:
  4917 ;;		line 47 in file "i2c-v2.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;  master_ack      1    wreg     unsigned char 
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;  master_ack      1   12[BANK0 ] unsigned char 
  4922 ;;  I2C_data        1   13[BANK0 ] unsigned char 
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  1    wreg      unsigned char 
  4925 ;; Registers used:
  4926 ;;		wreg, status,2, status,0, pclath, cstack
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4932 ;;      Params:         0       0       0       0       0
  4933 ;;      Locals:         0       2       0       0       0
  4934 ;;      Temps:          0       0       0       0       0
  4935 ;;      Totals:         0       2       0       0       0
  4936 ;;Total ram usage:        2 bytes
  4937 ;; Hardware stack levels used: 1
  4938 ;; Hardware stack levels required when called: 5
  4939 ;; This function calls:
  4940 ;;		_wait_MSSP
  4941 ;; This function is called by:
  4942 ;;		_setLumen
  4943 ;;		_setCO2
  4944 ;; This function uses a non-reentrant model
  4945 ;;
  4946                           
  4947     0E68                     _i2c_read:	
  4948                           ;psect for function _i2c_read
  4949                           
  4950                           
  4951                           ;incstack = 0
  4952                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  4953                           ;i2c_read@master_ack stored from wreg
  4954     0E68  1283               	bcf	3,5	;RP0=0, select bank0
  4955     0E69  1303               	bcf	3,6	;RP1=0, select bank0
  4956     0E6A  00AC               	movwf	i2c_read@master_ack
  4957     0E6B                     l1961:
  4958                           
  4959                           ;i2c-v2.c: 47: unsigned char i2c_read(char master_ack);i2c-v2.c: 48: {;i2c-v2.c: 49:    
      +                           unsigned char I2C_data;;i2c-v2.c: 51:     SSPCON2bits.RCEN = 1;
  4960     0E6B  1683               	bsf	3,5	;RP0=1, select bank1
  4961     0E6C  1303               	bcf	3,6	;RP1=0, select bank1
  4962     0E6D  1591               	bsf	17,3	;volatile
  4963     0E6E                     l1963:
  4964                           
  4965                           ;i2c-v2.c: 52:     wait_MSSP();
  4966     0E6E  120A  158A  24D0  120A  158A  	fcall	_wait_MSSP
  4967     0E73                     l1965:
  4968                           
  4969                           ;i2c-v2.c: 54:     I2C_data = SSPBUF;
  4970     0E73  1283               	bcf	3,5	;RP0=0, select bank0
  4971     0E74  1303               	bcf	3,6	;RP1=0, select bank0
  4972     0E75  0813               	movf	19,w	;volatile
  4973     0E76  00AD               	movwf	i2c_read@I2C_data
  4974     0E77                     l1967:
  4975                           
  4976                           ;i2c-v2.c: 56:     if(master_ack)
  4977     0E77  082C               	movf	i2c_read@master_ack,w
  4978     0E78  1903               	btfsc	3,2
  4979     0E79  2E7B               	goto	u1131
  4980     0E7A  2E7C               	goto	u1130
  4981     0E7B                     u1131:
  4982     0E7B  2E80               	goto	l27
  4983     0E7C                     u1130:
  4984     0E7C                     l1969:
  4985                           
  4986                           ;i2c-v2.c: 57:         SSPCON2bits.ACKDT = 0;
  4987     0E7C  1683               	bsf	3,5	;RP0=1, select bank1
  4988     0E7D  1303               	bcf	3,6	;RP1=0, select bank1
  4989     0E7E  1291               	bcf	17,5	;volatile
  4990     0E7F  2E83               	goto	l28
  4991     0E80                     l27:	
  4992                           ;i2c-v2.c: 58:     else
  4993                           
  4994                           
  4995                           ;i2c-v2.c: 59:         SSPCON2bits.ACKDT = 1;
  4996     0E80  1683               	bsf	3,5	;RP0=1, select bank1
  4997     0E81  1303               	bcf	3,6	;RP1=0, select bank1
  4998     0E82  1691               	bsf	17,5	;volatile
  4999     0E83                     l28:
  5000                           
  5001                           ;i2c-v2.c: 61:     SSPCON2bits.ACKEN = 1;
  5002     0E83  1611               	bsf	17,4	;volatile
  5003     0E84                     l1971:
  5004                           
  5005                           ;i2c-v2.c: 62:     wait_MSSP();
  5006     0E84  120A  158A  24D0  120A  158A  	fcall	_wait_MSSP
  5007     0E89                     l1973:
  5008                           
  5009                           ;i2c-v2.c: 63:     return(I2C_data);
  5010     0E89  1283               	bcf	3,5	;RP0=0, select bank0
  5011     0E8A  1303               	bcf	3,6	;RP1=0, select bank0
  5012     0E8B  082D               	movf	i2c_read@I2C_data,w
  5013     0E8C                     l29:
  5014     0E8C  0008               	return
  5015     0E8D                     __end_of_i2c_read:
  5016                           
  5017                           	psect	text34
  5018     0CD0                     __ptext34:	
  5019 ;; *************** function _wait_MSSP *****************
  5020 ;; Defined at:
  5021 ;;		line 8 in file "i2c-v2.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;		None
  5024 ;; Auto vars:     Size  Location     Type
  5025 ;;		None
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  1    wreg      void 
  5028 ;; Registers used:
  5029 ;;		None
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5035 ;;      Params:         0       0       0       0       0
  5036 ;;      Locals:         0       0       0       0       0
  5037 ;;      Temps:          0       0       0       0       0
  5038 ;;      Totals:         0       0       0       0       0
  5039 ;;Total ram usage:        0 bytes
  5040 ;; Hardware stack levels used: 1
  5041 ;; Hardware stack levels required when called: 4
  5042 ;; This function calls:
  5043 ;;		Nothing
  5044 ;; This function is called by:
  5045 ;;		_i2c_start
  5046 ;;		_i2c_stop
  5047 ;;		_i2c_rstart
  5048 ;;		_i2c_write
  5049 ;;		_i2c_read
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053     0CD0                     _wait_MSSP:	
  5054                           ;psect for function _wait_MSSP
  5055                           
  5056     0CD0                     l1913:	
  5057                           ;incstack = 0
  5058                           ; Regs used in _wait_MSSP: []
  5059                           
  5060     0CD0                     l9:	
  5061                           ;i2c-v2.c: 10:     while(!PIR1bits.SSPIF);
  5062                           
  5063     0CD0  1283               	bcf	3,5	;RP0=0, select bank0
  5064     0CD1  1303               	bcf	3,6	;RP1=0, select bank0
  5065     0CD2  1D8C               	btfss	12,3	;volatile
  5066     0CD3  2CD5               	goto	u1061
  5067     0CD4  2CD6               	goto	u1060
  5068     0CD5                     u1061:
  5069     0CD5  2CD0               	goto	l9
  5070     0CD6                     u1060:
  5071     0CD6                     l11:
  5072                           
  5073                           ;i2c-v2.c: 12:     PIR1bits.SSPIF = 0;
  5074     0CD6  118C               	bcf	12,3	;volatile
  5075     0CD7                     l12:	
  5076                           ;i2c-v2.c: 13:     return;
  5077                           
  5078     0CD7  0008               	return
  5079     0CD8                     __end_of_wait_MSSP:
  5080                           
  5081                           	psect	text35
  5082     0D26                     __ptext35:	
  5083 ;; *************** function _getLumen *****************
  5084 ;; Defined at:
  5085 ;;		line 251 in file "main.c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;		None
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;		None
  5090 ;; Return value:  Size  Location     Type
  5091 ;;                  2   12[BANK0 ] int 
  5092 ;; Registers used:
  5093 ;;		wreg
  5094 ;; Tracked objects:
  5095 ;;		On entry : 0/0
  5096 ;;		On exit  : 0/0
  5097 ;;		Unchanged: 0/0
  5098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5099 ;;      Params:         0       2       0       0       0
  5100 ;;      Locals:         0       0       0       0       0
  5101 ;;      Temps:          0       0       0       0       0
  5102 ;;      Totals:         0       2       0       0       0
  5103 ;;Total ram usage:        2 bytes
  5104 ;; Hardware stack levels used: 1
  5105 ;; Hardware stack levels required when called: 4
  5106 ;; This function calls:
  5107 ;;		Nothing
  5108 ;; This function is called by:
  5109 ;;		_analisisResto
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113     0D26                     _getLumen:	
  5114                           ;psect for function _getLumen
  5115                           
  5116     0D26                     l2257:	
  5117                           ;incstack = 0
  5118                           ; Regs used in _getLumen: [wreg]
  5119                           
  5120                           
  5121                           ;main.c: 252:     return valorI2C[1];
  5122     0D26  1683               	bsf	3,5	;RP0=1, select bank1
  5123     0D27  1303               	bcf	3,6	;RP1=0, select bank1
  5124     0D28  0829               	movf	((_valorI2C+1)^(0+128)+2),w
  5125     0D29  1283               	bcf	3,5	;RP0=0, select bank0
  5126     0D2A  1303               	bcf	3,6	;RP1=0, select bank0
  5127     0D2B  00AD               	movwf	?_getLumen+1
  5128     0D2C  1683               	bsf	3,5	;RP0=1, select bank1
  5129     0D2D  1303               	bcf	3,6	;RP1=0, select bank1
  5130     0D2E  0828               	movf	(_valorI2C^(0+128)+2),w
  5131     0D2F  1283               	bcf	3,5	;RP0=0, select bank0
  5132     0D30  1303               	bcf	3,6	;RP1=0, select bank0
  5133     0D31  00AC               	movwf	?_getLumen
  5134     0D32                     l250:
  5135     0D32  0008               	return
  5136     0D33                     __end_of_getLumen:
  5137                           
  5138                           	psect	text36
  5139     0D19                     __ptext36:	
  5140 ;; *************** function _getCO2 *****************
  5141 ;; Defined at:
  5142 ;;		line 265 in file "main.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;		None
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;		None
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  2   12[BANK0 ] int 
  5149 ;; Registers used:
  5150 ;;		wreg
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5156 ;;      Params:         0       2       0       0       0
  5157 ;;      Locals:         0       0       0       0       0
  5158 ;;      Temps:          0       0       0       0       0
  5159 ;;      Totals:         0       2       0       0       0
  5160 ;;Total ram usage:        2 bytes
  5161 ;; Hardware stack levels used: 1
  5162 ;; Hardware stack levels required when called: 4
  5163 ;; This function calls:
  5164 ;;		Nothing
  5165 ;; This function is called by:
  5166 ;;		_analisisResto
  5167 ;; This function uses a non-reentrant model
  5168 ;;
  5169                           
  5170     0D19                     _getCO2:	
  5171                           ;psect for function _getCO2
  5172                           
  5173     0D19                     l2271:	
  5174                           ;incstack = 0
  5175                           ; Regs used in _getCO2: [wreg]
  5176                           
  5177                           
  5178                           ;main.c: 266:     return valorI2C[0];
  5179     0D19  1683               	bsf	3,5	;RP0=1, select bank1
  5180     0D1A  1303               	bcf	3,6	;RP1=0, select bank1
  5181     0D1B  0827               	movf	(_valorI2C+1)^(0+128),w
  5182     0D1C  1283               	bcf	3,5	;RP0=0, select bank0
  5183     0D1D  1303               	bcf	3,6	;RP1=0, select bank0
  5184     0D1E  00AD               	movwf	?_getCO2+1
  5185     0D1F  1683               	bsf	3,5	;RP0=1, select bank1
  5186     0D20  1303               	bcf	3,6	;RP1=0, select bank1
  5187     0D21  0826               	movf	_valorI2C^(0+128),w
  5188     0D22  1283               	bcf	3,5	;RP0=0, select bank0
  5189     0D23  1303               	bcf	3,6	;RP1=0, select bank0
  5190     0D24  00AC               	movwf	?_getCO2
  5191     0D25                     l256:
  5192     0D25  0008               	return
  5193     0D26                     __end_of_getCO2:
  5194                           
  5195                           	psect	text37
  5196     004A                     __ptext37:	
  5197 ;; *************** function _TRAT_INT *****************
  5198 ;; Defined at:
  5199 ;;		line 438 in file "main.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;		None
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;		None
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  1    wreg      void 
  5206 ;; Registers used:
  5207 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5213 ;;      Params:         0       0       0       0       0
  5214 ;;      Locals:         0       0       0       0       0
  5215 ;;      Temps:          0       9       0       0       0
  5216 ;;      Totals:         0       9       0       0       0
  5217 ;;Total ram usage:        9 bytes
  5218 ;; Hardware stack levels used: 1
  5219 ;; Hardware stack levels required when called: 3
  5220 ;; This function calls:
  5221 ;;		i1_setLED
  5222 ;;		i1_setPWM
  5223 ;; This function is called by:
  5224 ;;		Interrupt level 1
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228     004A                     _TRAT_INT:	
  5229                           ;psect for function _TRAT_INT
  5230                           
  5231     004A                     i1l2643:
  5232                           
  5233                           ;main.c: 439:     if (INTCONbits.TMR0IF)
  5234     004A  1D0B               	btfss	11,2	;volatile
  5235     004B  284D               	goto	u188_21
  5236     004C  284E               	goto	u188_20
  5237     004D                     u188_21:
  5238     004D  28AA               	goto	i1l326
  5239     004E                     u188_20:
  5240     004E                     i1l2645:
  5241                           
  5242                           ;main.c: 440:     {;main.c: 442:         TMR0 = 61;
  5243     004E  303D               	movlw	61
  5244     004F  0081               	movwf	1	;volatile
  5245                           
  5246                           ;main.c: 443:         if (copias >= los5msen1sT0) {
  5247     0050  083B               	movf	_copias+1,w
  5248     0051  3A80               	xorlw	128
  5249     0052  00A3               	movwf	??_TRAT_INT
  5250     0053  1683               	bsf	3,5	;RP0=1, select bank1
  5251     0054  1303               	bcf	3,6	;RP1=0, select bank1
  5252     0055  0846               	movf	(_los5msen1sT0+1)^(0+128),w
  5253     0056  3A80               	xorlw	128
  5254     0057  1283               	bcf	3,5	;RP0=0, select bank0
  5255     0058  1303               	bcf	3,6	;RP1=0, select bank0
  5256     0059  0223               	subwf	??_TRAT_INT,w
  5257     005A  1D03               	skipz
  5258     005B  2862               	goto	u189_25
  5259     005C  1683               	bsf	3,5	;RP0=1, select bank1
  5260     005D  1303               	bcf	3,6	;RP1=0, select bank1
  5261     005E  0845               	movf	_los5msen1sT0^(0+128),w
  5262     005F  1283               	bcf	3,5	;RP0=0, select bank0
  5263     0060  1303               	bcf	3,6	;RP1=0, select bank0
  5264     0061  023A               	subwf	_copias,w
  5265     0062                     u189_25:
  5266     0062  1C03               	skipc
  5267     0063  2865               	goto	u189_21
  5268     0064  2866               	goto	u189_20
  5269     0065                     u189_21:
  5270     0065  28A0               	goto	i1l2659
  5271     0066                     u189_20:
  5272     0066                     i1l2647:
  5273                           
  5274                           ;main.c: 445:             copias = 0;
  5275     0066  1283               	bcf	3,5	;RP0=0, select bank0
  5276     0067  1303               	bcf	3,6	;RP1=0, select bank0
  5277     0068  01BA               	clrf	_copias
  5278     0069  01BB               	clrf	_copias+1
  5279     006A                     i1l2649:
  5280                           
  5281                           ;main.c: 446:             copias5s++;
  5282     006A  3001               	movlw	1
  5283     006B  1683               	bsf	3,5	;RP0=1, select bank1
  5284     006C  1303               	bcf	3,6	;RP1=0, select bank1
  5285     006D  07AA               	addwf	_copias5s^(0+128),f
  5286     006E  1803               	skipnc
  5287     006F  0AAB               	incf	(_copias5s+1)^(0+128),f
  5288     0070  3000               	movlw	0
  5289     0071  07AB               	addwf	(_copias5s+1)^(0+128),f
  5290     0072                     i1l2651:
  5291                           
  5292                           ;main.c: 448:             emitoSensores[0] = ruidoMasAlto;
  5293     0072  1283               	bcf	3,5	;RP0=0, select bank0
  5294     0073  1303               	bcf	3,6	;RP1=0, select bank0
  5295     0074  0841               	movf	_ruidoMasAlto+1,w
  5296     0075  1683               	bsf	3,5	;RP0=1, select bank1
  5297     0076  1303               	bcf	3,6	;RP1=0, select bank1
  5298     0077  00B1               	movwf	(_emitoSensores+1)^(0+128)
  5299     0078  1283               	bcf	3,5	;RP0=0, select bank0
  5300     0079  1303               	bcf	3,6	;RP1=0, select bank0
  5301     007A  0840               	movf	_ruidoMasAlto,w
  5302     007B  1683               	bsf	3,5	;RP0=1, select bank1
  5303     007C  1303               	bcf	3,6	;RP1=0, select bank1
  5304     007D  00B0               	movwf	_emitoSensores^(0+128)
  5305                           
  5306                           ;main.c: 449:             ruidoMasAlto = 0;
  5307     007E  1283               	bcf	3,5	;RP0=0, select bank0
  5308     007F  1303               	bcf	3,6	;RP1=0, select bank0
  5309     0080  01C0               	clrf	_ruidoMasAlto
  5310     0081  01C1               	clrf	_ruidoMasAlto+1
  5311     0082                     i1l2653:
  5312                           
  5313                           ;main.c: 453:             if (copias5s >= 5)
  5314     0082  1683               	bsf	3,5	;RP0=1, select bank1
  5315     0083  1303               	bcf	3,6	;RP1=0, select bank1
  5316     0084  082B               	movf	(_copias5s+1)^(0+128),w
  5317     0085  3A80               	xorlw	128
  5318     0086  00FF               	movwf	btemp+1
  5319     0087  3080               	movlw	128
  5320     0088  027F               	subwf	btemp+1,w
  5321     0089  1D03               	skipz
  5322     008A  288D               	goto	u190_25
  5323     008B  3005               	movlw	5
  5324     008C  022A               	subwf	_copias5s^(0+128),w
  5325     008D                     u190_25:
  5326     008D  1C03               	skipc
  5327     008E  2890               	goto	u190_21
  5328     008F  2891               	goto	u190_20
  5329     0090                     u190_21:
  5330     0090  28A8               	goto	i1l2661
  5331     0091                     u190_20:
  5332     0091                     i1l2655:
  5333                           
  5334                           ;main.c: 454:             {;main.c: 455:                 actualizoLecturas = 1;
  5335     0091  3001               	movlw	1
  5336     0092  1283               	bcf	3,5	;RP0=0, select bank0
  5337     0093  1303               	bcf	3,6	;RP1=0, select bank0
  5338     0094  00BE               	movwf	_actualizoLecturas
  5339     0095  3000               	movlw	0
  5340     0096  00BF               	movwf	_actualizoLecturas+1
  5341                           
  5342                           ;main.c: 456:                 leoADCHumedadTemp = 2;
  5343     0097  3002               	movlw	2
  5344     0098  00D3               	movwf	_leoADCHumedadTemp
  5345     0099  3000               	movlw	0
  5346     009A  00D4               	movwf	_leoADCHumedadTemp+1
  5347     009B                     i1l2657:
  5348                           
  5349                           ;main.c: 457:                 copias5s = 0;
  5350     009B  1683               	bsf	3,5	;RP0=1, select bank1
  5351     009C  1303               	bcf	3,6	;RP1=0, select bank1
  5352     009D  01AA               	clrf	_copias5s^(0+128)
  5353     009E  01AB               	clrf	(_copias5s+1)^(0+128)
  5354     009F  28A8               	goto	i1l2661
  5355     00A0                     i1l2659:
  5356                           
  5357                           ;main.c: 461:             copias += 1;
  5358     00A0  3001               	movlw	1
  5359     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  5360     00A2  1303               	bcf	3,6	;RP1=0, select bank0
  5361     00A3  07BA               	addwf	_copias,f
  5362     00A4  1803               	skipnc
  5363     00A5  0ABB               	incf	_copias+1,f
  5364     00A6  3000               	movlw	0
  5365     00A7  07BB               	addwf	_copias+1,f
  5366     00A8                     i1l2661:
  5367                           
  5368                           ;main.c: 463:         INTCONbits.T0IF = 0;
  5369     00A8  110B               	bcf	11,2	;volatile
  5370                           
  5371                           ;main.c: 465:     } else {
  5372     00A9  2A1F               	goto	i1l369
  5373     00AA                     i1l326:
  5374                           
  5375                           ;main.c: 466:         if (PIR1bits.TMR1IF == 1)
  5376     00AA  1C0C               	btfss	12,0	;volatile
  5377     00AB  28AD               	goto	u191_21
  5378     00AC  28AE               	goto	u191_20
  5379     00AD                     u191_21:
  5380     00AD  2916               	goto	i1l331
  5381     00AE                     u191_20:
  5382     00AE                     i1l2663:
  5383                           
  5384                           ;main.c: 467:         {;main.c: 469:             if (copias1 >= los5msen15ms) {
  5385     00AE  083D               	movf	_copias1+1,w
  5386     00AF  3A80               	xorlw	128
  5387     00B0  00A3               	movwf	??_TRAT_INT
  5388     00B1  0850               	movf	_los5msen15ms+1,w
  5389     00B2  3A80               	xorlw	128
  5390     00B3  0223               	subwf	??_TRAT_INT,w
  5391     00B4  1D03               	skipz
  5392     00B5  28B8               	goto	u192_25
  5393     00B6  084F               	movf	_los5msen15ms,w
  5394     00B7  023C               	subwf	_copias1,w
  5395     00B8                     u192_25:
  5396     00B8  1C03               	skipc
  5397     00B9  28BB               	goto	u192_21
  5398     00BA  28BC               	goto	u192_20
  5399     00BB                     u192_21:
  5400     00BB  28D1               	goto	i1l2671
  5401     00BC                     u192_20:
  5402     00BC                     i1l2665:
  5403                           
  5404                           ;main.c: 470:                 copias1 = 0;
  5405     00BC  1283               	bcf	3,5	;RP0=0, select bank0
  5406     00BD  1303               	bcf	3,6	;RP1=0, select bank0
  5407     00BE  01BC               	clrf	_copias1
  5408     00BF  01BD               	clrf	_copias1+1
  5409     00C0                     i1l2667:
  5410                           
  5411                           ;main.c: 473:                 if (leoADCHumedadTemp > 0) ADCON0bits.GO_DONE = 1;
  5412     00C0  0854               	movf	_leoADCHumedadTemp+1,w
  5413     00C1  3A80               	xorlw	128
  5414     00C2  00FF               	movwf	btemp+1
  5415     00C3  3080               	movlw	128
  5416     00C4  027F               	subwf	btemp+1,w
  5417     00C5  1D03               	skipz
  5418     00C6  28C9               	goto	u193_25
  5419     00C7  3001               	movlw	1
  5420     00C8  0253               	subwf	_leoADCHumedadTemp,w
  5421     00C9                     u193_25:
  5422     00C9  1C03               	skipc
  5423     00CA  28CC               	goto	u193_21
  5424     00CB  28CD               	goto	u193_20
  5425     00CC                     u193_21:
  5426     00CC  290D               	goto	i1l334
  5427     00CD                     u193_20:
  5428     00CD                     i1l2669:
  5429     00CD  1283               	bcf	3,5	;RP0=0, select bank0
  5430     00CE  1303               	bcf	3,6	;RP1=0, select bank0
  5431     00CF  149F               	bsf	31,1	;volatile
  5432     00D0  290D               	goto	i1l334
  5433     00D1                     i1l2671:
  5434                           
  5435                           ;main.c: 475:                 copias1 += 1;
  5436     00D1  3001               	movlw	1
  5437     00D2  1283               	bcf	3,5	;RP0=0, select bank0
  5438     00D3  1303               	bcf	3,6	;RP1=0, select bank0
  5439     00D4  07BC               	addwf	_copias1,f
  5440     00D5  1803               	skipnc
  5441     00D6  0ABD               	incf	_copias1+1,f
  5442     00D7  3000               	movlw	0
  5443     00D8  07BD               	addwf	_copias1+1,f
  5444     00D9                     i1l2673:
  5445                           
  5446                           ;main.c: 476:                 if (copias1 == los5msen15ms -1 || (leoADCHumedadTemp > 0 &
      +                          & copias1 == los5msen15ms -2))
  5447     00D9  084F               	movf	_los5msen15ms,w
  5448     00DA  3EFF               	addlw	255
  5449     00DB  00A3               	movwf	??_TRAT_INT
  5450     00DC  0850               	movf	_los5msen15ms+1,w
  5451     00DD  1803               	skipnc
  5452     00DE  3E01               	addlw	1
  5453     00DF  3EFF               	addlw	255
  5454     00E0  00A4               	movwf	??_TRAT_INT+1
  5455     00E1  083D               	movf	_copias1+1,w
  5456     00E2  0624               	xorwf	??_TRAT_INT+1,w
  5457     00E3  1D03               	skipz
  5458     00E4  28E7               	goto	u194_25
  5459     00E5  083C               	movf	_copias1,w
  5460     00E6  0623               	xorwf	??_TRAT_INT,w
  5461     00E7                     u194_25:
  5462     00E7  1903               	skipnz
  5463     00E8  28EA               	goto	u194_21
  5464     00E9  28EB               	goto	u194_20
  5465     00EA                     u194_21:
  5466     00EA  290C               	goto	i1l337
  5467     00EB                     u194_20:
  5468     00EB                     i1l2675:
  5469     00EB  0854               	movf	_leoADCHumedadTemp+1,w
  5470     00EC  3A80               	xorlw	128
  5471     00ED  00FF               	movwf	btemp+1
  5472     00EE  3080               	movlw	128
  5473     00EF  027F               	subwf	btemp+1,w
  5474     00F0  1D03               	skipz
  5475     00F1  28F4               	goto	u195_25
  5476     00F2  3001               	movlw	1
  5477     00F3  0253               	subwf	_leoADCHumedadTemp,w
  5478     00F4                     u195_25:
  5479     00F4  1C03               	skipc
  5480     00F5  28F7               	goto	u195_21
  5481     00F6  28F8               	goto	u195_20
  5482     00F7                     u195_21:
  5483     00F7  290D               	goto	i1l334
  5484     00F8                     u195_20:
  5485     00F8                     i1l2677:
  5486     00F8  1283               	bcf	3,5	;RP0=0, select bank0
  5487     00F9  1303               	bcf	3,6	;RP1=0, select bank0
  5488     00FA  084F               	movf	_los5msen15ms,w
  5489     00FB  3EFE               	addlw	254
  5490     00FC  00A3               	movwf	??_TRAT_INT
  5491     00FD  0850               	movf	_los5msen15ms+1,w
  5492     00FE  1803               	skipnc
  5493     00FF  3E01               	addlw	1
  5494     0100  3EFF               	addlw	255
  5495     0101  00A4               	movwf	??_TRAT_INT+1
  5496     0102  083D               	movf	_copias1+1,w
  5497     0103  0624               	xorwf	??_TRAT_INT+1,w
  5498     0104  1D03               	skipz
  5499     0105  2908               	goto	u196_25
  5500     0106  083C               	movf	_copias1,w
  5501     0107  0623               	xorwf	??_TRAT_INT,w
  5502     0108                     u196_25:
  5503     0108  1D03               	skipz
  5504     0109  290B               	goto	u196_21
  5505     010A  290C               	goto	u196_20
  5506     010B                     u196_21:
  5507     010B  290D               	goto	i1l334
  5508     010C                     u196_20:
  5509     010C                     i1l337:
  5510                           
  5511                           ;main.c: 477:                     ADCON0bits.GO_DONE = 1;
  5512     010C  149F               	bsf	31,1	;volatile
  5513     010D                     i1l334:	
  5514                           ;main.c: 480:             }
  5515                           
  5516                           
  5517                           ;main.c: 481:             ADCON0bits.GO_DONE = 1;
  5518     010D  1283               	bcf	3,5	;RP0=0, select bank0
  5519     010E  1303               	bcf	3,6	;RP1=0, select bank0
  5520     010F  149F               	bsf	31,1	;volatile
  5521     0110                     i1l2679:
  5522                           
  5523                           ;main.c: 482:             TMR1H = eltimer1H;
  5524     0110  087D               	movf	_eltimer1H,w
  5525     0111  008F               	movwf	15	;volatile
  5526                           
  5527                           ;main.c: 483:             TMR1L = eltimer1L;
  5528     0112  085F               	movf	_eltimer1L,w
  5529     0113  008E               	movwf	14	;volatile
  5530     0114                     i1l2681:
  5531                           
  5532                           ;main.c: 484:             PIR1bits.TMR1IF = 0;
  5533     0114  100C               	bcf	12,0	;volatile
  5534                           
  5535                           ;main.c: 485:         } else {
  5536     0115  2A1F               	goto	i1l369
  5537     0116                     i1l331:
  5538                           
  5539                           ;main.c: 486:             if (PIR1bits.TMR2IF)
  5540     0116  1C8C               	btfss	12,1	;volatile
  5541     0117  2919               	goto	u197_21
  5542     0118  291A               	goto	u197_20
  5543     0119                     u197_21:
  5544     0119  2921               	goto	i1l339
  5545     011A                     u197_20:
  5546     011A                     i1l2683:
  5547                           
  5548                           ;main.c: 487:             {;main.c: 489:                 TRISC = 0;
  5549     011A  1683               	bsf	3,5	;RP0=1, select bank1
  5550     011B  1303               	bcf	3,6	;RP1=0, select bank1
  5551     011C  0187               	clrf	7	;volatile
  5552     011D                     i1l2685:
  5553                           
  5554                           ;main.c: 490:                 PIR1bits.TMR2IF = 0;
  5555     011D  1283               	bcf	3,5	;RP0=0, select bank0
  5556     011E  1303               	bcf	3,6	;RP1=0, select bank0
  5557     011F  108C               	bcf	12,1	;volatile
  5558                           
  5559                           ;main.c: 491:             } else {
  5560     0120  2A1F               	goto	i1l369
  5561     0121                     i1l339:
  5562                           
  5563                           ;main.c: 492:                 if (PIR1bits.ADIF) {
  5564     0121  1F0C               	btfss	12,6	;volatile
  5565     0122  2924               	goto	u198_21
  5566     0123  2925               	goto	u198_20
  5567     0124                     u198_21:
  5568     0124  2989               	goto	i1l341
  5569     0125                     u198_20:
  5570     0125                     i1l2687:
  5571                           
  5572                           ;main.c: 494:                     PIR1bits.ADIF = 0;
  5573     0125  130C               	bcf	12,6	;volatile
  5574     0126                     i1l2689:
  5575                           
  5576                           ;main.c: 495:                     valor[anI] = (int) ADRESH * 0x10 + ADRESL;
  5577     0126  081E               	movf	30,w	;volatile
  5578     0127  00A3               	movwf	??_TRAT_INT
  5579     0128  01A4               	clrf	??_TRAT_INT+1
  5580     0129  0EA3               	swapf	??_TRAT_INT,f
  5581     012A  0EA4               	swapf	??_TRAT_INT+1,f
  5582     012B  30F0               	movlw	240
  5583     012C  05A4               	andwf	??_TRAT_INT+1,f
  5584     012D  0823               	movf	??_TRAT_INT,w
  5585     012E  390F               	andlw	15
  5586     012F  04A4               	iorwf	??_TRAT_INT+1,f
  5587     0130  30F0               	movlw	240
  5588     0131  05A3               	andwf	??_TRAT_INT,f
  5589     0132  1683               	bsf	3,5	;RP0=1, select bank1
  5590     0133  1303               	bcf	3,6	;RP1=0, select bank1
  5591     0134  081E               	movf	30,w	;volatile
  5592     0135  1283               	bcf	3,5	;RP0=0, select bank0
  5593     0136  1303               	bcf	3,6	;RP1=0, select bank0
  5594     0137  0723               	addwf	??_TRAT_INT,w
  5595     0138  00A5               	movwf	??_TRAT_INT+2
  5596     0139  3000               	movlw	0
  5597     013A  1803               	skipnc
  5598     013B  3001               	movlw	1
  5599     013C  0724               	addwf	??_TRAT_INT+1,w
  5600     013D  00A6               	movwf	??_TRAT_INT+3
  5601     013E  0855               	movf	_anI,w
  5602     013F  00A7               	movwf	??_TRAT_INT+4
  5603     0140  0727               	addwf	??_TRAT_INT+4,w
  5604     0141  3EA0               	addlw	(low (_valor| 0))& (0+255)
  5605     0142  0084               	movwf	4
  5606     0143  0825               	movf	??_TRAT_INT+2,w
  5607     0144  1383               	bcf	3,7	;select IRP bank1
  5608     0145  0080               	movwf	0
  5609     0146  0A84               	incf	4,f
  5610     0147  0826               	movf	??_TRAT_INT+3,w
  5611     0148  0080               	movwf	0
  5612     0149                     i1l2691:
  5613                           
  5614                           ;main.c: 514:                     if (leoADCHumedadTemp > 0)
  5615     0149  0854               	movf	_leoADCHumedadTemp+1,w
  5616     014A  3A80               	xorlw	128
  5617     014B  00FF               	movwf	btemp+1
  5618     014C  3080               	movlw	128
  5619     014D  027F               	subwf	btemp+1,w
  5620     014E  1D03               	skipz
  5621     014F  2952               	goto	u199_25
  5622     0150  3001               	movlw	1
  5623     0151  0253               	subwf	_leoADCHumedadTemp,w
  5624     0152                     u199_25:
  5625     0152  1C03               	skipc
  5626     0153  2955               	goto	u199_21
  5627     0154  2956               	goto	u199_20
  5628     0155                     u199_21:
  5629     0155  297B               	goto	i1l2701
  5630     0156                     u199_20:
  5631     0156                     i1l2693:
  5632                           
  5633                           ;main.c: 515:                     {;main.c: 516:                         if (copias1 == 
      +                          0)
  5634     0156  1283               	bcf	3,5	;RP0=0, select bank0
  5635     0157  1303               	bcf	3,6	;RP1=0, select bank0
  5636     0158  083C               	movf	_copias1,w
  5637     0159  043D               	iorwf	_copias1+1,w
  5638     015A  1D03               	btfss	3,2
  5639     015B  295D               	goto	u200_21
  5640     015C  295E               	goto	u200_20
  5641     015D                     u200_21:
  5642     015D  2969               	goto	i1l2697
  5643     015E                     u200_20:
  5644     015E                     i1l2695:
  5645                           
  5646                           ;main.c: 517:                         {;main.c: 518:                             leoADCH
      +                          umedadTemp--;
  5647     015E  30FF               	movlw	255
  5648     015F  07D3               	addwf	_leoADCHumedadTemp,f
  5649     0160  1803               	skipnc
  5650     0161  0AD4               	incf	_leoADCHumedadTemp+1,f
  5651     0162  30FF               	movlw	255
  5652     0163  07D4               	addwf	_leoADCHumedadTemp+1,f
  5653                           
  5654                           ;main.c: 519:                             anI = 1;
  5655     0164  3001               	movlw	1
  5656     0165  00D5               	movwf	_anI
  5657     0166  3000               	movlw	0
  5658     0167  00D6               	movwf	_anI+1
  5659                           
  5660                           ;main.c: 520:                         } else if (copias1 == 2)
  5661     0168  297F               	goto	i1l2705
  5662     0169                     i1l2697:
  5663     0169  3002               	movlw	2
  5664     016A  063C               	xorwf	_copias1,w
  5665     016B  043D               	iorwf	_copias1+1,w
  5666     016C  1D03               	btfss	3,2
  5667     016D  296F               	goto	u201_21
  5668     016E  2970               	goto	u201_20
  5669     016F                     u201_21:
  5670     016F  297B               	goto	i1l2701
  5671     0170                     u201_20:
  5672     0170                     i1l2699:
  5673                           
  5674                           ;main.c: 521:                         {;main.c: 522:                             leoADCH
      +                          umedadTemp--;
  5675     0170  30FF               	movlw	255
  5676     0171  07D3               	addwf	_leoADCHumedadTemp,f
  5677     0172  1803               	skipnc
  5678     0173  0AD4               	incf	_leoADCHumedadTemp+1,f
  5679     0174  30FF               	movlw	255
  5680     0175  07D4               	addwf	_leoADCHumedadTemp+1,f
  5681                           
  5682                           ;main.c: 523:                             anI = 2;
  5683     0176  3002               	movlw	2
  5684     0177  00D5               	movwf	_anI
  5685     0178  3000               	movlw	0
  5686     0179  00D6               	movwf	_anI+1
  5687                           
  5688                           ;main.c: 524:                         } else anI = 0;
  5689     017A  297F               	goto	i1l2705
  5690     017B                     i1l2701:
  5691     017B  1283               	bcf	3,5	;RP0=0, select bank0
  5692     017C  1303               	bcf	3,6	;RP1=0, select bank0
  5693     017D  01D5               	clrf	_anI
  5694     017E  01D6               	clrf	_anI+1
  5695     017F                     i1l2705:
  5696                           
  5697                           ;main.c: 527:                     ADCON0bits.CHS = (char) anI;
  5698     017F  0855               	movf	_anI,w
  5699     0180  00A3               	movwf	??_TRAT_INT
  5700     0181  0DA3               	rlf	??_TRAT_INT,f
  5701     0182  0DA3               	rlf	??_TRAT_INT,f
  5702     0183  081F               	movf	31,w	;volatile
  5703     0184  0623               	xorwf	??_TRAT_INT,w
  5704     0185  39C3               	andlw	-61
  5705     0186  0623               	xorwf	??_TRAT_INT,w
  5706     0187  009F               	movwf	31	;volatile
  5707                           
  5708                           ;main.c: 530:                 } else if (PIR2bits.EEIF) {
  5709     0188  2A1F               	goto	i1l369
  5710     0189                     i1l341:
  5711     0189  1E0D               	btfss	13,4	;volatile
  5712     018A  298C               	goto	u202_21
  5713     018B  298D               	goto	u202_20
  5714     018C                     u202_21:
  5715     018C  2993               	goto	i1l349
  5716     018D                     u202_20:
  5717     018D                     i1l2707:
  5718                           
  5719                           ;main.c: 531:                     PIR2bits.EEIF = 0;
  5720     018D  120D               	bcf	13,4	;volatile
  5721     018E                     i1l2709:
  5722                           
  5723                           ;main.c: 532:                     continuoEscribiendo = 1;
  5724     018E  3001               	movlw	1
  5725     018F  00C8               	movwf	_continuoEscribiendo
  5726     0190  3000               	movlw	0
  5727     0191  00C9               	movwf	_continuoEscribiendo+1
  5728                           
  5729                           ;main.c: 535:                 } else if (PIR1bits.TXIF) {
  5730     0192  2A1F               	goto	i1l369
  5731     0193                     i1l349:
  5732     0193  1E0C               	btfss	12,4	;volatile
  5733     0194  2996               	goto	u203_21
  5734     0195  2997               	goto	u203_20
  5735     0196                     u203_21:
  5736     0196  2999               	goto	i1l351
  5737     0197                     u203_20:
  5738     0197                     i1l2711:
  5739                           
  5740                           ;main.c: 536:                     PIR1bits.TXIF = 0;
  5741     0197  120C               	bcf	12,4	;volatile
  5742                           
  5743                           ;main.c: 540:                 } else if (PIR1bits.RCIF) {
  5744     0198  2A1F               	goto	i1l369
  5745     0199                     i1l351:
  5746     0199  1E8C               	btfss	12,5	;volatile
  5747     019A  299C               	goto	u204_21
  5748     019B  299D               	goto	u204_20
  5749     019C                     u204_21:
  5750     019C  2A19               	goto	i1l353
  5751     019D                     u204_20:
  5752     019D                     i1l2713:
  5753                           
  5754                           ;main.c: 541:                     PIR1bits.RCIF = 0;
  5755     019D  128C               	bcf	12,5	;volatile
  5756     019E                     i1l2715:
  5757                           
  5758                           ;main.c: 543:                     if (reciboLED > 0) {
  5759     019E  0847               	movf	_reciboLED+1,w
  5760     019F  3A80               	xorlw	128
  5761     01A0  00FF               	movwf	btemp+1
  5762     01A1  3080               	movlw	128
  5763     01A2  027F               	subwf	btemp+1,w
  5764     01A3  1D03               	skipz
  5765     01A4  29A7               	goto	u205_25
  5766     01A5  3001               	movlw	1
  5767     01A6  0246               	subwf	_reciboLED,w
  5768     01A7                     u205_25:
  5769     01A7  1C03               	skipc
  5770     01A8  29AA               	goto	u205_21
  5771     01A9  29AB               	goto	u205_20
  5772     01AA                     u205_21:
  5773     01AA  29CC               	goto	i1l2725
  5774     01AB                     u205_20:
  5775     01AB                     i1l2717:
  5776                           
  5777                           ;main.c: 544:                         reciboLED--;
  5778     01AB  30FF               	movlw	255
  5779     01AC  1283               	bcf	3,5	;RP0=0, select bank0
  5780     01AD  1303               	bcf	3,6	;RP1=0, select bank0
  5781     01AE  07C6               	addwf	_reciboLED,f
  5782     01AF  1803               	skipnc
  5783     01B0  0AC7               	incf	_reciboLED+1,f
  5784     01B1  30FF               	movlw	255
  5785     01B2  07C7               	addwf	_reciboLED+1,f
  5786     01B3                     i1l2719:
  5787                           
  5788                           ;main.c: 545:                         miLED[reciboLED] = RCREG;
  5789     01B3  0846               	movf	_reciboLED,w
  5790     01B4  3E60               	addlw	(low (_miLED| 0))& (0+255)
  5791     01B5  0084               	movwf	4
  5792     01B6  081A               	movf	26,w	;volatile
  5793     01B7  1383               	bcf	3,7	;select IRP bank0
  5794     01B8  0080               	movwf	0
  5795     01B9                     i1l2721:
  5796                           
  5797                           ;main.c: 546:                         if (reciboLED == 0) setLED(miLED[3], miLED[2], miL
      +                          ED[1], miLED[0]);
  5798     01B9  0846               	movf	_reciboLED,w
  5799     01BA  0447               	iorwf	_reciboLED+1,w
  5800     01BB  1D03               	btfss	3,2
  5801     01BC  29BE               	goto	u206_21
  5802     01BD  29BF               	goto	u206_20
  5803     01BE                     u206_21:
  5804     01BE  2A1F               	goto	i1l350
  5805     01BF                     u206_20:
  5806     01BF                     i1l2723:
  5807     01BF  0862               	movf	_miLED+2,w
  5808     01C0  00A0               	movwf	i1setLED@green
  5809     01C1  0861               	movf	_miLED+1,w
  5810     01C2  00A1               	movwf	i1setLED@blue
  5811     01C3  0860               	movf	_miLED,w
  5812     01C4  00A2               	movwf	i1setLED@luminosidad
  5813     01C5  0863               	movf	_miLED+3,w
  5814     01C6  120A  118A  276D  120A  118A  	fcall	i1_setLED
  5815     01CB  2A1F               	goto	i1l369
  5816     01CC                     i1l2725:
  5817     01CC  1283               	bcf	3,5	;RP0=0, select bank0
  5818     01CD  1303               	bcf	3,6	;RP1=0, select bank0
  5819     01CE  0845               	movf	_reciboPWM+1,w
  5820     01CF  3A80               	xorlw	128
  5821     01D0  00FF               	movwf	btemp+1
  5822     01D1  3080               	movlw	128
  5823     01D2  027F               	subwf	btemp+1,w
  5824     01D3  1D03               	skipz
  5825     01D4  29D7               	goto	u207_25
  5826     01D5  3001               	movlw	1
  5827     01D6  0244               	subwf	_reciboPWM,w
  5828     01D7                     u207_25:
  5829     01D7  1C03               	skipc
  5830     01D8  29DA               	goto	u207_21
  5831     01D9  29DB               	goto	u207_20
  5832     01DA                     u207_21:
  5833     01DA  29FE               	goto	i1l2745
  5834     01DB                     u207_20:
  5835     01DB                     i1l2727:
  5836                           
  5837                           ;main.c: 548:                         reciboPWM = 0;
  5838     01DB  1283               	bcf	3,5	;RP0=0, select bank0
  5839     01DC  1303               	bcf	3,6	;RP1=0, select bank0
  5840     01DD  01C4               	clrf	_reciboPWM
  5841     01DE  01C5               	clrf	_reciboPWM+1
  5842     01DF                     i1l2729:
  5843                           
  5844                           ;main.c: 549:                         setPWM(RCREG);
  5845     01DF  081A               	movf	26,w	;volatile
  5846     01E0  120A  158A  268D  120A  118A  	fcall	i1_setPWM
  5847                           
  5848                           ;main.c: 550:                     } else {
  5849     01E5  2A1F               	goto	i1l369
  5850     01E6                     i1l2731:
  5851                           
  5852                           ;main.c: 553:                                 emitirMisSensores = 1;
  5853     01E6  3001               	movlw	1
  5854     01E7  00C2               	movwf	_emitirMisSensores
  5855     01E8  3000               	movlw	0
  5856     01E9  00C3               	movwf	_emitirMisSensores+1
  5857                           
  5858                           ;main.c: 554:                                 break;
  5859     01EA  2A1F               	goto	i1l369
  5860     01EB                     i1l2733:
  5861                           
  5862                           ;main.c: 556:                                 TXREG = 'B';
  5863     01EB  3042               	movlw	66
  5864     01EC  0099               	movwf	25	;volatile
  5865                           
  5866                           ;main.c: 557:                                 break;
  5867     01ED  2A1F               	goto	i1l369
  5868     01EE                     i1l2735:
  5869                           
  5870                           ;main.c: 559:                                 reciboPWM = 1;
  5871     01EE  3001               	movlw	1
  5872     01EF  00C4               	movwf	_reciboPWM
  5873     01F0  3000               	movlw	0
  5874     01F1  00C5               	movwf	_reciboPWM+1
  5875                           
  5876                           ;main.c: 560:                                 break;
  5877     01F2  2A1F               	goto	i1l369
  5878     01F3                     i1l2737:
  5879                           
  5880                           ;main.c: 563:                                 reciboLED = 4;
  5881     01F3  3004               	movlw	4
  5882     01F4  00C6               	movwf	_reciboLED
  5883     01F5  3000               	movlw	0
  5884     01F6  00C7               	movwf	_reciboLED+1
  5885                           
  5886                           ;main.c: 564:                                 break;
  5887     01F7  2A1F               	goto	i1l369
  5888     01F8                     i1l2739:
  5889                           
  5890                           ;main.c: 567:                                 deboContinuar = 0;
  5891     01F8  01D7               	clrf	_deboContinuar
  5892     01F9  01D8               	clrf	_deboContinuar+1
  5893                           
  5894                           ;main.c: 568:                                 break;
  5895     01FA  2A1F               	goto	i1l369
  5896     01FB                     i1l2741:
  5897                           
  5898                           ;main.c: 570:                                 TXREG = 'E';
  5899     01FB  3045               	movlw	69
  5900     01FC  0099               	movwf	25	;volatile
  5901                           
  5902                           ;main.c: 571:                                 break;
  5903     01FD  2A1F               	goto	i1l369
  5904     01FE                     i1l2745:
  5905     01FE  1283               	bcf	3,5	;RP0=0, select bank0
  5906     01FF  1303               	bcf	3,6	;RP1=0, select bank0
  5907     0200  081A               	movf	26,w	;volatile
  5908     0201  00A3               	movwf	??_TRAT_INT
  5909     0202  01A4               	clrf	??_TRAT_INT+1
  5910                           
  5911                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5912                           ; Switch size 1, requested type "simple"
  5913                           ; Number of cases is 1, Range of values is 0 to 0
  5914                           ; switch strategies available:
  5915                           ; Name         Instructions Cycles
  5916                           ; simple_byte            4     3 (average)
  5917                           ; direct_byte           11     8 (fixed)
  5918                           ; jumptable            260     6 (fixed)
  5919                           ;	Chosen strategy is simple_byte
  5920     0203  0824               	movf	??_TRAT_INT+1,w
  5921     0204  3A00               	xorlw	0	; case 0
  5922     0205  1903               	skipnz
  5923     0206  2A08               	goto	i1l3213
  5924     0207  29FB               	goto	i1l2741
  5925     0208                     i1l3213:
  5926                           
  5927                           ; Switch size 1, requested type "simple"
  5928                           ; Number of cases is 5, Range of values is 97 to 101
  5929                           ; switch strategies available:
  5930                           ; Name         Instructions Cycles
  5931                           ; simple_byte           16     9 (average)
  5932                           ; direct_byte           26    11 (fixed)
  5933                           ; jumptable            263     9 (fixed)
  5934                           ;	Chosen strategy is simple_byte
  5935     0208  0823               	movf	??_TRAT_INT,w
  5936     0209  3A61               	xorlw	97	; case 97
  5937     020A  1903               	skipnz
  5938     020B  29E6               	goto	i1l2731
  5939     020C  3A03               	xorlw	3	; case 98
  5940     020D  1903               	skipnz
  5941     020E  29EB               	goto	i1l2733
  5942     020F  3A01               	xorlw	1	; case 99
  5943     0210  1903               	skipnz
  5944     0211  29EE               	goto	i1l2735
  5945     0212  3A07               	xorlw	7	; case 100
  5946     0213  1903               	skipnz
  5947     0214  29F3               	goto	i1l2737
  5948     0215  3A01               	xorlw	1	; case 101
  5949     0216  1903               	skipnz
  5950     0217  29F8               	goto	i1l2739
  5951     0218  29FB               	goto	i1l2741
  5952     0219                     i1l353:
  5953     0219  1D8C               	btfss	12,3	;volatile
  5954     021A  2A1C               	goto	u208_21
  5955     021B  2A1D               	goto	u208_20
  5956     021C                     u208_21:
  5957     021C  2A1F               	goto	i1l350
  5958     021D                     u208_20:
  5959     021D                     i1l2747:
  5960                           
  5961                           ;main.c: 575:                     PIR1bits.SSPIF = 0;
  5962     021D  118C               	bcf	12,3	;volatile
  5963     021E  2A1F               	goto	i1l369
  5964     021F                     i1l350:
  5965     021F                     i1l369:
  5966     021F  1283               	bcf	3,5	;RP0=0, select bank0
  5967     0220  1303               	bcf	3,6	;RP1=0, select bank0
  5968     0221  082B               	movf	??_TRAT_INT+8,w
  5969     0222  00FF               	movwf	btemp+1
  5970     0223  082A               	movf	??_TRAT_INT+7,w
  5971     0224  008A               	movwf	10
  5972     0225  0829               	movf	??_TRAT_INT+6,w
  5973     0226  0084               	movwf	4
  5974     0227  0E28               	swapf	??_TRAT_INT+5,w
  5975     0228  0083               	movwf	3
  5976     0229  0EFE               	swapf	btemp,f
  5977     022A  0E7E               	swapf	btemp,w
  5978     022B  0009               	retfie
  5979     022C                     __end_of_TRAT_INT:
  5980                           
  5981                           	psect	intentry
  5982     0004                     __pintentry:	
  5983                           ;incstack = 0
  5984                           ; Regs used in _TRAT_INT: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5985                           
  5986     0004                     interrupt_function:
  5987     007E                     saved_w	set	btemp
  5988     0004  00FE               	movwf	btemp
  5989     0005  0E03               	swapf	3,w
  5990     0006  1283               	bcf	3,5	;RP0=0, select bank0
  5991     0007  1303               	bcf	3,6	;RP1=0, select bank0
  5992     0008  00A8               	movwf	??_TRAT_INT+5
  5993     0009  0804               	movf	4,w
  5994     000A  00A9               	movwf	??_TRAT_INT+6
  5995     000B  080A               	movf	10,w
  5996     000C  00AA               	movwf	??_TRAT_INT+7
  5997     000D  087F               	movf	btemp+1,w
  5998     000E  00AB               	movwf	??_TRAT_INT+8
  5999     000F  120A  118A  284A   	ljmp	_TRAT_INT
  6000                           
  6001                           	psect	text38
  6002     0E8D                     __ptext38:	
  6003 ;; *************** function i1_setPWM *****************
  6004 ;; Defined at:
  6005 ;;		line 346 in file "main.c"
  6006 ;; Parameters:    Size  Location     Type
  6007 ;;  porcent         1    wreg     unsigned char 
  6008 ;; Auto vars:     Size  Location     Type
  6009 ;;  porcent         1   11[COMMON] unsigned char 
  6010 ;; Return value:  Size  Location     Type
  6011 ;;                  1    wreg      void 
  6012 ;; Registers used:
  6013 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6014 ;; Tracked objects:
  6015 ;;		On entry : 0/0
  6016 ;;		On exit  : 0/0
  6017 ;;		Unchanged: 0/0
  6018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6019 ;;      Params:         0       0       0       0       0
  6020 ;;      Locals:         1       0       0       0       0
  6021 ;;      Temps:          2       0       0       0       0
  6022 ;;      Totals:         3       0       0       0       0
  6023 ;;Total ram usage:        3 bytes
  6024 ;; Hardware stack levels used: 1
  6025 ;; Hardware stack levels required when called: 2
  6026 ;; This function calls:
  6027 ;;		i1___awdiv
  6028 ;;		i1___bmul
  6029 ;;		i1_escribirMemoria
  6030 ;; This function is called by:
  6031 ;;		_TRAT_INT
  6032 ;; This function uses a non-reentrant model
  6033 ;;
  6034                           
  6035     0E8D                     i1_setPWM:	
  6036                           ;psect for function i1_setPWM
  6037                           
  6038                           
  6039                           ;incstack = 0
  6040                           ; Regs used in i1_setPWM: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6041                           ;i1setPWM@porcent stored from wreg
  6042     0E8D  00FB               	movwf	i1setPWM@porcent
  6043     0E8E                     i1l2619:
  6044                           
  6045                           ;main.c: 347:     porcentaje = (char) (porcent / 100);
  6046     0E8E  3064               	movlw	100
  6047     0E8F  00F0               	movwf	i1___awdiv@divisor
  6048     0E90  3000               	movlw	0
  6049     0E91  00F1               	movwf	i1___awdiv@divisor+1
  6050     0E92  087B               	movf	i1setPWM@porcent,w
  6051     0E93  00F9               	movwf	??i1_setPWM
  6052     0E94  01FA               	clrf	??i1_setPWM+1
  6053     0E95  0879               	movf	??i1_setPWM,w
  6054     0E96  00F2               	movwf	i1___awdiv@dividend
  6055     0E97  087A               	movf	??i1_setPWM+1,w
  6056     0E98  00F3               	movwf	i1___awdiv@dividend+1
  6057     0E99  120A  118A  246D  120A  158A  	fcall	i1___awdiv
  6058     0E9E  0870               	movf	?i1___awdiv,w
  6059     0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  6060     0EA0  1303               	bcf	3,6	;RP1=0, select bank0
  6061     0EA1  00CB               	movwf	_porcentaje
  6062                           
  6063                           ;main.c: 348:     CCPR1L = porcentaje * porcentajeMax;
  6064     0EA2  085C               	movf	_porcentajeMax,w
  6065     0EA3  00F0               	movwf	i1___bmul@multiplicand
  6066     0EA4  084B               	movf	_porcentaje,w
  6067     0EA5  120A  158A  258C  120A  158A  	fcall	i1___bmul
  6068     0EAA  1283               	bcf	3,5	;RP0=0, select bank0
  6069     0EAB  1303               	bcf	3,6	;RP1=0, select bank0
  6070     0EAC  0095               	movwf	21	;volatile
  6071     0EAD                     i1l2621:
  6072                           
  6073                           ;main.c: 349:     escribirMemoria(direccionPWM, porcent);
  6074     0EAD  087B               	movf	i1setPWM@porcent,w
  6075     0EAE  00F1               	movwf	i1escribirMemoria@dato
  6076     0EAF  085E               	movf	_direccionPWM,w
  6077     0EB0  120A  118A  24D4  120A  158A  	fcall	i1_escribirMemoria
  6078     0EB5                     i1l2623:
  6079                           
  6080                           ;main.c: 350:     pPWM = porcent;
  6081     0EB5  087B               	movf	i1setPWM@porcent,w
  6082     0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  6083     0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  6084     0EB8  00CD               	movwf	_pPWM
  6085     0EB9                     i1l290:
  6086     0EB9  0008               	return
  6087     0EBA                     __end_ofi1_setPWM:
  6088                           
  6089                           	psect	text39
  6090     0D8C                     __ptext39:	
  6091 ;; *************** function i1___bmul *****************
  6092 ;; Defined at:
  6093 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  multiplier      1    wreg     unsigned char 
  6096 ;;  multiplicand    1    0[COMMON] unsigned char 
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;  multiplier      1    3[COMMON] unsigned char 
  6099 ;;  product         1    2[COMMON] unsigned char 
  6100 ;; Return value:  Size  Location     Type
  6101 ;;                  1    wreg      unsigned char 
  6102 ;; Registers used:
  6103 ;;		wreg, status,2, status,0
  6104 ;; Tracked objects:
  6105 ;;		On entry : 0/0
  6106 ;;		On exit  : 0/0
  6107 ;;		Unchanged: 0/0
  6108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6109 ;;      Params:         1       0       0       0       0
  6110 ;;      Locals:         2       0       0       0       0
  6111 ;;      Temps:          1       0       0       0       0
  6112 ;;      Totals:         4       0       0       0       0
  6113 ;;Total ram usage:        4 bytes
  6114 ;; Hardware stack levels used: 1
  6115 ;; This function calls:
  6116 ;;		Nothing
  6117 ;; This function is called by:
  6118 ;;		i1_setPWM
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122     0D8C                     i1___bmul:	
  6123                           ;psect for function i1___bmul
  6124                           
  6125                           
  6126                           ;incstack = 0
  6127                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  6128                           ;i1___bmul@multiplier stored from wreg
  6129     0D8C  00F3               	movwf	i1___bmul@multiplier
  6130     0D8D                     i1l2431:
  6131     0D8D  01F2               	clrf	i1___bmul@product
  6132     0D8E                     i1l2433:
  6133     0D8E  1C73               	btfss	i1___bmul@multiplier,0
  6134     0D8F  2D91               	goto	u164_21
  6135     0D90  2D92               	goto	u164_20
  6136     0D91                     u164_21:
  6137     0D91  2D96               	goto	i1l2437
  6138     0D92                     u164_20:
  6139     0D92                     i1l2435:
  6140     0D92  0870               	movf	i1___bmul@multiplicand,w
  6141     0D93  00F1               	movwf	??i1___bmul
  6142     0D94  0871               	movf	??i1___bmul,w
  6143     0D95  07F2               	addwf	i1___bmul@product,f
  6144     0D96                     i1l2437:
  6145     0D96  1003               	clrc
  6146     0D97  0DF0               	rlf	i1___bmul@multiplicand,f
  6147     0D98                     i1l2439:
  6148     0D98  1003               	clrc
  6149     0D99  0CF3               	rrf	i1___bmul@multiplier,f
  6150     0D9A  0873               	movf	i1___bmul@multiplier,w
  6151     0D9B  1D03               	btfss	3,2
  6152     0D9C  2D9E               	goto	u165_21
  6153     0D9D  2D9F               	goto	u165_20
  6154     0D9E                     u165_21:
  6155     0D9E  2D8E               	goto	i1l2433
  6156     0D9F                     u165_20:
  6157     0D9F                     i1l2441:
  6158     0D9F  0872               	movf	i1___bmul@product,w
  6159     0DA0                     i1l521:
  6160     0DA0  0008               	return
  6161     0DA1                     __end_ofi1___bmul:
  6162                           
  6163                           	psect	text40
  6164     046D                     __ptext40:	
  6165 ;; *************** function i1___awdiv *****************
  6166 ;; Defined at:
  6167 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;  divisor         2    0[COMMON] int 
  6170 ;;  dividend        2    2[COMMON] int 
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;  quotient        2    7[COMMON] int 
  6173 ;;  sign            1    6[COMMON] unsigned char 
  6174 ;;  counter         1    5[COMMON] unsigned char 
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  2    0[COMMON] int 
  6177 ;; Registers used:
  6178 ;;		wreg, status,2, status,0
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6184 ;;      Params:         4       0       0       0       0
  6185 ;;      Locals:         4       0       0       0       0
  6186 ;;      Temps:          1       0       0       0       0
  6187 ;;      Totals:         9       0       0       0       0
  6188 ;;Total ram usage:        9 bytes
  6189 ;; Hardware stack levels used: 1
  6190 ;; This function calls:
  6191 ;;		Nothing
  6192 ;; This function is called by:
  6193 ;;		i1_setPWM
  6194 ;; This function uses a non-reentrant model
  6195 ;;
  6196                           
  6197     046D                     i1___awdiv:	
  6198                           ;psect for function i1___awdiv
  6199                           
  6200     046D                     i1l2445:	
  6201                           ;incstack = 0
  6202                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  6203                           
  6204     046D  01F6               	clrf	i1___awdiv@sign
  6205     046E                     i1l2447:
  6206     046E  1FF1               	btfss	i1___awdiv@divisor+1,7
  6207     046F  2C71               	goto	u166_21
  6208     0470  2C72               	goto	u166_20
  6209     0471                     u166_21:
  6210     0471  2C79               	goto	i1l2453
  6211     0472                     u166_20:
  6212     0472                     i1l2449:
  6213     0472  09F0               	comf	i1___awdiv@divisor,f
  6214     0473  09F1               	comf	i1___awdiv@divisor+1,f
  6215     0474  0AF0               	incf	i1___awdiv@divisor,f
  6216     0475  1903               	skipnz
  6217     0476  0AF1               	incf	i1___awdiv@divisor+1,f
  6218     0477                     i1l2451:
  6219     0477  01F6               	clrf	i1___awdiv@sign
  6220     0478  0AF6               	incf	i1___awdiv@sign,f
  6221     0479                     i1l2453:
  6222     0479  1FF3               	btfss	i1___awdiv@dividend+1,7
  6223     047A  2C7C               	goto	u167_21
  6224     047B  2C7D               	goto	u167_20
  6225     047C                     u167_21:
  6226     047C  2C86               	goto	i1l2459
  6227     047D                     u167_20:
  6228     047D                     i1l2455:
  6229     047D  09F2               	comf	i1___awdiv@dividend,f
  6230     047E  09F3               	comf	i1___awdiv@dividend+1,f
  6231     047F  0AF2               	incf	i1___awdiv@dividend,f
  6232     0480  1903               	skipnz
  6233     0481  0AF3               	incf	i1___awdiv@dividend+1,f
  6234     0482                     i1l2457:
  6235     0482  3001               	movlw	1
  6236     0483  00F4               	movwf	??i1___awdiv
  6237     0484  0874               	movf	??i1___awdiv,w
  6238     0485  06F6               	xorwf	i1___awdiv@sign,f
  6239     0486                     i1l2459:
  6240     0486  01F7               	clrf	i1___awdiv@quotient
  6241     0487  01F8               	clrf	i1___awdiv@quotient+1
  6242     0488                     i1l2461:
  6243     0488  0870               	movf	i1___awdiv@divisor,w
  6244     0489  0471               	iorwf	i1___awdiv@divisor+1,w
  6245     048A  1903               	btfsc	3,2
  6246     048B  2C8D               	goto	u168_21
  6247     048C  2C8E               	goto	u168_20
  6248     048D                     u168_21:
  6249     048D  2CC5               	goto	i1l2481
  6250     048E                     u168_20:
  6251     048E                     i1l2463:
  6252     048E  01F5               	clrf	i1___awdiv@counter
  6253     048F  0AF5               	incf	i1___awdiv@counter,f
  6254     0490  2C9C               	goto	i1l2469
  6255     0491                     i1l2465:
  6256     0491  3001               	movlw	1
  6257     0492                     u169_25:
  6258     0492  1003               	clrc
  6259     0493  0DF0               	rlf	i1___awdiv@divisor,f
  6260     0494  0DF1               	rlf	i1___awdiv@divisor+1,f
  6261     0495  3EFF               	addlw	-1
  6262     0496  1D03               	skipz
  6263     0497  2C92               	goto	u169_25
  6264     0498                     i1l2467:
  6265     0498  3001               	movlw	1
  6266     0499  00F4               	movwf	??i1___awdiv
  6267     049A  0874               	movf	??i1___awdiv,w
  6268     049B  07F5               	addwf	i1___awdiv@counter,f
  6269     049C                     i1l2469:
  6270     049C  1FF1               	btfss	i1___awdiv@divisor+1,7
  6271     049D  2C9F               	goto	u170_21
  6272     049E  2CA0               	goto	u170_20
  6273     049F                     u170_21:
  6274     049F  2C91               	goto	i1l2465
  6275     04A0                     u170_20:
  6276     04A0                     i1l2471:
  6277     04A0  3001               	movlw	1
  6278     04A1                     u171_25:
  6279     04A1  1003               	clrc
  6280     04A2  0DF7               	rlf	i1___awdiv@quotient,f
  6281     04A3  0DF8               	rlf	i1___awdiv@quotient+1,f
  6282     04A4  3EFF               	addlw	-1
  6283     04A5  1D03               	skipz
  6284     04A6  2CA1               	goto	u171_25
  6285     04A7  0871               	movf	i1___awdiv@divisor+1,w
  6286     04A8  0273               	subwf	i1___awdiv@dividend+1,w
  6287     04A9  1D03               	skipz
  6288     04AA  2CAD               	goto	u172_25
  6289     04AB  0870               	movf	i1___awdiv@divisor,w
  6290     04AC  0272               	subwf	i1___awdiv@dividend,w
  6291     04AD                     u172_25:
  6292     04AD  1C03               	skipc
  6293     04AE  2CB0               	goto	u172_21
  6294     04AF  2CB1               	goto	u172_20
  6295     04B0                     u172_21:
  6296     04B0  2CB8               	goto	i1l2477
  6297     04B1                     u172_20:
  6298     04B1                     i1l2473:
  6299     04B1  0870               	movf	i1___awdiv@divisor,w
  6300     04B2  02F2               	subwf	i1___awdiv@dividend,f
  6301     04B3  0871               	movf	i1___awdiv@divisor+1,w
  6302     04B4  1C03               	skipc
  6303     04B5  03F3               	decf	i1___awdiv@dividend+1,f
  6304     04B6  02F3               	subwf	i1___awdiv@dividend+1,f
  6305     04B7                     i1l2475:
  6306     04B7  1477               	bsf	i1___awdiv@quotient,0
  6307     04B8                     i1l2477:
  6308     04B8  3001               	movlw	1
  6309     04B9                     u173_25:
  6310     04B9  1003               	clrc
  6311     04BA  0CF1               	rrf	i1___awdiv@divisor+1,f
  6312     04BB  0CF0               	rrf	i1___awdiv@divisor,f
  6313     04BC  3EFF               	addlw	-1
  6314     04BD  1D03               	skipz
  6315     04BE  2CB9               	goto	u173_25
  6316     04BF                     i1l2479:
  6317     04BF  3001               	movlw	1
  6318     04C0  02F5               	subwf	i1___awdiv@counter,f
  6319     04C1  1D03               	btfss	3,2
  6320     04C2  2CC4               	goto	u174_21
  6321     04C3  2CC5               	goto	u174_20
  6322     04C4                     u174_21:
  6323     04C4  2CA0               	goto	i1l2471
  6324     04C5                     u174_20:
  6325     04C5                     i1l2481:
  6326     04C5  0876               	movf	i1___awdiv@sign,w
  6327     04C6  1903               	btfsc	3,2
  6328     04C7  2CC9               	goto	u175_21
  6329     04C8  2CCA               	goto	u175_20
  6330     04C9                     u175_21:
  6331     04C9  2CCF               	goto	i1l2485
  6332     04CA                     u175_20:
  6333     04CA                     i1l2483:
  6334     04CA  09F7               	comf	i1___awdiv@quotient,f
  6335     04CB  09F8               	comf	i1___awdiv@quotient+1,f
  6336     04CC  0AF7               	incf	i1___awdiv@quotient,f
  6337     04CD  1903               	skipnz
  6338     04CE  0AF8               	incf	i1___awdiv@quotient+1,f
  6339     04CF                     i1l2485:
  6340     04CF  0878               	movf	i1___awdiv@quotient+1,w
  6341     04D0  00F1               	movwf	?i1___awdiv+1
  6342     04D1  0877               	movf	i1___awdiv@quotient,w
  6343     04D2  00F0               	movwf	?i1___awdiv
  6344     04D3                     i1l648:
  6345     04D3  0008               	return
  6346     04D4                     __end_ofi1___awdiv:
  6347                           
  6348                           	psect	text41
  6349     076D                     __ptext41:	
  6350 ;; *************** function i1_setLED *****************
  6351 ;; Defined at:
  6352 ;;		line 378 in file "main.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;  red             1    wreg     unsigned char 
  6355 ;;  green           1    0[BANK0 ] unsigned char 
  6356 ;;  blue            1    1[BANK0 ] unsigned char 
  6357 ;;  luminosidad     1    2[BANK0 ] unsigned char 
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;  red             1   12[COMMON] unsigned char 
  6360 ;; Return value:  Size  Location     Type
  6361 ;;                  1    wreg      void 
  6362 ;; Registers used:
  6363 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6364 ;; Tracked objects:
  6365 ;;		On entry : 0/0
  6366 ;;		On exit  : 0/0
  6367 ;;		Unchanged: 0/0
  6368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6369 ;;      Params:         0       3       0       0       0
  6370 ;;      Locals:         1       0       0       0       0
  6371 ;;      Temps:          0       0       0       0       0
  6372 ;;      Totals:         1       3       0       0       0
  6373 ;;Total ram usage:        4 bytes
  6374 ;; Hardware stack levels used: 1
  6375 ;; Hardware stack levels required when called: 2
  6376 ;; This function calls:
  6377 ;;		i1_cosasSPI
  6378 ;;		i1_escribirMemoria
  6379 ;; This function is called by:
  6380 ;;		_TRAT_INT
  6381 ;; This function uses a non-reentrant model
  6382 ;;
  6383                           
  6384     076D                     i1_setLED:	
  6385                           ;psect for function i1_setLED
  6386                           
  6387                           
  6388                           ;incstack = 0
  6389                           ; Regs used in i1_setLED: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6390                           ;i1setLED@red stored from wreg
  6391     076D  00FC               	movwf	i1setLED@red
  6392     076E                     i1l2625:
  6393                           
  6394                           ;main.c: 380:     cosasSPI(red, green, blue, luminosidad);
  6395     076E  1283               	bcf	3,5	;RP0=0, select bank0
  6396     076F  1303               	bcf	3,6	;RP1=0, select bank0
  6397     0770  0820               	movf	i1setLED@green,w
  6398     0771  00F5               	movwf	i1cosasSPI@verd
  6399     0772  0821               	movf	i1setLED@blue,w
  6400     0773  00F6               	movwf	i1cosasSPI@azu
  6401     0774  0822               	movf	i1setLED@luminosidad,w
  6402     0775  00F7               	movwf	i1cosasSPI@lumi
  6403     0776  087C               	movf	i1setLED@red,w
  6404     0777  120A  118A  259D  120A  118A  	fcall	i1_cosasSPI
  6405     077C                     i1l2627:
  6406                           
  6407                           ;main.c: 382:     miLED[0] = red;
  6408     077C  087C               	movf	i1setLED@red,w
  6409     077D  1283               	bcf	3,5	;RP0=0, select bank0
  6410     077E  1303               	bcf	3,6	;RP1=0, select bank0
  6411     077F  00E0               	movwf	_miLED
  6412     0780                     i1l2629:
  6413                           
  6414                           ;main.c: 383:     miLED[1] = green;
  6415     0780  0820               	movf	i1setLED@green,w
  6416     0781  00E1               	movwf	_miLED+1
  6417     0782                     i1l2631:
  6418                           
  6419                           ;main.c: 384:     miLED[2] = blue;
  6420     0782  0821               	movf	i1setLED@blue,w
  6421     0783  00E2               	movwf	_miLED+2
  6422     0784                     i1l2633:
  6423                           
  6424                           ;main.c: 385:     miLED[3] = luminosidad;
  6425     0784  0822               	movf	i1setLED@luminosidad,w
  6426     0785  00E3               	movwf	_miLED+3
  6427     0786                     i1l2635:
  6428                           
  6429                           ;main.c: 387:     escribirMemoria(direccionLED, miLED[0]);
  6430     0786  0860               	movf	_miLED,w
  6431     0787  00F1               	movwf	i1escribirMemoria@dato
  6432     0788  085D               	movf	_direccionLED,w
  6433     0789  120A  118A  24D4  120A  118A  	fcall	i1_escribirMemoria
  6434     078E                     i1l2637:
  6435                           
  6436                           ;main.c: 388:     escribirMemoria(direccionLED + 1 * sizeof(char), miLED[1]);
  6437     078E  1283               	bcf	3,5	;RP0=0, select bank0
  6438     078F  1303               	bcf	3,6	;RP1=0, select bank0
  6439     0790  0861               	movf	_miLED+1,w
  6440     0791  00F1               	movwf	i1escribirMemoria@dato
  6441     0792  085D               	movf	_direccionLED,w
  6442     0793  3E01               	addlw	1
  6443     0794  120A  118A  24D4  120A  118A  	fcall	i1_escribirMemoria
  6444     0799                     i1l2639:
  6445                           
  6446                           ;main.c: 389:     escribirMemoria(direccionLED + 2 * sizeof(char), miLED[2]);
  6447     0799  1283               	bcf	3,5	;RP0=0, select bank0
  6448     079A  1303               	bcf	3,6	;RP1=0, select bank0
  6449     079B  0862               	movf	_miLED+2,w
  6450     079C  00F1               	movwf	i1escribirMemoria@dato
  6451     079D  085D               	movf	_direccionLED,w
  6452     079E  3E02               	addlw	2
  6453     079F  120A  118A  24D4  120A  118A  	fcall	i1_escribirMemoria
  6454     07A4                     i1l2641:
  6455                           
  6456                           ;main.c: 390:     escribirMemoria(direccionLED + 3 * sizeof(char), miLED[3]);
  6457     07A4  1283               	bcf	3,5	;RP0=0, select bank0
  6458     07A5  1303               	bcf	3,6	;RP1=0, select bank0
  6459     07A6  0863               	movf	_miLED+3,w
  6460     07A7  00F1               	movwf	i1escribirMemoria@dato
  6461     07A8  085D               	movf	_direccionLED,w
  6462     07A9  3E03               	addlw	3
  6463     07AA  120A  118A  24D4  120A  118A  	fcall	i1_escribirMemoria
  6464     07AF                     i1l301:
  6465     07AF  0008               	return
  6466     07B0                     __end_ofi1_setLED:
  6467                           
  6468                           	psect	text42
  6469     04D4                     __ptext42:	
  6470 ;; *************** function i1_escribirMemoria *****************
  6471 ;; Defined at:
  6472 ;;		line 283 in file "main.c"
  6473 ;; Parameters:    Size  Location     Type
  6474 ;;  direccion       1    wreg     unsigned char 
  6475 ;;  dato            1    1[COMMON] unsigned char 
  6476 ;; Auto vars:     Size  Location     Type
  6477 ;;  direccion       1    4[COMMON] unsigned char 
  6478 ;;  contador        2    5[COMMON] int 
  6479 ;;  confirmado      2    2[COMMON] int 
  6480 ;;  valorSal        2    0        int 
  6481 ;; Return value:  Size  Location     Type
  6482 ;;                  2    1[COMMON] int 
  6483 ;; Registers used:
  6484 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6485 ;; Tracked objects:
  6486 ;;		On entry : 0/0
  6487 ;;		On exit  : 0/0
  6488 ;;		Unchanged: 0/0
  6489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6490 ;;      Params:         1       0       0       0       0
  6491 ;;      Locals:         5       0       0       0       0
  6492 ;;      Temps:          0       0       0       0       0
  6493 ;;      Totals:         6       0       0       0       0
  6494 ;;Total ram usage:        6 bytes
  6495 ;; Hardware stack levels used: 1
  6496 ;; Hardware stack levels required when called: 1
  6497 ;; This function calls:
  6498 ;;		i1_leerMemoria
  6499 ;; This function is called by:
  6500 ;;		i1_setPWM
  6501 ;;		i1_setLED
  6502 ;; This function uses a non-reentrant model
  6503 ;;
  6504                           
  6505     04D4                     i1_escribirMemoria:	
  6506                           ;psect for function i1_escribirMemoria
  6507                           
  6508                           
  6509                           ;incstack = 0
  6510                           ; Regs used in i1_escribirMemoria: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6511                           ;i1escribirMemoria@direccion stored from wreg
  6512     04D4  00F4               	movwf	i1escribirMemoria@direccion
  6513     04D5                     i1l2367:
  6514                           
  6515                           ;main.c: 284:     int valorSal;;main.c: 285:     EECON1bits.EEPGD = 0;
  6516     04D5  1683               	bsf	3,5	;RP0=1, select bank3
  6517     04D6  1703               	bsf	3,6	;RP1=1, select bank3
  6518     04D7  138C               	bcf	12,7	;volsfr
  6519                           
  6520                           ;main.c: 287:     EECON1bits.WREN = 1;
  6521     04D8  150C               	bsf	12,2	;volsfr
  6522     04D9                     i1l2369:
  6523                           
  6524                           ;main.c: 288:     EEADRH = 0;
  6525     04D9  1283               	bcf	3,5	;RP0=0, select bank2
  6526     04DA  1703               	bsf	3,6	;RP1=1, select bank2
  6527     04DB  018F               	clrf	15	;volatile
  6528     04DC                     i1l2371:
  6529                           
  6530                           ;main.c: 289:     EEADR = direccion;
  6531     04DC  0874               	movf	i1escribirMemoria@direccion,w
  6532     04DD  008D               	movwf	13	;volatile
  6533     04DE                     i1l2373:
  6534                           
  6535                           ;main.c: 290:     if (EECON1bits.RD == 0) {
  6536     04DE  1683               	bsf	3,5	;RP0=1, select bank3
  6537     04DF  1703               	bsf	3,6	;RP1=1, select bank3
  6538     04E0  180C               	btfsc	12,0	;volsfr
  6539     04E1  2CE3               	goto	u157_21
  6540     04E2  2CE4               	goto	u157_20
  6541     04E3                     u157_21:
  6542     04E3  2D38               	goto	i1l2403
  6543     04E4                     u157_20:
  6544     04E4                     i1l2375:
  6545                           
  6546                           ;main.c: 291:         int contador = 0;
  6547     04E4  01F5               	clrf	i1escribirMemoria@contador
  6548     04E5  01F6               	clrf	i1escribirMemoria@contador+1
  6549                           
  6550                           ;main.c: 292:         int confirmado = 0;
  6551     04E6  01F2               	clrf	i1escribirMemoria@confirmado
  6552     04E7  01F3               	clrf	i1escribirMemoria@confirmado+1
  6553                           
  6554                           ;main.c: 293:         while (contador < 10 && confirmado == 0) {
  6555     04E8  2D16               	goto	i1l2393
  6556     04E9                     i1l265:
  6557                           
  6558                           ;main.c: 294:             INTCONbits.GIE = 0;
  6559     04E9  138B               	bcf	11,7	;volatile
  6560     04EA                     i1l2377:
  6561                           
  6562                           ;main.c: 295:             EEDAT = dato;
  6563     04EA  0871               	movf	i1escribirMemoria@dato,w
  6564     04EB  1283               	bcf	3,5	;RP0=0, select bank2
  6565     04EC  1703               	bsf	3,6	;RP1=1, select bank2
  6566     04ED  008C               	movwf	12	;volatile
  6567                           
  6568                           ;main.c: 296:             EECON2 = 0x55;
  6569     04EE  3055               	movlw	85
  6570     04EF  1683               	bsf	3,5	;RP0=1, select bank3
  6571     04F0  1703               	bsf	3,6	;RP1=1, select bank3
  6572     04F1  008D               	movwf	13	;volsfr
  6573                           
  6574                           ;main.c: 297:             EECON2 = 0xAA;
  6575     04F2  30AA               	movlw	170
  6576     04F3  008D               	movwf	13	;volsfr
  6577     04F4                     i1l2379:
  6578                           
  6579                           ;main.c: 298:             EECON1bits.WR = 1;
  6580     04F4  148C               	bsf	12,1	;volsfr
  6581     04F5                     i1l2381:
  6582                           
  6583                           ;main.c: 299:             INTCONbits.GIE = 1;
  6584     04F5  178B               	bsf	11,7	;volatile
  6585     04F6                     i1l2383:	
  6586                           ;main.c: 300:             while (!continuoEscribiendo);
  6587                           
  6588     04F6  1283               	bcf	3,5	;RP0=0, select bank0
  6589     04F7  1303               	bcf	3,6	;RP1=0, select bank0
  6590     04F8  0848               	movf	_continuoEscribiendo,w
  6591     04F9  0449               	iorwf	_continuoEscribiendo+1,w
  6592     04FA  1903               	btfsc	3,2
  6593     04FB  2CFD               	goto	u158_21
  6594     04FC  2CFE               	goto	u158_20
  6595     04FD                     u158_21:
  6596     04FD  2CF6               	goto	i1l2383
  6597     04FE                     u158_20:
  6598     04FE                     i1l2385:
  6599                           
  6600                           ;main.c: 301:             continuoEscribiendo = 0;
  6601     04FE  01C8               	clrf	_continuoEscribiendo
  6602     04FF  01C9               	clrf	_continuoEscribiendo+1
  6603     0500                     i1l2387:
  6604                           
  6605                           ;main.c: 302:             if (leerMemoria(direccion) == dato)
  6606     0500  0874               	movf	i1escribirMemoria@direccion,w
  6607     0501  120A  158A  25B6  120A  118A  	fcall	i1_leerMemoria
  6608     0506  0671               	xorwf	i1escribirMemoria@dato,w
  6609     0507  1D03               	skipz
  6610     0508  2D0A               	goto	u159_21
  6611     0509  2D0B               	goto	u159_20
  6612     050A                     u159_21:
  6613     050A  2D10               	goto	i1l2391
  6614     050B                     u159_20:
  6615     050B                     i1l2389:
  6616                           
  6617                           ;main.c: 303:                 confirmado = 1;
  6618     050B  3001               	movlw	1
  6619     050C  00F2               	movwf	i1escribirMemoria@confirmado
  6620     050D  3000               	movlw	0
  6621     050E  00F3               	movwf	i1escribirMemoria@confirmado+1
  6622     050F  2D16               	goto	i1l2393
  6623     0510                     i1l2391:
  6624                           
  6625                           ;main.c: 305:                 contador++;
  6626     0510  3001               	movlw	1
  6627     0511  07F5               	addwf	i1escribirMemoria@contador,f
  6628     0512  1803               	skipnc
  6629     0513  0AF6               	incf	i1escribirMemoria@contador+1,f
  6630     0514  3000               	movlw	0
  6631     0515  07F6               	addwf	i1escribirMemoria@contador+1,f
  6632     0516                     i1l2393:
  6633                           
  6634                           ;main.c: 293:         while (contador < 10 && confirmado == 0) {
  6635     0516  0876               	movf	i1escribirMemoria@contador+1,w
  6636     0517  3A80               	xorlw	128
  6637     0518  00FF               	movwf	btemp+1
  6638     0519  3080               	movlw	128
  6639     051A  027F               	subwf	btemp+1,w
  6640     051B  1D03               	skipz
  6641     051C  2D1F               	goto	u160_25
  6642     051D  300A               	movlw	10
  6643     051E  0275               	subwf	i1escribirMemoria@contador,w
  6644     051F                     u160_25:
  6645     051F  1803               	skipnc
  6646     0520  2D22               	goto	u160_21
  6647     0521  2D23               	goto	u160_20
  6648     0522                     u160_21:
  6649     0522  2D29               	goto	i1l2397
  6650     0523                     u160_20:
  6651     0523                     i1l2395:
  6652     0523  0872               	movf	i1escribirMemoria@confirmado,w
  6653     0524  0473               	iorwf	i1escribirMemoria@confirmado+1,w
  6654     0525  1903               	btfsc	3,2
  6655     0526  2D28               	goto	u161_21
  6656     0527  2D29               	goto	u161_20
  6657     0528                     u161_21:
  6658     0528  2CE9               	goto	i1l265
  6659     0529                     u161_20:
  6660     0529                     i1l2397:
  6661                           
  6662                           ;main.c: 307:         if (contador >= 10) valorSal = 1;
  6663     0529  0876               	movf	i1escribirMemoria@contador+1,w
  6664     052A  3A80               	xorlw	128
  6665     052B  00FF               	movwf	btemp+1
  6666     052C  3080               	movlw	128
  6667     052D  027F               	subwf	btemp+1,w
  6668     052E  1D03               	skipz
  6669     052F  2D32               	goto	u162_25
  6670     0530  300A               	movlw	10
  6671     0531  0275               	subwf	i1escribirMemoria@contador,w
  6672     0532                     u162_25:
  6673     0532  1C03               	skipc
  6674     0533  2D35               	goto	u162_21
  6675     0534  2D36               	goto	u162_20
  6676     0535                     u162_21:
  6677     0535  2D37               	goto	i1l2401
  6678     0536                     u162_20:
  6679     0536                     i1l2399:
  6680     0536  2D38               	goto	i1l277
  6681     0537                     i1l2401:
  6682     0537  2D38               	goto	i1l277
  6683     0538                     i1l2403:
  6684     0538                     i1l277:
  6685     0538  0008               	return
  6686     0539                     __end_ofi1_escribirMemoria:
  6687                           
  6688                           	psect	text43
  6689     0DB6                     __ptext43:	
  6690 ;; *************** function i1_leerMemoria *****************
  6691 ;; Defined at:
  6692 ;;		line 270 in file "main.c"
  6693 ;; Parameters:    Size  Location     Type
  6694 ;;  direccion       1    wreg     unsigned char 
  6695 ;; Auto vars:     Size  Location     Type
  6696 ;;  direccion       1    0[COMMON] unsigned char 
  6697 ;; Return value:  Size  Location     Type
  6698 ;;                  1    wreg      unsigned char 
  6699 ;; Registers used:
  6700 ;;		wreg, status,2
  6701 ;; Tracked objects:
  6702 ;;		On entry : 0/0
  6703 ;;		On exit  : 0/0
  6704 ;;		Unchanged: 0/0
  6705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6706 ;;      Params:         0       0       0       0       0
  6707 ;;      Locals:         1       0       0       0       0
  6708 ;;      Temps:          0       0       0       0       0
  6709 ;;      Totals:         1       0       0       0       0
  6710 ;;Total ram usage:        1 bytes
  6711 ;; Hardware stack levels used: 1
  6712 ;; This function calls:
  6713 ;;		Nothing
  6714 ;; This function is called by:
  6715 ;;		i1_escribirMemoria
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719     0DB6                     i1_leerMemoria:	
  6720                           ;psect for function i1_leerMemoria
  6721                           
  6722                           
  6723                           ;incstack = 0
  6724                           ; Regs used in i1_leerMemoria: [wreg+status,2]
  6725                           ;i1leerMemoria@direccion stored from wreg
  6726     0DB6  00F0               	movwf	i1leerMemoria@direccion
  6727     0DB7                     i1l2117:
  6728                           
  6729                           ;main.c: 271:     EECON1bits.EEPGD = 0;
  6730     0DB7  1683               	bsf	3,5	;RP0=1, select bank3
  6731     0DB8  1703               	bsf	3,6	;RP1=1, select bank3
  6732     0DB9  138C               	bcf	12,7	;volsfr
  6733                           
  6734                           ;main.c: 273:     EECON1bits.WREN = 0;
  6735     0DBA  110C               	bcf	12,2	;volsfr
  6736     0DBB                     i1l2119:
  6737                           
  6738                           ;main.c: 274:     EEDATH = 0;
  6739     0DBB  1283               	bcf	3,5	;RP0=0, select bank2
  6740     0DBC  1703               	bsf	3,6	;RP1=1, select bank2
  6741     0DBD  018E               	clrf	14	;volatile
  6742                           
  6743                           ;main.c: 275:     EEADRH = 0;
  6744     0DBE  018F               	clrf	15	;volatile
  6745     0DBF                     i1l2121:
  6746                           
  6747                           ;main.c: 276:     EEADR = direccion;
  6748     0DBF  0870               	movf	i1leerMemoria@direccion,w
  6749     0DC0  008D               	movwf	13	;volatile
  6750     0DC1                     i1l2123:
  6751                           
  6752                           ;main.c: 277:     if (EECON1bits.WR == 0)
  6753     0DC1  1683               	bsf	3,5	;RP0=1, select bank3
  6754     0DC2  1703               	bsf	3,6	;RP1=1, select bank3
  6755     0DC3  188C               	btfsc	12,1	;volsfr
  6756     0DC4  2DC6               	goto	u138_21
  6757     0DC5  2DC7               	goto	u138_20
  6758     0DC6                     u138_21:
  6759     0DC6  2DC8               	goto	i1l2127
  6760     0DC7                     u138_20:
  6761     0DC7                     i1l2125:
  6762                           
  6763                           ;main.c: 278:         EECON1bits.RD = 1;
  6764     0DC7  140C               	bsf	12,0	;volsfr
  6765     0DC8                     i1l2127:
  6766                           
  6767                           ;main.c: 280:     return EEDAT;
  6768     0DC8  1283               	bcf	3,5	;RP0=0, select bank2
  6769     0DC9  1703               	bsf	3,6	;RP1=1, select bank2
  6770     0DCA  080C               	movf	12,w	;volatile
  6771     0DCB                     i1l260:
  6772     0DCB  0008               	return
  6773     0DCC                     __end_ofi1_leerMemoria:
  6774                           
  6775                           	psect	text44
  6776     059D                     __ptext44:	
  6777 ;; *************** function i1_cosasSPI *****************
  6778 ;; Defined at:
  6779 ;;		line 358 in file "main.c"
  6780 ;; Parameters:    Size  Location     Type
  6781 ;;  roj             1    wreg     unsigned char 
  6782 ;;  verd            1    5[COMMON] unsigned char 
  6783 ;;  azu             1    6[COMMON] unsigned char 
  6784 ;;  lumi            1    7[COMMON] unsigned char 
  6785 ;; Auto vars:     Size  Location     Type
  6786 ;;  roj             1    8[COMMON] unsigned char 
  6787 ;;  i               2   10[COMMON] int 
  6788 ;;  lumo            1    9[COMMON] unsigned char 
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  1    wreg      void 
  6791 ;; Registers used:
  6792 ;;		wreg, status,2, status,0, pclath, cstack
  6793 ;; Tracked objects:
  6794 ;;		On entry : 0/0
  6795 ;;		On exit  : 0/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6798 ;;      Params:         3       0       0       0       0
  6799 ;;      Locals:         4       0       0       0       0
  6800 ;;      Temps:          0       0       0       0       0
  6801 ;;      Totals:         7       0       0       0       0
  6802 ;;Total ram usage:        7 bytes
  6803 ;; Hardware stack levels used: 1
  6804 ;; Hardware stack levels required when called: 1
  6805 ;; This function calls:
  6806 ;;		i1_spi_write_read
  6807 ;; This function is called by:
  6808 ;;		i1_setLED
  6809 ;; This function uses a non-reentrant model
  6810 ;;
  6811                           
  6812     059D                     i1_cosasSPI:	
  6813                           ;psect for function i1_cosasSPI
  6814                           
  6815                           
  6816                           ;incstack = 0
  6817                           ; Regs used in i1_cosasSPI: [wreg+status,2+status,0+pclath+cstack]
  6818                           ;i1cosasSPI@roj stored from wreg
  6819     059D  00F8               	movwf	i1cosasSPI@roj
  6820     059E                     i1l2407:
  6821                           
  6822                           ;main.c: 359:     int i;;main.c: 360:     char lumo = 0b11100000 + (lumi % 32);
  6823     059E  0877               	movf	i1cosasSPI@lumi,w
  6824     059F  391F               	andlw	31
  6825     05A0  3EE0               	addlw	224
  6826     05A1  00F9               	movwf	i1cosasSPI@lumo
  6827     05A2                     i1l2409:
  6828                           
  6829                           ;main.c: 361:     spi_write_read(0x00);
  6830     05A2  3000               	movlw	0
  6831     05A3  120A  158A  26E9  120A  118A  	fcall	i1_spi_write_read
  6832     05A8                     i1l2411:
  6833                           
  6834                           ;main.c: 362:     spi_write_read(0x00);
  6835     05A8  3000               	movlw	0
  6836     05A9  120A  158A  26E9  120A  118A  	fcall	i1_spi_write_read
  6837     05AE                     i1l2413:
  6838                           
  6839                           ;main.c: 363:     spi_write_read(0x00);
  6840     05AE  3000               	movlw	0
  6841     05AF  120A  158A  26E9  120A  118A  	fcall	i1_spi_write_read
  6842     05B4                     i1l2415:
  6843                           
  6844                           ;main.c: 364:     spi_write_read(0x00);
  6845     05B4  3000               	movlw	0
  6846     05B5  120A  158A  26E9  120A  118A  	fcall	i1_spi_write_read
  6847     05BA                     i1l2417:
  6848                           
  6849                           ;main.c: 365:     for (i = numLedes; i == 0; i--) {
  6850     05BA  1283               	bcf	3,5	;RP0=0, select bank0
  6851     05BB  1303               	bcf	3,6	;RP1=0, select bank0
  6852     05BC  0852               	movf	_numLedes+1,w
  6853     05BD  00FB               	movwf	i1cosasSPI@i+1
  6854     05BE  0851               	movf	_numLedes,w
  6855     05BF  00FA               	movwf	i1cosasSPI@i
  6856     05C0                     i1l2419:
  6857     05C0  087A               	movf	i1cosasSPI@i,w
  6858     05C1  047B               	iorwf	i1cosasSPI@i+1,w
  6859     05C2  1903               	btfsc	3,2
  6860     05C3  2DC5               	goto	u163_21
  6861     05C4  2DC6               	goto	u163_20
  6862     05C5                     u163_21:
  6863     05C5  2DC7               	goto	i1l2423
  6864     05C6                     u163_20:
  6865     05C6  2DE6               	goto	i1l2429
  6866     05C7                     i1l2423:
  6867                           
  6868                           ;main.c: 366:         spi_write_read(lumo);
  6869     05C7  0879               	movf	i1cosasSPI@lumo,w
  6870     05C8  120A  158A  26E9  120A  118A  	fcall	i1_spi_write_read
  6871                           
  6872                           ;main.c: 367:         spi_write_read(azu);
  6873     05CD  0876               	movf	i1cosasSPI@azu,w
  6874     05CE  120A  158A  26E9  120A  118A  	fcall	i1_spi_write_read
  6875                           
  6876                           ;main.c: 368:         spi_write_read(verd);
  6877     05D3  0875               	movf	i1cosasSPI@verd,w
  6878     05D4  120A  158A  26E9  120A  118A  	fcall	i1_spi_write_read
  6879                           
  6880                           ;main.c: 369:         spi_write_read(roj);
  6881     05D9  0878               	movf	i1cosasSPI@roj,w
  6882     05DA  120A  158A  26E9  120A  118A  	fcall	i1_spi_write_read
  6883     05DF                     i1l2425:
  6884                           
  6885                           ;main.c: 370:     }
  6886     05DF  30FF               	movlw	255
  6887     05E0  07FA               	addwf	i1cosasSPI@i,f
  6888     05E1  1803               	skipnc
  6889     05E2  0AFB               	incf	i1cosasSPI@i+1,f
  6890     05E3  30FF               	movlw	255
  6891     05E4  07FB               	addwf	i1cosasSPI@i+1,f
  6892     05E5  2DC0               	goto	i1l2419
  6893     05E6                     i1l2429:
  6894                           
  6895                           ;main.c: 371:     spi_write_read(0xFF);
  6896     05E6  30FF               	movlw	255
  6897     05E7  120A  158A  26E9  120A  118A  	fcall	i1_spi_write_read
  6898                           
  6899                           ;main.c: 372:     spi_write_read(0xFF);
  6900     05EC  30FF               	movlw	255
  6901     05ED  120A  158A  26E9  120A  118A  	fcall	i1_spi_write_read
  6902                           
  6903                           ;main.c: 373:     spi_write_read(0xFF);
  6904     05F2  30FF               	movlw	255
  6905     05F3  120A  158A  26E9  120A  118A  	fcall	i1_spi_write_read
  6906                           
  6907                           ;main.c: 374:     spi_write_read(0xFF);
  6908     05F8  30FF               	movlw	255
  6909     05F9  120A  158A  26E9  120A  118A  	fcall	i1_spi_write_read
  6910     05FE                     i1l298:
  6911     05FE  0008               	return
  6912     05FF                     __end_ofi1_cosasSPI:
  6913                           
  6914                           	psect	text45
  6915     0EE9                     __ptext45:	
  6916 ;; *************** function i1_spi_write_read *****************
  6917 ;; Defined at:
  6918 ;;		line 8 in file "spi-master-v1.c"
  6919 ;; Parameters:    Size  Location     Type
  6920 ;;  one_byte        1    wreg     unsigned char 
  6921 ;; Auto vars:     Size  Location     Type
  6922 ;;  one_byte        1    2[COMMON] unsigned char 
  6923 ;;  x               1    4[COMMON] unsigned char 
  6924 ;;  answer          1    3[COMMON] unsigned char 
  6925 ;; Return value:  Size  Location     Type
  6926 ;;                  1    wreg      unsigned char 
  6927 ;; Registers used:
  6928 ;;		wreg, status,2, status,0
  6929 ;; Tracked objects:
  6930 ;;		On entry : 0/0
  6931 ;;		On exit  : 0/0
  6932 ;;		Unchanged: 0/0
  6933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6934 ;;      Params:         0       0       0       0       0
  6935 ;;      Locals:         3       0       0       0       0
  6936 ;;      Temps:          2       0       0       0       0
  6937 ;;      Totals:         5       0       0       0       0
  6938 ;;Total ram usage:        5 bytes
  6939 ;; Hardware stack levels used: 1
  6940 ;; This function calls:
  6941 ;;		Nothing
  6942 ;; This function is called by:
  6943 ;;		i1_cosasSPI
  6944 ;; This function uses a non-reentrant model
  6945 ;;
  6946                           
  6947     0EE9                     i1_spi_write_read:	
  6948                           ;psect for function i1_spi_write_read
  6949                           
  6950                           
  6951                           ;incstack = 0
  6952                           ; Regs used in i1_spi_write_read: [wreg+status,2+status,0]
  6953                           ;i1spi_write_read@one_byte stored from wreg
  6954     0EE9  00F2               	movwf	i1spi_write_read@one_byte
  6955     0EEA                     i1l2099:
  6956                           
  6957                           ;spi-master-v1.c: 8: char spi_write_read(char one_byte);spi-master-v1.c: 9: {;spi-master
      +                          -v1.c: 11:     char answer, x;;spi-master-v1.c: 13:     answer = 0;
  6958     0EEA  01F3               	clrf	i1spi_write_read@answer
  6959     0EEB                     i1l2101:
  6960                           
  6961                           ;spi-master-v1.c: 15:     for(x = 8; x > 0; x--)
  6962     0EEB  3008               	movlw	8
  6963     0EEC  00F4               	movwf	i1spi_write_read@x
  6964     0EED                     i1l2107:
  6965                           
  6966                           ;spi-master-v1.c: 16:     {;spi-master-v1.c: 17:         PORTCbits.RC0 = (__bit)((one_by
      +                          te >> (x - 1)) & 0b00000001);
  6967     0EED  0872               	movf	i1spi_write_read@one_byte,w
  6968     0EEE  00F0               	movwf	??i1_spi_write_read
  6969     0EEF  0874               	movf	i1spi_write_read@x,w
  6970     0EF0  3EFF               	addlw	-1
  6971     0EF1  3E01               	addlw	1
  6972     0EF2  2EF5               	goto	u133_24
  6973     0EF3                     u133_25:
  6974     0EF3  1003               	clrc
  6975     0EF4  0CF0               	rrf	??i1_spi_write_read,f
  6976     0EF5                     u133_24:
  6977     0EF5  3EFF               	addlw	-1
  6978     0EF6  1D03               	skipz
  6979     0EF7  2EF3               	goto	u133_25
  6980     0EF8  1870               	btfsc	??i1_spi_write_read,0
  6981     0EF9  2EFB               	goto	u134_21
  6982     0EFA  2EFF               	goto	u134_20
  6983     0EFB                     u134_21:
  6984     0EFB  1283               	bcf	3,5	;RP0=0, select bank0
  6985     0EFC  1303               	bcf	3,6	;RP1=0, select bank0
  6986     0EFD  1407               	bsf	7,0	;volatile
  6987     0EFE  2F02               	goto	u135_24
  6988     0EFF                     u134_20:
  6989     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  6990     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  6991     0F01  1007               	bcf	7,0	;volatile
  6992     0F02                     u135_24:
  6993     0F02                     i1l2109:
  6994                           
  6995                           ;spi-master-v1.c: 19:         PORTCbits.RC5 = 1;
  6996     0F02  1687               	bsf	7,5	;volatile
  6997                           
  6998                           ;spi-master-v1.c: 21:         answer |= (char)PORTAbits.RA5;
  6999     0F03  0E05               	swapf	5,w	;volatile
  7000     0F04  00F0               	movwf	??i1_spi_write_read
  7001     0F05  0C70               	rrf	??i1_spi_write_read,w
  7002     0F06  3901               	andlw	1
  7003     0F07  00F1               	movwf	??i1_spi_write_read+1
  7004     0F08  0871               	movf	??i1_spi_write_read+1,w
  7005     0F09  04F3               	iorwf	i1spi_write_read@answer,f
  7006     0F0A                     i1l2111:
  7007                           
  7008                           ;spi-master-v1.c: 22:         PORTCbits.RC5 = 0;
  7009     0F0A  1287               	bcf	7,5	;volatile
  7010     0F0B                     i1l2113:
  7011                           
  7012                           ;spi-master-v1.c: 24:         if(x > 1)
  7013     0F0B  3002               	movlw	2
  7014     0F0C  0274               	subwf	i1spi_write_read@x,w
  7015     0F0D  1C03               	skipc
  7016     0F0E  2F10               	goto	u136_21
  7017     0F0F  2F11               	goto	u136_20
  7018     0F10                     u136_21:
  7019     0F10  2F15               	goto	i1l38
  7020     0F11                     u136_20:
  7021     0F11                     i1l2115:
  7022                           
  7023                           ;spi-master-v1.c: 25:             answer = answer << 1;
  7024     0F11  0873               	movf	i1spi_write_read@answer,w
  7025     0F12  00F0               	movwf	??i1_spi_write_read
  7026     0F13  0770               	addwf	??i1_spi_write_read,w
  7027     0F14  00F3               	movwf	i1spi_write_read@answer
  7028     0F15                     i1l38:
  7029                           
  7030                           ;spi-master-v1.c: 26:     }
  7031     0F15  3001               	movlw	1
  7032     0F16  02F4               	subwf	i1spi_write_read@x,f
  7033     0F17  0874               	movf	i1spi_write_read@x,w
  7034     0F18  1D03               	btfss	3,2
  7035     0F19  2F1B               	goto	u137_21
  7036     0F1A  2F1C               	goto	u137_20
  7037     0F1B                     u137_21:
  7038     0F1B  2EED               	goto	i1l2107
  7039     0F1C                     u137_20:
  7040     0F1C                     i1l39:
  7041     0F1C  0008               	return
  7042     0F1D                     __end_ofi1_spi_write_read:
  7043     007E                     btemp	set	126	;btemp
  7044     007E                     wtemp0	set	126
  7045                           
  7046                           	psect	idloc
  7047                           
  7048                           ;Config register IDLOC0 @ 0x2000
  7049                           ;	unspecified, using default values
  7050     2000                     	org	8192
  7051     2000  3FFF               	dw	16383
  7052                           
  7053                           ;Config register IDLOC1 @ 0x2001
  7054                           ;	unspecified, using default values
  7055     2001                     	org	8193
  7056     2001  3FFF               	dw	16383
  7057                           
  7058                           ;Config register IDLOC2 @ 0x2002
  7059                           ;	unspecified, using default values
  7060     2002                     	org	8194
  7061     2002  3FFF               	dw	16383
  7062                           
  7063                           ;Config register IDLOC3 @ 0x2003
  7064                           ;	unspecified, using default values
  7065     2003                     	org	8195
  7066     2003  3FFF               	dw	16383
  7067                           
  7068                           	psect	config
  7069                           
  7070                           ;Config register CONFIG1 @ 0x2007
  7071                           ;	Oscillator Selection bits
  7072                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  7073                           ;	Watchdog Timer Enable bit
  7074                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  7075                           ;	Power-up Timer Enable bit
  7076                           ;	PWRTE = ON, PWRT enabled
  7077                           ;	RE3/MCLR pin function select bit
  7078                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  7079                           ;	Code Protection bit
  7080                           ;	CP = OFF, Program memory code protection is disabled
  7081                           ;	Data Code Protection bit
  7082                           ;	CPD = OFF, Data memory code protection is disabled
  7083                           ;	Brown Out Reset Selection bits
  7084                           ;	BOREN = OFF, BOR disabled
  7085                           ;	Internal External Switchover bit
  7086                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  7087                           ;	Fail-Safe Clock Monitor Enabled bit
  7088                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  7089                           ;	Low Voltage Programming Enable bit
  7090                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  7091                           ;	In-Circuit Debugger Mode bit
  7092                           ;	DEBUG = OFF, In-Circuit Debugger disabled, RB6/ICSPCLK and RB7/ICSPDAT are general pur
      +                          pose I/O pins
  7093     2007                     	org	8199
  7094     2007  20E2               	dw	8418
  7095                           
  7096                           ;Config register CONFIG2 @ 0x2008
  7097                           ;	Brown-out Reset Selection bit
  7098                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  7099                           ;	Flash Program Memory Self Write Enable bits
  7100                           ;	WRT = OFF, Write protection off
  7101     2008                     	org	8200
  7102     2008  3EFF               	dw	16127

Data Sizes:
    Strings     11
    Constant    10
    Data        30
    BSS         47
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     26      68
    BANK1            80     11      45
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    sp__getLED	PTR unsigned char  size(1) Largest target is 4
		 -> miLED(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _TRAT_INT in COMMON

    _TRAT_INT->i1_setLED
    i1_setPWM->i1___awdiv
    i1_setLED->i1_cosasSPI
    i1_escribirMemoria->i1_leerMemoria
    i1_cosasSPI->i1_spi_write_read

Critical Paths under _main in BANK0

    _printf->___lwmod
    ___lwmod->___lwdiv
    _initActuadoresSegunMemoria->_setLED
    _setPWM->___awdiv
    _setLED->_cosasSPI
    _escribirMemoria->_leerMemoria
    _cosasSPI->_spi_write_read
    _getnoPrimerArranque->_leerMemoria
    _analisisResto->_setCO2
    _analisisResto->_setLumen
    _setLumen->_i2c_read
    _setCO2->_i2c_read

Critical Paths under _TRAT_INT in BANK0

    _TRAT_INT->i1_setLED

Critical Paths under _main in BANK1

    _main->_printf
    _initActuadoresSegunMemoria->_setLED

Critical Paths under _TRAT_INT in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TRAT_INT in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TRAT_INT in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6060
                      _analisisResto
                      _analisisRuido
                           _i2c_stop
         _initActuadoresSegunMemoria
                             _initYo
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              19    18      1    1531
                                              0 BANK1     11    10      1
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      31
                                             12 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                             20 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                             12 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _initYo                                               0     0      0       0
                          _i2c_start
                           _init_ADC
                      _init_CCP1_PWM
                           _init_I2C
                           _init_SPI
                          _init_TMR0
                          _init_TMR1
                          _init_TMR2
                       _init_memoria
                          _init_uart
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_memoria                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_TMR2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_TMR0                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_SPI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_I2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_CCP1_PWM                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                          _wait_MSSP
 ---------------------------------------------------------------------------------
 (1) _initActuadoresSegunMemoria                           3     3      0    4347
                                              3 BANK1      3     3      0
                _getnoPrimerArranque
                        _leerMemoria
                             _setLED
                             _setPWM
 ---------------------------------------------------------------------------------
 (2) _setPWM                                               3     3      0    1670
                                             21 BANK0      3     3      0
                            ___awdiv
                             ___bmul
                    _escribirMemoria
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     226
                                             12 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     625
                                             12 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _setLED                                               4     1      3    2383
                                             24 BANK0      1     1      0
                                              0 BANK1      3     0      3
                           _cosasSPI
                    _escribirMemoria
 ---------------------------------------------------------------------------------
 (3) _escribirMemoria                                      8     7      1     726
                                             13 BANK0      6     5      1
                        _leerMemoria
 ---------------------------------------------------------------------------------
 (3) _cosasSPI                                             7     4      3     704
                                             17 BANK0      7     4      3
                     _spi_write_read
 ---------------------------------------------------------------------------------
 (4) _spi_write_read                                       5     5      0     208
                                             12 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _getnoPrimerArranque                                  2     2      0     161
                                             13 BANK0      1     1      0
                        _leerMemoria
 ---------------------------------------------------------------------------------
 (4) _leerMemoria                                          1     1      0      31
                                             12 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c_stop                                             0     0      0       0
                          _wait_MSSP
 ---------------------------------------------------------------------------------
 (1) _analisisRuido                                        3     3      0      48
                                             12 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _analisisResto                                        0     0      0     134
                             _getCO2
                           _getLumen
                             _setCO2
                           _setLumen
 ---------------------------------------------------------------------------------
 (2) _setLumen                                             2     2      0      67
                                             14 BANK0      2     2      0
                           _i2c_read
                         _i2c_rstart
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _setCO2                                               2     2      0      67
                                             14 BANK0      2     2      0
                           _i2c_read
                         _i2c_rstart
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      22
                                             12 BANK0      1     1      0
                          _wait_MSSP
 ---------------------------------------------------------------------------------
 (3) _i2c_rstart                                           0     0      0       0
                          _wait_MSSP
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             2     2      0      45
                                             12 BANK0      2     2      0
                          _wait_MSSP
 ---------------------------------------------------------------------------------
 (3) _wait_MSSP                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getLumen                                             2     0      2       0
                                             12 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _getCO2                                               2     0      2       0
                                             12 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _TRAT_INT                                             9     9      0    1806
                                              3 BANK0      9     9      0
                           i1_setLED
                           i1_setPWM
 ---------------------------------------------------------------------------------
 (6) i1_setPWM                                             3     3      0     855
                                              9 COMMON     3     3      0
                          i1___awdiv
                           i1___bmul
                  i1_escribirMemoria
 ---------------------------------------------------------------------------------
 (7) i1___bmul                                             4     3      1     118
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (7) i1___awdiv                                            9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (6) i1_setLED                                             4     1      3     951
                                             12 COMMON     1     1      0
                                              0 BANK0      3     0      3
                         i1_cosasSPI
                  i1_escribirMemoria
 ---------------------------------------------------------------------------------
 (7) i1_escribirMemoria                                    8     7      1     319
                                              1 COMMON     6     5      1
                      i1_leerMemoria
 ---------------------------------------------------------------------------------
 (8) i1_leerMemoria                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_cosasSPI                                           7     4      3     378
                                              5 COMMON     7     4      3
                   i1_spi_write_read
 ---------------------------------------------------------------------------------
 (8) i1_spi_write_read                                     5     5      0     143
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _analisisResto
     _getCO2
     _getLumen
     _setCO2
       _i2c_read
         _wait_MSSP
       _i2c_rstart
         _wait_MSSP
       _i2c_write
         _wait_MSSP
     _setLumen
       _i2c_read
       _i2c_rstart
       _i2c_write
   _analisisRuido
   _i2c_stop
     _wait_MSSP
   _initActuadoresSegunMemoria
     _getnoPrimerArranque
       _leerMemoria
     _leerMemoria
     _setLED
       _cosasSPI
         _spi_write_read
       _escribirMemoria
         _leerMemoria
     _setPWM
       ___awdiv
       ___bmul
       _escribirMemoria
   _initYo
     _i2c_start
       _wait_MSSP
     _init_ADC
     _init_CCP1_PWM
     _init_I2C
     _init_SPI
     _init_TMR0
     _init_TMR1
     _init_TMR2
     _init_memoria
     _init_uart
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch

 _TRAT_INT (ROOT)
   i1_setLED
     i1_cosasSPI
       i1_spi_write_read
     i1_escribirMemoria
       i1_leerMemoria
   i1_setPWM
     i1___awdiv
     i1___bmul
     i1_escribirMemoria

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      B      2D       7       56.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1A      44       5       85.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      7F      12        0.0%
ABS                  0      0      7F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Nov 18 13:07:48 2022

                      _ruidoMasAlto 0040                                   l9 0CD0  
                                 _x 004A                                   pc 0002  
                    ___bmul@product 002E                                  l11 0CD6  
                                l12 0CD7                                  l21 0CF0  
                                l15 0D02                                  l24 07FE  
                                l18 0CF9                                  l27 0E80  
                                l28 0E83                                  l29 0E8C  
                                l38 0F80                                  l39 0F87  
                      ___awdiv@sign 0032                                  fsr 0004  
                               l212 0D18                                 l301 0659  
                               l221 0D43                                 l230 0CCF  
                               l215 0D54                                 l312 076C  
                               l224 0E67                                 l321 059C  
                               l233 0E13                                 l250 0D32  
                               l218 0D66                                 l227 0DFA  
                               l316 07F0                                 l308 0756  
                               l260 0E2F                                 l236 0D0C  
                               l244 0D78                                 l253 0729  
                               l247 06E4                                 l239 0D6A  
                               l256 0D25                                 l280 0FC3  
                               l265 0342                                 l521 0DE2  
                               l290 0EE8                                 l277 0397  
                               l286 0E4B                                 l298 0403  
                               l378 0F4F                                 l491 0324  
                               l648 046C                                 l767 069F  
                               l777 0FFF                                 _PR2 0092  
                     _emitoSensores 00B0                                 _anI 0055  
                      ?_leerMemoria 0070                                 fsr0 0004  
                 i1_escribirMemoria 04D4                                 indf 0000  
                       cosasSPI@azu 0032        ??_initActuadoresSegunMemoria 0039  
                       cosasSPI@roj 0034                          i1_cosasSPI 059D  
                ?i1_escribirMemoria 0071              i1leerMemoria@direccion 0070  
                              l3001 0EBD                                l2201 0E66  
                              l3011 061E                                l3003 0EDC  
                              l2131 0CFA                                l2211 0DF4  
                              l2203 0DE3                                l3021 0643  
                              l3013 0624                                l3005 0EE4  
                              l2133 0CFD                                l2221 0E02  
                              l2213 0DF7                                l2205 0DE7  
                              l2141 0D14                                l3023 064E  
                              l3015 062A                                l3007 0602  
                              l2231 0E0D                                l2223 0E03  
                              l2207 0DED                                l2215 0CCC  
                              l2143 0D15                                l2151 0D4B  
                              l3031 0667                                l3111 0281  
                              l3103 0251                                l3017 0630  
                              l3009 061A                                l2233 0E10  
                              l2225 0E04                                l2217 0DFB  
                              l2209 0DF0                                l2145 0D17  
                              l2137 0D0D                                l2153 0D4D  
                              l2161 0D59                                l3041 068D  
                              l3033 066E                                l3025 065A  
                              l3121 028C                                l3113 0285  
                              l3105 0271                                l2251 06AB  
                              l3019 0638                                l2235 0E11  
                              l2227 0E0A                                l2219 0DFF  
                              l2171 0D33                                l2139 0D11  
                              l2155 0D4E                                l2147 0D44  
                              l2163 0D5D                                l3043 068E  
                              l3035 0672                                l3027 065E  
                              l3051 0FC4                                l3131 02BE  
                              l3115 028A                                l3107 0279  
                              l3211 0263                                l2261 06E5  
                              l2253 06B1                                l2237 0E12  
                              l2229 0E0C                                l2173 0D36  
                              l2157 0D51                                l2149 0D4A  
                              l2165 0D5F                                l2181 0E4C  
                              l2501 0F96                                l3045 0695  
                              l3037 0676                                l3029 0664  
                              l3061 0FDE                                l3053 0FCC  
                              l3133 02C3                                l3125 02A8  
                              l3109 027D                                l2271 0D19  
                              l2263 06EA                                l2255 06C5  
                              l2247 06A0                                l2175 0D39  
                              l2167 0D62                                l2159 0D55  
                              l2239 0D03                                l2191 0E59  
                              l2183 0E52                                l2511 0FBE  
                              l2503 0F9B                                l3039 0687  
                              l3047 069B                                l3063 0FE8  
                              l3055 0FCF                                l3135 0301  
                              l3127 02B2                                l3151 0F2E  
                              l2257 0D26                                l2265 06F0  
                              l2249 06A5                                l2521 0739  
                              l3081 0571                                l3073 0539  
                              l2177 0D3F                                l2169 0D65  
                              l2193 0E5C                                l2185 0E55  
                              l2513 0FC1                                l2505 0FA0  
                              l3065 0FEE                                l3057 0FD6  
                              l3137 0307                                l3129 02B8  
                              l3153 0F38                                l3145 0F1D  
                              l2267 06F6                                l2531 07B0  
                              l2523 073E                                l3083 057D  
                              l3075 0543                                l2179 0D41  
                              l2195 0E5F                                l2187 0E57  
                              l2515 0FC2                                l2507 0FA5  
                              l3067 0FF5                                l3059 0FDA  
                              l3091 0238                                l3139 0312  
                              l3155 0F3D                                l3147 0F22  
                              l2269 070A                                l2541 07D5  
                              l2533 07B8                                l2525 074D  
                              l2517 072A                                l3085 0589  
                              l3077 0558                                l2197 0E60  
                              l2189 0E58                                l2509 0FAA  
                              l3069 0FFB                                l3093 023F  
                              l3149 0F28                                l3157 0F42  
                              l2543 07E6                                l2535 07BA  
                              l2527 0752                                l2519 072A  
                              l3079 0565                                l2199 0E63  
                              l3095 0241                                l3087 022F  
                              l3159 0F4A                                l1913 0CD0  
                              l2545 07EB                                l2537 07C0  
                              l2529 0763                                l3097 0246  
                              l3089 0232                                l2539 07C4  
                              l2491 0CF4                                l3099 024A  
                              l2821 0F55                                l2901 03B1  
                              l2831 0F6D                                l2823 0F56  
                              l2911 03E2                                l2903 03B7  
                              l2495 0F88                                l1961 0E6B  
                              l1953 07F4                                l2489 0CF1  
                              l2841 0E1B                                l2833 0F75  
                              l2905 03BD                                l2921 0DD4  
                              l2497 0F8C                                l1971 0E84  
                              l1963 0E6E                                l1947 0CE8  
                              l1955 07F6                                l2843 0E1F  
                              l2835 0F76                                l2915 03EB  
                              l2931 0404                                l2923 0DD8  
                              l2499 0F91                                l1973 0E89  
                              l1965 0E73                                l1949 0CEB  
                              l1957 07FB                                l2845 0E25  
                              l2837 0F7C                                l2829 0F58  
                              l2909 03C4                                l2861 033B  
                              l2853 0328                                l2941 0416  
                              l2933 0407                                l2925 0DDA  
                              l2917 0DCF                                l1967 0E77  
                              l2847 0E2B                                l2839 0E17  
                              l2871 0357                                l2863 0343  
                              l2855 032C                                l2951 042A  
                              l2943 041B                                l2935 040B  
                              l2927 0DE1                                l2919 0DD0  
                              l1969 0E7C                                l2849 0E2C  
                              l2881 037E                                l2873 0359  
                              l2865 034D                                l2857 032F  
                              l2961 0450                                l2953 0431  
                              l2945 041F                                l2937 0410  
                              l2883 0386                                l2875 0366  
                              l2867 034E                                l2859 0335  
                              l2971 0468                                l2963 0451  
                              l2955 0435                                l2947 0421  
                              l2939 0412                                l2981 0E30  
                              l2893 039B                                l2885 0395  
                              l2877 036B                                l2869 034F  
                              l2965 0458                                l2957 0439  
                              l2949 0427                                l2991 0E48  
                              l2983 0E30                                l2895 039F  
                              l2887 0396                                l2879 0371  
                              l2959 044A                                l2967 045E  
                              l2975 0D6A                                l2985 0E39  
                              l2897 03A5                                l2889 0397  
                              l2969 0463                                l2977 0D6F  
                              l2987 0E3E                                l2899 03AB  
                              l2979 0D75                                l2997 0E4A  
                              l2989 0E43                     spi_write_read@x 0030  
                              STR_1 0810                                u1130 0E7C  
                              u1131 0E7B                                u1060 0CD6  
                              u1061 0CD5                                u2120 0F6A  
                              u2200 037E                                u2121 0F66  
                              u2201 037D                                u2114 0F60  
                              u2210 0386                                u2115 0F5E  
                              u2211 0385                                u2140 0F7C  
                              u2220 0395                                u2300 0439  
                              u2141 0F7B                                u2221 0394  
                              u2205 037A                                u2301 0438  
                              u2150 0F87                                u2134 0F6D  
                              u2230 03C3                                u2151 0F86  
                              u2231 03C2                                u2160 0E2B  
                              u2400 0E48                                u2320 044A  
                              u2240 0DD4                                u2161 0E2A  
                              u2401 0E47                                u2225 0391  
                              u2321 0449                                u2241 0DD3  
                              u2170 033B                                u2250 0DE1  
                              u2410 0664                                u2171 033A  
                              u2315 043A                                u2251 0DE0  
                              u2411 0663                                u2180 0357  
                              u2340 045E                                u2260 040B  
                              u2500 0FDE                                u2181 0356  
                              u2341 045D                                u2325 0446  
                              u2261 040A                                u2501 0FDD  
                              u2190 0366                                u2350 0463  
                              u2270 0416                                u2430 0676  
                              u2510 0FE8                                u2191 0365  
                              u2351 0462                                u2335 0452  
                              u2271 0415                                u2431 0675  
                              u2511 0FE7                                u2280 0427  
                              u2360 0D6F                                u2600 0312  
                              u2281 0426                                u2425 0668  
                              u2361 0D6E                                u2601 0311  
                              u2450 0687                                u2530 0FFB  
                              u2370 0D75                                u2610 0324  
                              u2451 0686                                u2531 0FFA  
                              u2515 0FE4                                u2371 0D74  
                              u2611 0323                                u2380 0E3E  
                              u2540 0543                                u2620 0F2E  
                              u2381 0E3D                                u2541 0542  
                              u2445 0677                                u2525 0FEF  
                              u2621 0F2D                                u2390 0E43  
                              u2470 069B                                u2550 0238  
                              u2630 0F4A                                u2391 0E42  
                              u2295 042B                                u2471 069A  
                              u2455 0683                                u2551 0237  
                              u2631 0F49                                u1760 0739  
                              u2480 0FCC                                u2560 0281  
                              u1761 0738                                u2465 068F  
                              u2481 0FCB                                u2561 0280  
                              u1770 074D                                u2570 02A7  
                              u1771 074C                                u2571 02A6  
                              u1780 0763                                u2580 02B2  
                              u1781 0762                                u1765 0735  
                              u2581 02B1                                u1790 07B8  
                              u2590 02B8                                u1791 07B7  
                              u1775 0749                                u2495 0FD0  
                              u2591 02B7                                u2575 02A3  
                              u1785 075F                                i1l38 0F15  
                              i1l39 0F1C                                _TMR0 0001  
                              _TXIF 0064              __end_of_spi_write_read 0F88  
                              _pPWM 004D                 ??i1_escribirMemoria 0072  
                              _main 0F1D                                btemp 007E  
                              start 0012                        cosasSPI@lumi 0033  
                      cosasSPI@lumo 0035                        cosasSPI@verd 0031  
                 ___bmul@multiplier 002F           __end_ofi1_escribirMemoria 0539  
                             ?_main 0070                      i1___awdiv@sign 0076  
                   __end_of___awdiv 046D                               _EEADR 010D  
                             _EEDAT 010C                               _ANSEL 0188  
                   ___awdiv@divisor 002C                     __end_of___lwdiv 06A0  
                             i1l301 07AF                               i1l331 0116  
                             i1l260 0DCB                               i1l341 0189  
                             i1l350 021F                               i1l334 010D  
                             i1l326 00AA                               i1l351 0199  
                             i1l265 04E9                               i1l521 0DA0  
                             i1l353 0219                               i1l337 010C  
                   __end_of___lwmod 1000                               i1l290 0EB9  
                             i1l339 0121                               i1l277 0538  
                             i1l349 0193                               i1l369 021F  
                             i1l298 05FE                               i1l648 04D3  
                   ___awdiv@counter 0031                               _RCREG 001A  
                             _TMR1H 000F                               _TMR1L 000E  
                             _SPBRG 0099                               _TRISA 0085  
                             _TRISB 0086                               _TRISC 0087  
                             _TXREG 0019                               _elPR2 0059  
                             _miLED 0060                     __end_of_dpowers 0810  
                  __end_of_TRAT_INT 022C                               _valor 00A0  
                             _putch 0D67                    __end_ofi1___bmul 0DA1  
              leerMemoria@direccion 002C                               pclath 000A  
                   ?_spi_write_read 0070                               status 0003  
                             wtemp0 007E                    __end_ofi1_setLED 07B0  
                  __end_ofi1_setPWM 0EBA                       setPWM@porcent 0037  
                   __initialization 0015                      i1cosasSPI@lumi 0077  
                    i1cosasSPI@lumo 0079                      i1cosasSPI@verd 0075  
                      __end_of_main 0F52                          _i2c_rstart 0CE8  
                       i1cosasSPI@i 007A                    __end_of_i2c_read 0E8D  
                  __end_of_i2c_stop 0CFA                       _init_CCP1_PWM 0D33  
             __end_of_analisisResto 07F1               __end_of_analisisRuido 076D  
                            ??_main 003A                         ?i1_cosasSPI 0075  
                            _ADRESH 001E                              _EEADRH 010F  
                            _ADRESL 009E                              _EEDATH 010E  
                            _CCPR1L 0015                              _EECON2 018D  
                  ___awdiv@dividend 002E                              ?_putch 0070  
                            i1l2101 0EEB                              i1l2111 0F0A  
                            i1l2113 0F0B                              i1l2121 0DBF  
                            i1l2115 0F11                              i1l2107 0EED  
                            i1l2123 0DC1                              i1l2109 0F02  
                            i1l2125 0DC7                              i1l2117 0DB7  
                            i1l2127 0DC8                              i1l2119 0DBB  
                            u200_20 015E                              i1l2401 0537  
                            u200_21 015D                              i1l2411 05A8  
                            i1l2403 0538                              i1l2413 05AE  
                            i1l3213 0208                              i1l2423 05C7  
                            i1l2415 05B4                              i1l2407 059E  
                            i1l2431 0D8D                              u201_20 0170  
                            i1l2425 05DF                              i1l2417 05BA  
                            i1l2409 05A2                              i1l2441 0D9F  
                            i1l2433 0D8E                              u201_21 016F  
                            i1l2099 0EEA                              i1l2419 05C0  
                            i1l2371 04DC                              i1l2451 0477  
                            i1l2435 0D92                              i1l2429 05E6  
                            i1l2381 04F5                              i1l2373 04DE  
                            i1l2461 0488                              i1l2453 0479  
                            i1l2445 046D                              i1l2437 0D96  
                            i1l2621 0EAD                              i1l2701 017B  
                            i1l2391 0510                              i1l2383 04F6  
                            i1l2375 04E4                              i1l2367 04D5  
                            i1l2631 0782                              i1l2471 04A0  
                            i1l2463 048E                              i1l2455 047D  
                            i1l2447 046E                              i1l2439 0D98  
                            i1l2623 0EB5                              i1l2711 0197  
                            u202_20 018D                              i1l2385 04FE  
                            i1l2377 04EA                              i1l2393 0516  
                            i1l2369 04D9                              i1l2641 07A4  
                            i1l2633 0784                              i1l2625 076E  
                            i1l2473 04B1                              i1l2465 0491  
                            i1l2481 04C5                              i1l2457 0482  
                            i1l2449 0472                              i1l2721 01B9  
                            i1l2713 019D                              u202_21 018C  
                            i1l2705 017F                              i1l2395 0523  
                            i1l2387 0500                              i1l2379 04F4  
                            i1l2635 0786                              i1l2627 077C  
                            i1l2483 04CA                              i1l2475 04B7  
                            i1l2467 0498                              i1l2459 0486  
                            i1l2619 0E8E                              i1l2731 01E6  
                            i1l2723 01BF                              i1l2715 019E  
                            i1l2707 018D                              i1l2651 0072  
                            i1l2643 004A                              i1l2397 0529  
                            i1l2389 050B                              i1l2637 078E  
                            i1l2629 0780                              i1l2485 04CF  
                            i1l2477 04B8                              i1l2469 049C  
                            i1l2741 01FB                              i1l2733 01EB  
                            i1l2717 01AB                              i1l2725 01CC  
                            i1l2709 018E                              i1l2661 00A8  
                            i1l2653 0082                              i1l2645 004E  
                            i1l2399 0536                              i1l2639 0799  
                            i1l2479 04BF                              i1l2735 01EE  
                            i1l2727 01DB                              i1l2719 01B3  
                            i1l2671 00D1                              i1l2663 00AE  
                            i1l2655 0091                              i1l2647 0066  
                            u203_20 0197                              i1l2737 01F3  
                            i1l2729 01DF                              i1l2745 01FE  
                            u203_21 0196                              i1l2681 0114  
                            i1l2673 00D9                              i1l2665 00BC  
                            i1l2657 009B                              i1l2649 006A  
                            i1l2747 021D                              i1l2739 01F8  
                            i1l2691 0149                              i1l2683 011A  
                            i1l2675 00EB                              i1l2667 00C0  
                            i1l2659 00A0                              i1l2693 0156  
                            i1l2685 011D                              i1l2677 00F8  
                            i1l2669 00CD                              i1l2695 015E  
                            i1l2687 0125                              i1l2679 0110  
                            u204_20 019D                              u204_21 019C  
                            i1l2697 0169                              i1l2689 0126  
                            i1l2699 0170                              u205_20 01AB  
                            u205_21 01AA                              u133_24 0EF5  
                            u133_25 0EF3                              u205_25 01A7  
                            u134_20 0EFF                              u206_20 01BF  
                            u134_21 0EFB                              u206_21 01BE  
                            u207_20 01DB                              u207_21 01DA  
                            u135_24 0F02                              u207_25 01D7  
                            u136_20 0F11                              u160_20 0523  
                            u208_20 021D                              u136_21 0F10  
                            u160_21 0522                              u208_21 021C  
                            u160_25 051F                              u137_20 0F1C  
                            u161_20 0529                              u137_21 0F1B  
                            u161_21 0528                              u138_20 0DC7  
                            u162_20 0536                              u170_20 04A0  
                            u138_21 0DC6                              u162_21 0535  
                            u170_21 049F                              u162_25 0532  
                            u163_20 05C6                              u163_21 05C5  
                            u171_25 04A1                              u172_20 04B1  
                            u164_20 0D92                              u172_21 04B0  
                            u164_21 0D91                              u172_25 04AD  
                            u157_20 04E4                              u165_20 0D9F  
                            u157_21 04E3                              u165_21 0D9E  
                            u173_25 04B9                              u158_20 04FE  
                            u174_20 04C5                              u166_20 0472  
                            u190_20 0091                              u158_21 04FD  
                            u174_21 04C4                              u166_21 0471  
                            u190_21 0090                              u190_25 008D  
                            u159_20 050B                              u175_20 04CA  
                            u167_20 047D                              u191_20 00AE  
                            u159_21 050A                              u175_21 04C9  
                            u167_21 047C                              u191_21 00AD  
                            u168_20 048E                              u192_20 00BC  
                            u168_21 048D                              u192_21 00BB  
                            u192_25 00B8                              u193_20 00CD  
                            u193_21 00CC                              u169_25 0492  
                            u193_25 00C9                              u194_20 00EB  
                            u194_21 00EA                              u194_25 00E7  
                            u195_20 00F8                              u195_21 00F7  
                            u195_25 00F4                              u196_20 010C  
                            u188_20 004E                              u196_21 010B  
                            u188_21 004D                              u196_25 0108  
                            u197_20 011A                              u189_20 0066  
                            u197_21 0119                              u189_21 0065  
                            u189_25 0062                              u198_20 0125  
                            u198_21 0124                              u199_20 0156  
                            u199_21 0155                              u199_25 0152  
                            _OSCCON 008F                              _SPBRGH 009A  
                            _SSPADD 0093                              _SSPBUF 0013  
               _porcentajeSubenBaja 005B                       ?_init_memoria 0070  
                       i1setLED@red 007C                   ??_escribirMemoria 002E  
                  __end_of_getLumen 0D33                    __end_of_cosasSPI 0404  
                            ___bmul 0DCC                              _getCO2 0D19  
                         ??___awdiv 0030                    __end_of_init_I2C 0DFB  
                  __end_of_init_ADC 0E14                           ??___lwdiv 0030  
                         ??___lwmod 0038                    __end_of_init_SPI 0CD0  
                            _copias 003A                              _setCO2 06E5  
                            _initYo 0F88                              _setLED 05FF  
                       setLED@green 00BA                      ?_init_CCP1_PWM 0070  
                            _setPWM 0EBA                    ___awdiv@quotient 0033  
                            _printf 022C                    __end_of_setLumen 06E5  
                 __end_ofi1___awdiv 04D4  __end_of_initActuadoresSegunMemoria 059D  
        _initActuadoresSegunMemoria 0539                        __pdataCOMMON 007D  
               i1setLED@luminosidad 0022                 escribirMemoria@dato 002D  
                            saved_w 007E                              putch@c 002C  
                    ??_init_memoria 002C             __end_of__initialization 0046  
               ___bmul@multiplicand 002C                   analisisRuido@temp 002E  
                    __pcstackCOMMON 0070                         ?_i2c_rstart 0070  
                      __pidataBANK0 0DA1                        __pidataBANK1 0CE0  
                   i1setPWM@porcent 007B                           ?_TRAT_INT 0070  
                     __end_of_putch 0D79                           ?i1___bmul 0070  
                  i1_spi_write_read 0EE9                   __end_of_i2c_start 0D03  
                 __end_of_i2c_write 07FF                      _OPTION_REGbits 0081  
                         ?i1_setLED 0020                           ?i1_setPWM 0070  
                     i1_leerMemoria 0DB6                    i1___bmul@product 0072  
                           ??_putch 002C                          __pbssBANK0 003A  
                        __pbssBANK1 00A0                           ?_i2c_read 0070  
                         ?_i2c_stop 0070            i1spi_write_read@one_byte 0072  
            i1spi_write_read@answer 0073                          __pmaintext 0F1D  
                           ?___bmul 002C                             ?_getCO2 002C  
                   ??_init_CCP1_PWM 002C                          __pintentry 0004  
                        ??_TRAT_INT 0023                             ?_setCO2 0070  
                           ?_initYo 0070                             ?_setLED 00BA  
                           ?_setPWM 0070                          ??i1___bmul 0071  
                           ?_printf 00BA                  i1___awdiv@dividend 0072  
                    ?i1_leerMemoria 0070                          ??i1_setLED 007C  
                        ??i1_setPWM 0079           escribirMemoria@confirmado 002E  
                  ??_spi_write_read 002C                           ?_getLumen 002C  
                         ?_cosasSPI 0031                        i1setLED@blue 0021  
                        __stringtab 0800            escribirMemoria@direccion 0030  
                         ?_init_I2C 0070                           ?_init_ADC 0070  
                        ??_i2c_read 002C                   _leoADCHumedadTemp 0053  
                         ?_init_SPI 0070                          ??_i2c_stop 002C  
                         ?_setLumen 0070                  i1___awdiv@quotient 0077  
              spi_write_read@answer 002F                             _anINext 00AC  
                     _deboContinuar 0057                             ___awdiv 0404  
                           ___lwdiv 065A                             ___lwmod 0FC4  
                      _direccionLED 005D                        _direccionPWM 005E  
                         _ANSELbits 0188                             __ptext1 022C  
                           __ptext2 0D67                             __ptext3 0FC4  
                           __ptext4 065A                             __ptext5 0F88  
                           __ptext6 0E4C                             __ptext7 0D03  
                           __ptext8 0D55                             __ptext9 0D44  
                           _copias1 003C                   __end_of_init_TMR0 0D19  
                 __end_of_init_TMR1 0D55                   __end_of_init_TMR2 0D67  
              __end_of_init_memoria 0D0D                           _T1CONbits 0010  
                           _dpowers 0806                           _T2CONbits 0012  
        i1escribirMemoria@direccion 0074                   __end_of_init_uart 0E68  
               i1___bmul@multiplier 0073                        ??i1_cosasSPI 0078  
                   _escribirMemoria 0325                          ??_getLumen 002E  
                           clrloop0 0CD9                          ??_cosasSPI 0034  
              end_of_initialization 0046                          ??_init_I2C 002C  
                        ??_init_ADC 002C                          ??_init_SPI 002C  
                 __end_of_wait_MSSP 0CD8                  i2c_read@master_ack 002C  
                        ??_setLumen 002E         i1escribirMemoria@confirmado 0072  
                         _RCSTAbits 0018                             printf@c 00C4  
                           printf@f 00BF                  __end_ofi1_cosasSPI 05FF  
                        _porcentaje 004B                           _PORTAbits 0005  
                         _PORTCbits 0007                     ??i1_leerMemoria 0070  
       ?_initActuadoresSegunMemoria 0070                   _emitirMisSensores 0042  
                         _TRISCbits 0087                          _ruidoMedio 00C7  
                         i1___awdiv 046D     _initActuadoresSegunMemoria$1570 00BE  
   _initActuadoresSegunMemoria$1571 00BF     _initActuadoresSegunMemoria$1569 00BD  
                       _CCP1CONbits 0017            __end_ofi1_spi_write_read 0F1D  
                         _TXSTAbits 0098                 _getnoPrimerArranque 0E30  
                      ??_i2c_rstart 002C                      __end_of___bmul 0DE3  
                    __end_of_getCO2 0D26                       __pidataCOMMON 07FF  
                       _BAUDCTLbits 0187                      __end_of_setCO2 072A  
           __end_of_escribirMemoria 0398                      __end_of_initYo 0FC4  
                    __end_of_setLED 065A                      __end_of_setPWM 0EE9  
              ?_getnoPrimerArranque 0070                       ??_leerMemoria 002C  
                    __end_of_printf 0325                 start_initialization 0015  
                     i1cosasSPI@azu 0076                       i1cosasSPI@roj 0078  
                         _i2c_start 0CFA                          ?i1___awdiv 0070  
                         _i2c_write 07F1                  __end_of_i2c_rstart 0CF1  
                          ??___bmul 002D                          setLED@blue 00BB  
                          ??_getCO2 002E                          init_fetch0 0D79  
            spi_write_read@one_byte 002E                         __pdataBANK0 004F  
                       __pdataBANK1 00C5                    _direccionInicial 004E  
                          ??_setCO2 002E                            ??_initYo 002C  
                          ??_setLED 0038                            ??_setPWM 0035  
                      _los5msen15ms 004F                            ??_printf 00BB  
                      _los5msen1sT0 00C5               ??_getnoPrimerArranque 002D  
                     _analisisResto 07B0                       _analisisRuido 072A  
                         ___latbits 0002                       __pcstackBANK0 0020  
                     __pcstackBANK1 00BA                          ?_i2c_start 0070  
                 i1spi_write_read@x 0074                          ?_i2c_write 0070  
               __end_of_leerMemoria 0E30                        _init_memoria 0D03  
                  ___lwdiv@dividend 002E                            ?___awdiv 002C  
                          ?___lwdiv 002C                            ?___lwmod 0034  
                 i1___awdiv@divisor 0070               __end_of_init_CCP1_PWM 0D44  
                 i1___awdiv@counter 0075                           __pstrings 0800  
            getnoPrimerArranque@aux 002D                      ?_analisisResto 0070  
                    ?_analisisRuido 0070                    ?_escribirMemoria 002D  
                         _continuar 00AE                           _eltimer1H 007D  
                         _eltimer1L 005F               i1escribirMemoria@dato 0071  
           escribirMemoria@contador 0031                   _actualizoLecturas 003E  
                         _init_TMR0 0D0D                           _init_TMR1 0D44  
                         _init_TMR2 0D55                         ??i1___awdiv 0074  
                  ___lwdiv@quotient 0032                    i2c_read@I2C_data 002D  
                         _init_uart 0E4C                           _reciboLED 0046  
                         _reciboPWM 0044                   interrupt_function 0004  
         i1escribirMemoria@contador 0075                           clear_ram0 0CD8  
                          _PIE1bits 008C                            _PIE2bits 008D  
             i1___bmul@multiplicand 0070                           _wait_MSSP 0CD0  
                          _PIR1bits 000C                            _PIR2bits 000D  
                          _TRAT_INT 004A                           _ruidoBajo 00C9  
                     i1setLED@green 0020                            i1___bmul 0D8C  
                        _ADCON0bits 001F                         __stringbase 0805  
                        _ADCON1bits 009F                           cosasSPI@i 0036  
                        printf@flag 00BE                          printf@prec 00C0  
                       _leerMemoria 0E14                            i1_setLED 076D  
                          i1_setPWM 0E8D                          ?_init_TMR0 0070  
                        ?_init_TMR1 0070                          ?_init_TMR2 0070  
                       ??_i2c_start 002C                         ??_i2c_write 002C  
                        ?_init_uart 0070                            _i2c_read 0E68  
                          _i2c_stop 0CF1                   ?i1_spi_write_read 0070  
                        _EECON1bits 018C                          ?_wait_MSSP 0070  
                ??i1_spi_write_read 0070                           setLED@red 0038  
                 i2c_write@I2C_data 002C                     ??_analisisResto 0030  
                   ??_analisisRuido 002C                  __end_of__stringtab 0806  
             __end_ofi1_leerMemoria 0DCC                     ___lwdiv@divisor 002C  
                   ___lwdiv@counter 0031                            __ptext10 0D0D  
                          __ptext11 0CCC                            __ptext20 05FF  
                          __ptext12 0DE3                            __ptext21 0325  
                          __ptext13 0D33                            __ptext30 06E5  
                          __ptext22 0398                            __ptext14 0DFB  
                          __ptext31 07F1                            __ptext23 0F52  
                          __ptext15 0CFA                            __ptext40 046D  
                          __ptext32 0CE8                            __ptext24 0E30  
                          __ptext16 0539                            __ptext41 076D  
                          __ptext33 0E68                            __ptext25 0E14  
                          __ptext17 0EBA                            __ptext42 04D4  
                          __ptext34 0CD0                            __ptext26 0CF1  
                          __ptext18 0DCC                            __ptext43 0DB6  
                          __ptext35 0D26                            __ptext27 072A  
                          __ptext19 0404                            __ptext44 059D  
                          __ptext36 0D19                            __ptext28 07B0  
                          __ptext45 0EE9                            __ptext37 004A  
                          __ptext29 06A0                            __ptext38 0E8D  
                          __ptext39 0D8C                            _getLumen 0D26  
                          _cosasSPI 0398                            _copias5s 00AA  
                          _contado1 00CB                            _init_I2C 0DE3  
                          _init_ADC 0DFB                            _init_SPI 0CCC  
                     _porcentajeMax 005C                       _porcentajeMin 004C  
                 setLED@luminosidad 00BC                            _setLumen 06A0  
                          _numLedes 0051                            _valorI2C 00A6  
                         printf@val 00C2                          _INTCONbits 000B  
                       ??_init_TMR0 002C                         ??_init_TMR1 002C  
                       ??_init_TMR2 002C                            init_ram0 0D7D  
                       ??_init_uart 002C                            intlevel1 0000  
               _continuoEscribiendo 0048                    ___lwmod@dividend 0036  
                         stringcode 0800                         ??_wait_MSSP 002C  
                          printf@ap 00C1         __end_of_getnoPrimerArranque 0E4C  
                   ___lwmod@divisor 0034                     ___lwmod@counter 0039  
                          stringdir 0800                            stringtab 0800  
                       _porcentajeC 005A                         _SSPCON2bits 0091  
                    _spi_write_read 0F52                          _SSPCONbits 0014  
