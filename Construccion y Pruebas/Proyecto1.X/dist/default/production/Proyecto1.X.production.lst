

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 15 15:00:23 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	intentry,global,class=CODE,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2
    60                           	psect	text39,local,class=CODE,merge=1,delta=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2
    62                           	psect	text41,local,class=CODE,merge=1,delta=2
    63                           	psect	text42,local,class=CODE,merge=1,delta=2
    64                           	psect	text43,local,class=CODE,merge=1,delta=2
    65                           	psect	text44,local,class=CODE,merge=1,delta=2
    66                           	psect	text45,local,class=CODE,merge=1,delta=2
    67                           	psect	text46,local,class=CODE,merge=1,delta=2
    68                           	psect	text47,local,class=CODE,merge=1,delta=2
    69                           	psect	text48,local,class=CODE,merge=1,delta=2
    70                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    71                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    72                           	dabs	1,0x7E,2
    73     0000                     
    74                           ; Version 2.40
    75                           ; Generated 17/11/2021 GMT
    76                           ; 
    77                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution. Publication is not required when
    91                           ;        this file is used in an embedded application.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC16F886 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     008F                     	;# 
   152     0090                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0093                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0095                     	;# 
   160     0096                     	;# 
   161     0097                     	;# 
   162     0098                     	;# 
   163     0099                     	;# 
   164     009A                     	;# 
   165     009B                     	;# 
   166     009C                     	;# 
   167     009D                     	;# 
   168     009E                     	;# 
   169     009F                     	;# 
   170     0105                     	;# 
   171     0107                     	;# 
   172     0108                     	;# 
   173     0109                     	;# 
   174     010C                     	;# 
   175     010C                     	;# 
   176     010D                     	;# 
   177     010E                     	;# 
   178     010F                     	;# 
   179     0185                     	;# 
   180     0187                     	;# 
   181     0188                     	;# 
   182     0189                     	;# 
   183     018C                     	;# 
   184     018D                     	;# 
   185     0000                     	;# 
   186     0001                     	;# 
   187     0002                     	;# 
   188     0003                     	;# 
   189     0004                     	;# 
   190     0005                     	;# 
   191     0006                     	;# 
   192     0007                     	;# 
   193     0009                     	;# 
   194     000A                     	;# 
   195     000B                     	;# 
   196     000C                     	;# 
   197     000D                     	;# 
   198     000E                     	;# 
   199     000E                     	;# 
   200     000F                     	;# 
   201     0010                     	;# 
   202     0011                     	;# 
   203     0012                     	;# 
   204     0013                     	;# 
   205     0014                     	;# 
   206     0015                     	;# 
   207     0015                     	;# 
   208     0016                     	;# 
   209     0017                     	;# 
   210     0018                     	;# 
   211     0019                     	;# 
   212     001A                     	;# 
   213     001B                     	;# 
   214     001B                     	;# 
   215     001C                     	;# 
   216     001D                     	;# 
   217     001E                     	;# 
   218     001F                     	;# 
   219     0081                     	;# 
   220     0085                     	;# 
   221     0086                     	;# 
   222     0087                     	;# 
   223     0089                     	;# 
   224     008C                     	;# 
   225     008D                     	;# 
   226     008E                     	;# 
   227     008F                     	;# 
   228     0090                     	;# 
   229     0091                     	;# 
   230     0092                     	;# 
   231     0093                     	;# 
   232     0093                     	;# 
   233     0093                     	;# 
   234     0094                     	;# 
   235     0095                     	;# 
   236     0096                     	;# 
   237     0097                     	;# 
   238     0098                     	;# 
   239     0099                     	;# 
   240     009A                     	;# 
   241     009B                     	;# 
   242     009C                     	;# 
   243     009D                     	;# 
   244     009E                     	;# 
   245     009F                     	;# 
   246     0105                     	;# 
   247     0107                     	;# 
   248     0108                     	;# 
   249     0109                     	;# 
   250     010C                     	;# 
   251     010C                     	;# 
   252     010D                     	;# 
   253     010E                     	;# 
   254     010F                     	;# 
   255     0185                     	;# 
   256     0187                     	;# 
   257     0188                     	;# 
   258     0189                     	;# 
   259     018C                     	;# 
   260     018D                     	;# 
   261     0000                     	;# 
   262     0001                     	;# 
   263     0002                     	;# 
   264     0003                     	;# 
   265     0004                     	;# 
   266     0005                     	;# 
   267     0006                     	;# 
   268     0007                     	;# 
   269     0009                     	;# 
   270     000A                     	;# 
   271     000B                     	;# 
   272     000C                     	;# 
   273     000D                     	;# 
   274     000E                     	;# 
   275     000E                     	;# 
   276     000F                     	;# 
   277     0010                     	;# 
   278     0011                     	;# 
   279     0012                     	;# 
   280     0013                     	;# 
   281     0014                     	;# 
   282     0015                     	;# 
   283     0015                     	;# 
   284     0016                     	;# 
   285     0017                     	;# 
   286     0018                     	;# 
   287     0019                     	;# 
   288     001A                     	;# 
   289     001B                     	;# 
   290     001B                     	;# 
   291     001C                     	;# 
   292     001D                     	;# 
   293     001E                     	;# 
   294     001F                     	;# 
   295     0081                     	;# 
   296     0085                     	;# 
   297     0086                     	;# 
   298     0087                     	;# 
   299     0089                     	;# 
   300     008C                     	;# 
   301     008D                     	;# 
   302     008E                     	;# 
   303     008F                     	;# 
   304     0090                     	;# 
   305     0091                     	;# 
   306     0092                     	;# 
   307     0093                     	;# 
   308     0093                     	;# 
   309     0093                     	;# 
   310     0094                     	;# 
   311     0095                     	;# 
   312     0096                     	;# 
   313     0097                     	;# 
   314     0098                     	;# 
   315     0099                     	;# 
   316     009A                     	;# 
   317     009B                     	;# 
   318     009C                     	;# 
   319     009D                     	;# 
   320     009E                     	;# 
   321     009F                     	;# 
   322     0105                     	;# 
   323     0107                     	;# 
   324     0108                     	;# 
   325     0109                     	;# 
   326     010C                     	;# 
   327     010C                     	;# 
   328     010D                     	;# 
   329     010E                     	;# 
   330     010F                     	;# 
   331     0185                     	;# 
   332     0187                     	;# 
   333     0188                     	;# 
   334     0189                     	;# 
   335     018C                     	;# 
   336     018D                     	;# 
   337     0000                     	;# 
   338     0001                     	;# 
   339     0002                     	;# 
   340     0003                     	;# 
   341     0004                     	;# 
   342     0005                     	;# 
   343     0006                     	;# 
   344     0007                     	;# 
   345     0009                     	;# 
   346     000A                     	;# 
   347     000B                     	;# 
   348     000C                     	;# 
   349     000D                     	;# 
   350     000E                     	;# 
   351     000E                     	;# 
   352     000F                     	;# 
   353     0010                     	;# 
   354     0011                     	;# 
   355     0012                     	;# 
   356     0013                     	;# 
   357     0014                     	;# 
   358     0015                     	;# 
   359     0015                     	;# 
   360     0016                     	;# 
   361     0017                     	;# 
   362     0018                     	;# 
   363     0019                     	;# 
   364     001A                     	;# 
   365     001B                     	;# 
   366     001B                     	;# 
   367     001C                     	;# 
   368     001D                     	;# 
   369     001E                     	;# 
   370     001F                     	;# 
   371     0081                     	;# 
   372     0085                     	;# 
   373     0086                     	;# 
   374     0087                     	;# 
   375     0089                     	;# 
   376     008C                     	;# 
   377     008D                     	;# 
   378     008E                     	;# 
   379     008F                     	;# 
   380     0090                     	;# 
   381     0091                     	;# 
   382     0092                     	;# 
   383     0093                     	;# 
   384     0093                     	;# 
   385     0093                     	;# 
   386     0094                     	;# 
   387     0095                     	;# 
   388     0096                     	;# 
   389     0097                     	;# 
   390     0098                     	;# 
   391     0099                     	;# 
   392     009A                     	;# 
   393     009B                     	;# 
   394     009C                     	;# 
   395     009D                     	;# 
   396     009E                     	;# 
   397     009F                     	;# 
   398     0105                     	;# 
   399     0107                     	;# 
   400     0108                     	;# 
   401     0109                     	;# 
   402     010C                     	;# 
   403     010C                     	;# 
   404     010D                     	;# 
   405     010E                     	;# 
   406     010F                     	;# 
   407     0185                     	;# 
   408     0187                     	;# 
   409     0188                     	;# 
   410     0189                     	;# 
   411     018C                     	;# 
   412     018D                     	;# 
   413                           
   414                           	psect	idataBANK0
   415     085C                     __pidataBANK0:
   416                           
   417                           ;initializer for _los5msen15ms
   418     085C  3403               	retlw	3
   419     085D  3400               	retlw	0
   420                           
   421                           ;initializer for _leoADCHumedadTemp
   422     085E  3402               	retlw	2
   423     085F  3400               	retlw	0
   424                           
   425                           ;initializer for _anI
   426     0860  3401               	retlw	1
   427     0861  3400               	retlw	0
   428                           
   429                           ;initializer for _elPR2
   430     0862  34A7               	retlw	167
   431                           
   432                           ;initializer for _porcentajeC
   433     0863  34A7               	retlw	167
   434                           
   435                           ;initializer for _porcentajeSubenBaja
   436     0864  3401               	retlw	1
   437                           
   438                           ;initializer for _porcentajeMax
   439     0865  34A7               	retlw	167
   440                           
   441                           ;initializer for _direccionPWM
   442     0866  3401               	retlw	1
   443                           
   444                           ;initializer for _eltimer1L
   445     0867  34A9               	retlw	169
   446                           
   447                           ;initializer for _eltimer1H
   448     0868  3461               	retlw	97
   449                           
   450                           	psect	idataBANK1
   451     08AC                     __pidataBANK1:
   452                           
   453                           ;initializer for _los5msen1sT0
   454     08AC  3464               	retlw	100
   455     08AD  3400               	retlw	0
   456                           
   457                           ;initializer for _numLedes
   458     08AE  340A               	retlw	10
   459     08AF  3400               	retlw	0
   460                           
   461                           ;initializer for _ruidoMedio
   462     08B0  3484               	retlw	132
   463     08B1  3403               	retlw	3
   464                           
   465                           ;initializer for _ruidoBajo
   466     08B2  3490               	retlw	144
   467     08B3  3401               	retlw	1
   468                           
   469                           ;initializer for _contado1
   470     08B4  34A8               	retlw	168
   471     08B5  3461               	retlw	97
   472                           
   473                           ;initializer for _deboContinuar
   474     08B6  3401               	retlw	1
   475     08B7  3400               	retlw	0
   476                           
   477                           ;initializer for _direccionLED
   478     08B8  3402               	retlw	2
   479                           
   480                           ;initializer for _miLED
   481     08B9  34FF               	retlw	255
   482     08BA  34FF               	retlw	255
   483     08BB  34FF               	retlw	255
   484     08BC  341F               	retlw	31
   485                           
   486                           	psect	idataBANK3
   487     0846                     __pidataBANK3:
   488                           
   489                           ;initializer for _emitoSensores
   490     0846  34FF               	retlw	255
   491     0847  34FF               	retlw	255
   492     0848  34FF               	retlw	255
   493     0849  34FF               	retlw	255
   494     084A  34FF               	retlw	255
   495     084B  34FF               	retlw	255
   496     084C  34FF               	retlw	255
   497     084D  34FF               	retlw	255
   498     084E  34FF               	retlw	255
   499     084F  34FF               	retlw	255
   500                           
   501                           	psect	stringtext
   502     0300                     __pstringtext:
   503     0300                     stringtab:
   504     0300                     __stringtab:
   505                           
   506                           ;	String table - string pointers are 2 bytes each
   507     0300  1BFF               	btfsc	btemp+1,7
   508     0301  2B0A               	ljmp	stringcode
   509     0302  1383               	bcf	3,7
   510     0303  187F               	btfsc	btemp+1,0
   511     0304  1783               	bsf	3,7
   512     0305  0800               	movf	0,w
   513     0306  0A84               	incf	4,f
   514     0307  1903               	skipnz
   515     0308  0AFF               	incf	btemp+1,f
   516     0309  0008               	return
   517     030A                     stringcode:
   518     030A  087F               	movf	btemp+1,w
   519     030B  397F               	andlw	127
   520     030C  008A               	movwf	10
   521     030D  0804               	movf	4,w
   522     030E  0A84               	incf	4,f
   523     030F  1903               	skipnz
   524     0310  0AFF               	incf	btemp+1,f
   525     0311  0082               	movwf	2
   526     0312                     __stringbase:
   527     0312                     __end_of__stringtab:
   528     0312                     _dpowers:
   529     0312  3401               	retlw	1
   530     0313  3400               	retlw	0
   531     0314  340A               	retlw	10
   532     0315  3400               	retlw	0
   533     0316  3464               	retlw	100
   534     0317  3400               	retlw	0
   535     0318  34E8               	retlw	232
   536     0319  3403               	retlw	3
   537     031A  3410               	retlw	16
   538     031B  3427               	retlw	39
   539     031C                     __end_of_dpowers:
   540     0005                     _PORTAbits	set	5
   541     0007                     _PORTCbits	set	7
   542     0013                     _SSPBUF	set	19
   543     001A                     _RCREG	set	26
   544     001E                     _ADRESH	set	30
   545     0019                     _TXREG	set	25
   546     000D                     _PIR2bits	set	13
   547     001F                     _ADCON0bits	set	31
   548     0014                     _SSPCONbits	set	20
   549     0018                     _RCSTAbits	set	24
   550     0015                     _CCPR1L	set	21
   551     0017                     _CCP1CONbits	set	23
   552     000C                     _PIR1bits	set	12
   553     0012                     _T2CONbits	set	18
   554     0010                     _T1CONbits	set	16
   555     000E                     _TMR1L	set	14
   556     000F                     _TMR1H	set	15
   557     000B                     _INTCONbits	set	11
   558     0001                     _TMR0	set	1
   559     0064                     _TXIF	set	100
   560     0091                     _SSPCON2bits	set	145
   561     009E                     _ADRESL	set	158
   562     0087                     _TRISC	set	135
   563     0086                     _TRISB	set	134
   564     008F                     _OSCCON	set	143
   565     008D                     _PIE2bits	set	141
   566     009F                     _ADCON1bits	set	159
   567     0085                     _TRISA	set	133
   568     0093                     _SSPADD	set	147
   569     0099                     _SPBRG	set	153
   570     009A                     _SPBRGH	set	154
   571     0098                     _TXSTAbits	set	152
   572     0087                     _TRISCbits	set	135
   573     0092                     _PR2	set	146
   574     008C                     _PIE1bits	set	140
   575     0081                     _OPTION_REGbits	set	129
   576     010C                     _EEDAT	set	268
   577     010D                     _EEADR	set	269
   578     010F                     _EEADRH	set	271
   579     010E                     _EEDATH	set	270
   580     018D                     _EECON2	set	397
   581     018C                     _EECON1bits	set	396
   582     0188                     _ANSELbits	set	392
   583     0187                     _BAUDCTLbits	set	391
   584     0188                     _ANSEL	set	392
   585     031C                     STR_17:
   586     031C  3452               	retlw	82	;'R'
   587     031D  3475               	retlw	117	;'u'
   588     031E  3469               	retlw	105	;'i'
   589     031F  3464               	retlw	100	;'d'
   590     0320  346F               	retlw	111	;'o'
   591     0321  3420               	retlw	32	;' '
   592     0322  343D               	retlw	61	;'='
   593     0323  3420               	retlw	32	;' '
   594     0324  3463               	retlw	99	;'c'
   595     0325  3461               	retlw	97	;'a'
   596     0326  3474               	retlw	116	;'t'
   597     0327  3465               	retlw	101	;'e'
   598     0328  3467               	retlw	103	;'g'
   599     0329  346F               	retlw	111	;'o'
   600     032A  3472               	retlw	114	;'r'
   601     032B  3469               	retlw	105	;'i'
   602     032C  3461               	retlw	97	;'a'
   603     032D  3420               	retlw	32	;' '
   604     032E  3425               	retlw	37	;'%'
   605     032F  3464               	retlw	100	;'d'
   606     0330  342C               	retlw	44	;','
   607     0331  3420               	retlw	32	;' '
   608     0332  3468               	retlw	104	;'h'
   609     0333  3475               	retlw	117	;'u'
   610     0334  346D               	retlw	109	;'m'
   611     0335  3465               	retlw	101	;'e'
   612     0336  3464               	retlw	100	;'d'
   613     0337  3461               	retlw	97	;'a'
   614     0338  3464               	retlw	100	;'d'
   615     0339  3420               	retlw	32	;' '
   616     033A  343D               	retlw	61	;'='
   617     033B  3420               	retlw	32	;' '
   618     033C  3425               	retlw	37	;'%'
   619     033D  3464               	retlw	100	;'d'
   620     033E  3420               	retlw	32	;' '
   621     033F  3425               	retlw	37	;'%'
   622     0340  3425               	retlw	37	;'%'
   623     0341  342C               	retlw	44	;','
   624     0342  3420               	retlw	32	;' '
   625     0343  3474               	retlw	116	;'t'
   626     0344  3465               	retlw	101	;'e'
   627     0345  346D               	retlw	109	;'m'
   628     0346  3470               	retlw	112	;'p'
   629     0347  3465               	retlw	101	;'e'
   630     0348  3472               	retlw	114	;'r'
   631     0349  3461               	retlw	97	;'a'
   632     034A  3474               	retlw	116	;'t'
   633     034B  3475               	retlw	117	;'u'
   634     034C  3472               	retlw	114	;'r'
   635     034D  3461               	retlw	97	;'a'
   636     034E  3420               	retlw	32	;' '
   637     034F  343D               	retlw	61	;'='
   638     0350  3420               	retlw	32	;' '
   639     0351  3425               	retlw	37	;'%'
   640     0352  3464               	retlw	100	;'d'
   641     0353  3420               	retlw	32	;' '
   642     0354  3425               	retlw	37	;'%'
   643     0355  3463               	retlw	99	;'c'
   644     0356  3420               	retlw	32	;' '
   645     0357  3443               	retlw	67	;'C'
   646     0358  342C               	retlw	44	;','
   647     0359  3420               	retlw	32	;' '
   648     035A  3443               	retlw	67	;'C'
   649     035B  344F               	retlw	79	;'O'
   650     035C  3432               	retlw	50	;'2'
   651     035D  3420               	retlw	32	;' '
   652     035E  343D               	retlw	61	;'='
   653     035F  3420               	retlw	32	;' '
   654     0360  3425               	retlw	37	;'%'
   655     0361  3464               	retlw	100	;'d'
   656     0362  3420               	retlw	32	;' '
   657     0363  3470               	retlw	112	;'p'
   658     0364  3470               	retlw	112	;'p'
   659     0365  346D               	retlw	109	;'m'
   660     0366  342C               	retlw	44	;','
   661     0367  3420               	retlw	32	;' '
   662     0368  344C               	retlw	76	;'L'
   663     0369  3475               	retlw	117	;'u'
   664     036A  346D               	retlw	109	;'m'
   665     036B  3469               	retlw	105	;'i'
   666     036C  346E               	retlw	110	;'n'
   667     036D  346F               	retlw	111	;'o'
   668     036E  3473               	retlw	115	;'s'
   669     036F  3469               	retlw	105	;'i'
   670     0370  3464               	retlw	100	;'d'
   671     0371  3461               	retlw	97	;'a'
   672     0372  3464               	retlw	100	;'d'
   673     0373  3420               	retlw	32	;' '
   674     0374  343D               	retlw	61	;'='
   675     0375  3420               	retlw	32	;' '
   676     0376  3425               	retlw	37	;'%'
   677     0377  3464               	retlw	100	;'d'
   678     0378  3420               	retlw	32	;' '
   679     0379  346C               	retlw	108	;'l'
   680     037A  3478               	retlw	120	;'x'
   681     037B  340D               	retlw	13
   682     037C  340A               	retlw	10
   683     037D  3400               	retlw	0
   684     037E                     STR_6:
   685     037E  3445               	retlw	69	;'E'
   686     037F  3473               	retlw	115	;'s'
   687     0380  3463               	retlw	99	;'c'
   688     0381  3472               	retlw	114	;'r'
   689     0382  3469               	retlw	105	;'i'
   690     0383  3462               	retlw	98	;'b'
   691     0384  346F               	retlw	111	;'o'
   692     0385  3420               	retlw	32	;' '
   693     0386  3465               	retlw	101	;'e'
   694     0387  346E               	retlw	110	;'n'
   695     0388  3420               	retlw	32	;' '
   696     0389  3453               	retlw	83	;'S'
   697     038A  3450               	retlw	80	;'P'
   698     038B  3449               	retlw	73	;'I'
   699     038C  3420               	retlw	32	;' '
   700     038D  3463               	retlw	99	;'c'
   701     038E  3461               	retlw	97	;'a'
   702     038F  3464               	retlw	100	;'d'
   703     0390  3465               	retlw	101	;'e'
   704     0391  346E               	retlw	110	;'n'
   705     0392  3461               	retlw	97	;'a'
   706     0393  3420               	retlw	32	;' '
   707     0394  3469               	retlw	105	;'i'
   708     0395  346E               	retlw	110	;'n'
   709     0396  3469               	retlw	105	;'i'
   710     0397  3463               	retlw	99	;'c'
   711     0398  3469               	retlw	105	;'i'
   712     0399  3461               	retlw	97	;'a'
   713     039A  346C               	retlw	108	;'l'
   714     039B  3400               	retlw	0
   715     039C                     STR_8:
   716     039C  3445               	retlw	69	;'E'
   717     039D  3473               	retlw	115	;'s'
   718     039E  3463               	retlw	99	;'c'
   719     039F  3472               	retlw	114	;'r'
   720     03A0  3469               	retlw	105	;'i'
   721     03A1  3462               	retlw	98	;'b'
   722     03A2  346F               	retlw	111	;'o'
   723     03A3  3420               	retlw	32	;' '
   724     03A4  3465               	retlw	101	;'e'
   725     03A5  346E               	retlw	110	;'n'
   726     03A6  3420               	retlw	32	;' '
   727     03A7  3453               	retlw	83	;'S'
   728     03A8  3450               	retlw	80	;'P'
   729     03A9  3449               	retlw	73	;'I'
   730     03AA  3420               	retlw	32	;' '
   731     03AB  3463               	retlw	99	;'c'
   732     03AC  3461               	retlw	97	;'a'
   733     03AD  3464               	retlw	100	;'d'
   734     03AE  3465               	retlw	101	;'e'
   735     03AF  346E               	retlw	110	;'n'
   736     03B0  3461               	retlw	97	;'a'
   737     03B1  3420               	retlw	32	;' '
   738     03B2  3466               	retlw	102	;'f'
   739     03B3  3469               	retlw	105	;'i'
   740     03B4  346E               	retlw	110	;'n'
   741     03B5  3461               	retlw	97	;'a'
   742     03B6  346C               	retlw	108	;'l'
   743     03B7  3400               	retlw	0
   744     03B8                     STR_9:
   745     03B8  3445               	retlw	69	;'E'
   746     03B9  3478               	retlw	120	;'x'
   747     03BA  3469               	retlw	105	;'i'
   748     03BB  3474               	retlw	116	;'t'
   749     03BC  346F               	retlw	111	;'o'
   750     03BD  3420               	retlw	32	;' '
   751     03BE  3453               	retlw	83	;'S'
   752     03BF  3450               	retlw	80	;'P'
   753     03C0  3449               	retlw	73	;'I'
   754     03C1  3420               	retlw	32	;' '
   755     03C2  3463               	retlw	99	;'c'
   756     03C3  3461               	retlw	97	;'a'
   757     03C4  3464               	retlw	100	;'d'
   758     03C5  3465               	retlw	101	;'e'
   759     03C6  346E               	retlw	110	;'n'
   760     03C7  3461               	retlw	97	;'a'
   761     03C8  3420               	retlw	32	;' '
   762     03C9  3466               	retlw	102	;'f'
   763     03CA  3469               	retlw	105	;'i'
   764     03CB  346E               	retlw	110	;'n'
   765     03CC  3461               	retlw	97	;'a'
   766     03CD  346C               	retlw	108	;'l'
   767     03CE  3400               	retlw	0
   768     03CF                     STR_1:
   769     03CF  3449               	retlw	73	;'I'
   770     03D0  346E               	retlw	110	;'n'
   771     03D1  3469               	retlw	105	;'i'
   772     03D2  3420               	retlw	32	;' '
   773     03D3  3475               	retlw	117	;'u'
   774     03D4  3461               	retlw	97	;'a'
   775     03D5  3472               	retlw	114	;'r'
   776     03D6  3474               	retlw	116	;'t'
   777     03D7  3420               	retlw	32	;' '
   778     03D8  3461               	retlw	97	;'a'
   779     03D9  3464               	retlw	100	;'d'
   780     03DA  3463               	retlw	99	;'c'
   781     03DB  3420               	retlw	32	;' '
   782     03DC  3474               	retlw	116	;'t'
   783     03DD  3469               	retlw	105	;'i'
   784     03DE  346D               	retlw	109	;'m'
   785     03DF  3465               	retlw	101	;'e'
   786     03E0  3472               	retlw	114	;'r'
   787     03E1  3473               	retlw	115	;'s'
   788     03E2  340D               	retlw	13
   789     03E3  340A               	retlw	10
   790     03E4  3400               	retlw	0
   791     03E5                     STR_11:
   792     03E5  3447               	retlw	71	;'G'
   793     03E6  3475               	retlw	117	;'u'
   794     03E7  3461               	retlw	97	;'a'
   795     03E8  3472               	retlw	114	;'r'
   796     03E9  3464               	retlw	100	;'d'
   797     03EA  3461               	retlw	97	;'a'
   798     03EB  3472               	retlw	114	;'r'
   799     03EC  3420               	retlw	32	;' '
   800     03ED  346F               	retlw	111	;'o'
   801     03EE  3470               	retlw	112	;'p'
   802     03EF  3463               	retlw	99	;'c'
   803     03F0  3469               	retlw	105	;'i'
   804     03F1  346F               	retlw	111	;'o'
   805     03F2  346E               	retlw	110	;'n'
   806     03F3  3420               	retlw	32	;' '
   807     03F4  3464               	retlw	100	;'d'
   808     03F5  3465               	retlw	101	;'e'
   809     03F6  3420               	retlw	32	;' '
   810     03F7  346C               	retlw	108	;'l'
   811     03F8  3465               	retlw	101	;'e'
   812     03F9  3464               	retlw	100	;'d'
   813     03FA  3400               	retlw	0
   814     03FB                     STR_7:
   815     03FB  3445               	retlw	69	;'E'
   816     03FC  3473               	retlw	115	;'s'
   817     03FD  3463               	retlw	99	;'c'
   818     03FE  3472               	retlw	114	;'r'
   819     03FF  3469               	retlw	105	;'i'
   820     0400  3462               	retlw	98	;'b'
   821     0401  346F               	retlw	111	;'o'
   822     0402  3420               	retlw	32	;' '
   823     0403  3463               	retlw	99	;'c'
   824     0404  346F               	retlw	111	;'o'
   825     0405  346C               	retlw	108	;'l'
   826     0406  346F               	retlw	111	;'o'
   827     0407  3472               	retlw	114	;'r'
   828     0408  3420               	retlw	32	;' '
   829     0409  346C               	retlw	108	;'l'
   830     040A  3465               	retlw	101	;'e'
   831     040B  3464               	retlw	100	;'d'
   832     040C  3420               	retlw	32	;' '
   833     040D  3425               	retlw	37	;'%'
   834     040E  3464               	retlw	100	;'d'
   835     040F  3400               	retlw	0
   836     0410                     STR_10:
   837     0410  3449               	retlw	73	;'I'
   838     0411  346E               	retlw	110	;'n'
   839     0412  3469               	retlw	105	;'i'
   840     0413  3463               	retlw	99	;'c'
   841     0414  3469               	retlw	105	;'i'
   842     0415  3461               	retlw	97	;'a'
   843     0416  3472               	retlw	114	;'r'
   844     0417  3420               	retlw	32	;' '
   845     0418  3463               	retlw	99	;'c'
   846     0419  346F               	retlw	111	;'o'
   847     041A  3473               	retlw	115	;'s'
   848     041B  3461               	retlw	97	;'a'
   849     041C  3473               	retlw	115	;'s'
   850     041D  3420               	retlw	32	;' '
   851     041E  3453               	retlw	83	;'S'
   852     041F  3450               	retlw	80	;'P'
   853     0420  3449               	retlw	73	;'I'
   854     0421  3420               	retlw	32	;' '
   855     0422  3461               	retlw	97	;'a'
   856     0423  3400               	retlw	0
   857     0424                     STR_16:
   858     0424  3449               	retlw	73	;'I'
   859     0425  346E               	retlw	110	;'n'
   860     0426  3469               	retlw	105	;'i'
   861     0427  3463               	retlw	99	;'c'
   862     0428  3469               	retlw	105	;'i'
   863     0429  346F               	retlw	111	;'o'
   864     042A  3420               	retlw	32	;' '
   865     042B  3474               	retlw	116	;'t'
   866     042C  3465               	retlw	101	;'e'
   867     042D  3472               	retlw	114	;'r'
   868     042E  346D               	retlw	109	;'m'
   869     042F  3469               	retlw	105	;'i'
   870     0430  346E               	retlw	110	;'n'
   871     0431  3461               	retlw	97	;'a'
   872     0432  3464               	retlw	100	;'d'
   873     0433  346F               	retlw	111	;'o'
   874     0434  340D               	retlw	13
   875     0435  340A               	retlw	10
   876     0436  3400               	retlw	0
   877     0437                     STR_15:
   878     0437  3449               	retlw	73	;'I'
   879     0438  346E               	retlw	110	;'n'
   880     0439  3469               	retlw	105	;'i'
   881     043A  3479               	retlw	121	;'y'
   882     043B  346F               	retlw	111	;'o'
   883     043C  3420               	retlw	32	;' '
   884     043D  3474               	retlw	116	;'t'
   885     043E  3465               	retlw	101	;'e'
   886     043F  3472               	retlw	114	;'r'
   887     0440  346D               	retlw	109	;'m'
   888     0441  3469               	retlw	105	;'i'
   889     0442  346E               	retlw	110	;'n'
   890     0443  3461               	retlw	97	;'a'
   891     0444  3464               	retlw	100	;'d'
   892     0445  346F               	retlw	111	;'o'
   893     0446  340D               	retlw	13
   894     0447  340A               	retlw	10
   895     0448  3400               	retlw	0
   896     0449                     STR_12:
   897     0449  3450               	retlw	80	;'P'
   898     044A  3472               	retlw	114	;'r'
   899     044B  3475               	retlw	117	;'u'
   900     044C  3465               	retlw	101	;'e'
   901     044D  3462               	retlw	98	;'b'
   902     044E  346F               	retlw	111	;'o'
   903     044F  3420               	retlw	32	;' '
   904     0450  346D               	retlw	109	;'m'
   905     0451  3465               	retlw	101	;'e'
   906     0452  346D               	retlw	109	;'m'
   907     0453  346F               	retlw	111	;'o'
   908     0454  3472               	retlw	114	;'r'
   909     0455  3469               	retlw	105	;'i'
   910     0456  3461               	retlw	97	;'a'
   911     0457  3400               	retlw	0
   912     0458                     STR_5:
   913     0458  3449               	retlw	73	;'I'
   914     0459  346E               	retlw	110	;'n'
   915     045A  3469               	retlw	105	;'i'
   916     045B  3420               	retlw	32	;' '
   917     045C  346D               	retlw	109	;'m'
   918     045D  3465               	retlw	101	;'e'
   919     045E  346D               	retlw	109	;'m'
   920     045F  346F               	retlw	111	;'o'
   921     0460  3472               	retlw	114	;'r'
   922     0461  3469               	retlw	105	;'i'
   923     0462  3461               	retlw	97	;'a'
   924     0463  340D               	retlw	13
   925     0464  340A               	retlw	10
   926     0465  3400               	retlw	0
   927     0466                     STR_2:
   928     0466  3449               	retlw	73	;'I'
   929     0467  346E               	retlw	110	;'n'
   930     0468  3469               	retlw	105	;'i'
   931     0469  3420               	retlw	32	;' '
   932     046A  3463               	retlw	99	;'c'
   933     046B  3463               	retlw	99	;'c'
   934     046C  3470               	retlw	112	;'p'
   935     046D  3431               	retlw	49	;'1'
   936     046E  340D               	retlw	13
   937     046F  340A               	retlw	10
   938     0470  3400               	retlw	0
   939     0471                     STR_3:
   940     0471  3449               	retlw	73	;'I'
   941     0472  346E               	retlw	110	;'n'
   942     0473  3469               	retlw	105	;'i'
   943     0474  3420               	retlw	32	;' '
   944     0475  3469               	retlw	105	;'i'
   945     0476  3432               	retlw	50	;'2'
   946     0477  3463               	retlw	99	;'c'
   947     0478  340D               	retlw	13
   948     0479  340A               	retlw	10
   949     047A  3400               	retlw	0
   950     047B                     STR_4:
   951     047B  3449               	retlw	73	;'I'
   952     047C  346E               	retlw	110	;'n'
   953     047D  3469               	retlw	105	;'i'
   954     047E  3420               	retlw	32	;' '
   955     047F  3473               	retlw	115	;'s'
   956     0480  3470               	retlw	112	;'p'
   957     0481  3469               	retlw	105	;'i'
   958     0482  340D               	retlw	13
   959     0483  340A               	retlw	10
   960     0484  3400               	retlw	0
   961     0485                     STR_13:
   962     0485  3444               	retlw	68	;'D'
   963     0486  3465               	retlw	101	;'e'
   964     0487  3466               	retlw	102	;'f'
   965     0488  3461               	retlw	97	;'a'
   966     0489  3475               	retlw	117	;'u'
   967     048A  346C               	retlw	108	;'l'
   968     048B  3474               	retlw	116	;'t'
   969     048C  3400               	retlw	0
   970     048D                     STR_14:
   971     048D  3443               	retlw	67	;'C'
   972     048E  3475               	retlw	117	;'u'
   973     048F  3473               	retlw	115	;'s'
   974     0490  3474               	retlw	116	;'t'
   975     0491  346F               	retlw	111	;'o'
   976     0492  346D               	retlw	109	;'m'
   977     0493  3400               	retlw	0
   978                           
   979                           	psect	cinit
   980     0015                     start_initialization:	
   981                           ; #config settings
   982                           
   983     0015                     __initialization:
   984                           
   985                           ; Initialize objects allocated to BANK3
   986     0015  1783               	bsf	3,7	;select IRP bank2
   987     0016  309A               	movlw	low (__pdataBANK3+10)
   988     0017  00FD               	movwf	btemp+-1
   989     0018  3008               	movlw	high __pidataBANK3
   990     0019  00FE               	movwf	btemp
   991     001A  3046               	movlw	low __pidataBANK3
   992     001B  00FF               	movwf	btemp+1
   993     001C  3090               	movlw	low __pdataBANK3
   994     001D  0084               	movwf	4
   995     001E  120A  158A  20D3  120A  118A  	fcall	init_ram0
   996                           
   997                           ; Initialize objects allocated to BANK1
   998     0023  1383               	bcf	3,7	;select IRP bank0
   999     0024  30F0               	movlw	low (__pdataBANK1+17)
  1000     0025  00FD               	movwf	btemp+-1
  1001     0026  3008               	movlw	high __pidataBANK1
  1002     0027  00FE               	movwf	btemp
  1003     0028  30AC               	movlw	low __pidataBANK1
  1004     0029  00FF               	movwf	btemp+1
  1005     002A  30DF               	movlw	low __pdataBANK1
  1006     002B  0084               	movwf	4
  1007     002C  120A  158A  20D3  120A  118A  	fcall	init_ram0
  1008                           
  1009                           ; Initialize objects allocated to BANK0
  1010     0031  305D               	movlw	low (__pdataBANK0+13)
  1011     0032  00FD               	movwf	btemp+-1
  1012     0033  3008               	movlw	high __pidataBANK0
  1013     0034  00FE               	movwf	btemp
  1014     0035  305C               	movlw	low __pidataBANK0
  1015     0036  00FF               	movwf	btemp+1
  1016     0037  3050               	movlw	low __pdataBANK0
  1017     0038  0084               	movwf	4
  1018     0039  120A  158A  20D3  120A  118A  	fcall	init_ram0
  1019                           
  1020                           ; Clear objects allocated to BANK1
  1021     003E  30CB               	movlw	low __pbssBANK1
  1022     003F  0084               	movwf	4
  1023     0040  30DF               	movlw	low (__pbssBANK1+20)
  1024     0041  120A  158A  2022  120A  118A  	fcall	clear_ram0
  1025                           
  1026                           ; Clear objects allocated to BANK0
  1027     0046  303F               	movlw	low __pbssBANK0
  1028     0047  0084               	movwf	4
  1029     0048  3050               	movlw	low (__pbssBANK0+17)
  1030     0049  120A  158A  2022  120A  118A  	fcall	clear_ram0
  1031     004E                     end_of_initialization:	
  1032                           ;End of C runtime variable initialization code
  1033                           
  1034     004E                     __end_of__initialization:
  1035     004E  0183               	clrf	3
  1036     004F  120A  118A  2EAA   	ljmp	_main	;jump to C main() function
  1037                           
  1038                           	psect	bssBANK0
  1039     003F                     __pbssBANK0:
  1040     003F                     _copias1:
  1041     003F                     	ds	2
  1042     0041                     _actualizoLecturas:
  1043     0041                     	ds	2
  1044     0043                     _ruidoMasAlto:
  1045     0043                     	ds	2
  1046     0045                     _reciboPWM:
  1047     0045                     	ds	2
  1048     0047                     _reciboLED:
  1049     0047                     	ds	2
  1050     0049                     _continuoEscribiendo:
  1051     0049                     	ds	2
  1052     004B                     _x:
  1053     004B                     	ds	1
  1054     004C                     _porcentaje:
  1055     004C                     	ds	1
  1056     004D                     _porcentajeMin:
  1057     004D                     	ds	1
  1058     004E                     _pPWM:
  1059     004E                     	ds	1
  1060     004F                     _direccionInicial:
  1061     004F                     	ds	1
  1062                           
  1063                           	psect	dataBANK0
  1064     0050                     __pdataBANK0:
  1065     0050                     _los5msen15ms:
  1066     0050                     	ds	2
  1067     0052                     _leoADCHumedadTemp:
  1068     0052                     	ds	2
  1069     0054                     _anI:
  1070     0054                     	ds	2
  1071     0056                     _elPR2:
  1072     0056                     	ds	1
  1073     0057                     _porcentajeC:
  1074     0057                     	ds	1
  1075     0058                     _porcentajeSubenBaja:
  1076     0058                     	ds	1
  1077     0059                     _porcentajeMax:
  1078     0059                     	ds	1
  1079     005A                     _direccionPWM:
  1080     005A                     	ds	1
  1081     005B                     _eltimer1L:
  1082     005B                     	ds	1
  1083     005C                     _eltimer1H:
  1084     005C                     	ds	1
  1085                           
  1086                           	psect	bssBANK1
  1087     00CB                     __pbssBANK1:
  1088     00CB                     _valor:
  1089     00CB                     	ds	6
  1090     00D1                     _valorI2C:
  1091     00D1                     	ds	4
  1092     00D5                     _copias5s:
  1093     00D5                     	ds	2
  1094     00D7                     _copias:
  1095     00D7                     	ds	2
  1096     00D9                     _anINext:
  1097     00D9                     	ds	2
  1098     00DB                     _emitirMisSensores:
  1099     00DB                     	ds	2
  1100     00DD                     _continuar:
  1101     00DD                     	ds	2
  1102                           
  1103                           	psect	dataBANK1
  1104     00DF                     __pdataBANK1:
  1105     00DF                     _los5msen1sT0:
  1106     00DF                     	ds	2
  1107     00E1                     _numLedes:
  1108     00E1                     	ds	2
  1109     00E3                     _ruidoMedio:
  1110     00E3                     	ds	2
  1111     00E5                     _ruidoBajo:
  1112     00E5                     	ds	2
  1113     00E7                     _contado1:
  1114     00E7                     	ds	2
  1115     00E9                     _deboContinuar:
  1116     00E9                     	ds	2
  1117     00EB                     _direccionLED:
  1118     00EB                     	ds	1
  1119     00EC                     _miLED:
  1120     00EC                     	ds	4
  1121                           
  1122                           	psect	dataBANK3
  1123     0190                     __pdataBANK3:
  1124     0190                     _emitoSensores:
  1125     0190                     	ds	10
  1126                           
  1127                           	psect	inittext
  1128     08CF                     init_fetch0:	
  1129                           ;	Called with low address in FSR and high address in W
  1130                           
  1131     08CF  087E               	movf	btemp,w
  1132     08D0  008A               	movwf	10
  1133     08D1  087F               	movf	btemp+1,w
  1134     08D2  0082               	movwf	2
  1135     08D3                     init_ram0:	
  1136                           ;Called with:
  1137                           ;	high address of idata address in btemp 
  1138                           ;	low address of idata address in btemp+1 
  1139                           ;	low address of data in FSR
  1140                           ;	high address + 1 of data in btemp-1
  1141                           
  1142     08D3  120A  158A  20CF  120A  158A  	fcall	init_fetch0
  1143     08D8  0080               	movwf	0
  1144     08D9  0A84               	incf	4,f
  1145     08DA  0804               	movf	4,w
  1146     08DB  067D               	xorwf	btemp+-1,w
  1147     08DC  1903               	btfsc	3,2
  1148     08DD  3400               	retlw	0
  1149     08DE  0AFF               	incf	btemp+1,f
  1150     08DF  1903               	btfsc	3,2
  1151     08E0  0AFE               	incf	btemp,f
  1152     08E1  28D3               	goto	init_ram0
  1153                           
  1154                           	psect	clrtext
  1155     0822                     clear_ram0:	
  1156                           ;	Called with FSR containing the base address, and
  1157                           ;	W with the last address+1
  1158                           
  1159     0822  0064               	clrwdt	;clear the watchdog before getting into this loop
  1160     0823                     clrloop0:
  1161     0823  0180               	clrf	0	;clear RAM location pointed to by FSR
  1162     0824  0A84               	incf	4,f	;increment pointer
  1163     0825  0604               	xorwf	4,w	;XOR with final address
  1164     0826  1903               	btfsc	3,2	;have we reached the end yet?
  1165     0827  3400               	retlw	0	;all done for this memory range, return
  1166     0828  0604               	xorwf	4,w	;XOR again to restore value
  1167     0829  2823               	goto	clrloop0	;do the next byte
  1168                           
  1169                           	psect	cstackBANK3
  1170     019A                     __pcstackBANK3:
  1171     019A                     cosasSPI@roj:
  1172                           
  1173                           ; 1 bytes @ 0x0
  1174     019A                     	ds	1
  1175     019B                     cosasSPI@lumo:
  1176                           
  1177                           ; 1 bytes @ 0x1
  1178     019B                     	ds	1
  1179     019C                     cosasSPI@i:
  1180                           
  1181                           ; 2 bytes @ 0x2
  1182     019C                     	ds	2
  1183     019E                     ?_setLED:
  1184     019E                     setLED@green:	
  1185                           ; 1 bytes @ 0x4
  1186                           
  1187                           
  1188                           ; 1 bytes @ 0x4
  1189     019E                     	ds	1
  1190     019F                     setLED@blue:
  1191                           
  1192                           ; 1 bytes @ 0x5
  1193     019F                     	ds	1
  1194     01A0                     setLED@luminosidad:
  1195                           
  1196                           ; 1 bytes @ 0x6
  1197     01A0                     	ds	1
  1198     01A1                     ??_main:
  1199                           
  1200                           ; 1 bytes @ 0x7
  1201     01A1                     	ds	2
  1202                           
  1203                           	psect	cstackBANK1
  1204     00A0                     __pcstackBANK1:
  1205     00A0                     ??_i2c_rstart:
  1206     00A0                     ??_i2c_write:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209     00A0                     ??_i2c_read:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212     00A0                     ??_spi_write_read:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215     00A0                     ??_i2c_stop:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218     00A0                     ??_init_TMR0:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221     00A0                     ??_init_TMR1:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224     00A0                     ??_init_TMR2:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227     00A0                     ??_init_CCP1_PWM:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230     00A0                     ??_init_uart:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233     00A0                     ??_init_I2C:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236     00A0                     ??_init_SPI:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239     00A0                     ??_init_ADC:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242     00A0                     ??_init_memoria:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245     00A0                     ??_putch:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248     00A0                     ??_leerMemoria:	
  1249                           ; 1 bytes @ 0x0
  1250                           
  1251     00A0                     ??_analisisRuido:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254     00A0                     ??_wait_MSSP:	
  1255                           ; 1 bytes @ 0x0
  1256                           
  1257     00A0                     ?___bmul:	
  1258                           ; 1 bytes @ 0x0
  1259                           
  1260     00A0                     ?_getLumen:	
  1261                           ; 1 bytes @ 0x0
  1262                           
  1263     00A0                     ?_getCO2:	
  1264                           ; 2 bytes @ 0x0
  1265                           
  1266     00A0                     ?___awdiv:	
  1267                           ; 2 bytes @ 0x0
  1268                           
  1269     00A0                     ?___lwdiv:	
  1270                           ; 2 bytes @ 0x0
  1271                           
  1272     00A0                     putch@c:	
  1273                           ; 2 bytes @ 0x0
  1274                           
  1275     00A0                     leerMemoria@direccion:	
  1276                           ; 1 bytes @ 0x0
  1277                           
  1278     00A0                     i2c_write@I2C_data:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281     00A0                     i2c_read@master_ack:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284     00A0                     ___bmul@multiplicand:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287     00A0                     ___awdiv@divisor:	
  1288                           ; 1 bytes @ 0x0
  1289                           
  1290     00A0                     ___lwdiv@divisor:	
  1291                           ; 2 bytes @ 0x0
  1292                           
  1293                           
  1294                           ; 2 bytes @ 0x0
  1295     00A0                     	ds	1
  1296     00A1                     ??_getnoPrimerArranque:
  1297     00A1                     ??___bmul:	
  1298                           ; 1 bytes @ 0x1
  1299                           
  1300     00A1                     ?_escribirMemoria:	
  1301                           ; 1 bytes @ 0x1
  1302                           
  1303     00A1                     escribirMemoria@dato:	
  1304                           ; 2 bytes @ 0x1
  1305                           
  1306     00A1                     getnoPrimerArranque@aux:	
  1307                           ; 1 bytes @ 0x1
  1308                           
  1309     00A1                     i2c_read@I2C_data:	
  1310                           ; 1 bytes @ 0x1
  1311                           
  1312                           
  1313                           ; 1 bytes @ 0x1
  1314     00A1                     	ds	1
  1315     00A2                     ??_setLumen:
  1316     00A2                     ??_getLumen:	
  1317                           ; 1 bytes @ 0x2
  1318                           
  1319     00A2                     ??_setCO2:	
  1320                           ; 1 bytes @ 0x2
  1321                           
  1322     00A2                     ??_getCO2:	
  1323                           ; 1 bytes @ 0x2
  1324                           
  1325     00A2                     ??_escribirMemoria:	
  1326                           ; 1 bytes @ 0x2
  1327                           
  1328     00A2                     analisisRuido@temp:	
  1329                           ; 1 bytes @ 0x2
  1330                           
  1331     00A2                     spi_write_read@one_byte:	
  1332                           ; 1 bytes @ 0x2
  1333                           
  1334     00A2                     ___bmul@product:	
  1335                           ; 1 bytes @ 0x2
  1336                           
  1337     00A2                     escribirMemoria@confirmado:	
  1338                           ; 1 bytes @ 0x2
  1339                           
  1340     00A2                     ___awdiv@dividend:	
  1341                           ; 2 bytes @ 0x2
  1342                           
  1343     00A2                     ___lwdiv@dividend:	
  1344                           ; 2 bytes @ 0x2
  1345                           
  1346                           
  1347                           ; 2 bytes @ 0x2
  1348     00A2                     	ds	1
  1349     00A3                     spi_write_read@answer:
  1350     00A3                     ___bmul@multiplier:	
  1351                           ; 1 bytes @ 0x3
  1352                           
  1353                           
  1354                           ; 1 bytes @ 0x3
  1355     00A3                     	ds	1
  1356     00A4                     ??_analisisResto:
  1357     00A4                     ??___awdiv:	
  1358                           ; 1 bytes @ 0x4
  1359                           
  1360     00A4                     ??___lwdiv:	
  1361                           ; 1 bytes @ 0x4
  1362                           
  1363     00A4                     escribirMemoria@direccion:	
  1364                           ; 1 bytes @ 0x4
  1365                           
  1366     00A4                     spi_write_read@x:	
  1367                           ; 1 bytes @ 0x4
  1368                           
  1369                           
  1370                           ; 1 bytes @ 0x4
  1371     00A4                     	ds	1
  1372     00A5                     ___awdiv@counter:
  1373     00A5                     ___lwdiv@counter:	
  1374                           ; 1 bytes @ 0x5
  1375                           
  1376     00A5                     escribirMemoria@contador:	
  1377                           ; 1 bytes @ 0x5
  1378                           
  1379                           
  1380                           ; 2 bytes @ 0x5
  1381     00A5                     	ds	1
  1382     00A6                     ___awdiv@sign:
  1383     00A6                     ___lwdiv@quotient:	
  1384                           ; 1 bytes @ 0x6
  1385                           
  1386                           
  1387                           ; 2 bytes @ 0x6
  1388     00A6                     	ds	1
  1389     00A7                     ___awdiv@quotient:
  1390                           
  1391                           ; 2 bytes @ 0x7
  1392     00A7                     	ds	1
  1393     00A8                     ?___lwmod:
  1394     00A8                     ___lwmod@divisor:	
  1395                           ; 2 bytes @ 0x8
  1396                           
  1397                           
  1398                           ; 2 bytes @ 0x8
  1399     00A8                     	ds	1
  1400     00A9                     ??_setPWM:
  1401                           
  1402                           ; 1 bytes @ 0x9
  1403     00A9                     	ds	1
  1404     00AA                     ___lwmod@dividend:
  1405                           
  1406                           ; 2 bytes @ 0xA
  1407     00AA                     	ds	1
  1408     00AB                     setPWM@porcent:
  1409                           
  1410                           ; 1 bytes @ 0xB
  1411     00AB                     	ds	1
  1412     00AC                     ??___lwmod:
  1413                           
  1414                           ; 1 bytes @ 0xC
  1415     00AC                     	ds	1
  1416     00AD                     ___lwmod@counter:
  1417                           
  1418                           ; 1 bytes @ 0xD
  1419     00AD                     	ds	1
  1420     00AE                     ?_printf:
  1421     00AE                     printf@f:	
  1422                           ; 2 bytes @ 0xE
  1423                           
  1424                           
  1425                           ; 2 bytes @ 0xE
  1426     00AE                     	ds	14
  1427     00BC                     ??_printf:
  1428                           
  1429                           ; 1 bytes @ 0x1C
  1430     00BC                     	ds	4
  1431     00C0                     printf@flag:
  1432                           
  1433                           ; 1 bytes @ 0x20
  1434     00C0                     	ds	1
  1435     00C1                     printf@prec:
  1436                           
  1437                           ; 1 bytes @ 0x21
  1438     00C1                     	ds	1
  1439     00C2                     printf@ap:
  1440                           
  1441                           ; 1 bytes @ 0x22
  1442     00C2                     	ds	1
  1443     00C3                     printf@val:
  1444                           
  1445                           ; 2 bytes @ 0x23
  1446     00C3                     	ds	2
  1447     00C5                     printf@c:
  1448                           
  1449                           ; 1 bytes @ 0x25
  1450     00C5                     	ds	1
  1451     00C6                     ??_initYo:
  1452     00C6                     ?_cosasSPI:	
  1453                           ; 1 bytes @ 0x26
  1454                           
  1455     00C6                     cosasSPI@verd:	
  1456                           ; 1 bytes @ 0x26
  1457                           
  1458                           
  1459                           ; 1 bytes @ 0x26
  1460     00C6                     	ds	1
  1461     00C7                     cosasSPI@azu:
  1462                           
  1463                           ; 1 bytes @ 0x27
  1464     00C7                     	ds	1
  1465     00C8                     cosasSPI@lumi:
  1466                           
  1467                           ; 1 bytes @ 0x28
  1468     00C8                     	ds	1
  1469     00C9                     ??_cosasSPI:
  1470     00C9                     ??_setLED:	
  1471                           ; 1 bytes @ 0x29
  1472                           
  1473     00C9                     setLED@red:	
  1474                           ; 1 bytes @ 0x29
  1475                           
  1476                           
  1477                           ; 1 bytes @ 0x29
  1478     00C9                     	ds	1
  1479     00CA                     ??_initActuadoresSegunMemoria:
  1480     00CA                     main@ruidoAux:	
  1481                           ; 1 bytes @ 0x2A
  1482                           
  1483                           
  1484                           ; 1 bytes @ 0x2A
  1485     00CA                     	ds	1
  1486                           
  1487                           	psect	cstackCOMMON
  1488     0070                     __pcstackCOMMON:
  1489     0070                     ?_i2c_rstart:
  1490     0070                     ?_i2c_write:	
  1491                           ; 1 bytes @ 0x0
  1492                           
  1493     0070                     ?_i2c_read:	
  1494                           ; 1 bytes @ 0x0
  1495                           
  1496     0070                     ?_spi_write_read:	
  1497                           ; 1 bytes @ 0x0
  1498                           
  1499     0070                     ?_i2c_stop:	
  1500                           ; 1 bytes @ 0x0
  1501                           
  1502     0070                     ?_init_TMR0:	
  1503                           ; 1 bytes @ 0x0
  1504                           
  1505     0070                     ?_init_TMR1:	
  1506                           ; 1 bytes @ 0x0
  1507                           
  1508     0070                     ?_init_TMR2:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511     0070                     ?_init_CCP1_PWM:	
  1512                           ; 1 bytes @ 0x0
  1513                           
  1514     0070                     ?_init_uart:	
  1515                           ; 1 bytes @ 0x0
  1516                           
  1517     0070                     ?_init_I2C:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520     0070                     ?_init_SPI:	
  1521                           ; 1 bytes @ 0x0
  1522                           
  1523     0070                     ?_init_ADC:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526     0070                     ?_init_memoria:	
  1527                           ; 1 bytes @ 0x0
  1528                           
  1529     0070                     ?_putch:	
  1530                           ; 1 bytes @ 0x0
  1531                           
  1532     0070                     ?_setLumen:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535     0070                     ?_setCO2:	
  1536                           ; 1 bytes @ 0x0
  1537                           
  1538     0070                     ?_leerMemoria:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541     0070                     ?_initYo:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544     0070                     ?_getnoPrimerArranque:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547     0070                     ?_setPWM:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550     0070                     ?_analisisRuido:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553     0070                     ?_analisisResto:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556     0070                     ?_initActuadoresSegunMemoria:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559     0070                     ?_TRAT_INT:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562     0070                     ?_main:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565     0070                     ?_wait_MSSP:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568     0070                     ?i1_putch:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571     0070                     ??i1_putch:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574     0070                     ?i1_leerMemoria:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577     0070                     ??i1_leerMemoria:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580     0070                     ?i1_setPWM:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583     0070                     ?i1_spi_write_read:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586     0070                     ??i1_spi_write_read:	
  1587                           ; 1 bytes @ 0x0
  1588                           
  1589     0070                     ?i1___bmul:	
  1590                           ; 1 bytes @ 0x0
  1591                           
  1592     0070                     ?i1___awdiv:	
  1593                           ; 1 bytes @ 0x0
  1594                           
  1595     0070                     ?i1___lwdiv:	
  1596                           ; 2 bytes @ 0x0
  1597                           
  1598     0070                     i1putch@c:	
  1599                           ; 2 bytes @ 0x0
  1600                           
  1601     0070                     i1leerMemoria@direccion:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604     0070                     i1___bmul@multiplicand:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607     0070                     i1___awdiv@divisor:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610     0070                     i1___lwdiv@divisor:	
  1611                           ; 2 bytes @ 0x0
  1612                           
  1613                           
  1614                           ; 2 bytes @ 0x0
  1615     0070                     	ds	1
  1616     0071                     ??i1___bmul:
  1617     0071                     ?i1_escribirMemoria:	
  1618                           ; 1 bytes @ 0x1
  1619                           
  1620     0071                     i1escribirMemoria@dato:	
  1621                           ; 2 bytes @ 0x1
  1622                           
  1623                           
  1624                           ; 1 bytes @ 0x1
  1625     0071                     	ds	1
  1626     0072                     ??i1_escribirMemoria:
  1627     0072                     i1spi_write_read@one_byte:	
  1628                           ; 1 bytes @ 0x2
  1629                           
  1630     0072                     i1___bmul@product:	
  1631                           ; 1 bytes @ 0x2
  1632                           
  1633     0072                     i1escribirMemoria@confirmado:	
  1634                           ; 1 bytes @ 0x2
  1635                           
  1636     0072                     i1___awdiv@dividend:	
  1637                           ; 2 bytes @ 0x2
  1638                           
  1639     0072                     i1___lwdiv@dividend:	
  1640                           ; 2 bytes @ 0x2
  1641                           
  1642                           
  1643                           ; 2 bytes @ 0x2
  1644     0072                     	ds	1
  1645     0073                     i1spi_write_read@answer:
  1646     0073                     i1___bmul@multiplier:	
  1647                           ; 1 bytes @ 0x3
  1648                           
  1649                           
  1650                           ; 1 bytes @ 0x3
  1651     0073                     	ds	1
  1652     0074                     ??i1___awdiv:
  1653     0074                     ??i1___lwdiv:	
  1654                           ; 1 bytes @ 0x4
  1655                           
  1656     0074                     i1escribirMemoria@direccion:	
  1657                           ; 1 bytes @ 0x4
  1658                           
  1659     0074                     i1spi_write_read@x:	
  1660                           ; 1 bytes @ 0x4
  1661                           
  1662                           
  1663                           ; 1 bytes @ 0x4
  1664     0074                     	ds	1
  1665     0075                     i1___awdiv@counter:
  1666     0075                     i1escribirMemoria@contador:	
  1667                           ; 1 bytes @ 0x5
  1668                           
  1669     0075                     i1___lwdiv@quotient:	
  1670                           ; 2 bytes @ 0x5
  1671                           
  1672                           
  1673                           ; 2 bytes @ 0x5
  1674     0075                     	ds	1
  1675     0076                     i1___awdiv@sign:
  1676                           
  1677                           ; 1 bytes @ 0x6
  1678     0076                     	ds	1
  1679     0077                     i1___lwdiv@counter:
  1680     0077                     i1___awdiv@quotient:	
  1681                           ; 1 bytes @ 0x7
  1682                           
  1683                           
  1684                           ; 2 bytes @ 0x7
  1685     0077                     	ds	1
  1686     0078                     ?i1___lwmod:
  1687     0078                     i1___lwmod@divisor:	
  1688                           ; 2 bytes @ 0x8
  1689                           
  1690                           
  1691                           ; 2 bytes @ 0x8
  1692     0078                     	ds	1
  1693     0079                     ??i1_setPWM:
  1694                           
  1695                           ; 1 bytes @ 0x9
  1696     0079                     	ds	1
  1697     007A                     i1___lwmod@dividend:
  1698                           
  1699                           ; 2 bytes @ 0xA
  1700     007A                     	ds	1
  1701     007B                     i1setPWM@porcent:
  1702                           
  1703                           ; 1 bytes @ 0xB
  1704     007B                     	ds	1
  1705     007C                     ??i1___lwmod:
  1706                           
  1707                           ; 1 bytes @ 0xC
  1708     007C                     	ds	1
  1709     007D                     i1___lwmod@counter:
  1710                           
  1711                           ; 1 bytes @ 0xD
  1712     007D                     	ds	1
  1713     007E                     ??i1_cosasSPI:
  1714     007E                     ??i1_setLED:	
  1715                           ; 1 bytes @ 0xE
  1716                           
  1717                           
  1718                           	psect	cstackBANK0
  1719     0020                     __pcstackBANK0:	
  1720                           ; 1 bytes @ 0xE
  1721                           
  1722     0020                     ?i1_printf:
  1723     0020                     i1printf@f:	
  1724                           ; 2 bytes @ 0x0
  1725                           
  1726                           
  1727                           ; 2 bytes @ 0x0
  1728     0020                     	ds	4
  1729     0024                     ??i1_printf:
  1730                           
  1731                           ; 1 bytes @ 0x4
  1732     0024                     	ds	4
  1733     0028                     i1printf@flag:
  1734                           
  1735                           ; 1 bytes @ 0x8
  1736     0028                     	ds	1
  1737     0029                     i1printf@prec:
  1738                           
  1739                           ; 1 bytes @ 0x9
  1740     0029                     	ds	1
  1741     002A                     i1printf@ap:
  1742                           
  1743                           ; 1 bytes @ 0xA
  1744     002A                     	ds	1
  1745     002B                     i1printf@val:
  1746                           
  1747                           ; 2 bytes @ 0xB
  1748     002B                     	ds	2
  1749     002D                     i1printf@c:
  1750                           
  1751                           ; 1 bytes @ 0xD
  1752     002D                     	ds	1
  1753     002E                     ?i1_cosasSPI:
  1754     002E                     i1cosasSPI@verd:	
  1755                           ; 1 bytes @ 0xE
  1756                           
  1757                           
  1758                           ; 1 bytes @ 0xE
  1759     002E                     	ds	1
  1760     002F                     i1cosasSPI@azu:
  1761                           
  1762                           ; 1 bytes @ 0xF
  1763     002F                     	ds	1
  1764     0030                     i1cosasSPI@lumi:
  1765                           
  1766                           ; 1 bytes @ 0x10
  1767     0030                     	ds	1
  1768     0031                     i1cosasSPI@roj:
  1769                           
  1770                           ; 1 bytes @ 0x11
  1771     0031                     	ds	1
  1772     0032                     i1cosasSPI@lumo:
  1773                           
  1774                           ; 1 bytes @ 0x12
  1775     0032                     	ds	1
  1776     0033                     i1cosasSPI@i:
  1777                           
  1778                           ; 2 bytes @ 0x13
  1779     0033                     	ds	2
  1780     0035                     ?i1_setLED:
  1781     0035                     i1setLED@green:	
  1782                           ; 1 bytes @ 0x15
  1783                           
  1784                           
  1785                           ; 1 bytes @ 0x15
  1786     0035                     	ds	1
  1787     0036                     i1setLED@blue:
  1788                           
  1789                           ; 1 bytes @ 0x16
  1790     0036                     	ds	1
  1791     0037                     i1setLED@luminosidad:
  1792                           
  1793                           ; 1 bytes @ 0x17
  1794     0037                     	ds	1
  1795     0038                     i1setLED@red:
  1796                           
  1797                           ; 1 bytes @ 0x18
  1798     0038                     	ds	1
  1799     0039                     ??_TRAT_INT:
  1800                           
  1801                           ; 1 bytes @ 0x19
  1802     0039                     	ds	6
  1803                           
  1804                           	psect	maintext
  1805     06AA                     __pmaintext:	
  1806 ;;
  1807 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1808 ;;
  1809 ;; *************** function _main *****************
  1810 ;; Defined at:
  1811 ;;		line 614 in file "main.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;		None
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  ruidoAux        1   42[BANK1 ] unsigned char 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : B00/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1825 ;;      Params:         0       0       0       0       0
  1826 ;;      Locals:         0       0       1       0       0
  1827 ;;      Temps:          0       0       0       2       0
  1828 ;;      Totals:         0       0       1       2       0
  1829 ;;Total ram usage:        3 bytes
  1830 ;; Hardware stack levels required when called: 10
  1831 ;; This function calls:
  1832 ;;		_analisisResto
  1833 ;;		_analisisRuido
  1834 ;;		_i2c_stop
  1835 ;;		_initActuadoresSegunMemoria
  1836 ;;		_initYo
  1837 ;;		_printf
  1838 ;; This function is called by:
  1839 ;;		Startup code after reset
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843     06AA                     _main:	
  1844                           ;psect for function _main
  1845                           
  1846     06AA                     l3836:	
  1847                           ;incstack = 0
  1848 ;; hardware stack exceeded
  1849                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1850                           
  1851                           
  1852                           ;main.c: 615:     initYo();
  1853     06AA  120A  158A  26B0  120A  118A  	fcall	_initYo
  1854                           
  1855                           ;main.c: 616:     printf("Iniyo terminado\r\n");
  1856     06AF  3037               	movlw	low (STR_15| (0+32768))
  1857     06B0  1683               	bsf	3,5	;RP0=1, select bank1
  1858     06B1  1303               	bcf	3,6	;RP1=0, select bank1
  1859     06B2  00AE               	movwf	printf@f^(0+128)
  1860     06B3  3084               	movlw	high (STR_15| (0+32768))
  1861     06B4  00AF               	movwf	(printf@f^(0+128)+1)
  1862     06B5  120A  118A  2494  120A  118A  	fcall	_printf
  1863                           
  1864                           ;main.c: 617:     initActuadoresSegunMemoria();
  1865     06BA  120A  158A  24BD  120A  118A  	fcall	_initActuadoresSegunMemoria
  1866                           
  1867                           ;main.c: 618:     printf("Inicio terminado\r\n");
  1868     06BF  3024               	movlw	low (STR_16| (0+32768))
  1869     06C0  1683               	bsf	3,5	;RP0=1, select bank1
  1870     06C1  1303               	bcf	3,6	;RP1=0, select bank1
  1871     06C2  00AE               	movwf	printf@f^(0+128)
  1872     06C3  3084               	movlw	high (STR_16| (0+32768))
  1873     06C4  00AF               	movwf	(printf@f^(0+128)+1)
  1874     06C5  120A  118A  2494  120A  118A  	fcall	_printf
  1875                           
  1876                           ;main.c: 620:     while (deboContinuar) {
  1877     06CA  2F4C               	goto	l3858
  1878     06CB                     l3838:
  1879                           
  1880                           ;main.c: 621:         if (emitirMisSensores) {
  1881     06CB  085B               	movf	_emitirMisSensores^(0+128),w
  1882     06CC  045C               	iorwf	(_emitirMisSensores+1)^(0+128),w
  1883     06CD  1903               	btfsc	3,2
  1884     06CE  2ED0               	goto	u3151
  1885     06CF  2ED1               	goto	u3150
  1886     06D0                     u3151:
  1887     06D0  2F42               	goto	l3854
  1888     06D1                     u3150:
  1889     06D1                     l3840:
  1890                           
  1891                           ;main.c: 622:             char ruidoAux = 'E';
  1892     06D1  3045               	movlw	69
  1893     06D2  00CA               	movwf	main@ruidoAux^(0+128)
  1894                           
  1895                           ;main.c: 623:             switch (emitoSensores[0]) {
  1896     06D3  2EE3               	goto	l3850
  1897     06D4                     l3842:
  1898                           
  1899                           ;main.c: 625:                     ruidoAux = 'b';
  1900     06D4  3062               	movlw	98
  1901     06D5  1683               	bsf	3,5	;RP0=1, select bank1
  1902     06D6  1303               	bcf	3,6	;RP1=0, select bank1
  1903     06D7  00CA               	movwf	main@ruidoAux^(0+128)
  1904                           
  1905                           ;main.c: 626:                     break;
  1906     06D8  2EF5               	goto	l3852
  1907     06D9                     l3844:
  1908                           
  1909                           ;main.c: 628:                     ruidoAux = 'm';
  1910     06D9  306D               	movlw	109
  1911     06DA  1683               	bsf	3,5	;RP0=1, select bank1
  1912     06DB  1303               	bcf	3,6	;RP1=0, select bank1
  1913     06DC  00CA               	movwf	main@ruidoAux^(0+128)
  1914                           
  1915                           ;main.c: 629:                     break;
  1916     06DD  2EF5               	goto	l3852
  1917     06DE                     l3846:
  1918                           
  1919                           ;main.c: 631:                     ruidoAux = 'a';
  1920     06DE  3061               	movlw	97
  1921     06DF  1683               	bsf	3,5	;RP0=1, select bank1
  1922     06E0  1303               	bcf	3,6	;RP1=0, select bank1
  1923     06E1  00CA               	movwf	main@ruidoAux^(0+128)
  1924                           
  1925                           ;main.c: 632:                     break;
  1926     06E2  2EF5               	goto	l3852
  1927     06E3                     l3850:
  1928                           
  1929                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1930                           ; Switch size 1, requested type "simple"
  1931                           ; Number of cases is 1, Range of values is 0 to 0
  1932                           ; switch strategies available:
  1933                           ; Name         Instructions Cycles
  1934                           ; simple_byte            4     3 (average)
  1935                           ; direct_byte           11     8 (fixed)
  1936                           ; jumptable            260     6 (fixed)
  1937                           ;	Chosen strategy is simple_byte
  1938     06E3  1683               	bsf	3,5	;RP0=1, select bank3
  1939     06E4  1703               	bsf	3,6	;RP1=1, select bank3
  1940     06E5  0811               	movf	(_emitoSensores+1)^(0+384),w
  1941     06E6  3A00               	xorlw	0	; case 0
  1942     06E7  1903               	skipnz
  1943     06E8  2EEA               	goto	l3962
  1944     06E9  2EF5               	goto	l3852
  1945     06EA                     l3962:
  1946                           
  1947                           ; Switch size 1, requested type "simple"
  1948                           ; Number of cases is 3, Range of values is 1 to 3
  1949                           ; switch strategies available:
  1950                           ; Name         Instructions Cycles
  1951                           ; simple_byte           10     6 (average)
  1952                           ; direct_byte           20    11 (fixed)
  1953                           ; jumptable            263     9 (fixed)
  1954                           ;	Chosen strategy is simple_byte
  1955     06EA  0810               	movf	_emitoSensores^(0+384),w
  1956     06EB  3A01               	xorlw	1	; case 1
  1957     06EC  1903               	skipnz
  1958     06ED  2ED4               	goto	l3842
  1959     06EE  3A03               	xorlw	3	; case 2
  1960     06EF  1903               	skipnz
  1961     06F0  2ED9               	goto	l3844
  1962     06F1  3A01               	xorlw	1	; case 3
  1963     06F2  1903               	skipnz
  1964     06F3  2EDE               	goto	l3846
  1965     06F4  2EF5               	goto	l3852
  1966     06F5                     l3852:
  1967                           
  1968                           ;main.c: 636:             printf("Ruido = categoria %d, humedad = %d %%, temperatura = %
      +                          d %c C, CO2 = %d ppm, Luminosidad = %d lx\r\n", ruidoAux, emitoSensores[1], emitoSensore
      +                          s[2], 167, emitoSensores[3], emitoSensores[4]);
  1969     06F5  301C               	movlw	low (STR_17| (0+32768))
  1970     06F6  1303               	bcf	3,6	;RP1=0, select bank1
  1971     06F7  00AE               	movwf	printf@f^(0+128)
  1972     06F8  3083               	movlw	high (STR_17| (0+32768))
  1973     06F9  00AF               	movwf	(printf@f^(0+128)+1)
  1974     06FA  084A               	movf	main@ruidoAux^(0+128),w
  1975     06FB  1683               	bsf	3,5	;RP0=1, select bank3
  1976     06FC  1703               	bsf	3,6	;RP1=1, select bank3
  1977     06FD  00A1               	movwf	??_main^(0+384)
  1978     06FE  01A2               	clrf	(??_main^(0+384)+1)
  1979     06FF  0821               	movf	??_main^(0+384),w
  1980     0700  1683               	bsf	3,5	;RP0=1, select bank1
  1981     0701  1303               	bcf	3,6	;RP1=0, select bank1
  1982     0702  00B0               	movwf	(?_printf^(0+128)+2)
  1983     0703  1683               	bsf	3,5	;RP0=1, select bank3
  1984     0704  1703               	bsf	3,6	;RP1=1, select bank3
  1985     0705  0822               	movf	(??_main+1)^(0+384),w
  1986     0706  1683               	bsf	3,5	;RP0=1, select bank1
  1987     0707  1303               	bcf	3,6	;RP1=0, select bank1
  1988     0708  00B1               	movwf	((?_printf+1)^(0+128)+2)
  1989     0709  1683               	bsf	3,5	;RP0=1, select bank3
  1990     070A  1703               	bsf	3,6	;RP1=1, select bank3
  1991     070B  0813               	movf	((_emitoSensores+1)^(0+384)+2),w
  1992     070C  1683               	bsf	3,5	;RP0=1, select bank1
  1993     070D  1303               	bcf	3,6	;RP1=0, select bank1
  1994     070E  00B3               	movwf	((?_printf+1)^(0+128)+4)
  1995     070F  1683               	bsf	3,5	;RP0=1, select bank3
  1996     0710  1703               	bsf	3,6	;RP1=1, select bank3
  1997     0711  0812               	movf	(_emitoSensores^(0+384)+2),w
  1998     0712  1683               	bsf	3,5	;RP0=1, select bank1
  1999     0713  1303               	bcf	3,6	;RP1=0, select bank1
  2000     0714  00B2               	movwf	(?_printf^(0+128)+4)
  2001     0715  1683               	bsf	3,5	;RP0=1, select bank3
  2002     0716  1703               	bsf	3,6	;RP1=1, select bank3
  2003     0717  0815               	movf	((_emitoSensores+1)^(0+384)+4),w
  2004     0718  1683               	bsf	3,5	;RP0=1, select bank1
  2005     0719  1303               	bcf	3,6	;RP1=0, select bank1
  2006     071A  00B5               	movwf	((?_printf+1)^(0+128)+6)
  2007     071B  1683               	bsf	3,5	;RP0=1, select bank3
  2008     071C  1703               	bsf	3,6	;RP1=1, select bank3
  2009     071D  0814               	movf	(_emitoSensores^(0+384)+4),w
  2010     071E  1683               	bsf	3,5	;RP0=1, select bank1
  2011     071F  1303               	bcf	3,6	;RP1=0, select bank1
  2012     0720  00B4               	movwf	(?_printf^(0+128)+6)
  2013     0721  30A7               	movlw	167
  2014     0722  00B6               	movwf	(?_printf^(0+128)+8)
  2015     0723  3000               	movlw	0
  2016     0724  00B7               	movwf	(?_printf^(0+128)+9)
  2017     0725  1683               	bsf	3,5	;RP0=1, select bank3
  2018     0726  1703               	bsf	3,6	;RP1=1, select bank3
  2019     0727  0817               	movf	((_emitoSensores+1)^(0+384)+6),w
  2020     0728  1683               	bsf	3,5	;RP0=1, select bank1
  2021     0729  1303               	bcf	3,6	;RP1=0, select bank1
  2022     072A  00B9               	movwf	((?_printf+1)^(0+128)+10)
  2023     072B  1683               	bsf	3,5	;RP0=1, select bank3
  2024     072C  1703               	bsf	3,6	;RP1=1, select bank3
  2025     072D  0816               	movf	(_emitoSensores^(0+384)+6),w
  2026     072E  1683               	bsf	3,5	;RP0=1, select bank1
  2027     072F  1303               	bcf	3,6	;RP1=0, select bank1
  2028     0730  00B8               	movwf	(?_printf^(0+128)+10)
  2029     0731  1683               	bsf	3,5	;RP0=1, select bank3
  2030     0732  1703               	bsf	3,6	;RP1=1, select bank3
  2031     0733  0819               	movf	((_emitoSensores+1)^(0+384)+8),w
  2032     0734  1683               	bsf	3,5	;RP0=1, select bank1
  2033     0735  1303               	bcf	3,6	;RP1=0, select bank1
  2034     0736  00BB               	movwf	((?_printf+1)^(0+128)+12)
  2035     0737  1683               	bsf	3,5	;RP0=1, select bank3
  2036     0738  1703               	bsf	3,6	;RP1=1, select bank3
  2037     0739  0818               	movf	(_emitoSensores^(0+384)+8),w
  2038     073A  1683               	bsf	3,5	;RP0=1, select bank1
  2039     073B  1303               	bcf	3,6	;RP1=0, select bank1
  2040     073C  00BA               	movwf	(?_printf^(0+128)+12)
  2041     073D  120A  118A  2494  120A  118A  	fcall	_printf
  2042     0742                     l3854:
  2043                           
  2044                           ;main.c: 639:         analisisRuido();
  2045     0742  120A  158A  246E  120A  118A  	fcall	_analisisRuido
  2046     0747                     l3856:
  2047                           
  2048                           ;main.c: 640:         analisisResto();
  2049     0747  120A  158A  241F  120A  118A  	fcall	_analisisResto
  2050     074C                     l3858:
  2051                           
  2052                           ;main.c: 620:     while (deboContinuar) {
  2053     074C  1683               	bsf	3,5	;RP0=1, select bank1
  2054     074D  1303               	bcf	3,6	;RP1=0, select bank1
  2055     074E  0869               	movf	_deboContinuar^(0+128),w
  2056     074F  046A               	iorwf	(_deboContinuar+1)^(0+128),w
  2057     0750  1D03               	btfss	3,2
  2058     0751  2F53               	goto	u3161
  2059     0752  2F54               	goto	u3160
  2060     0753                     u3161:
  2061     0753  2ECB               	goto	l3838
  2062     0754                     u3160:
  2063     0754                     l3860:
  2064                           
  2065                           ;main.c: 647:     i2c_stop();
  2066     0754  120A  158A  2033  120A  118A  	fcall	_i2c_stop
  2067     0759                     l344:
  2068     0759  120A  118A  2812   	ljmp	start
  2069     075C                     __end_of_main:
  2070                           
  2071                           	psect	text1
  2072     0EB0                     __ptext1:	
  2073 ;; *************** function _initYo *****************
  2074 ;; Defined at:
  2075 ;;		line 320 in file "main.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;		None
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;		None
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2089 ;;      Params:         0       0       0       0       0
  2090 ;;      Locals:         0       0       0       0       0
  2091 ;;      Temps:          0       0       0       0       0
  2092 ;;      Totals:         0       0       0       0       0
  2093 ;;Total ram usage:        0 bytes
  2094 ;; Hardware stack levels used: 1
  2095 ;; Hardware stack levels required when called: 7
  2096 ;; This function calls:
  2097 ;;		_init_ADC
  2098 ;;		_init_CCP1_PWM
  2099 ;;		_init_I2C
  2100 ;;		_init_SPI
  2101 ;;		_init_TMR0
  2102 ;;		_init_TMR1
  2103 ;;		_init_TMR2
  2104 ;;		_init_memoria
  2105 ;;		_init_uart
  2106 ;;		_printf
  2107 ;; This function is called by:
  2108 ;;		_main
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112     0EB0                     _initYo:	
  2113                           ;psect for function _initYo
  2114                           
  2115     0EB0                     l3754:	
  2116                           ;incstack = 0
  2117                           ; Regs used in _initYo: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2118                           
  2119                           
  2120                           ;main.c: 321:     OSCCON = 0b00001000;
  2121     0EB0  3008               	movlw	8
  2122     0EB1  1683               	bsf	3,5	;RP0=1, select bank1
  2123     0EB2  1303               	bcf	3,6	;RP1=0, select bank1
  2124     0EB3  008F               	movwf	15	;volatile
  2125     0EB4                     l3756:
  2126                           
  2127                           ;main.c: 323:     init_uart();
  2128     0EB4  120A  118A  22E2  120A  158A  	fcall	_init_uart
  2129     0EB9                     l3758:
  2130                           
  2131                           ;main.c: 324:     init_ADC();
  2132     0EB9  120A  158A  2152  120A  158A  	fcall	_init_ADC
  2133     0EBE                     l3760:
  2134                           
  2135                           ;main.c: 325:     init_TMR0();
  2136     0EBE  120A  158A  2050  120A  158A  	fcall	_init_TMR0
  2137     0EC3                     l3762:
  2138                           
  2139                           ;main.c: 326:     init_TMR1();
  2140     0EC3  120A  158A  209B  120A  158A  	fcall	_init_TMR1
  2141     0EC8                     l3764:
  2142                           
  2143                           ;main.c: 327:     init_TMR2();
  2144     0EC8  120A  158A  20BD  120A  158A  	fcall	_init_TMR2
  2145     0ECD                     l3766:
  2146                           
  2147                           ;main.c: 328:     printf("Ini uart adc timers\r\n");
  2148     0ECD  30CF               	movlw	low (STR_1| (0+32768))
  2149     0ECE  1683               	bsf	3,5	;RP0=1, select bank1
  2150     0ECF  1303               	bcf	3,6	;RP1=0, select bank1
  2151     0ED0  00AE               	movwf	printf@f^(0+128)
  2152     0ED1  3083               	movlw	high (STR_1| (0+32768))
  2153     0ED2  00AF               	movwf	(printf@f^(0+128)+1)
  2154     0ED3  120A  118A  2494  120A  158A  	fcall	_printf
  2155     0ED8                     l3768:
  2156                           
  2157                           ;main.c: 330:     init_CCP1_PWM();
  2158     0ED8  120A  158A  208A  120A  158A  	fcall	_init_CCP1_PWM
  2159     0EDD                     l3770:
  2160                           
  2161                           ;main.c: 331:     printf("Ini ccp1\r\n");
  2162     0EDD  3066               	movlw	low (STR_2| (0+32768))
  2163     0EDE  1683               	bsf	3,5	;RP0=1, select bank1
  2164     0EDF  1303               	bcf	3,6	;RP1=0, select bank1
  2165     0EE0  00AE               	movwf	printf@f^(0+128)
  2166     0EE1  3084               	movlw	high (STR_2| (0+32768))
  2167     0EE2  00AF               	movwf	(printf@f^(0+128)+1)
  2168     0EE3  120A  118A  2494  120A  158A  	fcall	_printf
  2169     0EE8                     l3772:
  2170                           
  2171                           ;main.c: 333:     init_I2C();
  2172     0EE8  120A  158A  213A  120A  158A  	fcall	_init_I2C
  2173     0EED                     l3774:
  2174                           
  2175                           ;main.c: 334:     printf("Ini i2c\r\n");
  2176     0EED  3071               	movlw	low (STR_3| (0+32768))
  2177     0EEE  1683               	bsf	3,5	;RP0=1, select bank1
  2178     0EEF  1303               	bcf	3,6	;RP1=0, select bank1
  2179     0EF0  00AE               	movwf	printf@f^(0+128)
  2180     0EF1  3084               	movlw	high (STR_3| (0+32768))
  2181     0EF2  00AF               	movwf	(printf@f^(0+128)+1)
  2182     0EF3  120A  118A  2494  120A  158A  	fcall	_printf
  2183     0EF8                     l3776:
  2184                           
  2185                           ;main.c: 335:     init_SPI();
  2186     0EF8  120A  118A  27FA  120A  158A  	fcall	_init_SPI
  2187                           
  2188                           ;main.c: 336:     printf("Ini spi\r\n");
  2189     0EFD  307B               	movlw	low (STR_4| (0+32768))
  2190     0EFE  1683               	bsf	3,5	;RP0=1, select bank1
  2191     0EFF  1303               	bcf	3,6	;RP1=0, select bank1
  2192     0F00  00AE               	movwf	printf@f^(0+128)
  2193     0F01  3084               	movlw	high (STR_4| (0+32768))
  2194     0F02  00AF               	movwf	(printf@f^(0+128)+1)
  2195     0F03  120A  118A  2494  120A  158A  	fcall	_printf
  2196     0F08                     l3778:
  2197                           
  2198                           ;main.c: 339:     init_memoria();
  2199     0F08  120A  158A  203C  120A  158A  	fcall	_init_memoria
  2200     0F0D                     l3780:
  2201                           
  2202                           ;main.c: 340:     printf("Ini memoria\r\n");
  2203     0F0D  3058               	movlw	low (STR_5| (0+32768))
  2204     0F0E  1683               	bsf	3,5	;RP0=1, select bank1
  2205     0F0F  1303               	bcf	3,6	;RP1=0, select bank1
  2206     0F10  00AE               	movwf	printf@f^(0+128)
  2207     0F11  3084               	movlw	high (STR_5| (0+32768))
  2208     0F12  00AF               	movwf	(printf@f^(0+128)+1)
  2209     0F13  120A  118A  2494  120A  158A  	fcall	_printf
  2210     0F18                     l3782:
  2211                           
  2212                           ;main.c: 342:     TRISB = 0;
  2213     0F18  1683               	bsf	3,5	;RP0=1, select bank1
  2214     0F19  1303               	bcf	3,6	;RP1=0, select bank1
  2215     0F1A  0186               	clrf	6	;volatile
  2216     0F1B                     l240:
  2217     0F1B  0008               	return
  2218     0F1C                     __end_of_initYo:
  2219                           
  2220                           	psect	text2
  2221     02E2                     __ptext2:	
  2222 ;; *************** function _init_uart *****************
  2223 ;; Defined at:
  2224 ;;		line 130 in file "main.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;		None
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;		None
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      void 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2238 ;;      Params:         0       0       0       0       0
  2239 ;;      Locals:         0       0       0       0       0
  2240 ;;      Temps:          0       0       0       0       0
  2241 ;;      Totals:         0       0       0       0       0
  2242 ;;Total ram usage:        0 bytes
  2243 ;; Hardware stack levels used: 1
  2244 ;; Hardware stack levels required when called: 5
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_initYo
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252     02E2                     _init_uart:	
  2253                           ;psect for function _init_uart
  2254                           
  2255     02E2                     l3618:	
  2256                           ;incstack = 0
  2257                           ; Regs used in _init_uart: [wreg+status,2]
  2258                           
  2259                           
  2260                           ;main.c: 131:     TXSTAbits.BRGH = 0;
  2261     02E2  1683               	bsf	3,5	;RP0=1, select bank1
  2262     02E3  1303               	bcf	3,6	;RP1=0, select bank1
  2263     02E4  1118               	bcf	24,2	;volatile
  2264                           
  2265                           ;main.c: 132:     BAUDCTLbits.BRG16 = 0;
  2266     02E5  1683               	bsf	3,5	;RP0=1, select bank3
  2267     02E6  1703               	bsf	3,6	;RP1=1, select bank3
  2268     02E7  1187               	bcf	7,3	;volatile
  2269     02E8                     l3620:
  2270                           
  2271                           ;main.c: 135:     SPBRGH = 0;
  2272     02E8  1683               	bsf	3,5	;RP0=1, select bank1
  2273     02E9  1303               	bcf	3,6	;RP1=0, select bank1
  2274     02EA  019A               	clrf	26	;volatile
  2275     02EB                     l3622:
  2276                           
  2277                           ;main.c: 136:     SPBRG = 32;
  2278     02EB  3020               	movlw	32
  2279     02EC  0099               	movwf	25	;volatile
  2280     02ED                     l3624:
  2281                           
  2282                           ;main.c: 138:     TXSTAbits.SYNC = 0;
  2283     02ED  1218               	bcf	24,4	;volatile
  2284     02EE                     l3626:
  2285                           
  2286                           ;main.c: 139:     TXSTAbits.TX9 = 0;
  2287     02EE  1318               	bcf	24,6	;volatile
  2288     02EF                     l3628:
  2289                           
  2290                           ;main.c: 140:     RCSTAbits.RX9 = 0;
  2291     02EF  1283               	bcf	3,5	;RP0=0, select bank0
  2292     02F0  1303               	bcf	3,6	;RP1=0, select bank0
  2293     02F1  1318               	bcf	24,6	;volatile
  2294     02F2                     l3630:
  2295                           
  2296                           ;main.c: 142:     PIE1bits.TXIE = 1;
  2297     02F2  1683               	bsf	3,5	;RP0=1, select bank1
  2298     02F3  1303               	bcf	3,6	;RP1=0, select bank1
  2299     02F4  160C               	bsf	12,4	;volatile
  2300     02F5                     l3632:
  2301                           
  2302                           ;main.c: 143:     PIE1bits.RCIE = 1;
  2303     02F5  168C               	bsf	12,5	;volatile
  2304     02F6                     l3634:
  2305                           
  2306                           ;main.c: 145:     RCSTAbits.SPEN = 1;
  2307     02F6  1283               	bcf	3,5	;RP0=0, select bank0
  2308     02F7  1303               	bcf	3,6	;RP1=0, select bank0
  2309     02F8  1798               	bsf	24,7	;volatile
  2310     02F9                     l3636:
  2311                           
  2312                           ;main.c: 147:     TXSTAbits.TXEN = 0;
  2313     02F9  1683               	bsf	3,5	;RP0=1, select bank1
  2314     02FA  1303               	bcf	3,6	;RP1=0, select bank1
  2315     02FB  1298               	bcf	24,5	;volatile
  2316     02FC                     l3638:
  2317                           
  2318                           ;main.c: 148:     TXSTAbits.TXEN = 1;
  2319     02FC  1698               	bsf	24,5	;volatile
  2320     02FD                     l183:
  2321     02FD  0008               	return
  2322     02FE                     __end_of_init_uart:
  2323                           
  2324                           	psect	text3
  2325     083C                     __ptext3:	
  2326 ;; *************** function _init_memoria *****************
  2327 ;; Defined at:
  2328 ;;		line 227 in file "main.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;		None
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;		None
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      void 
  2335 ;; Registers used:
  2336 ;;		None
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2342 ;;      Params:         0       0       0       0       0
  2343 ;;      Locals:         0       0       0       0       0
  2344 ;;      Temps:          0       0       0       0       0
  2345 ;;      Totals:         0       0       0       0       0
  2346 ;;Total ram usage:        0 bytes
  2347 ;; Hardware stack levels used: 1
  2348 ;; Hardware stack levels required when called: 5
  2349 ;; This function calls:
  2350 ;;		Nothing
  2351 ;; This function is called by:
  2352 ;;		_initYo
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356     083C                     _init_memoria:	
  2357                           ;psect for function _init_memoria
  2358                           
  2359     083C                     l3676:	
  2360                           ;incstack = 0
  2361                           ; Regs used in _init_memoria: []
  2362                           
  2363                           
  2364                           ;main.c: 228:     EECON1bits.EEPGD = 0;
  2365     083C  1683               	bsf	3,5	;RP0=1, select bank3
  2366     083D  1703               	bsf	3,6	;RP1=1, select bank3
  2367     083E  138C               	bcf	12,7	;volsfr
  2368                           
  2369                           ;main.c: 229:     PIR2bits.EEIF = 0;
  2370     083F  1283               	bcf	3,5	;RP0=0, select bank0
  2371     0840  1303               	bcf	3,6	;RP1=0, select bank0
  2372     0841  120D               	bcf	13,4	;volatile
  2373                           
  2374                           ;main.c: 230:     PIE2bits.EEIE = 1;
  2375     0842  1683               	bsf	3,5	;RP0=1, select bank1
  2376     0843  1303               	bcf	3,6	;RP1=0, select bank1
  2377     0844  160D               	bsf	13,4	;volatile
  2378     0845                     l195:
  2379     0845  0008               	return
  2380     0846                     __end_of_init_memoria:
  2381                           
  2382                           	psect	text4
  2383     08BD                     __ptext4:	
  2384 ;; *************** function _init_TMR2 *****************
  2385 ;; Defined at:
  2386 ;;		line 93 in file "main.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;		None
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;		None
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg, status,2, status,0
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2400 ;;      Params:         0       0       0       0       0
  2401 ;;      Locals:         0       0       0       0       0
  2402 ;;      Temps:          0       0       0       0       0
  2403 ;;      Totals:         0       0       0       0       0
  2404 ;;Total ram usage:        0 bytes
  2405 ;; Hardware stack levels used: 1
  2406 ;; Hardware stack levels required when called: 5
  2407 ;; This function calls:
  2408 ;;		Nothing
  2409 ;; This function is called by:
  2410 ;;		_initYo
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414     08BD                     _init_TMR2:	
  2415                           ;psect for function _init_TMR2
  2416                           
  2417     08BD                     l3596:	
  2418                           ;incstack = 0
  2419                           ; Regs used in _init_TMR2: [wreg+status,2+status,0]
  2420                           
  2421                           
  2422                           ;main.c: 94:     PR2 = 167;
  2423     08BD  30A7               	movlw	167
  2424     08BE  1683               	bsf	3,5	;RP0=1, select bank1
  2425     08BF  1303               	bcf	3,6	;RP1=0, select bank1
  2426     08C0  0092               	movwf	18	;volatile
  2427     08C1                     l3598:
  2428                           
  2429                           ;main.c: 96:     T2CONbits.T2CKPS = 0b00;
  2430     08C1  30FC               	movlw	-4
  2431     08C2  1283               	bcf	3,5	;RP0=0, select bank0
  2432     08C3  1303               	bcf	3,6	;RP1=0, select bank0
  2433     08C4  0592               	andwf	18,f	;volatile
  2434     08C5                     l3600:
  2435                           
  2436                           ;main.c: 97:     T2CONbits.TOUTPS = 0b0000;
  2437     08C5  3087               	movlw	-121
  2438     08C6  0592               	andwf	18,f	;volatile
  2439     08C7                     l3602:
  2440                           
  2441                           ;main.c: 98:     PIE1bits.TMR2IE = 1;
  2442     08C7  1683               	bsf	3,5	;RP0=1, select bank1
  2443     08C8  1303               	bcf	3,6	;RP1=0, select bank1
  2444     08C9  148C               	bsf	12,1	;volatile
  2445     08CA                     l3604:
  2446                           
  2447                           ;main.c: 99:     PIR1bits.TMR2IF = 0;
  2448     08CA  1283               	bcf	3,5	;RP0=0, select bank0
  2449     08CB  1303               	bcf	3,6	;RP1=0, select bank0
  2450     08CC  108C               	bcf	12,1	;volatile
  2451     08CD                     l3606:
  2452                           
  2453                           ;main.c: 100:     T2CONbits.TMR2ON = 1;
  2454     08CD  1512               	bsf	18,2	;volatile
  2455     08CE                     l177:
  2456     08CE  0008               	return
  2457     08CF                     __end_of_init_TMR2:
  2458                           
  2459                           	psect	text5
  2460     089B                     __ptext5:	
  2461 ;; *************** function _init_TMR1 *****************
  2462 ;; Defined at:
  2463 ;;		line 82 in file "main.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;		None
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg, status,2, status,0
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2477 ;;      Params:         0       0       0       0       0
  2478 ;;      Locals:         0       0       0       0       0
  2479 ;;      Temps:          0       0       0       0       0
  2480 ;;      Totals:         0       0       0       0       0
  2481 ;;Total ram usage:        0 bytes
  2482 ;; Hardware stack levels used: 1
  2483 ;; Hardware stack levels required when called: 5
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		_initYo
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491     089B                     _init_TMR1:	
  2492                           ;psect for function _init_TMR1
  2493                           
  2494     089B                     l3584:	
  2495                           ;incstack = 0
  2496                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
  2497                           
  2498                           
  2499                           ;main.c: 83:     TMR1H = eltimer1H;
  2500     089B  1283               	bcf	3,5	;RP0=0, select bank0
  2501     089C  1303               	bcf	3,6	;RP1=0, select bank0
  2502     089D  085C               	movf	_eltimer1H,w
  2503     089E  008F               	movwf	15	;volatile
  2504                           
  2505                           ;main.c: 84:     TMR1L = eltimer1L;
  2506     089F  085B               	movf	_eltimer1L,w
  2507     08A0  008E               	movwf	14	;volatile
  2508     08A1                     l3586:
  2509                           
  2510                           ;main.c: 85:     T1CONbits.TMR1CS = 0;
  2511     08A1  1090               	bcf	16,1	;volatile
  2512     08A2                     l3588:
  2513                           
  2514                           ;main.c: 87:     T1CONbits.T1CKPS = 0b00;
  2515     08A2  30CF               	movlw	-49
  2516     08A3  0590               	andwf	16,f	;volatile
  2517     08A4                     l3590:
  2518                           
  2519                           ;main.c: 88:     T1CONbits.TMR1GE = 0;
  2520     08A4  1310               	bcf	16,6	;volatile
  2521     08A5                     l3592:
  2522                           
  2523                           ;main.c: 89:     PIE1bits.TMR1IE = 1;
  2524     08A5  1683               	bsf	3,5	;RP0=1, select bank1
  2525     08A6  1303               	bcf	3,6	;RP1=0, select bank1
  2526     08A7  140C               	bsf	12,0	;volatile
  2527     08A8                     l3594:
  2528                           
  2529                           ;main.c: 90:     T1CONbits.TMR1ON = 1;
  2530     08A8  1283               	bcf	3,5	;RP0=0, select bank0
  2531     08A9  1303               	bcf	3,6	;RP1=0, select bank0
  2532     08AA  1410               	bsf	16,0	;volatile
  2533     08AB                     l174:
  2534     08AB  0008               	return
  2535     08AC                     __end_of_init_TMR1:
  2536                           
  2537                           	psect	text6
  2538     0850                     __ptext6:	
  2539 ;; *************** function _init_TMR0 *****************
  2540 ;; Defined at:
  2541 ;;		line 72 in file "main.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;		None
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;		None
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      void 
  2548 ;; Registers used:
  2549 ;;		wreg, status,2, status,0
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2555 ;;      Params:         0       0       0       0       0
  2556 ;;      Locals:         0       0       0       0       0
  2557 ;;      Temps:          0       0       0       0       0
  2558 ;;      Totals:         0       0       0       0       0
  2559 ;;Total ram usage:        0 bytes
  2560 ;; Hardware stack levels used: 1
  2561 ;; Hardware stack levels required when called: 5
  2562 ;; This function calls:
  2563 ;;		Nothing
  2564 ;; This function is called by:
  2565 ;;		_initYo
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569     0850                     _init_TMR0:	
  2570                           ;psect for function _init_TMR0
  2571                           
  2572     0850                     l3574:	
  2573                           ;incstack = 0
  2574                           ; Regs used in _init_TMR0: [wreg+status,2+status,0]
  2575                           
  2576                           
  2577                           ;main.c: 73:     TMR0 = 61;
  2578     0850  303D               	movlw	61
  2579     0851  1283               	bcf	3,5	;RP0=0, select bank0
  2580     0852  1303               	bcf	3,6	;RP1=0, select bank0
  2581     0853  0081               	movwf	1	;volatile
  2582     0854                     l3576:
  2583                           
  2584                           ;main.c: 76:     OPTION_REGbits.T0CS = 0;
  2585     0854  1683               	bsf	3,5	;RP0=1, select bank1
  2586     0855  1303               	bcf	3,6	;RP1=0, select bank1
  2587     0856  1281               	bcf	1,5	;volatile
  2588     0857                     l3578:
  2589                           
  2590                           ;main.c: 77:     OPTION_REGbits.PSA = 0;
  2591     0857  1181               	bcf	1,3	;volatile
  2592     0858                     l3580:
  2593                           
  2594                           ;main.c: 78:     OPTION_REGbits.PS = 0b111;
  2595     0858  3007               	movlw	7
  2596     0859  0481               	iorwf	1,f	;volatile
  2597     085A                     l3582:
  2598                           
  2599                           ;main.c: 79:     INTCONbits.T0IE = 1;
  2600     085A  168B               	bsf	11,5	;volatile
  2601     085B                     l171:
  2602     085B  0008               	return
  2603     085C                     __end_of_init_TMR0:
  2604                           
  2605                           	psect	text7
  2606     07FA                     __ptext7:	
  2607 ;; *************** function _init_SPI *****************
  2608 ;; Defined at:
  2609 ;;		line 202 in file "main.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;		None
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;		None
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  1    wreg      void 
  2616 ;; Registers used:
  2617 ;;		None
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2623 ;;      Params:         0       0       0       0       0
  2624 ;;      Locals:         0       0       0       0       0
  2625 ;;      Temps:          0       0       0       0       0
  2626 ;;      Totals:         0       0       0       0       0
  2627 ;;Total ram usage:        0 bytes
  2628 ;; Hardware stack levels used: 1
  2629 ;; Hardware stack levels required when called: 5
  2630 ;; This function calls:
  2631 ;;		Nothing
  2632 ;; This function is called by:
  2633 ;;		_initYo
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637     07FA                     _init_SPI:	
  2638                           ;psect for function _init_SPI
  2639                           
  2640     07FA                     l3652:	
  2641                           ;incstack = 0
  2642                           ; Regs used in _init_SPI: []
  2643                           
  2644                           
  2645                           ;main.c: 208:     TRISCbits.TRISC5 = 0;
  2646     07FA  1683               	bsf	3,5	;RP0=1, select bank1
  2647     07FB  1303               	bcf	3,6	;RP1=0, select bank1
  2648     07FC  1287               	bcf	7,5	;volatile
  2649     07FD                     l189:
  2650     07FD  0008               	return
  2651     07FE                     __end_of_init_SPI:
  2652                           
  2653                           	psect	text8
  2654     093A                     __ptext8:	
  2655 ;; *************** function _init_I2C *****************
  2656 ;; Defined at:
  2657 ;;		line 151 in file "main.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;		None
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;		None
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  1    wreg      void 
  2664 ;; Registers used:
  2665 ;;		wreg, status,2, status,0
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2671 ;;      Params:         0       0       0       0       0
  2672 ;;      Locals:         0       0       0       0       0
  2673 ;;      Temps:          0       0       0       0       0
  2674 ;;      Totals:         0       0       0       0       0
  2675 ;;Total ram usage:        0 bytes
  2676 ;; Hardware stack levels used: 1
  2677 ;; Hardware stack levels required when called: 5
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_initYo
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685     093A                     _init_I2C:	
  2686                           ;psect for function _init_I2C
  2687                           
  2688     093A                     l3640:	
  2689                           ;incstack = 0
  2690                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
  2691                           
  2692                           
  2693                           ;main.c: 154:     TRISCbits.TRISC3 = 1;
  2694     093A  1683               	bsf	3,5	;RP0=1, select bank1
  2695     093B  1303               	bcf	3,6	;RP1=0, select bank1
  2696     093C  1587               	bsf	7,3	;volatile
  2697                           
  2698                           ;main.c: 155:     TRISCbits.TRISC4 = 1;
  2699     093D  1607               	bsf	7,4	;volatile
  2700     093E                     l3642:
  2701                           
  2702                           ;main.c: 158:     SSPCONbits.SSPM = 0;
  2703     093E  30F0               	movlw	-16
  2704     093F  1283               	bcf	3,5	;RP0=0, select bank0
  2705     0940  1303               	bcf	3,6	;RP1=0, select bank0
  2706     0941  0594               	andwf	20,f	;volatile
  2707                           
  2708                           ;main.c: 159:     SSPCONbits.SSPM = 0;
  2709     0942  30F0               	movlw	-16
  2710     0943  0594               	andwf	20,f	;volatile
  2711     0944                     l3644:
  2712                           
  2713                           ;main.c: 161:     ANSEL = 0;
  2714     0944  1683               	bsf	3,5	;RP0=1, select bank3
  2715     0945  1703               	bsf	3,6	;RP1=1, select bank3
  2716     0946  0188               	clrf	8	;volatile
  2717     0947                     l3646:
  2718                           
  2719                           ;main.c: 177:     SSPADD = (20000000 / 4) - 1;
  2720     0947  303F               	movlw	63
  2721     0948  1683               	bsf	3,5	;RP0=1, select bank1
  2722     0949  1303               	bcf	3,6	;RP1=0, select bank1
  2723     094A  0093               	movwf	19	;volatile
  2724     094B                     l3648:
  2725                           
  2726                           ;main.c: 179:     PIR1bits.SSPIF = 0;
  2727     094B  1283               	bcf	3,5	;RP0=0, select bank0
  2728     094C  1303               	bcf	3,6	;RP1=0, select bank0
  2729     094D  118C               	bcf	12,3	;volatile
  2730     094E                     l3650:
  2731                           
  2732                           ;main.c: 180:     PIE1bits.SSPIE = 1;
  2733     094E  1683               	bsf	3,5	;RP0=1, select bank1
  2734     094F  1303               	bcf	3,6	;RP1=0, select bank1
  2735     0950  158C               	bsf	12,3	;volatile
  2736     0951                     l186:
  2737     0951  0008               	return
  2738     0952                     __end_of_init_I2C:
  2739                           
  2740                           	psect	text9
  2741     088A                     __ptext9:	
  2742 ;; *************** function _init_CCP1_PWM *****************
  2743 ;; Defined at:
  2744 ;;		line 103 in file "main.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;		None
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;		None
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2758 ;;      Params:         0       0       0       0       0
  2759 ;;      Locals:         0       0       0       0       0
  2760 ;;      Temps:          0       0       0       0       0
  2761 ;;      Totals:         0       0       0       0       0
  2762 ;;Total ram usage:        0 bytes
  2763 ;; Hardware stack levels used: 1
  2764 ;; Hardware stack levels required when called: 5
  2765 ;; This function calls:
  2766 ;;		Nothing
  2767 ;; This function is called by:
  2768 ;;		_initYo
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772     088A                     _init_CCP1_PWM:	
  2773                           ;psect for function _init_CCP1_PWM
  2774                           
  2775     088A                     l3608:	
  2776                           ;incstack = 0
  2777                           ; Regs used in _init_CCP1_PWM: [wreg+status,2+status,0]
  2778                           
  2779                           
  2780                           ;main.c: 105:     TRISCbits.TRISC2 = 0;
  2781     088A  1683               	bsf	3,5	;RP0=1, select bank1
  2782     088B  1303               	bcf	3,6	;RP1=0, select bank1
  2783     088C  1107               	bcf	7,2	;volatile
  2784     088D                     l3610:
  2785                           
  2786                           ;main.c: 106:     ANSEL = 0;
  2787     088D  1683               	bsf	3,5	;RP0=1, select bank3
  2788     088E  1703               	bsf	3,6	;RP1=1, select bank3
  2789     088F  0188               	clrf	8	;volatile
  2790     0890                     l3612:
  2791                           
  2792                           ;main.c: 107:     CCP1CONbits.CCP1M = 0b1100;
  2793     0890  1283               	bcf	3,5	;RP0=0, select bank0
  2794     0891  1303               	bcf	3,6	;RP1=0, select bank0
  2795     0892  0817               	movf	23,w	;volatile
  2796     0893  39F0               	andlw	-16
  2797     0894  380C               	iorlw	12
  2798     0895  0097               	movwf	23	;volatile
  2799     0896                     l3614:
  2800                           
  2801                           ;main.c: 108:     CCP1CONbits.P1M = 0b00;
  2802     0896  303F               	movlw	-193
  2803     0897  0597               	andwf	23,f	;volatile
  2804     0898                     l3616:
  2805                           
  2806                           ;main.c: 110:     CCPR1L = porcentaje;
  2807     0898  084C               	movf	_porcentaje,w
  2808     0899  0095               	movwf	21	;volatile
  2809     089A                     l180:
  2810     089A  0008               	return
  2811     089B                     __end_of_init_CCP1_PWM:
  2812                           
  2813                           	psect	text10
  2814     0952                     __ptext10:	
  2815 ;; *************** function _init_ADC *****************
  2816 ;; Defined at:
  2817 ;;		line 211 in file "main.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;		None
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;		None
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1    wreg      void 
  2824 ;; Registers used:
  2825 ;;		wreg, status,2, status,0
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2831 ;;      Params:         0       0       0       0       0
  2832 ;;      Locals:         0       0       0       0       0
  2833 ;;      Temps:          0       0       0       0       0
  2834 ;;      Totals:         0       0       0       0       0
  2835 ;;Total ram usage:        0 bytes
  2836 ;; Hardware stack levels used: 1
  2837 ;; Hardware stack levels required when called: 5
  2838 ;; This function calls:
  2839 ;;		Nothing
  2840 ;; This function is called by:
  2841 ;;		_initYo
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845     0952                     _init_ADC:	
  2846                           ;psect for function _init_ADC
  2847                           
  2848     0952                     l3654:	
  2849                           ;incstack = 0
  2850                           ; Regs used in _init_ADC: [wreg+status,2+status,0]
  2851                           
  2852                           
  2853                           ;main.c: 212:     TRISA = 1;
  2854     0952  3001               	movlw	1
  2855     0953  1683               	bsf	3,5	;RP0=1, select bank1
  2856     0954  1303               	bcf	3,6	;RP1=0, select bank1
  2857     0955  0085               	movwf	5	;volatile
  2858     0956                     l3656:
  2859                           
  2860                           ;main.c: 213:     ANSELbits.ANS0 = 1;
  2861     0956  1683               	bsf	3,5	;RP0=1, select bank3
  2862     0957  1703               	bsf	3,6	;RP1=1, select bank3
  2863     0958  1408               	bsf	8,0	;volatile
  2864     0959                     l3658:
  2865                           
  2866                           ;main.c: 214:     ANSELbits.ANS1 = 1;
  2867     0959  1488               	bsf	8,1	;volatile
  2868     095A                     l3660:
  2869                           
  2870                           ;main.c: 215:     ANSELbits.ANS2 = 1;
  2871     095A  1508               	bsf	8,2	;volatile
  2872     095B                     l3662:
  2873                           
  2874                           ;main.c: 216:     ADCON0bits.ADCS = 0b10;
  2875     095B  1283               	bcf	3,5	;RP0=0, select bank0
  2876     095C  1303               	bcf	3,6	;RP1=0, select bank0
  2877     095D  081F               	movf	31,w	;volatile
  2878     095E  393F               	andlw	-193
  2879     095F  3880               	iorlw	128
  2880     0960  009F               	movwf	31	;volatile
  2881     0961                     l3664:
  2882                           
  2883                           ;main.c: 217:     ADCON0bits.CHS = 0b0000;
  2884     0961  30C3               	movlw	-61
  2885     0962  059F               	andwf	31,f	;volatile
  2886     0963                     l3666:
  2887                           
  2888                           ;main.c: 218:     ADCON0bits.ADON = 1;
  2889     0963  141F               	bsf	31,0	;volatile
  2890     0964                     l3668:
  2891                           
  2892                           ;main.c: 219:     ADCON1bits.ADFM = 1;
  2893     0964  1683               	bsf	3,5	;RP0=1, select bank1
  2894     0965  1303               	bcf	3,6	;RP1=0, select bank1
  2895     0966  179F               	bsf	31,7	;volatile
  2896     0967                     l3670:
  2897                           
  2898                           ;main.c: 221:     ADCON1bits.VCFG1 = 0;
  2899     0967  129F               	bcf	31,5	;volatile
  2900     0968                     l3672:
  2901                           
  2902                           ;main.c: 222:     ADCON1bits.VCFG0 = 0;
  2903     0968  121F               	bcf	31,4	;volatile
  2904     0969                     l3674:
  2905                           
  2906                           ;main.c: 224:     PIE1bits.ADIE = 1;
  2907     0969  170C               	bsf	12,6	;volatile
  2908     096A                     l192:
  2909     096A  0008               	return
  2910     096B                     __end_of_init_ADC:
  2911                           
  2912                           	psect	text11
  2913     0CBD                     __ptext11:	
  2914 ;; *************** function _initActuadoresSegunMemoria *****************
  2915 ;; Defined at:
  2916 ;;		line 448 in file "main.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;		None
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2930 ;;      Params:         0       0       0       0       0
  2931 ;;      Locals:         0       0       0       0       0
  2932 ;;      Temps:          0       0       0       0       0
  2933 ;;      Totals:         0       0       0       0       0
  2934 ;;Total ram usage:        0 bytes
  2935 ;; Hardware stack levels used: 1
  2936 ;; Hardware stack levels required when called: 9
  2937 ;; This function calls:
  2938 ;;		_getnoPrimerArranque
  2939 ;;		_printf
  2940 ;;		_setLED
  2941 ;;		_setPWM
  2942 ;; This function is called by:
  2943 ;;		_main
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947     0CBD                     _initActuadoresSegunMemoria:	
  2948                           ;psect for function _initActuadoresSegunMemoria
  2949                           
  2950     0CBD                     l3814:	
  2951                           ;incstack = 0
  2952 ;; hardware stack exceeded
  2953                           ; Regs used in _initActuadoresSegunMemoria: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
  2954                           
  2955                           
  2956                           ;main.c: 449:     printf("Pruebo memoria");
  2957     0CBD  3049               	movlw	low (STR_12| (0+32768))
  2958     0CBE  1683               	bsf	3,5	;RP0=1, select bank1
  2959     0CBF  1303               	bcf	3,6	;RP1=0, select bank1
  2960     0CC0  00AE               	movwf	printf@f^(0+128)
  2961     0CC1  3084               	movlw	high (STR_12| (0+32768))
  2962     0CC2  00AF               	movwf	(printf@f^(0+128)+1)
  2963     0CC3  120A  118A  2494  120A  158A  	fcall	_printf
  2964     0CC8                     l3816:
  2965                           
  2966                           ;main.c: 450:     if (getnoPrimerArranque() == FALSE) {
  2967     0CC8  120A  158A  2187  120A  158A  	fcall	_getnoPrimerArranque
  2968     0CCD  3A00               	xorlw	0
  2969     0CCE  1D03               	skipz
  2970     0CCF  2CD1               	goto	u3141
  2971     0CD0  2CD2               	goto	u3140
  2972     0CD1                     u3141:
  2973     0CD1  2CF2               	goto	l3824
  2974     0CD2                     u3140:
  2975     0CD2                     l3818:
  2976                           
  2977                           ;main.c: 451:         printf("Default");
  2978     0CD2  3085               	movlw	low (STR_13| (0+32768))
  2979     0CD3  1683               	bsf	3,5	;RP0=1, select bank1
  2980     0CD4  1303               	bcf	3,6	;RP1=0, select bank1
  2981     0CD5  00AE               	movwf	printf@f^(0+128)
  2982     0CD6  3084               	movlw	high (STR_13| (0+32768))
  2983     0CD7  00AF               	movwf	(printf@f^(0+128)+1)
  2984     0CD8  120A  118A  2494  120A  158A  	fcall	_printf
  2985     0CDD                     l3820:
  2986                           
  2987                           ;main.c: 452:         setPWM(0);
  2988     0CDD  3000               	movlw	0
  2989     0CDE  120A  158A  225F  120A  158A  	fcall	_setPWM
  2990     0CE3                     l3822:
  2991                           
  2992                           ;main.c: 453:         setLED(255, 255, 255, 31);
  2993     0CE3  30FF               	movlw	255
  2994     0CE4  1683               	bsf	3,5	;RP0=1, select bank3
  2995     0CE5  1703               	bsf	3,6	;RP1=1, select bank3
  2996     0CE6  009E               	movwf	setLED@green^(0+384)
  2997     0CE7  30FF               	movlw	255
  2998     0CE8  009F               	movwf	setLED@blue^(0+384)
  2999     0CE9  301F               	movlw	31
  3000     0CEA  00A0               	movwf	setLED@luminosidad^(0+384)
  3001     0CEB  30FF               	movlw	255
  3002     0CEC  120A  158A  271C  120A  158A  	fcall	_setLED
  3003                           
  3004                           ;main.c: 454:     } else {
  3005     0CF1  2D11               	goto	l281
  3006     0CF2                     l3824:
  3007                           
  3008                           ;main.c: 455:         printf("Custom");
  3009     0CF2  308D               	movlw	low (STR_14| (0+32768))
  3010     0CF3  1683               	bsf	3,5	;RP0=1, select bank1
  3011     0CF4  1303               	bcf	3,6	;RP1=0, select bank1
  3012     0CF5  00AE               	movwf	printf@f^(0+128)
  3013     0CF6  3084               	movlw	high (STR_14| (0+32768))
  3014     0CF7  00AF               	movwf	(printf@f^(0+128)+1)
  3015     0CF8  120A  118A  2494  120A  158A  	fcall	_printf
  3016     0CFD                     l3826:
  3017                           
  3018                           ;main.c: 457:         setPWM(0);
  3019     0CFD  3000               	movlw	0
  3020     0CFE  120A  158A  225F  120A  158A  	fcall	_setPWM
  3021     0D03                     l3828:
  3022                           
  3023                           ;main.c: 458:         setLED(255, 255, 255, 31);
  3024     0D03  30FF               	movlw	255
  3025     0D04  1683               	bsf	3,5	;RP0=1, select bank3
  3026     0D05  1703               	bsf	3,6	;RP1=1, select bank3
  3027     0D06  009E               	movwf	setLED@green^(0+384)
  3028     0D07  30FF               	movlw	255
  3029     0D08  009F               	movwf	setLED@blue^(0+384)
  3030     0D09  301F               	movlw	31
  3031     0D0A  00A0               	movwf	setLED@luminosidad^(0+384)
  3032     0D0B  30FF               	movlw	255
  3033     0D0C  120A  158A  271C  120A  158A  	fcall	_setLED
  3034     0D11                     l281:
  3035     0D11  0008               	return
  3036     0D12                     __end_of_initActuadoresSegunMemoria:
  3037                           
  3038                           	psect	text12
  3039     0A5F                     __ptext12:	
  3040 ;; *************** function _setPWM *****************
  3041 ;; Defined at:
  3042 ;;		line 358 in file "main.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;  porcent         1    wreg     unsigned char 
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;  porcent         1   11[BANK1 ] unsigned char 
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  1    wreg      void 
  3049 ;; Registers used:
  3050 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3056 ;;      Params:         0       0       0       0       0
  3057 ;;      Locals:         0       0       1       0       0
  3058 ;;      Temps:          0       0       2       0       0
  3059 ;;      Totals:         0       0       3       0       0
  3060 ;;Total ram usage:        3 bytes
  3061 ;; Hardware stack levels used: 1
  3062 ;; Hardware stack levels required when called: 7
  3063 ;; This function calls:
  3064 ;;		___awdiv
  3065 ;;		___bmul
  3066 ;;		_escribirMemoria
  3067 ;; This function is called by:
  3068 ;;		_initActuadoresSegunMemoria
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072     0A5F                     _setPWM:	
  3073                           ;psect for function _setPWM
  3074                           
  3075                           
  3076                           ;incstack = 0
  3077 ;; hardware stack exceeded
  3078                           ; Regs used in _setPWM: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3079                           ;setPWM@porcent stored from wreg
  3080     0A5F  1683               	bsf	3,5	;RP0=1, select bank1
  3081     0A60  1303               	bcf	3,6	;RP1=0, select bank1
  3082     0A61  00AB               	movwf	setPWM@porcent^(0+128)
  3083     0A62                     l3730:
  3084                           
  3085                           ;main.c: 359:     porcentaje = (char) (porcent / 100);
  3086     0A62  3064               	movlw	100
  3087     0A63  00A0               	movwf	___awdiv@divisor^(0+128)
  3088     0A64  3000               	movlw	0
  3089     0A65  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  3090     0A66  082B               	movf	setPWM@porcent^(0+128),w
  3091     0A67  00A9               	movwf	??_setPWM^(0+128)
  3092     0A68  01AA               	clrf	(??_setPWM^(0+128)+1)
  3093     0A69  0829               	movf	??_setPWM^(0+128),w
  3094     0A6A  00A2               	movwf	___awdiv@dividend^(0+128)
  3095     0A6B  082A               	movf	(??_setPWM+1)^(0+128),w
  3096     0A6C  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  3097     0A6D  120A  158A  2647  120A  158A  	fcall	___awdiv
  3098     0A72  1683               	bsf	3,5	;RP0=1, select bank1
  3099     0A73  1303               	bcf	3,6	;RP1=0, select bank1
  3100     0A74  0820               	movf	?___awdiv^(0+128),w
  3101     0A75  1283               	bcf	3,5	;RP0=0, select bank0
  3102     0A76  1303               	bcf	3,6	;RP1=0, select bank0
  3103     0A77  00CC               	movwf	_porcentaje
  3104                           
  3105                           ;main.c: 360:     CCPR1L = porcentaje * porcentajeMax;
  3106     0A78  0859               	movf	_porcentajeMax,w
  3107     0A79  1683               	bsf	3,5	;RP0=1, select bank1
  3108     0A7A  1303               	bcf	3,6	;RP1=0, select bank1
  3109     0A7B  00A0               	movwf	___bmul@multiplicand^(0+128)
  3110     0A7C  1283               	bcf	3,5	;RP0=0, select bank0
  3111     0A7D  1303               	bcf	3,6	;RP1=0, select bank0
  3112     0A7E  084C               	movf	_porcentaje,w
  3113     0A7F  120A  158A  2123  120A  158A  	fcall	___bmul
  3114     0A84  1283               	bcf	3,5	;RP0=0, select bank0
  3115     0A85  1303               	bcf	3,6	;RP1=0, select bank0
  3116     0A86  0095               	movwf	21	;volatile
  3117     0A87                     l3732:
  3118                           
  3119                           ;main.c: 361:     escribirMemoria(direccionPWM, porcent);
  3120     0A87  1683               	bsf	3,5	;RP0=1, select bank1
  3121     0A88  1303               	bcf	3,6	;RP1=0, select bank1
  3122     0A89  082B               	movf	setPWM@porcent^(0+128),w
  3123     0A8A  00A1               	movwf	escribirMemoria@dato^(0+128)
  3124     0A8B  1283               	bcf	3,5	;RP0=0, select bank0
  3125     0A8C  1303               	bcf	3,6	;RP1=0, select bank0
  3126     0A8D  085A               	movf	_direccionPWM,w
  3127     0A8E  120A  158A  278B  120A  158A  	fcall	_escribirMemoria
  3128     0A93                     l3734:
  3129                           
  3130                           ;main.c: 362:     pPWM = porcent;
  3131     0A93  1683               	bsf	3,5	;RP0=1, select bank1
  3132     0A94  1303               	bcf	3,6	;RP1=0, select bank1
  3133     0A95  082B               	movf	setPWM@porcent^(0+128),w
  3134     0A96  1283               	bcf	3,5	;RP0=0, select bank0
  3135     0A97  1303               	bcf	3,6	;RP1=0, select bank0
  3136     0A98  00CE               	movwf	_pPWM
  3137     0A99                     l250:
  3138     0A99  0008               	return
  3139     0A9A                     __end_of_setPWM:
  3140                           
  3141                           	psect	text13
  3142     0923                     __ptext13:	
  3143 ;; *************** function ___bmul *****************
  3144 ;; Defined at:
  3145 ;;		line 4 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/Umul8.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;  multiplier      1    wreg     unsigned char 
  3148 ;;  multiplicand    1    0[BANK1 ] unsigned char 
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;  multiplier      1    3[BANK1 ] unsigned char 
  3151 ;;  product         1    2[BANK1 ] unsigned char 
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  1    wreg      unsigned char 
  3154 ;; Registers used:
  3155 ;;		wreg, status,2, status,0
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3161 ;;      Params:         0       0       1       0       0
  3162 ;;      Locals:         0       0       2       0       0
  3163 ;;      Temps:          0       0       1       0       0
  3164 ;;      Totals:         0       0       4       0       0
  3165 ;;Total ram usage:        4 bytes
  3166 ;; Hardware stack levels used: 1
  3167 ;; Hardware stack levels required when called: 5
  3168 ;; This function calls:
  3169 ;;		Nothing
  3170 ;; This function is called by:
  3171 ;;		_setPWM
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175     0923                     ___bmul:	
  3176                           ;psect for function ___bmul
  3177                           
  3178                           
  3179                           ;incstack = 0
  3180                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3181                           ;___bmul@multiplier stored from wreg
  3182     0923  1683               	bsf	3,5	;RP0=1, select bank1
  3183     0924  1303               	bcf	3,6	;RP1=0, select bank1
  3184     0925  00A3               	movwf	___bmul@multiplier^(0+128)
  3185     0926                     l3516:
  3186     0926  01A2               	clrf	___bmul@product^(0+128)
  3187     0927                     l3518:
  3188     0927  1C23               	btfss	___bmul@multiplier^(0+128),0
  3189     0928  292A               	goto	u2941
  3190     0929  292B               	goto	u2940
  3191     092A                     u2941:
  3192     092A  292F               	goto	l3522
  3193     092B                     u2940:
  3194     092B                     l3520:
  3195     092B  0820               	movf	___bmul@multiplicand^(0+128),w
  3196     092C  00A1               	movwf	??___bmul^(0+128)
  3197     092D  0821               	movf	??___bmul^(0+128),w
  3198     092E  07A2               	addwf	___bmul@product^(0+128),f
  3199     092F                     l3522:
  3200     092F  1003               	clrc
  3201     0930  0DA0               	rlf	___bmul@multiplicand^(0+128),f
  3202     0931                     l3524:
  3203     0931  1003               	clrc
  3204     0932  0CA3               	rrf	___bmul@multiplier^(0+128),f
  3205     0933  0823               	movf	___bmul@multiplier^(0+128),w
  3206     0934  1D03               	btfss	3,2
  3207     0935  2937               	goto	u2951
  3208     0936  2938               	goto	u2950
  3209     0937                     u2951:
  3210     0937  2927               	goto	l3518
  3211     0938                     u2950:
  3212     0938                     l3526:
  3213     0938  0822               	movf	___bmul@product^(0+128),w
  3214     0939                     l526:
  3215     0939  0008               	return
  3216     093A                     __end_of___bmul:
  3217                           
  3218                           	psect	text14
  3219     0E47                     __ptext14:	
  3220 ;; *************** function ___awdiv *****************
  3221 ;; Defined at:
  3222 ;;		line 5 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/awdiv.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;  divisor         2    0[BANK1 ] int 
  3225 ;;  dividend        2    2[BANK1 ] int 
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;  quotient        2    7[BANK1 ] int 
  3228 ;;  sign            1    6[BANK1 ] unsigned char 
  3229 ;;  counter         1    5[BANK1 ] unsigned char 
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  2    0[BANK1 ] int 
  3232 ;; Registers used:
  3233 ;;		wreg, status,2, status,0
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3239 ;;      Params:         0       0       4       0       0
  3240 ;;      Locals:         0       0       4       0       0
  3241 ;;      Temps:          0       0       1       0       0
  3242 ;;      Totals:         0       0       9       0       0
  3243 ;;Total ram usage:        9 bytes
  3244 ;; Hardware stack levels used: 1
  3245 ;; Hardware stack levels required when called: 5
  3246 ;; This function calls:
  3247 ;;		Nothing
  3248 ;; This function is called by:
  3249 ;;		_setPWM
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253     0E47                     ___awdiv:	
  3254                           ;psect for function ___awdiv
  3255                           
  3256     0E47                     l3530:	
  3257                           ;incstack = 0
  3258                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3259                           
  3260     0E47  1683               	bsf	3,5	;RP0=1, select bank1
  3261     0E48  1303               	bcf	3,6	;RP1=0, select bank1
  3262     0E49  01A6               	clrf	___awdiv@sign^(0+128)
  3263     0E4A                     l3532:
  3264     0E4A  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  3265     0E4B  2E4D               	goto	u2961
  3266     0E4C  2E4E               	goto	u2960
  3267     0E4D                     u2961:
  3268     0E4D  2E55               	goto	l3538
  3269     0E4E                     u2960:
  3270     0E4E                     l3534:
  3271     0E4E  09A0               	comf	___awdiv@divisor^(0+128),f
  3272     0E4F  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
  3273     0E50  0AA0               	incf	___awdiv@divisor^(0+128),f
  3274     0E51  1903               	skipnz
  3275     0E52  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
  3276     0E53                     l3536:
  3277     0E53  01A6               	clrf	___awdiv@sign^(0+128)
  3278     0E54  0AA6               	incf	___awdiv@sign^(0+128),f
  3279     0E55                     l3538:
  3280     0E55  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
  3281     0E56  2E58               	goto	u2971
  3282     0E57  2E59               	goto	u2970
  3283     0E58                     u2971:
  3284     0E58  2E62               	goto	l3544
  3285     0E59                     u2970:
  3286     0E59                     l3540:
  3287     0E59  09A2               	comf	___awdiv@dividend^(0+128),f
  3288     0E5A  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
  3289     0E5B  0AA2               	incf	___awdiv@dividend^(0+128),f
  3290     0E5C  1903               	skipnz
  3291     0E5D  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
  3292     0E5E                     l3542:
  3293     0E5E  3001               	movlw	1
  3294     0E5F  00A4               	movwf	??___awdiv^(0+128)
  3295     0E60  0824               	movf	??___awdiv^(0+128),w
  3296     0E61  06A6               	xorwf	___awdiv@sign^(0+128),f
  3297     0E62                     l3544:
  3298     0E62  01A7               	clrf	___awdiv@quotient^(0+128)
  3299     0E63  01A8               	clrf	(___awdiv@quotient+1)^(0+128)
  3300     0E64                     l3546:
  3301     0E64  0820               	movf	___awdiv@divisor^(0+128),w
  3302     0E65  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
  3303     0E66  1903               	btfsc	3,2
  3304     0E67  2E69               	goto	u2981
  3305     0E68  2E6A               	goto	u2980
  3306     0E69                     u2981:
  3307     0E69  2EA1               	goto	l3566
  3308     0E6A                     u2980:
  3309     0E6A                     l3548:
  3310     0E6A  01A5               	clrf	___awdiv@counter^(0+128)
  3311     0E6B  0AA5               	incf	___awdiv@counter^(0+128),f
  3312     0E6C  2E78               	goto	l3554
  3313     0E6D                     l3550:
  3314     0E6D  3001               	movlw	1
  3315     0E6E                     u2995:
  3316     0E6E  1003               	clrc
  3317     0E6F  0DA0               	rlf	___awdiv@divisor^(0+128),f
  3318     0E70  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
  3319     0E71  3EFF               	addlw	-1
  3320     0E72  1D03               	skipz
  3321     0E73  2E6E               	goto	u2995
  3322     0E74                     l3552:
  3323     0E74  3001               	movlw	1
  3324     0E75  00A4               	movwf	??___awdiv^(0+128)
  3325     0E76  0824               	movf	??___awdiv^(0+128),w
  3326     0E77  07A5               	addwf	___awdiv@counter^(0+128),f
  3327     0E78                     l3554:
  3328     0E78  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  3329     0E79  2E7B               	goto	u3001
  3330     0E7A  2E7C               	goto	u3000
  3331     0E7B                     u3001:
  3332     0E7B  2E6D               	goto	l3550
  3333     0E7C                     u3000:
  3334     0E7C                     l3556:
  3335     0E7C  3001               	movlw	1
  3336     0E7D                     u3015:
  3337     0E7D  1003               	clrc
  3338     0E7E  0DA7               	rlf	___awdiv@quotient^(0+128),f
  3339     0E7F  0DA8               	rlf	(___awdiv@quotient+1)^(0+128),f
  3340     0E80  3EFF               	addlw	-1
  3341     0E81  1D03               	skipz
  3342     0E82  2E7D               	goto	u3015
  3343     0E83  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  3344     0E84  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
  3345     0E85  1D03               	skipz
  3346     0E86  2E89               	goto	u3025
  3347     0E87  0820               	movf	___awdiv@divisor^(0+128),w
  3348     0E88  0222               	subwf	___awdiv@dividend^(0+128),w
  3349     0E89                     u3025:
  3350     0E89  1C03               	skipc
  3351     0E8A  2E8C               	goto	u3021
  3352     0E8B  2E8D               	goto	u3020
  3353     0E8C                     u3021:
  3354     0E8C  2E94               	goto	l3562
  3355     0E8D                     u3020:
  3356     0E8D                     l3558:
  3357     0E8D  0820               	movf	___awdiv@divisor^(0+128),w
  3358     0E8E  02A2               	subwf	___awdiv@dividend^(0+128),f
  3359     0E8F  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  3360     0E90  1C03               	skipc
  3361     0E91  03A3               	decf	(___awdiv@dividend+1)^(0+128),f
  3362     0E92  02A3               	subwf	(___awdiv@dividend+1)^(0+128),f
  3363     0E93                     l3560:
  3364     0E93  1427               	bsf	___awdiv@quotient^(0+128),0
  3365     0E94                     l3562:
  3366     0E94  3001               	movlw	1
  3367     0E95                     u3035:
  3368     0E95  1003               	clrc
  3369     0E96  0CA1               	rrf	(___awdiv@divisor+1)^(0+128),f
  3370     0E97  0CA0               	rrf	___awdiv@divisor^(0+128),f
  3371     0E98  3EFF               	addlw	-1
  3372     0E99  1D03               	skipz
  3373     0E9A  2E95               	goto	u3035
  3374     0E9B                     l3564:
  3375     0E9B  3001               	movlw	1
  3376     0E9C  02A5               	subwf	___awdiv@counter^(0+128),f
  3377     0E9D  1D03               	btfss	3,2
  3378     0E9E  2EA0               	goto	u3041
  3379     0E9F  2EA1               	goto	u3040
  3380     0EA0                     u3041:
  3381     0EA0  2E7C               	goto	l3556
  3382     0EA1                     u3040:
  3383     0EA1                     l3566:
  3384     0EA1  0826               	movf	___awdiv@sign^(0+128),w
  3385     0EA2  1903               	btfsc	3,2
  3386     0EA3  2EA5               	goto	u3051
  3387     0EA4  2EA6               	goto	u3050
  3388     0EA5                     u3051:
  3389     0EA5  2EAB               	goto	l3570
  3390     0EA6                     u3050:
  3391     0EA6                     l3568:
  3392     0EA6  09A7               	comf	___awdiv@quotient^(0+128),f
  3393     0EA7  09A8               	comf	(___awdiv@quotient+1)^(0+128),f
  3394     0EA8  0AA7               	incf	___awdiv@quotient^(0+128),f
  3395     0EA9  1903               	skipnz
  3396     0EAA  0AA8               	incf	(___awdiv@quotient+1)^(0+128),f
  3397     0EAB                     l3570:
  3398     0EAB  0828               	movf	(___awdiv@quotient+1)^(0+128),w
  3399     0EAC  00A1               	movwf	(?___awdiv+1)^(0+128)
  3400     0EAD  0827               	movf	___awdiv@quotient^(0+128),w
  3401     0EAE  00A0               	movwf	?___awdiv^(0+128)
  3402     0EAF                     l653:
  3403     0EAF  0008               	return
  3404     0EB0                     __end_of___awdiv:
  3405                           
  3406                           	psect	text15
  3407     0F1C                     __ptext15:	
  3408 ;; *************** function _setLED *****************
  3409 ;; Defined at:
  3410 ;;		line 395 in file "main.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  red             1    wreg     unsigned char 
  3413 ;;  green           1    4[BANK3 ] unsigned char 
  3414 ;;  blue            1    5[BANK3 ] unsigned char 
  3415 ;;  luminosidad     1    6[BANK3 ] unsigned char 
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;  red             1   41[BANK1 ] unsigned char 
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  1    wreg      void 
  3420 ;; Registers used:
  3421 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3427 ;;      Params:         0       0       0       3       0
  3428 ;;      Locals:         0       0       1       0       0
  3429 ;;      Temps:          0       0       0       0       0
  3430 ;;      Totals:         0       0       1       3       0
  3431 ;;Total ram usage:        4 bytes
  3432 ;; Hardware stack levels used: 1
  3433 ;; Hardware stack levels required when called: 8
  3434 ;; This function calls:
  3435 ;;		_cosasSPI
  3436 ;;		_escribirMemoria
  3437 ;;		_printf
  3438 ;; This function is called by:
  3439 ;;		_initActuadoresSegunMemoria
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443     0F1C                     _setLED:	
  3444                           ;psect for function _setLED
  3445                           
  3446                           
  3447                           ;incstack = 0
  3448 ;; hardware stack exceeded
  3449                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3450                           ;setLED@red stored from wreg
  3451     0F1C  1683               	bsf	3,5	;RP0=1, select bank1
  3452     0F1D  1303               	bcf	3,6	;RP1=0, select bank1
  3453     0F1E  00C9               	movwf	setLED@red^(0+128)
  3454     0F1F                     l3736:
  3455                           
  3456                           ;main.c: 397:     printf("Iniciar cosas SPI a");
  3457     0F1F  3010               	movlw	low (STR_10| (0+32768))
  3458     0F20  00AE               	movwf	printf@f^(0+128)
  3459     0F21  3084               	movlw	high (STR_10| (0+32768))
  3460     0F22  00AF               	movwf	(printf@f^(0+128)+1)
  3461     0F23  120A  118A  2494  120A  158A  	fcall	_printf
  3462                           
  3463                           ;main.c: 398:     cosasSPI(red, green, blue, luminosidad);
  3464     0F28  1683               	bsf	3,5	;RP0=1, select bank3
  3465     0F29  1703               	bsf	3,6	;RP1=1, select bank3
  3466     0F2A  081E               	movf	setLED@green^(0+384),w
  3467     0F2B  1683               	bsf	3,5	;RP0=1, select bank1
  3468     0F2C  1303               	bcf	3,6	;RP1=0, select bank1
  3469     0F2D  00C6               	movwf	cosasSPI@verd^(0+128)
  3470     0F2E  1683               	bsf	3,5	;RP0=1, select bank3
  3471     0F2F  1703               	bsf	3,6	;RP1=1, select bank3
  3472     0F30  081F               	movf	setLED@blue^(0+384),w
  3473     0F31  1683               	bsf	3,5	;RP0=1, select bank1
  3474     0F32  1303               	bcf	3,6	;RP1=0, select bank1
  3475     0F33  00C7               	movwf	cosasSPI@azu^(0+128)
  3476     0F34  1683               	bsf	3,5	;RP0=1, select bank3
  3477     0F35  1703               	bsf	3,6	;RP1=1, select bank3
  3478     0F36  0820               	movf	setLED@luminosidad^(0+384),w
  3479     0F37  1683               	bsf	3,5	;RP0=1, select bank1
  3480     0F38  1303               	bcf	3,6	;RP1=0, select bank1
  3481     0F39  00C8               	movwf	cosasSPI@lumi^(0+128)
  3482     0F3A  0849               	movf	setLED@red^(0+128),w
  3483     0F3B  120A  118A  2232  120A  158A  	fcall	_cosasSPI
  3484     0F40                     l3738:
  3485                           
  3486                           ;main.c: 400:     miLED[0] = red;
  3487     0F40  1683               	bsf	3,5	;RP0=1, select bank1
  3488     0F41  1303               	bcf	3,6	;RP1=0, select bank1
  3489     0F42  0849               	movf	setLED@red^(0+128),w
  3490     0F43  00EC               	movwf	_miLED^(0+128)
  3491     0F44                     l3740:
  3492                           
  3493                           ;main.c: 401:     miLED[1] = green;
  3494     0F44  1683               	bsf	3,5	;RP0=1, select bank3
  3495     0F45  1703               	bsf	3,6	;RP1=1, select bank3
  3496     0F46  081E               	movf	setLED@green^(0+384),w
  3497     0F47  1683               	bsf	3,5	;RP0=1, select bank1
  3498     0F48  1303               	bcf	3,6	;RP1=0, select bank1
  3499     0F49  00ED               	movwf	(_miLED^(0+128)+1)
  3500     0F4A                     l3742:
  3501                           
  3502                           ;main.c: 402:     miLED[2] = blue;
  3503     0F4A  1683               	bsf	3,5	;RP0=1, select bank3
  3504     0F4B  1703               	bsf	3,6	;RP1=1, select bank3
  3505     0F4C  081F               	movf	setLED@blue^(0+384),w
  3506     0F4D  1683               	bsf	3,5	;RP0=1, select bank1
  3507     0F4E  1303               	bcf	3,6	;RP1=0, select bank1
  3508     0F4F  00EE               	movwf	(_miLED^(0+128)+2)
  3509     0F50                     l3744:
  3510                           
  3511                           ;main.c: 403:     miLED[3] = luminosidad;
  3512     0F50  1683               	bsf	3,5	;RP0=1, select bank3
  3513     0F51  1703               	bsf	3,6	;RP1=1, select bank3
  3514     0F52  0820               	movf	setLED@luminosidad^(0+384),w
  3515     0F53  1683               	bsf	3,5	;RP0=1, select bank1
  3516     0F54  1303               	bcf	3,6	;RP1=0, select bank1
  3517     0F55  00EF               	movwf	(_miLED^(0+128)+3)
  3518                           
  3519                           ;main.c: 405:     printf("Guardar opcion de led");
  3520     0F56  30E5               	movlw	low (STR_11| (0+32768))
  3521     0F57  00AE               	movwf	printf@f^(0+128)
  3522     0F58  3083               	movlw	high (STR_11| (0+32768))
  3523     0F59  00AF               	movwf	(printf@f^(0+128)+1)
  3524     0F5A  120A  118A  2494  120A  158A  	fcall	_printf
  3525     0F5F                     l3746:
  3526                           
  3527                           ;main.c: 406:     escribirMemoria(direccionLED, miLED[0]);
  3528     0F5F  1683               	bsf	3,5	;RP0=1, select bank1
  3529     0F60  1303               	bcf	3,6	;RP1=0, select bank1
  3530     0F61  086C               	movf	_miLED^(0+128),w
  3531     0F62  00A1               	movwf	escribirMemoria@dato^(0+128)
  3532     0F63  086B               	movf	_direccionLED^(0+128),w
  3533     0F64  120A  158A  278B  120A  158A  	fcall	_escribirMemoria
  3534     0F69                     l3748:
  3535                           
  3536                           ;main.c: 407:     escribirMemoria(direccionLED + 1 * sizeof (char), miLED[1]);
  3537     0F69  1683               	bsf	3,5	;RP0=1, select bank1
  3538     0F6A  1303               	bcf	3,6	;RP1=0, select bank1
  3539     0F6B  086D               	movf	(_miLED^(0+128)+1),w
  3540     0F6C  00A1               	movwf	escribirMemoria@dato^(0+128)
  3541     0F6D  086B               	movf	_direccionLED^(0+128),w
  3542     0F6E  3E01               	addlw	1
  3543     0F6F  120A  158A  278B  120A  158A  	fcall	_escribirMemoria
  3544     0F74                     l3750:
  3545                           
  3546                           ;main.c: 408:     escribirMemoria(direccionLED + 2 * sizeof (char), miLED[2]);
  3547     0F74  1683               	bsf	3,5	;RP0=1, select bank1
  3548     0F75  1303               	bcf	3,6	;RP1=0, select bank1
  3549     0F76  086E               	movf	(_miLED^(0+128)+2),w
  3550     0F77  00A1               	movwf	escribirMemoria@dato^(0+128)
  3551     0F78  086B               	movf	_direccionLED^(0+128),w
  3552     0F79  3E02               	addlw	2
  3553     0F7A  120A  158A  278B  120A  158A  	fcall	_escribirMemoria
  3554     0F7F                     l3752:
  3555                           
  3556                           ;main.c: 409:     escribirMemoria(direccionLED + 3 * sizeof (char), miLED[3]);
  3557     0F7F  1683               	bsf	3,5	;RP0=1, select bank1
  3558     0F80  1303               	bcf	3,6	;RP1=0, select bank1
  3559     0F81  086F               	movf	(_miLED^(0+128)+3),w
  3560     0F82  00A1               	movwf	escribirMemoria@dato^(0+128)
  3561     0F83  086B               	movf	_direccionLED^(0+128),w
  3562     0F84  3E03               	addlw	3
  3563     0F85  120A  158A  278B  120A  158A  	fcall	_escribirMemoria
  3564     0F8A                     l261:
  3565     0F8A  0008               	return
  3566     0F8B                     __end_of_setLED:
  3567                           
  3568                           	psect	text16
  3569     0F8B                     __ptext16:	
  3570 ;; *************** function _escribirMemoria *****************
  3571 ;; Defined at:
  3572 ;;		line 289 in file "main.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;  direccion       1    wreg     unsigned char 
  3575 ;;  dato            1    1[BANK1 ] unsigned char 
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;  direccion       1    4[BANK1 ] unsigned char 
  3578 ;;  contador        2    5[BANK1 ] int 
  3579 ;;  confirmado      2    2[BANK1 ] int 
  3580 ;;  valorSal        2    0        int 
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  2    1[BANK1 ] int 
  3583 ;; Registers used:
  3584 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3590 ;;      Params:         0       0       1       0       0
  3591 ;;      Locals:         0       0       5       0       0
  3592 ;;      Temps:          0       0       0       0       0
  3593 ;;      Totals:         0       0       6       0       0
  3594 ;;Total ram usage:        6 bytes
  3595 ;; Hardware stack levels used: 1
  3596 ;; Hardware stack levels required when called: 6
  3597 ;; This function calls:
  3598 ;;		_leerMemoria
  3599 ;; This function is called by:
  3600 ;;		_setPWM
  3601 ;;		_setLED
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605     0F8B                     _escribirMemoria:	
  3606                           ;psect for function _escribirMemoria
  3607                           
  3608                           
  3609                           ;incstack = 0
  3610 ;; hardware stack exceeded
  3611                           ; Regs used in _escribirMemoria: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3612                           ;escribirMemoria@direccion stored from wreg
  3613     0F8B  1683               	bsf	3,5	;RP0=1, select bank1
  3614     0F8C  1303               	bcf	3,6	;RP1=0, select bank1
  3615     0F8D  00A4               	movwf	escribirMemoria@direccion^(0+128)
  3616     0F8E                     l3434:
  3617                           
  3618                           ;main.c: 290:     int valorSal;;main.c: 291:     EECON1bits.EEPGD = 0;
  3619     0F8E  1683               	bsf	3,5	;RP0=1, select bank3
  3620     0F8F  1703               	bsf	3,6	;RP1=1, select bank3
  3621     0F90  138C               	bcf	12,7	;volsfr
  3622                           
  3623                           ;main.c: 293:     EECON1bits.WREN = 1;
  3624     0F91  150C               	bsf	12,2	;volsfr
  3625     0F92                     l3436:
  3626                           
  3627                           ;main.c: 294:     EEADRH = 0;
  3628     0F92  1283               	bcf	3,5	;RP0=0, select bank2
  3629     0F93  1703               	bsf	3,6	;RP1=1, select bank2
  3630     0F94  018F               	clrf	15	;volatile
  3631     0F95                     l3438:
  3632                           
  3633                           ;main.c: 295:     EEADR = direccion;
  3634     0F95  1683               	bsf	3,5	;RP0=1, select bank1
  3635     0F96  1303               	bcf	3,6	;RP1=0, select bank1
  3636     0F97  0824               	movf	escribirMemoria@direccion^(0+128),w
  3637     0F98  1283               	bcf	3,5	;RP0=0, select bank2
  3638     0F99  1703               	bsf	3,6	;RP1=1, select bank2
  3639     0F9A  008D               	movwf	13	;volatile
  3640     0F9B                     l3440:
  3641                           
  3642                           ;main.c: 296:     if (EECON1bits.RD == 0) {
  3643     0F9B  1683               	bsf	3,5	;RP0=1, select bank3
  3644     0F9C  1703               	bsf	3,6	;RP1=1, select bank3
  3645     0F9D  180C               	btfsc	12,0	;volsfr
  3646     0F9E  2FA0               	goto	u2871
  3647     0F9F  2FA1               	goto	u2870
  3648     0FA0                     u2871:
  3649     0FA0  2FFF               	goto	l3470
  3650     0FA1                     u2870:
  3651     0FA1                     l3442:
  3652                           
  3653                           ;main.c: 297:         int contador = 0;
  3654     0FA1  1683               	bsf	3,5	;RP0=1, select bank1
  3655     0FA2  1303               	bcf	3,6	;RP1=0, select bank1
  3656     0FA3  01A5               	clrf	escribirMemoria@contador^(0+128)
  3657     0FA4  01A6               	clrf	(escribirMemoria@contador+1)^(0+128)
  3658                           
  3659                           ;main.c: 298:         int confirmado = 0;
  3660     0FA5  01A2               	clrf	escribirMemoria@confirmado^(0+128)
  3661     0FA6  01A3               	clrf	(escribirMemoria@confirmado+1)^(0+128)
  3662                           
  3663                           ;main.c: 299:         while (contador < 10 && confirmado == 0) {
  3664     0FA7  2FD9               	goto	l3460
  3665     0FA8                     l225:
  3666                           
  3667                           ;main.c: 300:             INTCONbits.GIE = 0;
  3668     0FA8  138B               	bcf	11,7	;volatile
  3669     0FA9                     l3444:
  3670                           
  3671                           ;main.c: 301:             EEDAT = dato;
  3672     0FA9  0821               	movf	escribirMemoria@dato^(0+128),w
  3673     0FAA  1283               	bcf	3,5	;RP0=0, select bank2
  3674     0FAB  1703               	bsf	3,6	;RP1=1, select bank2
  3675     0FAC  008C               	movwf	12	;volatile
  3676                           
  3677                           ;main.c: 302:             EECON2 = 0x55;
  3678     0FAD  3055               	movlw	85
  3679     0FAE  1683               	bsf	3,5	;RP0=1, select bank3
  3680     0FAF  1703               	bsf	3,6	;RP1=1, select bank3
  3681     0FB0  008D               	movwf	13	;volsfr
  3682                           
  3683                           ;main.c: 303:             EECON2 = 0xAA;
  3684     0FB1  30AA               	movlw	170
  3685     0FB2  008D               	movwf	13	;volsfr
  3686     0FB3                     l3446:
  3687                           
  3688                           ;main.c: 304:             EECON1bits.WR = 1;
  3689     0FB3  148C               	bsf	12,1	;volsfr
  3690     0FB4                     l3448:
  3691                           
  3692                           ;main.c: 305:             INTCONbits.GIE = 1;
  3693     0FB4  178B               	bsf	11,7	;volatile
  3694     0FB5                     l3450:	
  3695                           ;main.c: 306:             while (!continuoEscribiendo);
  3696                           
  3697     0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  3698     0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  3699     0FB7  0849               	movf	_continuoEscribiendo,w
  3700     0FB8  044A               	iorwf	_continuoEscribiendo+1,w
  3701     0FB9  1903               	btfsc	3,2
  3702     0FBA  2FBC               	goto	u2881
  3703     0FBB  2FBD               	goto	u2880
  3704     0FBC                     u2881:
  3705     0FBC  2FB5               	goto	l3450
  3706     0FBD                     u2880:
  3707     0FBD                     l3452:
  3708                           
  3709                           ;main.c: 307:             continuoEscribiendo = 0;
  3710     0FBD  01C9               	clrf	_continuoEscribiendo
  3711     0FBE  01CA               	clrf	_continuoEscribiendo+1
  3712     0FBF                     l3454:
  3713                           
  3714                           ;main.c: 308:             if (leerMemoria(direccion) == dato)
  3715     0FBF  1683               	bsf	3,5	;RP0=1, select bank1
  3716     0FC0  1303               	bcf	3,6	;RP1=0, select bank1
  3717     0FC1  0824               	movf	escribirMemoria@direccion^(0+128),w
  3718     0FC2  120A  158A  216B  120A  158A  	fcall	_leerMemoria
  3719     0FC7  1683               	bsf	3,5	;RP0=1, select bank1
  3720     0FC8  1303               	bcf	3,6	;RP1=0, select bank1
  3721     0FC9  0621               	xorwf	escribirMemoria@dato^(0+128),w
  3722     0FCA  1D03               	skipz
  3723     0FCB  2FCD               	goto	u2891
  3724     0FCC  2FCE               	goto	u2890
  3725     0FCD                     u2891:
  3726     0FCD  2FD3               	goto	l3458
  3727     0FCE                     u2890:
  3728     0FCE                     l3456:
  3729                           
  3730                           ;main.c: 309:                 confirmado = 1;
  3731     0FCE  3001               	movlw	1
  3732     0FCF  00A2               	movwf	escribirMemoria@confirmado^(0+128)
  3733     0FD0  3000               	movlw	0
  3734     0FD1  00A3               	movwf	(escribirMemoria@confirmado^(0+128)+1)
  3735     0FD2  2FD9               	goto	l3460
  3736     0FD3                     l3458:
  3737                           
  3738                           ;main.c: 311:                 contador++;
  3739     0FD3  3001               	movlw	1
  3740     0FD4  07A5               	addwf	escribirMemoria@contador^(0+128),f
  3741     0FD5  1803               	skipnc
  3742     0FD6  0AA6               	incf	(escribirMemoria@contador+1)^(0+128),f
  3743     0FD7  3000               	movlw	0
  3744     0FD8  07A6               	addwf	(escribirMemoria@contador+1)^(0+128),f
  3745     0FD9                     l3460:
  3746                           
  3747                           ;main.c: 299:         while (contador < 10 && confirmado == 0) {
  3748     0FD9  0826               	movf	(escribirMemoria@contador+1)^(0+128),w
  3749     0FDA  3A80               	xorlw	128
  3750     0FDB  00FF               	movwf	btemp+1
  3751     0FDC  3080               	movlw	128
  3752     0FDD  027F               	subwf	btemp+1,w
  3753     0FDE  1D03               	skipz
  3754     0FDF  2FE2               	goto	u2905
  3755     0FE0  300A               	movlw	10
  3756     0FE1  0225               	subwf	escribirMemoria@contador^(0+128),w
  3757     0FE2                     u2905:
  3758     0FE2  1803               	skipnc
  3759     0FE3  2FE5               	goto	u2901
  3760     0FE4  2FE6               	goto	u2900
  3761     0FE5                     u2901:
  3762     0FE5  2FEE               	goto	l3464
  3763     0FE6                     u2900:
  3764     0FE6                     l3462:
  3765     0FE6  1683               	bsf	3,5	;RP0=1, select bank1
  3766     0FE7  1303               	bcf	3,6	;RP1=0, select bank1
  3767     0FE8  0822               	movf	escribirMemoria@confirmado^(0+128),w
  3768     0FE9  0423               	iorwf	(escribirMemoria@confirmado+1)^(0+128),w
  3769     0FEA  1903               	btfsc	3,2
  3770     0FEB  2FED               	goto	u2911
  3771     0FEC  2FEE               	goto	u2910
  3772     0FED                     u2911:
  3773     0FED  2FA8               	goto	l225
  3774     0FEE                     u2910:
  3775     0FEE                     l3464:
  3776                           
  3777                           ;main.c: 313:         if (contador >= 10) valorSal = 1;
  3778     0FEE  1683               	bsf	3,5	;RP0=1, select bank1
  3779     0FEF  1303               	bcf	3,6	;RP1=0, select bank1
  3780     0FF0  0826               	movf	(escribirMemoria@contador+1)^(0+128),w
  3781     0FF1  3A80               	xorlw	128
  3782     0FF2  00FF               	movwf	btemp+1
  3783     0FF3  3080               	movlw	128
  3784     0FF4  027F               	subwf	btemp+1,w
  3785     0FF5  1D03               	skipz
  3786     0FF6  2FF9               	goto	u2925
  3787     0FF7  300A               	movlw	10
  3788     0FF8  0225               	subwf	escribirMemoria@contador^(0+128),w
  3789     0FF9                     u2925:
  3790     0FF9  1C03               	skipc
  3791     0FFA  2FFC               	goto	u2921
  3792     0FFB  2FFD               	goto	u2920
  3793     0FFC                     u2921:
  3794     0FFC  2FFE               	goto	l3468
  3795     0FFD                     u2920:
  3796     0FFD                     l3466:
  3797     0FFD  2FFF               	goto	l237
  3798     0FFE                     l3468:
  3799     0FFE  2FFF               	goto	l237
  3800     0FFF                     l3470:
  3801     0FFF                     l237:
  3802     0FFF  0008               	return
  3803     1000                     __end_of_escribirMemoria:
  3804                           
  3805                           	psect	text17
  3806     0232                     __ptext17:	
  3807 ;; *************** function _cosasSPI *****************
  3808 ;; Defined at:
  3809 ;;		line 371 in file "main.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;  roj             1    wreg     unsigned char 
  3812 ;;  verd            1   38[BANK1 ] unsigned char 
  3813 ;;  azu             1   39[BANK1 ] unsigned char 
  3814 ;;  lumi            1   40[BANK1 ] unsigned char 
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;  roj             1    0[BANK3 ] unsigned char 
  3817 ;;  i               2    2[BANK3 ] int 
  3818 ;;  lumo            1    1[BANK3 ] unsigned char 
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  1    wreg      void 
  3821 ;; Registers used:
  3822 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3828 ;;      Params:         0       0       3       0       0
  3829 ;;      Locals:         0       0       0       4       0
  3830 ;;      Temps:          0       0       0       0       0
  3831 ;;      Totals:         0       0       3       4       0
  3832 ;;Total ram usage:        7 bytes
  3833 ;; Hardware stack levels used: 1
  3834 ;; Hardware stack levels required when called: 7
  3835 ;; This function calls:
  3836 ;;		_printf
  3837 ;;		_spi_write_read
  3838 ;; This function is called by:
  3839 ;;		_setLED
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843     0232                     _cosasSPI:	
  3844                           ;psect for function _cosasSPI
  3845                           
  3846                           
  3847                           ;incstack = 0
  3848 ;; hardware stack exceeded
  3849                           ; Regs used in _cosasSPI: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3850                           ;cosasSPI@roj stored from wreg
  3851     0232  1683               	bsf	3,5	;RP0=1, select bank3
  3852     0233  1703               	bsf	3,6	;RP1=1, select bank3
  3853     0234  009A               	movwf	cosasSPI@roj^(0+384)
  3854     0235                     l3474:
  3855                           
  3856                           ;main.c: 372:     int i;;main.c: 373:     char lumo = 0b11100000 + (lumi % 32);
  3857     0235  1683               	bsf	3,5	;RP0=1, select bank1
  3858     0236  1303               	bcf	3,6	;RP1=0, select bank1
  3859     0237  0848               	movf	cosasSPI@lumi^(0+128),w
  3860     0238  391F               	andlw	31
  3861     0239  3EE0               	addlw	224
  3862     023A  1683               	bsf	3,5	;RP0=1, select bank3
  3863     023B  1703               	bsf	3,6	;RP1=1, select bank3
  3864     023C  009B               	movwf	cosasSPI@lumo^(0+384)
  3865     023D                     l3476:
  3866                           
  3867                           ;main.c: 374:     printf("Escribo en SPI cadena inicial");
  3868     023D  307E               	movlw	low (STR_6| (0+32768))
  3869     023E  1683               	bsf	3,5	;RP0=1, select bank1
  3870     023F  1303               	bcf	3,6	;RP1=0, select bank1
  3871     0240  00AE               	movwf	printf@f^(0+128)
  3872     0241  3083               	movlw	high (STR_6| (0+32768))
  3873     0242  00AF               	movwf	(printf@f^(0+128)+1)
  3874     0243  120A  118A  2494  120A  118A  	fcall	_printf
  3875     0248                     l3478:
  3876                           
  3877                           ;main.c: 375:     spi_write_read(0x00);
  3878     0248  3000               	movlw	0
  3879     0249  120A  158A  22D6  120A  118A  	fcall	_spi_write_read
  3880     024E                     l3480:
  3881                           
  3882                           ;main.c: 376:     spi_write_read(0x00);
  3883     024E  3000               	movlw	0
  3884     024F  120A  158A  22D6  120A  118A  	fcall	_spi_write_read
  3885     0254                     l3482:
  3886                           
  3887                           ;main.c: 377:     spi_write_read(0x00);
  3888     0254  3000               	movlw	0
  3889     0255  120A  158A  22D6  120A  118A  	fcall	_spi_write_read
  3890     025A                     l3484:
  3891                           
  3892                           ;main.c: 378:     spi_write_read(0x00);
  3893     025A  3000               	movlw	0
  3894     025B  120A  158A  22D6  120A  118A  	fcall	_spi_write_read
  3895     0260                     l3486:
  3896                           
  3897                           ;main.c: 379:     for (i = numLedes; i == 0; i--) {
  3898     0260  1683               	bsf	3,5	;RP0=1, select bank1
  3899     0261  1303               	bcf	3,6	;RP1=0, select bank1
  3900     0262  0862               	movf	(_numLedes+1)^(0+128),w
  3901     0263  1683               	bsf	3,5	;RP0=1, select bank3
  3902     0264  1703               	bsf	3,6	;RP1=1, select bank3
  3903     0265  009D               	movwf	(cosasSPI@i+1)^(0+384)
  3904     0266  1683               	bsf	3,5	;RP0=1, select bank1
  3905     0267  1303               	bcf	3,6	;RP1=0, select bank1
  3906     0268  0861               	movf	_numLedes^(0+128),w
  3907     0269  1683               	bsf	3,5	;RP0=1, select bank3
  3908     026A  1703               	bsf	3,6	;RP1=1, select bank3
  3909     026B  009C               	movwf	cosasSPI@i^(0+384)
  3910     026C                     l3488:
  3911     026C  081C               	movf	cosasSPI@i^(0+384),w
  3912     026D  041D               	iorwf	(cosasSPI@i+1)^(0+384),w
  3913     026E  1903               	btfsc	3,2
  3914     026F  2A71               	goto	u2931
  3915     0270  2A72               	goto	u2930
  3916     0271                     u2931:
  3917     0271  2A73               	goto	l3492
  3918     0272                     u2930:
  3919     0272  2AB3               	goto	l3506
  3920     0273                     l3492:
  3921                           
  3922                           ;main.c: 380:         printf("Escribo color led %d", i);
  3923     0273  30FB               	movlw	low (STR_7| (0+32768))
  3924     0274  1683               	bsf	3,5	;RP0=1, select bank1
  3925     0275  1303               	bcf	3,6	;RP1=0, select bank1
  3926     0276  00AE               	movwf	printf@f^(0+128)
  3927     0277  3083               	movlw	high (STR_7| (0+32768))
  3928     0278  00AF               	movwf	(printf@f^(0+128)+1)
  3929     0279  1683               	bsf	3,5	;RP0=1, select bank3
  3930     027A  1703               	bsf	3,6	;RP1=1, select bank3
  3931     027B  081D               	movf	(cosasSPI@i+1)^(0+384),w
  3932     027C  1683               	bsf	3,5	;RP0=1, select bank1
  3933     027D  1303               	bcf	3,6	;RP1=0, select bank1
  3934     027E  00B1               	movwf	((?_printf+1)^(0+128)+2)
  3935     027F  1683               	bsf	3,5	;RP0=1, select bank3
  3936     0280  1703               	bsf	3,6	;RP1=1, select bank3
  3937     0281  081C               	movf	cosasSPI@i^(0+384),w
  3938     0282  1683               	bsf	3,5	;RP0=1, select bank1
  3939     0283  1303               	bcf	3,6	;RP1=0, select bank1
  3940     0284  00B0               	movwf	(?_printf^(0+128)+2)
  3941     0285  120A  118A  2494  120A  118A  	fcall	_printf
  3942     028A                     l3494:
  3943                           
  3944                           ;main.c: 381:         spi_write_read(lumo);
  3945     028A  1683               	bsf	3,5	;RP0=1, select bank3
  3946     028B  1703               	bsf	3,6	;RP1=1, select bank3
  3947     028C  081B               	movf	cosasSPI@lumo^(0+384),w
  3948     028D  120A  158A  22D6  120A  118A  	fcall	_spi_write_read
  3949     0292                     l3496:
  3950                           
  3951                           ;main.c: 382:         spi_write_read(azu);
  3952     0292  1683               	bsf	3,5	;RP0=1, select bank1
  3953     0293  1303               	bcf	3,6	;RP1=0, select bank1
  3954     0294  0847               	movf	cosasSPI@azu^(0+128),w
  3955     0295  120A  158A  22D6  120A  118A  	fcall	_spi_write_read
  3956     029A                     l3498:
  3957                           
  3958                           ;main.c: 383:         spi_write_read(verd);
  3959     029A  1683               	bsf	3,5	;RP0=1, select bank1
  3960     029B  1303               	bcf	3,6	;RP1=0, select bank1
  3961     029C  0846               	movf	cosasSPI@verd^(0+128),w
  3962     029D  120A  158A  22D6  120A  118A  	fcall	_spi_write_read
  3963     02A2                     l3500:
  3964                           
  3965                           ;main.c: 384:         spi_write_read(roj);
  3966     02A2  1683               	bsf	3,5	;RP0=1, select bank3
  3967     02A3  1703               	bsf	3,6	;RP1=1, select bank3
  3968     02A4  081A               	movf	cosasSPI@roj^(0+384),w
  3969     02A5  120A  158A  22D6  120A  118A  	fcall	_spi_write_read
  3970     02AA                     l3502:
  3971                           
  3972                           ;main.c: 385:     }
  3973     02AA  30FF               	movlw	255
  3974     02AB  1683               	bsf	3,5	;RP0=1, select bank3
  3975     02AC  1703               	bsf	3,6	;RP1=1, select bank3
  3976     02AD  079C               	addwf	cosasSPI@i^(0+384),f
  3977     02AE  1803               	skipnc
  3978     02AF  0A9D               	incf	(cosasSPI@i+1)^(0+384),f
  3979     02B0  30FF               	movlw	255
  3980     02B1  079D               	addwf	(cosasSPI@i+1)^(0+384),f
  3981     02B2  2A6C               	goto	l3488
  3982     02B3                     l3506:
  3983                           
  3984                           ;main.c: 386:     printf("Escribo en SPI cadena final");
  3985     02B3  309C               	movlw	low (STR_8| (0+32768))
  3986     02B4  1683               	bsf	3,5	;RP0=1, select bank1
  3987     02B5  1303               	bcf	3,6	;RP1=0, select bank1
  3988     02B6  00AE               	movwf	printf@f^(0+128)
  3989     02B7  3083               	movlw	high (STR_8| (0+32768))
  3990     02B8  00AF               	movwf	(printf@f^(0+128)+1)
  3991     02B9  120A  118A  2494  120A  118A  	fcall	_printf
  3992     02BE                     l3508:
  3993                           
  3994                           ;main.c: 387:     spi_write_read(0xFF);
  3995     02BE  30FF               	movlw	255
  3996     02BF  120A  158A  22D6  120A  118A  	fcall	_spi_write_read
  3997     02C4                     l3510:
  3998                           
  3999                           ;main.c: 388:     spi_write_read(0xFF);
  4000     02C4  30FF               	movlw	255
  4001     02C5  120A  158A  22D6  120A  118A  	fcall	_spi_write_read
  4002     02CA                     l3512:
  4003                           
  4004                           ;main.c: 389:     spi_write_read(0xFF);
  4005     02CA  30FF               	movlw	255
  4006     02CB  120A  158A  22D6  120A  118A  	fcall	_spi_write_read
  4007     02D0                     l3514:
  4008                           
  4009                           ;main.c: 390:     spi_write_read(0xFF);
  4010     02D0  30FF               	movlw	255
  4011     02D1  120A  158A  22D6  120A  118A  	fcall	_spi_write_read
  4012                           
  4013                           ;main.c: 391:     printf("Exito SPI cadena final");
  4014     02D6  30B8               	movlw	low (STR_9| (0+32768))
  4015     02D7  1683               	bsf	3,5	;RP0=1, select bank1
  4016     02D8  1303               	bcf	3,6	;RP1=0, select bank1
  4017     02D9  00AE               	movwf	printf@f^(0+128)
  4018     02DA  3083               	movlw	high (STR_9| (0+32768))
  4019     02DB  00AF               	movwf	(printf@f^(0+128)+1)
  4020     02DC  120A  118A  2494  120A  118A  	fcall	_printf
  4021     02E1                     l258:
  4022     02E1  0008               	return
  4023     02E2                     __end_of_cosasSPI:
  4024                           
  4025                           	psect	text18
  4026     0AD6                     __ptext18:	
  4027 ;; *************** function _spi_write_read *****************
  4028 ;; Defined at:
  4029 ;;		line 8 in file "spi-master-v1.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;  one_byte        1    wreg     unsigned char 
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;  one_byte        1    2[BANK1 ] unsigned char 
  4034 ;;  x               1    4[BANK1 ] unsigned char 
  4035 ;;  answer          1    3[BANK1 ] unsigned char 
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  1    wreg      unsigned char 
  4038 ;; Registers used:
  4039 ;;		wreg, status,2, status,0
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4045 ;;      Params:         0       0       0       0       0
  4046 ;;      Locals:         0       0       3       0       0
  4047 ;;      Temps:          0       0       2       0       0
  4048 ;;      Totals:         0       0       5       0       0
  4049 ;;Total ram usage:        5 bytes
  4050 ;; Hardware stack levels used: 1
  4051 ;; Hardware stack levels required when called: 5
  4052 ;; This function calls:
  4053 ;;		Nothing
  4054 ;; This function is called by:
  4055 ;;		_cosasSPI
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059     0AD6                     _spi_write_read:	
  4060                           ;psect for function _spi_write_read
  4061                           
  4062                           
  4063                           ;incstack = 0
  4064 ;; hardware stack exceeded
  4065                           ; Regs used in _spi_write_read: [wreg+status,2+status,0]
  4066                           ;spi_write_read@one_byte stored from wreg
  4067     0AD6  1683               	bsf	3,5	;RP0=1, select bank1
  4068     0AD7  1303               	bcf	3,6	;RP1=0, select bank1
  4069     0AD8  00A2               	movwf	spi_write_read@one_byte^(0+128)
  4070     0AD9                     l3384:
  4071                           
  4072                           ;spi-master-v1.c: 8: char spi_write_read(char one_byte);spi-master-v1.c: 9: {;spi-master
      +                          -v1.c: 11:     char answer, x;;spi-master-v1.c: 13:     answer = 0;
  4073     0AD9  01A3               	clrf	spi_write_read@answer^(0+128)
  4074     0ADA                     l3386:
  4075                           
  4076                           ;spi-master-v1.c: 15:     for(x = 8; x > 0; x--)
  4077     0ADA  3008               	movlw	8
  4078     0ADB  00A4               	movwf	spi_write_read@x^(0+128)
  4079     0ADC                     l3392:
  4080                           
  4081                           ;spi-master-v1.c: 16:     {;spi-master-v1.c: 17:         PORTCbits.RC0 = (__bit)((one_by
      +                          te >> (x - 1)) & 0b00000001);
  4082     0ADC  0822               	movf	spi_write_read@one_byte^(0+128),w
  4083     0ADD  00A0               	movwf	??_spi_write_read^(0+128)
  4084     0ADE  0824               	movf	spi_write_read@x^(0+128),w
  4085     0ADF  3EFF               	addlw	-1
  4086     0AE0  3E01               	addlw	1
  4087     0AE1  2AE4               	goto	u2804
  4088     0AE2                     u2805:
  4089     0AE2  1003               	clrc
  4090     0AE3  0CA0               	rrf	??_spi_write_read^(0+128),f
  4091     0AE4                     u2804:
  4092     0AE4  3EFF               	addlw	-1
  4093     0AE5  1D03               	skipz
  4094     0AE6  2AE2               	goto	u2805
  4095     0AE7  1820               	btfsc	??_spi_write_read^(0+128),0
  4096     0AE8  2AEA               	goto	u2811
  4097     0AE9  2AEE               	goto	u2810
  4098     0AEA                     u2811:
  4099     0AEA  1283               	bcf	3,5	;RP0=0, select bank0
  4100     0AEB  1303               	bcf	3,6	;RP1=0, select bank0
  4101     0AEC  1407               	bsf	7,0	;volatile
  4102     0AED  2AF1               	goto	u2824
  4103     0AEE                     u2810:
  4104     0AEE  1283               	bcf	3,5	;RP0=0, select bank0
  4105     0AEF  1303               	bcf	3,6	;RP1=0, select bank0
  4106     0AF0  1007               	bcf	7,0	;volatile
  4107     0AF1                     u2824:
  4108     0AF1                     l3394:
  4109                           
  4110                           ;spi-master-v1.c: 19:         PORTCbits.RC5 = 1;
  4111     0AF1  1687               	bsf	7,5	;volatile
  4112                           
  4113                           ;spi-master-v1.c: 21:         answer |= (char)PORTAbits.RA5;
  4114     0AF2  0E05               	swapf	5,w	;volatile
  4115     0AF3  1683               	bsf	3,5	;RP0=1, select bank1
  4116     0AF4  1303               	bcf	3,6	;RP1=0, select bank1
  4117     0AF5  00A0               	movwf	??_spi_write_read^(0+128)
  4118     0AF6  0C20               	rrf	??_spi_write_read^(0+128),w
  4119     0AF7  3901               	andlw	1
  4120     0AF8  00A1               	movwf	(??_spi_write_read+1)^(0+128)
  4121     0AF9  0821               	movf	(??_spi_write_read+1)^(0+128),w
  4122     0AFA  04A3               	iorwf	spi_write_read@answer^(0+128),f
  4123     0AFB                     l3396:
  4124                           
  4125                           ;spi-master-v1.c: 22:         PORTCbits.RC5 = 0;
  4126     0AFB  1283               	bcf	3,5	;RP0=0, select bank0
  4127     0AFC  1303               	bcf	3,6	;RP1=0, select bank0
  4128     0AFD  1287               	bcf	7,5	;volatile
  4129     0AFE                     l3398:
  4130                           
  4131                           ;spi-master-v1.c: 24:         if(x > 1)
  4132     0AFE  3002               	movlw	2
  4133     0AFF  1683               	bsf	3,5	;RP0=1, select bank1
  4134     0B00  1303               	bcf	3,6	;RP1=0, select bank1
  4135     0B01  0224               	subwf	spi_write_read@x^(0+128),w
  4136     0B02  1C03               	skipc
  4137     0B03  2B05               	goto	u2831
  4138     0B04  2B06               	goto	u2830
  4139     0B05                     u2831:
  4140     0B05  2B0A               	goto	l382
  4141     0B06                     u2830:
  4142     0B06                     l3400:
  4143                           
  4144                           ;spi-master-v1.c: 25:             answer = answer << 1;
  4145     0B06  0823               	movf	spi_write_read@answer^(0+128),w
  4146     0B07  00A0               	movwf	??_spi_write_read^(0+128)
  4147     0B08  0720               	addwf	??_spi_write_read^(0+128),w
  4148     0B09  00A3               	movwf	spi_write_read@answer^(0+128)
  4149     0B0A                     l382:
  4150                           
  4151                           ;spi-master-v1.c: 26:     }
  4152     0B0A  3001               	movlw	1
  4153     0B0B  02A4               	subwf	spi_write_read@x^(0+128),f
  4154     0B0C  0824               	movf	spi_write_read@x^(0+128),w
  4155     0B0D  1D03               	btfss	3,2
  4156     0B0E  2B10               	goto	u2841
  4157     0B0F  2B11               	goto	u2840
  4158     0B10                     u2841:
  4159     0B10  2ADC               	goto	l3392
  4160     0B11                     u2840:
  4161     0B11                     l383:
  4162     0B11  0008               	return
  4163     0B12                     __end_of_spi_write_read:
  4164                           
  4165                           	psect	text19
  4166     0494                     __ptext19:	
  4167 ;; *************** function _printf *****************
  4168 ;; Defined at:
  4169 ;;		line 477 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;  f               2   14[BANK1 ] PTR const unsigned char 
  4172 ;;		 -> STR_17(98), STR_16(19), STR_15(18), STR_14(7), 
  4173 ;;		 -> STR_13(8), STR_12(15), STR_11(22), STR_10(20), 
  4174 ;;		 -> STR_9(23), STR_8(28), STR_7(21), STR_6(30), 
  4175 ;;		 -> STR_5(14), STR_4(10), STR_3(10), STR_2(11), 
  4176 ;;		 -> STR_1(22), 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;  tmpval          4    0        struct .
  4179 ;;  val             2   35[BANK1 ] unsigned int 
  4180 ;;  cp              2    0        PTR const unsigned char 
  4181 ;;  len             2    0        unsigned int 
  4182 ;;  c               1   37[BANK1 ] unsigned char 
  4183 ;;  ap              1   34[BANK1 ] PTR void [1]
  4184 ;;		 -> ?_printf(2), 
  4185 ;;  prec            1   33[BANK1 ] char 
  4186 ;;  flag            1   32[BANK1 ] unsigned char 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  2   14[BANK1 ] int 
  4189 ;; Registers used:
  4190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4196 ;;      Params:         0       0      14       0       0
  4197 ;;      Locals:         0       0       6       0       0
  4198 ;;      Temps:          0       0       4       0       0
  4199 ;;      Totals:         0       0      24       0       0
  4200 ;;Total ram usage:       24 bytes
  4201 ;; Hardware stack levels used: 1
  4202 ;; Hardware stack levels required when called: 6
  4203 ;; This function calls:
  4204 ;;		___lwdiv
  4205 ;;		___lwmod
  4206 ;;		_putch
  4207 ;; This function is called by:
  4208 ;;		_initYo
  4209 ;;		_cosasSPI
  4210 ;;		_setLED
  4211 ;;		_initActuadoresSegunMemoria
  4212 ;;		_main
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216     0494                     _printf:	
  4217                           ;psect for function _printf
  4218                           
  4219     0494                     l3326:	
  4220                           ;incstack = 0
  4221                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4222                           
  4223                           
  4224                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 477: printf(const char * f, .
      +                          ..);/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 478: {;/opt/microchip/xc8/
      +                          v2.40/pic/sources/c90/common/doprnt.c: 479:  va_list ap;;/opt/microchip/xc8/v2.40/pic/so
      +                          urces/c90/common/doprnt.c: 512:  char c;;/opt/microchip/xc8/v2.40/pic/sources/c90/common
      +                          /doprnt.c: 521:  signed char prec;;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprn
      +                          t.c: 525:  unsigned char flag;;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c:
      +                           543:  } tmpval;
  4225     0494  30B0               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4226     0495  1683               	bsf	3,5	;RP0=1, select bank1
  4227     0496  1303               	bcf	3,6	;RP1=0, select bank1
  4228     0497  00C2               	movwf	printf@ap^(0+128)
  4229                           
  4230                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 553:  while((c = *f++)) {
  4231     0498  2D8F               	goto	l3378
  4232     0499                     l3328:
  4233                           
  4234                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 555:   if(c != '%')
  4235     0499  3025               	movlw	37
  4236     049A  0645               	xorwf	printf@c^(0+128),w
  4237     049B  1903               	btfsc	3,2
  4238     049C  2C9E               	goto	u2731
  4239     049D  2C9F               	goto	u2730
  4240     049E                     u2731:
  4241     049E  2CA6               	goto	l3332
  4242     049F                     u2730:
  4243     049F                     l3330:
  4244                           
  4245                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 557:   {;/opt/microchip/xc8/v
      +                          2.40/pic/sources/c90/common/doprnt.c: 558:    (putch(c) );
  4246     049F  0845               	movf	printf@c^(0+128),w
  4247     04A0  120A  158A  210D  120A  118A  	fcall	_putch
  4248                           
  4249                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 559:    continue;
  4250     04A5  2D8F               	goto	l3378
  4251     04A6                     l3332:
  4252                           
  4253                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 565:   flag = 0;
  4254     04A6  01C0               	clrf	printf@flag^(0+128)
  4255                           
  4256                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 661:   switch(c = *f++) {
  4257     04A7  2CB8               	goto	l3342
  4258     04A8                     l3334:
  4259                           
  4260                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 825:    c = (char)(*(int *)__
      +                          va_arg((*(int **)ap), (int)0));
  4261     04A8  0842               	movf	printf@ap^(0+128),w
  4262     04A9  0084               	movwf	4
  4263     04AA  1383               	bcf	3,7	;select IRP bank0
  4264     04AB  0800               	movf	0,w
  4265     04AC  00C5               	movwf	printf@c^(0+128)
  4266     04AD                     l3336:
  4267     04AD  3002               	movlw	2
  4268     04AE  00BC               	movwf	??_printf^(0+128)
  4269     04AF  083C               	movf	??_printf^(0+128),w
  4270     04B0  07C2               	addwf	printf@ap^(0+128),f
  4271     04B1                     l3338:
  4272                           
  4273                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 835:    (putch(c) );
  4274     04B1  0845               	movf	printf@c^(0+128),w
  4275     04B2  120A  158A  210D  120A  118A  	fcall	_putch
  4276                           
  4277                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 836:    continue;
  4278     04B7  2D8F               	goto	l3378
  4279     04B8                     l3342:
  4280     04B8  082F               	movf	(printf@f+1)^(0+128),w
  4281     04B9  00BD               	movwf	(??_printf^(0+128)+1)
  4282     04BA  082E               	movf	printf@f^(0+128),w
  4283     04BB  00BC               	movwf	??_printf^(0+128)
  4284     04BC  0AAE               	incf	printf@f^(0+128),f
  4285     04BD  1903               	skipnz
  4286     04BE  0AAF               	incf	(printf@f+1)^(0+128),f
  4287     04BF  083D               	movf	(??_printf+1)^(0+128),w
  4288     04C0  1283               	bcf	3,5	;RP0=0, select bank0
  4289     04C1  1303               	bcf	3,6	;RP1=0, select bank0
  4290     04C2  00FF               	movwf	btemp+1
  4291     04C3  1683               	bsf	3,5	;RP0=1, select bank1
  4292     04C4  1303               	bcf	3,6	;RP1=0, select bank1
  4293     04C5  083C               	movf	??_printf^(0+128),w
  4294     04C6  0084               	movwf	4
  4295     04C7  1283               	bcf	3,5	;RP0=0, select bank0
  4296     04C8  1303               	bcf	3,6	;RP1=0, select bank0
  4297     04C9  120A  118A  2300  120A  118A  	fcall	stringtab
  4298     04CE  1683               	bsf	3,5	;RP0=1, select bank1
  4299     04CF  1303               	bcf	3,6	;RP1=0, select bank1
  4300     04D0  00C5               	movwf	printf@c^(0+128)
  4301     04D1  00BE               	movwf	(??_printf+2)^(0+128)
  4302     04D2  01BF               	clrf	((??_printf+2)^(0+128)+1)
  4303                           
  4304                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4305                           ; Switch size 1, requested type "simple"
  4306                           ; Number of cases is 1, Range of values is 0 to 0
  4307                           ; switch strategies available:
  4308                           ; Name         Instructions Cycles
  4309                           ; simple_byte            4     3 (average)
  4310                           ; direct_byte           11     8 (fixed)
  4311                           ; jumptable            260     6 (fixed)
  4312                           ;	Chosen strategy is simple_byte
  4313     04D3  083F               	movf	(??_printf+3)^(0+128),w
  4314     04D4  3A00               	xorlw	0	; case 0
  4315     04D5  1903               	skipnz
  4316     04D6  2CD8               	goto	l3964
  4317     04D7  2CB1               	goto	l3338
  4318     04D8                     l3964:
  4319                           
  4320                           ; Switch size 1, requested type "simple"
  4321                           ; Number of cases is 4, Range of values is 0 to 105
  4322                           ; switch strategies available:
  4323                           ; Name         Instructions Cycles
  4324                           ; simple_byte           13     7 (average)
  4325                           ; jumptable            260     6 (fixed)
  4326                           ;	Chosen strategy is simple_byte
  4327     04D8  083E               	movf	(??_printf+2)^(0+128),w
  4328     04D9  3A00               	xorlw	0	; case 0
  4329     04DA  1903               	skipnz
  4330     04DB  2DAF               	goto	l496
  4331     04DC  3A63               	xorlw	99	; case 99
  4332     04DD  1903               	skipnz
  4333     04DE  2CA8               	goto	l3334
  4334     04DF  3A07               	xorlw	7	; case 100
  4335     04E0  1903               	skipnz
  4336     04E1  2CE6               	goto	l3344
  4337     04E2  3A0D               	xorlw	13	; case 105
  4338     04E3  1903               	skipnz
  4339     04E4  2CE6               	goto	l3344
  4340     04E5  2CB1               	goto	l3338
  4341     04E6                     l3344:
  4342                           
  4343                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1279:   {;/opt/microchip/xc8/
      +                          v2.40/pic/sources/c90/common/doprnt.c: 1285:     val = (unsigned int)(*(int *)__va_arg((
      +                          *(int **)ap), (int)0));
  4344     04E6  0842               	movf	printf@ap^(0+128),w
  4345     04E7  0084               	movwf	4
  4346     04E8  1383               	bcf	3,7	;select IRP bank0
  4347     04E9  0800               	movf	0,w
  4348     04EA  00C3               	movwf	printf@val^(0+128)
  4349     04EB  0A84               	incf	4,f
  4350     04EC  0800               	movf	0,w
  4351     04ED  00C4               	movwf	(printf@val+1)^(0+128)
  4352     04EE                     l3346:
  4353     04EE  3002               	movlw	2
  4354     04EF  00BC               	movwf	??_printf^(0+128)
  4355     04F0  083C               	movf	??_printf^(0+128),w
  4356     04F1  07C2               	addwf	printf@ap^(0+128),f
  4357     04F2                     l3348:
  4358                           
  4359                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1287:    if((int)val < 0) {
  4360     04F2  1FC4               	btfss	(printf@val+1)^(0+128),7
  4361     04F3  2CF5               	goto	u2741
  4362     04F4  2CF6               	goto	u2740
  4363     04F5                     u2741:
  4364     04F5  2CFF               	goto	l3354
  4365     04F6                     u2740:
  4366     04F6                     l3350:
  4367                           
  4368                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1288:     flag |= 0x03;
  4369     04F6  3003               	movlw	3
  4370     04F7  00BC               	movwf	??_printf^(0+128)
  4371     04F8  083C               	movf	??_printf^(0+128),w
  4372     04F9  04C0               	iorwf	printf@flag^(0+128),f
  4373     04FA                     l3352:
  4374                           
  4375                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1289:     val = -val;
  4376     04FA  09C3               	comf	printf@val^(0+128),f
  4377     04FB  09C4               	comf	(printf@val+1)^(0+128),f
  4378     04FC  0AC3               	incf	printf@val^(0+128),f
  4379     04FD  1903               	skipnz
  4380     04FE  0AC4               	incf	(printf@val+1)^(0+128),f
  4381     04FF                     l3354:
  4382                           
  4383                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1292:   };/opt/microchip/xc8/
      +                          v2.40/pic/sources/c90/common/doprnt.c: 1331:    for(c = 1 ; c != sizeof dpowers/sizeof d
      +                          powers[0] ; c++)
  4384     04FF  01C5               	clrf	printf@c^(0+128)
  4385     0500  0AC5               	incf	printf@c^(0+128),f
  4386     0501                     l3360:
  4387                           
  4388                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1332:     if(val < dpowers[c]
      +                          )
  4389     0501  0845               	movf	printf@c^(0+128),w
  4390     0502  00BC               	movwf	??_printf^(0+128)
  4391     0503  073C               	addwf	??_printf^(0+128),w
  4392     0504  3E12               	addlw	low (_dpowers| (0+32768))
  4393     0505  0084               	movwf	4
  4394     0506  3083               	movlw	high (_dpowers| (0+32768))
  4395     0507  1803               	skipnc
  4396     0508  3E01               	addlw	1
  4397     0509  1283               	bcf	3,5	;RP0=0, select bank0
  4398     050A  1303               	bcf	3,6	;RP1=0, select bank0
  4399     050B  00FF               	movwf	btemp+1
  4400     050C  120A  118A  2300  120A  118A  	fcall	stringtab
  4401     0511  1683               	bsf	3,5	;RP0=1, select bank1
  4402     0512  1303               	bcf	3,6	;RP1=0, select bank1
  4403     0513  00BD               	movwf	(??_printf+1)^(0+128)
  4404     0514  1283               	bcf	3,5	;RP0=0, select bank0
  4405     0515  1303               	bcf	3,6	;RP1=0, select bank0
  4406     0516  120A  118A  2300  120A  118A  	fcall	stringtab
  4407     051B  1683               	bsf	3,5	;RP0=1, select bank1
  4408     051C  1303               	bcf	3,6	;RP1=0, select bank1
  4409     051D  00BE               	movwf	((??_printf+1)^(0+128)+1)
  4410     051E  083E               	movf	(??_printf+2)^(0+128),w
  4411     051F  0244               	subwf	(printf@val+1)^(0+128),w
  4412     0520  1D03               	skipz
  4413     0521  2D24               	goto	u2755
  4414     0522  083D               	movf	(??_printf+1)^(0+128),w
  4415     0523  0243               	subwf	printf@val^(0+128),w
  4416     0524                     u2755:
  4417     0524  1803               	skipnc
  4418     0525  2D27               	goto	u2751
  4419     0526  2D28               	goto	u2750
  4420     0527                     u2751:
  4421     0527  2D29               	goto	l3364
  4422     0528                     u2750:
  4423     0528  2D33               	goto	l3366
  4424     0529                     l3364:
  4425     0529  3001               	movlw	1
  4426     052A  00BC               	movwf	??_printf^(0+128)
  4427     052B  083C               	movf	??_printf^(0+128),w
  4428     052C  07C5               	addwf	printf@c^(0+128),f
  4429     052D  3005               	movlw	5
  4430     052E  0645               	xorwf	printf@c^(0+128),w
  4431     052F  1D03               	btfss	3,2
  4432     0530  2D32               	goto	u2761
  4433     0531  2D33               	goto	u2760
  4434     0532                     u2761:
  4435     0532  2D01               	goto	l3360
  4436     0533                     u2760:
  4437     0533                     l3366:
  4438                           
  4439                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1448:   {;/opt/microchip/xc8/
      +                          v2.40/pic/sources/c90/common/doprnt.c: 1464:    if(flag & 0x03)
  4440     0533  0840               	movf	printf@flag^(0+128),w
  4441     0534  3903               	andlw	3
  4442     0535  1903               	btfsc	3,2
  4443     0536  2D38               	goto	u2771
  4444     0537  2D39               	goto	u2770
  4445     0538                     u2771:
  4446     0538  2D3F               	goto	l3370
  4447     0539                     u2770:
  4448     0539                     l3368:
  4449                           
  4450                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1465:     (putch('-') );
  4451     0539  302D               	movlw	45
  4452     053A  120A  158A  210D  120A  118A  	fcall	_putch
  4453     053F                     l3370:
  4454                           
  4455                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1495:   };/opt/microchip/xc8/
      +                          v2.40/pic/sources/c90/common/doprnt.c: 1498:   prec = c;
  4456     053F  1683               	bsf	3,5	;RP0=1, select bank1
  4457     0540  1303               	bcf	3,6	;RP1=0, select bank1
  4458     0541  0845               	movf	printf@c^(0+128),w
  4459     0542  00C1               	movwf	printf@prec^(0+128)
  4460                           
  4461                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1500:   while(prec--) {
  4462     0543  2D84               	goto	l3376
  4463     0544                     l3372:
  4464                           
  4465                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1504:    {;/opt/microchip/xc8
      +                          /v2.40/pic/sources/c90/common/doprnt.c: 1515:     c = (val / dpowers[(unsigned char)prec
      +                          ]) % 10 + '0';
  4466     0544  300A               	movlw	10
  4467     0545  00A8               	movwf	___lwmod@divisor^(0+128)
  4468     0546  3000               	movlw	0
  4469     0547  00A9               	movwf	(___lwmod@divisor^(0+128)+1)
  4470     0548  0841               	movf	printf@prec^(0+128),w
  4471     0549  00BC               	movwf	??_printf^(0+128)
  4472     054A  073C               	addwf	??_printf^(0+128),w
  4473     054B  3E12               	addlw	low (_dpowers| (0+32768))
  4474     054C  0084               	movwf	4
  4475     054D  3083               	movlw	high (_dpowers| (0+32768))
  4476     054E  1803               	skipnc
  4477     054F  3E01               	addlw	1
  4478     0550  1283               	bcf	3,5	;RP0=0, select bank0
  4479     0551  1303               	bcf	3,6	;RP1=0, select bank0
  4480     0552  00FF               	movwf	btemp+1
  4481     0553  120A  118A  2300  120A  118A  	fcall	stringtab
  4482     0558  1683               	bsf	3,5	;RP0=1, select bank1
  4483     0559  1303               	bcf	3,6	;RP1=0, select bank1
  4484     055A  00A0               	movwf	___lwdiv@divisor^(0+128)
  4485     055B  1283               	bcf	3,5	;RP0=0, select bank0
  4486     055C  1303               	bcf	3,6	;RP1=0, select bank0
  4487     055D  120A  118A  2300  120A  118A  	fcall	stringtab
  4488     0562  1683               	bsf	3,5	;RP0=1, select bank1
  4489     0563  1303               	bcf	3,6	;RP1=0, select bank1
  4490     0564  00A1               	movwf	(___lwdiv@divisor+1)^(0+128)
  4491     0565  0844               	movf	(printf@val+1)^(0+128),w
  4492     0566  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  4493     0567  0843               	movf	printf@val^(0+128),w
  4494     0568  00A2               	movwf	___lwdiv@dividend^(0+128)
  4495     0569  120A  158A  23D9  120A  118A  	fcall	___lwdiv
  4496     056E  1683               	bsf	3,5	;RP0=1, select bank1
  4497     056F  1303               	bcf	3,6	;RP1=0, select bank1
  4498     0570  0821               	movf	(?___lwdiv+1)^(0+128),w
  4499     0571  00AB               	movwf	(___lwmod@dividend+1)^(0+128)
  4500     0572  0820               	movf	?___lwdiv^(0+128),w
  4501     0573  00AA               	movwf	___lwmod@dividend^(0+128)
  4502     0574  120A  158A  229A  120A  118A  	fcall	___lwmod
  4503     0579  1683               	bsf	3,5	;RP0=1, select bank1
  4504     057A  1303               	bcf	3,6	;RP1=0, select bank1
  4505     057B  0828               	movf	?___lwmod^(0+128),w
  4506     057C  3E30               	addlw	48
  4507     057D  00C5               	movwf	printf@c^(0+128)
  4508     057E                     l3374:
  4509                           
  4510                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1549:    };/opt/microchip/xc8
      +                          /v2.40/pic/sources/c90/common/doprnt.c: 1550:    (putch(c) );
  4511     057E  0845               	movf	printf@c^(0+128),w
  4512     057F  120A  158A  210D  120A  118A  	fcall	_putch
  4513     0584                     l3376:
  4514                           
  4515                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1500:   while(prec--) {
  4516     0584  30FF               	movlw	255
  4517     0585  1683               	bsf	3,5	;RP0=1, select bank1
  4518     0586  1303               	bcf	3,6	;RP1=0, select bank1
  4519     0587  00BC               	movwf	??_printf^(0+128)
  4520     0588  083C               	movf	??_printf^(0+128),w
  4521     0589  07C1               	addwf	printf@prec^(0+128),f
  4522     058A  0A41               	incf	printf@prec^(0+128),w
  4523     058B  1D03               	btfss	3,2
  4524     058C  2D8E               	goto	u2781
  4525     058D  2D8F               	goto	u2780
  4526     058E                     u2781:
  4527     058E  2D44               	goto	l3372
  4528     058F                     u2780:
  4529     058F                     l3378:
  4530                           
  4531                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 553:  while((c = *f++)) {
  4532     058F  1683               	bsf	3,5	;RP0=1, select bank1
  4533     0590  1303               	bcf	3,6	;RP1=0, select bank1
  4534     0591  082F               	movf	(printf@f+1)^(0+128),w
  4535     0592  00BD               	movwf	(??_printf^(0+128)+1)
  4536     0593  082E               	movf	printf@f^(0+128),w
  4537     0594  00BC               	movwf	??_printf^(0+128)
  4538     0595  0AAE               	incf	printf@f^(0+128),f
  4539     0596  1903               	skipnz
  4540     0597  0AAF               	incf	(printf@f+1)^(0+128),f
  4541     0598  083D               	movf	(??_printf+1)^(0+128),w
  4542     0599  1283               	bcf	3,5	;RP0=0, select bank0
  4543     059A  1303               	bcf	3,6	;RP1=0, select bank0
  4544     059B  00FF               	movwf	btemp+1
  4545     059C  1683               	bsf	3,5	;RP0=1, select bank1
  4546     059D  1303               	bcf	3,6	;RP1=0, select bank1
  4547     059E  083C               	movf	??_printf^(0+128),w
  4548     059F  0084               	movwf	4
  4549     05A0  1283               	bcf	3,5	;RP0=0, select bank0
  4550     05A1  1303               	bcf	3,6	;RP1=0, select bank0
  4551     05A2  120A  118A  2300  120A  118A  	fcall	stringtab
  4552     05A7  1683               	bsf	3,5	;RP0=1, select bank1
  4553     05A8  1303               	bcf	3,6	;RP1=0, select bank1
  4554     05A9  00C5               	movwf	printf@c^(0+128)
  4555     05AA  0845               	movf	printf@c^(0+128),w
  4556     05AB  1D03               	btfss	3,2
  4557     05AC  2DAE               	goto	u2791
  4558     05AD  2DAF               	goto	u2790
  4559     05AE                     u2791:
  4560     05AE  2C99               	goto	l3328
  4561     05AF                     u2790:
  4562     05AF                     l496:
  4563     05AF  0008               	return
  4564     05B0                     __end_of_printf:
  4565                           
  4566                           	psect	text20
  4567     090D                     __ptext20:	
  4568 ;; *************** function _putch *****************
  4569 ;; Defined at:
  4570 ;;		line 234 in file "main.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  c               1    wreg     unsigned char 
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;  c               1    0[BANK1 ] unsigned char 
  4575 ;; Return value:  Size  Location     Type
  4576 ;;                  1    wreg      void 
  4577 ;; Registers used:
  4578 ;;		wreg
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4584 ;;      Params:         0       0       0       0       0
  4585 ;;      Locals:         0       0       1       0       0
  4586 ;;      Temps:          0       0       0       0       0
  4587 ;;      Totals:         0       0       1       0       0
  4588 ;;Total ram usage:        1 bytes
  4589 ;; Hardware stack levels used: 1
  4590 ;; Hardware stack levels required when called: 5
  4591 ;; This function calls:
  4592 ;;		Nothing
  4593 ;; This function is called by:
  4594 ;;		_printf
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598     090D                     _putch:	
  4599                           ;psect for function _putch
  4600                           
  4601                           
  4602                           ;incstack = 0
  4603                           ; Regs used in _putch: [wreg]
  4604                           ;putch@c stored from wreg
  4605     090D  1683               	bsf	3,5	;RP0=1, select bank1
  4606     090E  1303               	bcf	3,6	;RP1=0, select bank1
  4607     090F  00A0               	movwf	putch@c^(0+128)
  4608     0910                     l3258:
  4609     0910                     l198:	
  4610                           ;main.c: 238:     }
  4611                           
  4612                           
  4613                           ;main.c: 235:     while (!TXIF && !TXSTAbits.TRMT) {
  4614     0910  1283               	bcf	3,5	;RP0=0, select bank0
  4615     0911  1303               	bcf	3,6	;RP1=0, select bank0
  4616     0912  1A0C               	btfsc	12,4	;volatile
  4617     0913  2915               	goto	u2571
  4618     0914  2916               	goto	u2570
  4619     0915                     u2571:
  4620     0915  291C               	goto	l3262
  4621     0916                     u2570:
  4622     0916                     l3260:
  4623     0916  1683               	bsf	3,5	;RP0=1, select bank1
  4624     0917  1303               	bcf	3,6	;RP1=0, select bank1
  4625     0918  1C98               	btfss	24,1	;volatile
  4626     0919  291B               	goto	u2581
  4627     091A  291C               	goto	u2580
  4628     091B                     u2581:
  4629     091B  2910               	goto	l198
  4630     091C                     u2580:
  4631     091C                     l3262:
  4632                           
  4633                           ;main.c: 239:     TXREG = c;
  4634     091C  1683               	bsf	3,5	;RP0=1, select bank1
  4635     091D  1303               	bcf	3,6	;RP1=0, select bank1
  4636     091E  0820               	movf	putch@c^(0+128),w
  4637     091F  1283               	bcf	3,5	;RP0=0, select bank0
  4638     0920  1303               	bcf	3,6	;RP1=0, select bank0
  4639     0921  0099               	movwf	25	;volatile
  4640     0922                     l203:
  4641     0922  0008               	return
  4642     0923                     __end_of_putch:
  4643                           
  4644                           	psect	text21
  4645     0A9A                     __ptext21:	
  4646 ;; *************** function ___lwmod *****************
  4647 ;; Defined at:
  4648 ;;		line 5 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/lwmod.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;  divisor         2    8[BANK1 ] unsigned int 
  4651 ;;  dividend        2   10[BANK1 ] unsigned int 
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;  counter         1   13[BANK1 ] unsigned char 
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  2    8[BANK1 ] unsigned int 
  4656 ;; Registers used:
  4657 ;;		wreg, status,2, status,0
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4663 ;;      Params:         0       0       4       0       0
  4664 ;;      Locals:         0       0       1       0       0
  4665 ;;      Temps:          0       0       1       0       0
  4666 ;;      Totals:         0       0       6       0       0
  4667 ;;Total ram usage:        6 bytes
  4668 ;; Hardware stack levels used: 1
  4669 ;; Hardware stack levels required when called: 5
  4670 ;; This function calls:
  4671 ;;		Nothing
  4672 ;; This function is called by:
  4673 ;;		_printf
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677     0A9A                     ___lwmod:	
  4678                           ;psect for function ___lwmod
  4679                           
  4680     0A9A                     l3290:	
  4681                           ;incstack = 0
  4682                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4683                           
  4684     0A9A  1683               	bsf	3,5	;RP0=1, select bank1
  4685     0A9B  1303               	bcf	3,6	;RP1=0, select bank1
  4686     0A9C  0828               	movf	___lwmod@divisor^(0+128),w
  4687     0A9D  0429               	iorwf	(___lwmod@divisor+1)^(0+128),w
  4688     0A9E  1903               	btfsc	3,2
  4689     0A9F  2AA1               	goto	u2661
  4690     0AA0  2AA2               	goto	u2660
  4691     0AA1                     u2661:
  4692     0AA1  2AD1               	goto	l3308
  4693     0AA2                     u2660:
  4694     0AA2                     l3292:
  4695     0AA2  01AD               	clrf	___lwmod@counter^(0+128)
  4696     0AA3  0AAD               	incf	___lwmod@counter^(0+128),f
  4697     0AA4  2AB0               	goto	l3298
  4698     0AA5                     l3294:
  4699     0AA5  3001               	movlw	1
  4700     0AA6                     u2675:
  4701     0AA6  1003               	clrc
  4702     0AA7  0DA8               	rlf	___lwmod@divisor^(0+128),f
  4703     0AA8  0DA9               	rlf	(___lwmod@divisor+1)^(0+128),f
  4704     0AA9  3EFF               	addlw	-1
  4705     0AAA  1D03               	skipz
  4706     0AAB  2AA6               	goto	u2675
  4707     0AAC                     l3296:
  4708     0AAC  3001               	movlw	1
  4709     0AAD  00AC               	movwf	??___lwmod^(0+128)
  4710     0AAE  082C               	movf	??___lwmod^(0+128),w
  4711     0AAF  07AD               	addwf	___lwmod@counter^(0+128),f
  4712     0AB0                     l3298:
  4713     0AB0  1FA9               	btfss	(___lwmod@divisor+1)^(0+128),7
  4714     0AB1  2AB3               	goto	u2681
  4715     0AB2  2AB4               	goto	u2680
  4716     0AB3                     u2681:
  4717     0AB3  2AA5               	goto	l3294
  4718     0AB4                     u2680:
  4719     0AB4                     l3300:
  4720     0AB4  0829               	movf	(___lwmod@divisor+1)^(0+128),w
  4721     0AB5  022B               	subwf	(___lwmod@dividend+1)^(0+128),w
  4722     0AB6  1D03               	skipz
  4723     0AB7  2ABA               	goto	u2695
  4724     0AB8  0828               	movf	___lwmod@divisor^(0+128),w
  4725     0AB9  022A               	subwf	___lwmod@dividend^(0+128),w
  4726     0ABA                     u2695:
  4727     0ABA  1C03               	skipc
  4728     0ABB  2ABD               	goto	u2691
  4729     0ABC  2ABE               	goto	u2690
  4730     0ABD                     u2691:
  4731     0ABD  2AC4               	goto	l3304
  4732     0ABE                     u2690:
  4733     0ABE                     l3302:
  4734     0ABE  0828               	movf	___lwmod@divisor^(0+128),w
  4735     0ABF  02AA               	subwf	___lwmod@dividend^(0+128),f
  4736     0AC0  0829               	movf	(___lwmod@divisor+1)^(0+128),w
  4737     0AC1  1C03               	skipc
  4738     0AC2  03AB               	decf	(___lwmod@dividend+1)^(0+128),f
  4739     0AC3  02AB               	subwf	(___lwmod@dividend+1)^(0+128),f
  4740     0AC4                     l3304:
  4741     0AC4  3001               	movlw	1
  4742     0AC5                     u2705:
  4743     0AC5  1003               	clrc
  4744     0AC6  0CA9               	rrf	(___lwmod@divisor+1)^(0+128),f
  4745     0AC7  0CA8               	rrf	___lwmod@divisor^(0+128),f
  4746     0AC8  3EFF               	addlw	-1
  4747     0AC9  1D03               	skipz
  4748     0ACA  2AC5               	goto	u2705
  4749     0ACB                     l3306:
  4750     0ACB  3001               	movlw	1
  4751     0ACC  02AD               	subwf	___lwmod@counter^(0+128),f
  4752     0ACD  1D03               	btfss	3,2
  4753     0ACE  2AD0               	goto	u2711
  4754     0ACF  2AD1               	goto	u2710
  4755     0AD0                     u2711:
  4756     0AD0  2AB4               	goto	l3300
  4757     0AD1                     u2710:
  4758     0AD1                     l3308:
  4759     0AD1  082B               	movf	(___lwmod@dividend+1)^(0+128),w
  4760     0AD2  00A9               	movwf	(?___lwmod+1)^(0+128)
  4761     0AD3  082A               	movf	___lwmod@dividend^(0+128),w
  4762     0AD4  00A8               	movwf	?___lwmod^(0+128)
  4763     0AD5                     l782:
  4764     0AD5  0008               	return
  4765     0AD6                     __end_of___lwmod:
  4766                           
  4767                           	psect	text22
  4768     0BD9                     __ptext22:	
  4769 ;; *************** function ___lwdiv *****************
  4770 ;; Defined at:
  4771 ;;		line 5 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/lwdiv.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;  divisor         2    0[BANK1 ] unsigned int 
  4774 ;;  dividend        2    2[BANK1 ] unsigned int 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  quotient        2    6[BANK1 ] unsigned int 
  4777 ;;  counter         1    5[BANK1 ] unsigned char 
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  2    0[BANK1 ] unsigned int 
  4780 ;; Registers used:
  4781 ;;		wreg, status,2, status,0
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4787 ;;      Params:         0       0       4       0       0
  4788 ;;      Locals:         0       0       3       0       0
  4789 ;;      Temps:          0       0       1       0       0
  4790 ;;      Totals:         0       0       8       0       0
  4791 ;;Total ram usage:        8 bytes
  4792 ;; Hardware stack levels used: 1
  4793 ;; Hardware stack levels required when called: 5
  4794 ;; This function calls:
  4795 ;;		Nothing
  4796 ;; This function is called by:
  4797 ;;		_printf
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801     0BD9                     ___lwdiv:	
  4802                           ;psect for function ___lwdiv
  4803                           
  4804     0BD9                     l3264:	
  4805                           ;incstack = 0
  4806                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4807                           
  4808     0BD9  1683               	bsf	3,5	;RP0=1, select bank1
  4809     0BDA  1303               	bcf	3,6	;RP1=0, select bank1
  4810     0BDB  01A6               	clrf	___lwdiv@quotient^(0+128)
  4811     0BDC  01A7               	clrf	(___lwdiv@quotient+1)^(0+128)
  4812     0BDD                     l3266:
  4813     0BDD  0820               	movf	___lwdiv@divisor^(0+128),w
  4814     0BDE  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  4815     0BDF  1903               	btfsc	3,2
  4816     0BE0  2BE2               	goto	u2591
  4817     0BE1  2BE3               	goto	u2590
  4818     0BE2                     u2591:
  4819     0BE2  2C1A               	goto	l3286
  4820     0BE3                     u2590:
  4821     0BE3                     l3268:
  4822     0BE3  01A5               	clrf	___lwdiv@counter^(0+128)
  4823     0BE4  0AA5               	incf	___lwdiv@counter^(0+128),f
  4824     0BE5  2BF1               	goto	l3274
  4825     0BE6                     l3270:
  4826     0BE6  3001               	movlw	1
  4827     0BE7                     u2605:
  4828     0BE7  1003               	clrc
  4829     0BE8  0DA0               	rlf	___lwdiv@divisor^(0+128),f
  4830     0BE9  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
  4831     0BEA  3EFF               	addlw	-1
  4832     0BEB  1D03               	skipz
  4833     0BEC  2BE7               	goto	u2605
  4834     0BED                     l3272:
  4835     0BED  3001               	movlw	1
  4836     0BEE  00A4               	movwf	??___lwdiv^(0+128)
  4837     0BEF  0824               	movf	??___lwdiv^(0+128),w
  4838     0BF0  07A5               	addwf	___lwdiv@counter^(0+128),f
  4839     0BF1                     l3274:
  4840     0BF1  1FA1               	btfss	(___lwdiv@divisor+1)^(0+128),7
  4841     0BF2  2BF4               	goto	u2611
  4842     0BF3  2BF5               	goto	u2610
  4843     0BF4                     u2611:
  4844     0BF4  2BE6               	goto	l3270
  4845     0BF5                     u2610:
  4846     0BF5                     l3276:
  4847     0BF5  3001               	movlw	1
  4848     0BF6                     u2625:
  4849     0BF6  1003               	clrc
  4850     0BF7  0DA6               	rlf	___lwdiv@quotient^(0+128),f
  4851     0BF8  0DA7               	rlf	(___lwdiv@quotient+1)^(0+128),f
  4852     0BF9  3EFF               	addlw	-1
  4853     0BFA  1D03               	skipz
  4854     0BFB  2BF6               	goto	u2625
  4855     0BFC  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  4856     0BFD  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
  4857     0BFE  1D03               	skipz
  4858     0BFF  2C02               	goto	u2635
  4859     0C00  0820               	movf	___lwdiv@divisor^(0+128),w
  4860     0C01  0222               	subwf	___lwdiv@dividend^(0+128),w
  4861     0C02                     u2635:
  4862     0C02  1C03               	skipc
  4863     0C03  2C05               	goto	u2631
  4864     0C04  2C06               	goto	u2630
  4865     0C05                     u2631:
  4866     0C05  2C0D               	goto	l3282
  4867     0C06                     u2630:
  4868     0C06                     l3278:
  4869     0C06  0820               	movf	___lwdiv@divisor^(0+128),w
  4870     0C07  02A2               	subwf	___lwdiv@dividend^(0+128),f
  4871     0C08  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  4872     0C09  1C03               	skipc
  4873     0C0A  03A3               	decf	(___lwdiv@dividend+1)^(0+128),f
  4874     0C0B  02A3               	subwf	(___lwdiv@dividend+1)^(0+128),f
  4875     0C0C                     l3280:
  4876     0C0C  1426               	bsf	___lwdiv@quotient^(0+128),0
  4877     0C0D                     l3282:
  4878     0C0D  3001               	movlw	1
  4879     0C0E                     u2645:
  4880     0C0E  1003               	clrc
  4881     0C0F  0CA1               	rrf	(___lwdiv@divisor+1)^(0+128),f
  4882     0C10  0CA0               	rrf	___lwdiv@divisor^(0+128),f
  4883     0C11  3EFF               	addlw	-1
  4884     0C12  1D03               	skipz
  4885     0C13  2C0E               	goto	u2645
  4886     0C14                     l3284:
  4887     0C14  3001               	movlw	1
  4888     0C15  02A5               	subwf	___lwdiv@counter^(0+128),f
  4889     0C16  1D03               	btfss	3,2
  4890     0C17  2C19               	goto	u2651
  4891     0C18  2C1A               	goto	u2650
  4892     0C19                     u2651:
  4893     0C19  2BF5               	goto	l3276
  4894     0C1A                     u2650:
  4895     0C1A                     l3286:
  4896     0C1A  0827               	movf	(___lwdiv@quotient+1)^(0+128),w
  4897     0C1B  00A1               	movwf	(?___lwdiv+1)^(0+128)
  4898     0C1C  0826               	movf	___lwdiv@quotient^(0+128),w
  4899     0C1D  00A0               	movwf	?___lwdiv^(0+128)
  4900     0C1E                     l772:
  4901     0C1E  0008               	return
  4902     0C1F                     __end_of___lwdiv:
  4903                           
  4904                           	psect	text23
  4905     0987                     __ptext23:	
  4906 ;; *************** function _getnoPrimerArranque *****************
  4907 ;; Defined at:
  4908 ;;		line 350 in file "main.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;		None
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;  aux             1    1[BANK1 ] unsigned char 
  4913 ;;  direccion       1    0        unsigned char 
  4914 ;; Return value:  Size  Location     Type
  4915 ;;                  1    wreg      enum E1298
  4916 ;; Registers used:
  4917 ;;		wreg, status,2, status,0, pclath, cstack
  4918 ;; Tracked objects:
  4919 ;;		On entry : 0/0
  4920 ;;		On exit  : 0/0
  4921 ;;		Unchanged: 0/0
  4922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4923 ;;      Params:         0       0       0       0       0
  4924 ;;      Locals:         0       0       1       0       0
  4925 ;;      Temps:          0       0       0       0       0
  4926 ;;      Totals:         0       0       1       0       0
  4927 ;;Total ram usage:        1 bytes
  4928 ;; Hardware stack levels used: 1
  4929 ;; Hardware stack levels required when called: 6
  4930 ;; This function calls:
  4931 ;;		_leerMemoria
  4932 ;; This function is called by:
  4933 ;;		_initActuadoresSegunMemoria
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937     0987                     _getnoPrimerArranque:	
  4938                           ;psect for function _getnoPrimerArranque
  4939                           
  4940     0987                     l3710:	
  4941                           ;incstack = 0
  4942                           ; Regs used in _getnoPrimerArranque: [wreg+status,2+status,0+pclath+cstack]
  4943                           
  4944     0987                     l3712:
  4945                           
  4946                           ;main.c: 352:     char aux = leerMemoria(direccion);
  4947     0987  3000               	movlw	0
  4948     0988  120A  158A  216B  120A  158A  	fcall	_leerMemoria
  4949     098D  1683               	bsf	3,5	;RP0=1, select bank1
  4950     098E  1303               	bcf	3,6	;RP1=0, select bank1
  4951     098F  00A1               	movwf	getnoPrimerArranque@aux^(0+128)
  4952     0990                     l3714:
  4953                           
  4954                           ;main.c: 353:     if (aux == (0) || aux == 0 || aux == (char) 0b00000000) return FALSE;
  4955     0990  0821               	movf	getnoPrimerArranque@aux^(0+128),w
  4956     0991  1903               	btfsc	3,2
  4957     0992  2994               	goto	u3071
  4958     0993  2995               	goto	u3070
  4959     0994                     u3071:
  4960     0994  299F               	goto	l3720
  4961     0995                     u3070:
  4962     0995                     l3716:
  4963     0995  0821               	movf	getnoPrimerArranque@aux^(0+128),w
  4964     0996  1903               	btfsc	3,2
  4965     0997  2999               	goto	u3081
  4966     0998  299A               	goto	u3080
  4967     0999                     u3081:
  4968     0999  299F               	goto	l3720
  4969     099A                     u3080:
  4970     099A                     l3718:
  4971     099A  0821               	movf	getnoPrimerArranque@aux^(0+128),w
  4972     099B  1D03               	btfss	3,2
  4973     099C  299E               	goto	u3091
  4974     099D  299F               	goto	u3090
  4975     099E                     u3091:
  4976     099E  29A1               	goto	l3726
  4977     099F                     u3090:
  4978     099F                     l3720:
  4979     099F  3000               	movlw	0
  4980     09A0  29A2               	goto	l246
  4981     09A1                     l3726:
  4982     09A1  3001               	movlw	1
  4983     09A2                     l246:
  4984     09A2  0008               	return
  4985     09A3                     __end_of_getnoPrimerArranque:
  4986                           
  4987                           	psect	text24
  4988     096B                     __ptext24:	
  4989 ;; *************** function _leerMemoria *****************
  4990 ;; Defined at:
  4991 ;;		line 276 in file "main.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;  direccion       1    wreg     unsigned char 
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;  direccion       1    0[BANK1 ] unsigned char 
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  1    wreg      unsigned char 
  4998 ;; Registers used:
  4999 ;;		wreg, status,2
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5005 ;;      Params:         0       0       0       0       0
  5006 ;;      Locals:         0       0       1       0       0
  5007 ;;      Temps:          0       0       0       0       0
  5008 ;;      Totals:         0       0       1       0       0
  5009 ;;Total ram usage:        1 bytes
  5010 ;; Hardware stack levels used: 1
  5011 ;; Hardware stack levels required when called: 5
  5012 ;; This function calls:
  5013 ;;		Nothing
  5014 ;; This function is called by:
  5015 ;;		_escribirMemoria
  5016 ;;		_getnoPrimerArranque
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020     096B                     _leerMemoria:	
  5021                           ;psect for function _leerMemoria
  5022                           
  5023                           
  5024                           ;incstack = 0
  5025 ;; hardware stack exceeded
  5026                           ; Regs used in _leerMemoria: [wreg+status,2]
  5027                           ;leerMemoria@direccion stored from wreg
  5028     096B  1683               	bsf	3,5	;RP0=1, select bank1
  5029     096C  1303               	bcf	3,6	;RP1=0, select bank1
  5030     096D  00A0               	movwf	leerMemoria@direccion^(0+128)
  5031     096E                     l3312:
  5032                           
  5033                           ;main.c: 277:     EECON1bits.EEPGD = 0;
  5034     096E  1683               	bsf	3,5	;RP0=1, select bank3
  5035     096F  1703               	bsf	3,6	;RP1=1, select bank3
  5036     0970  138C               	bcf	12,7	;volsfr
  5037                           
  5038                           ;main.c: 279:     EECON1bits.WREN = 0;
  5039     0971  110C               	bcf	12,2	;volsfr
  5040     0972                     l3314:
  5041                           
  5042                           ;main.c: 280:     EEDATH = 0;
  5043     0972  1283               	bcf	3,5	;RP0=0, select bank2
  5044     0973  1703               	bsf	3,6	;RP1=1, select bank2
  5045     0974  018E               	clrf	14	;volatile
  5046                           
  5047                           ;main.c: 281:     EEADRH = 0;
  5048     0975  018F               	clrf	15	;volatile
  5049     0976                     l3316:
  5050                           
  5051                           ;main.c: 282:     EEADR = direccion;
  5052     0976  1683               	bsf	3,5	;RP0=1, select bank1
  5053     0977  1303               	bcf	3,6	;RP1=0, select bank1
  5054     0978  0820               	movf	leerMemoria@direccion^(0+128),w
  5055     0979  1283               	bcf	3,5	;RP0=0, select bank2
  5056     097A  1703               	bsf	3,6	;RP1=1, select bank2
  5057     097B  008D               	movwf	13	;volatile
  5058     097C                     l3318:
  5059                           
  5060                           ;main.c: 283:     if (EECON1bits.WR == 0)
  5061     097C  1683               	bsf	3,5	;RP0=1, select bank3
  5062     097D  1703               	bsf	3,6	;RP1=1, select bank3
  5063     097E  188C               	btfsc	12,1	;volsfr
  5064     097F  2981               	goto	u2721
  5065     0980  2982               	goto	u2720
  5066     0981                     u2721:
  5067     0981  2983               	goto	l3322
  5068     0982                     u2720:
  5069     0982                     l3320:
  5070                           
  5071                           ;main.c: 284:         EECON1bits.RD = 1;
  5072     0982  140C               	bsf	12,0	;volsfr
  5073     0983                     l3322:
  5074                           
  5075                           ;main.c: 286:     return EEDAT;
  5076     0983  1283               	bcf	3,5	;RP0=0, select bank2
  5077     0984  1703               	bsf	3,6	;RP1=1, select bank2
  5078     0985  080C               	movf	12,w	;volatile
  5079     0986                     l220:
  5080     0986  0008               	return
  5081     0987                     __end_of_leerMemoria:
  5082                           
  5083                           	psect	text25
  5084     0833                     __ptext25:	
  5085 ;; *************** function _i2c_stop *****************
  5086 ;; Defined at:
  5087 ;;		line 23 in file "i2c-v2.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;		None
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;		None
  5092 ;; Return value:  Size  Location     Type
  5093 ;;                  1    wreg      void 
  5094 ;; Registers used:
  5095 ;;		status,2, status,0, pclath, cstack
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5101 ;;      Params:         0       0       0       0       0
  5102 ;;      Locals:         0       0       0       0       0
  5103 ;;      Temps:          0       0       0       0       0
  5104 ;;      Totals:         0       0       0       0       0
  5105 ;;Total ram usage:        0 bytes
  5106 ;; Hardware stack levels used: 1
  5107 ;; Hardware stack levels required when called: 6
  5108 ;; This function calls:
  5109 ;;		_wait_MSSP
  5110 ;; This function is called by:
  5111 ;;		_main
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115     0833                     _i2c_stop:	
  5116                           ;psect for function _i2c_stop
  5117                           
  5118     0833                     l3830:	
  5119                           ;incstack = 0
  5120                           ; Regs used in _i2c_stop: [status,2+status,0+pclath+cstack]
  5121                           
  5122                           
  5123                           ;i2c-v2.c: 25:     SSPCON2bits.PEN = 1;
  5124     0833  1683               	bsf	3,5	;RP0=1, select bank1
  5125     0834  1303               	bcf	3,6	;RP1=0, select bank1
  5126     0835  1511               	bsf	17,2	;volatile
  5127     0836                     l3832:
  5128                           
  5129                           ;i2c-v2.c: 26:     wait_MSSP();
  5130     0836  120A  158A  201A  120A  158A  	fcall	_wait_MSSP
  5131     083B                     l362:
  5132     083B  0008               	return
  5133     083C                     __end_of_i2c_stop:
  5134                           
  5135                           	psect	text26
  5136     0C6E                     __ptext26:	
  5137 ;; *************** function _analisisRuido *****************
  5138 ;; Defined at:
  5139 ;;		line 418 in file "main.c"
  5140 ;; Parameters:    Size  Location     Type
  5141 ;;		None
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;  temp            1    2[BANK1 ] unsigned char 
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  1    wreg      void 
  5146 ;; Registers used:
  5147 ;;		wreg, status,2, btemp+1
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5153 ;;      Params:         0       0       0       0       0
  5154 ;;      Locals:         0       0       1       0       0
  5155 ;;      Temps:          0       0       2       0       0
  5156 ;;      Totals:         0       0       3       0       0
  5157 ;;Total ram usage:        3 bytes
  5158 ;; Hardware stack levels used: 1
  5159 ;; Hardware stack levels required when called: 5
  5160 ;; This function calls:
  5161 ;;		Nothing
  5162 ;; This function is called by:
  5163 ;;		_main
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167     0C6E                     _analisisRuido:	
  5168                           ;psect for function _analisisRuido
  5169                           
  5170     0C6E                     l3784:	
  5171                           ;incstack = 0
  5172                           ; Regs used in _analisisRuido: [wreg+status,2+btemp+1]
  5173                           
  5174     0C6E                     l3786:
  5175                           
  5176                           ;main.c: 423:     if (valor[0] < ruidoBajo) temp = 1;
  5177     0C6E  1683               	bsf	3,5	;RP0=1, select bank1
  5178     0C6F  1303               	bcf	3,6	;RP1=0, select bank1
  5179     0C70  084C               	movf	(_valor+1)^(0+128),w
  5180     0C71  3A80               	xorlw	128
  5181     0C72  00FF               	movwf	btemp+1
  5182     0C73  3081               	movlw	129
  5183     0C74  027F               	subwf	btemp+1,w
  5184     0C75  1D03               	skipz
  5185     0C76  2C79               	goto	u3105
  5186     0C77  3090               	movlw	144
  5187     0C78  024B               	subwf	_valor^(0+128),w
  5188     0C79                     u3105:
  5189     0C79  1803               	skipnc
  5190     0C7A  2C7C               	goto	u3101
  5191     0C7B  2C7D               	goto	u3100
  5192     0C7C                     u3101:
  5193     0C7C  2C82               	goto	l3790
  5194     0C7D                     u3100:
  5195     0C7D                     l3788:
  5196     0C7D  1683               	bsf	3,5	;RP0=1, select bank1
  5197     0C7E  1303               	bcf	3,6	;RP1=0, select bank1
  5198     0C7F  01A2               	clrf	analisisRuido@temp^(0+128)
  5199     0C80  0AA2               	incf	analisisRuido@temp^(0+128),f
  5200     0C81  2C9A               	goto	l268
  5201     0C82                     l3790:
  5202     0C82  1683               	bsf	3,5	;RP0=1, select bank1
  5203     0C83  1303               	bcf	3,6	;RP1=0, select bank1
  5204     0C84  084C               	movf	(_valor+1)^(0+128),w
  5205     0C85  3A80               	xorlw	128
  5206     0C86  00FF               	movwf	btemp+1
  5207     0C87  3083               	movlw	131
  5208     0C88  027F               	subwf	btemp+1,w
  5209     0C89  1D03               	skipz
  5210     0C8A  2C8D               	goto	u3115
  5211     0C8B  3084               	movlw	132
  5212     0C8C  024B               	subwf	_valor^(0+128),w
  5213     0C8D                     u3115:
  5214     0C8D  1803               	skipnc
  5215     0C8E  2C90               	goto	u3111
  5216     0C8F  2C91               	goto	u3110
  5217     0C90                     u3111:
  5218     0C90  2C96               	goto	l3794
  5219     0C91                     u3110:
  5220     0C91                     l3792:
  5221     0C91  3002               	movlw	2
  5222     0C92  1683               	bsf	3,5	;RP0=1, select bank1
  5223     0C93  1303               	bcf	3,6	;RP1=0, select bank1
  5224     0C94  00A2               	movwf	analisisRuido@temp^(0+128)
  5225     0C95  2C9A               	goto	l268
  5226     0C96                     l3794:
  5227     0C96  3003               	movlw	3
  5228     0C97  1683               	bsf	3,5	;RP0=1, select bank1
  5229     0C98  1303               	bcf	3,6	;RP1=0, select bank1
  5230     0C99  00A2               	movwf	analisisRuido@temp^(0+128)
  5231     0C9A                     l268:
  5232                           
  5233                           ;main.c: 427:     if (temp > ruidoMasAlto) ruidoMasAlto = temp;
  5234     0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  5235     0C9B  1303               	bcf	3,6	;RP1=0, select bank0
  5236     0C9C  0844               	movf	_ruidoMasAlto+1,w
  5237     0C9D  3A80               	xorlw	128
  5238     0C9E  1683               	bsf	3,5	;RP0=1, select bank1
  5239     0C9F  1303               	bcf	3,6	;RP1=0, select bank1
  5240     0CA0  00A0               	movwf	??_analisisRuido^(0+128)
  5241     0CA1  3080               	movlw	128
  5242     0CA2  0220               	subwf	??_analisisRuido^(0+128),w
  5243     0CA3  1D03               	skipz
  5244     0CA4  2CA9               	goto	u3125
  5245     0CA5  0822               	movf	analisisRuido@temp^(0+128),w
  5246     0CA6  1283               	bcf	3,5	;RP0=0, select bank0
  5247     0CA7  1303               	bcf	3,6	;RP1=0, select bank0
  5248     0CA8  0243               	subwf	_ruidoMasAlto,w
  5249     0CA9                     u3125:
  5250     0CA9  1803               	skipnc
  5251     0CAA  2CAC               	goto	u3121
  5252     0CAB  2CAD               	goto	u3120
  5253     0CAC                     u3121:
  5254     0CAC  2CBC               	goto	l272
  5255     0CAD                     u3120:
  5256     0CAD                     l3796:
  5257     0CAD  1683               	bsf	3,5	;RP0=1, select bank1
  5258     0CAE  1303               	bcf	3,6	;RP1=0, select bank1
  5259     0CAF  0822               	movf	analisisRuido@temp^(0+128),w
  5260     0CB0  00A0               	movwf	??_analisisRuido^(0+128)
  5261     0CB1  01A1               	clrf	(??_analisisRuido^(0+128)+1)
  5262     0CB2  0820               	movf	??_analisisRuido^(0+128),w
  5263     0CB3  1283               	bcf	3,5	;RP0=0, select bank0
  5264     0CB4  1303               	bcf	3,6	;RP1=0, select bank0
  5265     0CB5  00C3               	movwf	_ruidoMasAlto
  5266     0CB6  1683               	bsf	3,5	;RP0=1, select bank1
  5267     0CB7  1303               	bcf	3,6	;RP1=0, select bank1
  5268     0CB8  0821               	movf	(??_analisisRuido+1)^(0+128),w
  5269     0CB9  1283               	bcf	3,5	;RP0=0, select bank0
  5270     0CBA  1303               	bcf	3,6	;RP1=0, select bank0
  5271     0CBB  00C4               	movwf	_ruidoMasAlto+1
  5272     0CBC                     l272:
  5273     0CBC  0008               	return
  5274     0CBD                     __end_of_analisisRuido:
  5275                           
  5276                           	psect	text27
  5277     0C1F                     __ptext27:	
  5278 ;; *************** function _analisisResto *****************
  5279 ;; Defined at:
  5280 ;;		line 432 in file "main.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;		None
  5283 ;; Auto vars:     Size  Location     Type
  5284 ;;		None
  5285 ;; Return value:  Size  Location     Type
  5286 ;;                  1    wreg      void 
  5287 ;; Registers used:
  5288 ;;		wreg, status,2, status,0, pclath, cstack
  5289 ;; Tracked objects:
  5290 ;;		On entry : 0/0
  5291 ;;		On exit  : 0/0
  5292 ;;		Unchanged: 0/0
  5293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5294 ;;      Params:         0       0       0       0       0
  5295 ;;      Locals:         0       0       0       0       0
  5296 ;;      Temps:          0       0       0       0       0
  5297 ;;      Totals:         0       0       0       0       0
  5298 ;;Total ram usage:        0 bytes
  5299 ;; Hardware stack levels used: 1
  5300 ;; Hardware stack levels required when called: 8
  5301 ;; This function calls:
  5302 ;;		_getCO2
  5303 ;;		_getLumen
  5304 ;;		_setCO2
  5305 ;;		_setLumen
  5306 ;; This function is called by:
  5307 ;;		_main
  5308 ;; This function uses a non-reentrant model
  5309 ;;
  5310                           
  5311     0C1F                     _analisisResto:	
  5312                           ;psect for function _analisisResto
  5313                           
  5314     0C1F                     l3798:	
  5315                           ;incstack = 0
  5316 ;; hardware stack exceeded
  5317                           ; Regs used in _analisisResto: [wreg+status,2+status,0+pclath+cstack]
  5318                           
  5319                           
  5320                           ;main.c: 434:     if (actualizoLecturas)
  5321     0C1F  1283               	bcf	3,5	;RP0=0, select bank0
  5322     0C20  1303               	bcf	3,6	;RP1=0, select bank0
  5323     0C21  0841               	movf	_actualizoLecturas,w
  5324     0C22  0442               	iorwf	_actualizoLecturas+1,w
  5325     0C23  1903               	btfsc	3,2
  5326     0C24  2C26               	goto	u3131
  5327     0C25  2C27               	goto	u3130
  5328     0C26                     u3131:
  5329     0C26  2C6D               	goto	l276
  5330     0C27                     u3130:
  5331     0C27                     l3800:
  5332                           
  5333                           ;main.c: 435:     {;main.c: 436:         actualizoLecturas = 0;
  5334     0C27  01C1               	clrf	_actualizoLecturas
  5335     0C28  01C2               	clrf	_actualizoLecturas+1
  5336     0C29                     l3802:
  5337                           
  5338                           ;main.c: 438:         emitoSensores[1] = valor[1];
  5339     0C29  1683               	bsf	3,5	;RP0=1, select bank1
  5340     0C2A  1303               	bcf	3,6	;RP1=0, select bank1
  5341     0C2B  084E               	movf	((_valor+1)^(0+128)+2),w
  5342     0C2C  1683               	bsf	3,5	;RP0=1, select bank3
  5343     0C2D  1703               	bsf	3,6	;RP1=1, select bank3
  5344     0C2E  0093               	movwf	((_emitoSensores+1)^(0+384)+2)
  5345     0C2F  1683               	bsf	3,5	;RP0=1, select bank1
  5346     0C30  1303               	bcf	3,6	;RP1=0, select bank1
  5347     0C31  084D               	movf	(_valor^(0+128)+2),w
  5348     0C32  1683               	bsf	3,5	;RP0=1, select bank3
  5349     0C33  1703               	bsf	3,6	;RP1=1, select bank3
  5350     0C34  0092               	movwf	(_emitoSensores^(0+384)+2)
  5351     0C35                     l3804:
  5352                           
  5353                           ;main.c: 439:         emitoSensores[2] = valor[2];
  5354     0C35  1683               	bsf	3,5	;RP0=1, select bank1
  5355     0C36  1303               	bcf	3,6	;RP1=0, select bank1
  5356     0C37  0850               	movf	((_valor+1)^(0+128)+4),w
  5357     0C38  1683               	bsf	3,5	;RP0=1, select bank3
  5358     0C39  1703               	bsf	3,6	;RP1=1, select bank3
  5359     0C3A  0095               	movwf	((_emitoSensores+1)^(0+384)+4)
  5360     0C3B  1683               	bsf	3,5	;RP0=1, select bank1
  5361     0C3C  1303               	bcf	3,6	;RP1=0, select bank1
  5362     0C3D  084F               	movf	(_valor^(0+128)+4),w
  5363     0C3E  1683               	bsf	3,5	;RP0=1, select bank3
  5364     0C3F  1703               	bsf	3,6	;RP1=1, select bank3
  5365     0C40  0094               	movwf	(_emitoSensores^(0+384)+4)
  5366     0C41                     l3806:
  5367                           
  5368                           ;main.c: 440:         emitoSensores[3] = getCO2();
  5369     0C41  120A  158A  200C  120A  158A  	fcall	_getCO2
  5370     0C46  1683               	bsf	3,5	;RP0=1, select bank1
  5371     0C47  1303               	bcf	3,6	;RP1=0, select bank1
  5372     0C48  0821               	movf	(?_getCO2+1)^(0+128),w
  5373     0C49  1683               	bsf	3,5	;RP0=1, select bank3
  5374     0C4A  1703               	bsf	3,6	;RP1=1, select bank3
  5375     0C4B  0097               	movwf	((_emitoSensores+1)^(0+384)+6)
  5376     0C4C  1683               	bsf	3,5	;RP0=1, select bank1
  5377     0C4D  1303               	bcf	3,6	;RP1=0, select bank1
  5378     0C4E  0820               	movf	?_getCO2^(0+128),w
  5379     0C4F  1683               	bsf	3,5	;RP0=1, select bank3
  5380     0C50  1703               	bsf	3,6	;RP1=1, select bank3
  5381     0C51  0096               	movwf	(_emitoSensores^(0+384)+6)
  5382     0C52                     l3808:
  5383                           
  5384                           ;main.c: 441:         emitoSensores[4] = getLumen();
  5385     0C52  120A  158A  2013  120A  158A  	fcall	_getLumen
  5386     0C57  1683               	bsf	3,5	;RP0=1, select bank1
  5387     0C58  1303               	bcf	3,6	;RP1=0, select bank1
  5388     0C59  0821               	movf	(?_getLumen+1)^(0+128),w
  5389     0C5A  1683               	bsf	3,5	;RP0=1, select bank3
  5390     0C5B  1703               	bsf	3,6	;RP1=1, select bank3
  5391     0C5C  0099               	movwf	((_emitoSensores+1)^(0+384)+8)
  5392     0C5D  1683               	bsf	3,5	;RP0=1, select bank1
  5393     0C5E  1303               	bcf	3,6	;RP1=0, select bank1
  5394     0C5F  0820               	movf	?_getLumen^(0+128),w
  5395     0C60  1683               	bsf	3,5	;RP0=1, select bank3
  5396     0C61  1703               	bsf	3,6	;RP1=1, select bank3
  5397     0C62  0098               	movwf	(_emitoSensores^(0+384)+8)
  5398     0C63                     l3810:
  5399                           
  5400                           ;main.c: 442:         setCO2();
  5401     0C63  120A  158A  2395  120A  158A  	fcall	_setCO2
  5402     0C68                     l3812:
  5403                           
  5404                           ;main.c: 443:         setLumen();
  5405     0C68  120A  158A  2312  120A  158A  	fcall	_setLumen
  5406     0C6D                     l276:
  5407     0C6D  0008               	return
  5408     0C6E                     __end_of_analisisResto:
  5409                           
  5410                           	psect	text28
  5411     0B12                     __ptext28:	
  5412 ;; *************** function _setLumen *****************
  5413 ;; Defined at:
  5414 ;;		line 243 in file "main.c"
  5415 ;; Parameters:    Size  Location     Type
  5416 ;;		None
  5417 ;; Auto vars:     Size  Location     Type
  5418 ;;		None
  5419 ;; Return value:  Size  Location     Type
  5420 ;;                  1    wreg      void 
  5421 ;; Registers used:
  5422 ;;		wreg, status,2, status,0, pclath, cstack
  5423 ;; Tracked objects:
  5424 ;;		On entry : 0/0
  5425 ;;		On exit  : 0/0
  5426 ;;		Unchanged: 0/0
  5427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5428 ;;      Params:         0       0       0       0       0
  5429 ;;      Locals:         0       0       0       0       0
  5430 ;;      Temps:          0       0       2       0       0
  5431 ;;      Totals:         0       0       2       0       0
  5432 ;;Total ram usage:        2 bytes
  5433 ;; Hardware stack levels used: 1
  5434 ;; Hardware stack levels required when called: 7
  5435 ;; This function calls:
  5436 ;;		_i2c_read
  5437 ;;		_i2c_rstart
  5438 ;;		_i2c_write
  5439 ;; This function is called by:
  5440 ;;		_analisisResto
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444     0B12                     _setLumen:	
  5445                           ;psect for function _setLumen
  5446                           
  5447     0B12                     l3678:	
  5448                           ;incstack = 0
  5449 ;; hardware stack exceeded
  5450                           ; Regs used in _setLumen: [wreg+status,2+status,0+pclath+cstack]
  5451                           
  5452                           
  5453                           ;main.c: 245:     i2c_rstart();
  5454     0B12  120A  158A  202A  120A  158A  	fcall	_i2c_rstart
  5455     0B17                     l3680:
  5456                           
  5457                           ;main.c: 247:     i2c_write(0x20);
  5458     0B17  3020               	movlw	32
  5459     0B18  120A  158A  2069  120A  158A  	fcall	_i2c_write
  5460     0B1D                     l3682:
  5461                           
  5462                           ;main.c: 248:     i2c_write(0x04);
  5463     0B1D  3004               	movlw	4
  5464     0B1E  120A  158A  2069  120A  158A  	fcall	_i2c_write
  5465     0B23                     l3684:
  5466                           
  5467                           ;main.c: 249:     i2c_write(0x21);
  5468     0B23  3021               	movlw	33
  5469     0B24  120A  158A  2069  120A  158A  	fcall	_i2c_write
  5470     0B29                     l3686:
  5471                           
  5472                           ;main.c: 250:     valorI2C[1] = i2c_read(1);
  5473     0B29  3001               	movlw	1
  5474     0B2A  120A  158A  21A3  120A  158A  	fcall	_i2c_read
  5475     0B2F  1683               	bsf	3,5	;RP0=1, select bank1
  5476     0B30  1303               	bcf	3,6	;RP1=0, select bank1
  5477     0B31  00A2               	movwf	??_setLumen^(0+128)
  5478     0B32  01A3               	clrf	(??_setLumen^(0+128)+1)
  5479     0B33  0822               	movf	??_setLumen^(0+128),w
  5480     0B34  00D3               	movwf	(_valorI2C^(0+128)+2)
  5481     0B35  0823               	movf	(??_setLumen+1)^(0+128),w
  5482     0B36  00D4               	movwf	((_valorI2C+1)^(0+128)+2)
  5483     0B37                     l3688:
  5484                           
  5485                           ;main.c: 251:     valorI2C[1] += (i2c_read(0) * 0x10);
  5486     0B37  3000               	movlw	0
  5487     0B38  120A  158A  21A3  120A  158A  	fcall	_i2c_read
  5488     0B3D  1683               	bsf	3,5	;RP0=1, select bank1
  5489     0B3E  1303               	bcf	3,6	;RP1=0, select bank1
  5490     0B3F  00A2               	movwf	??_setLumen^(0+128)
  5491     0B40  01A3               	clrf	(??_setLumen^(0+128)+1)
  5492     0B41  0EA2               	swapf	??_setLumen^(0+128),f
  5493     0B42  0EA3               	swapf	(??_setLumen^(0+128)+1),f
  5494     0B43  30F0               	movlw	240
  5495     0B44  05A3               	andwf	(??_setLumen^(0+128)+1),f
  5496     0B45  0822               	movf	??_setLumen^(0+128),w
  5497     0B46  390F               	andlw	15
  5498     0B47  04A3               	iorwf	(??_setLumen^(0+128)+1),f
  5499     0B48  30F0               	movlw	240
  5500     0B49  05A2               	andwf	??_setLumen^(0+128),f
  5501     0B4A  0822               	movf	??_setLumen^(0+128),w
  5502     0B4B  07D3               	addwf	(_valorI2C^(0+128)+2),f
  5503     0B4C  1803               	skipnc
  5504     0B4D  0AD4               	incf	((_valorI2C+1)^(0+128)+2),f
  5505     0B4E  0823               	movf	(??_setLumen+1)^(0+128),w
  5506     0B4F  07D4               	addwf	((_valorI2C+1)^(0+128)+2),f
  5507     0B50                     l206:
  5508     0B50  0008               	return
  5509     0B51                     __end_of_setLumen:
  5510                           
  5511                           	psect	text29
  5512     0B95                     __ptext29:	
  5513 ;; *************** function _setCO2 *****************
  5514 ;; Defined at:
  5515 ;;		line 260 in file "main.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;		None
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;		None
  5520 ;; Return value:  Size  Location     Type
  5521 ;;                  1    wreg      void 
  5522 ;; Registers used:
  5523 ;;		wreg, status,2, status,0, pclath, cstack
  5524 ;; Tracked objects:
  5525 ;;		On entry : 0/0
  5526 ;;		On exit  : 0/0
  5527 ;;		Unchanged: 0/0
  5528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5529 ;;      Params:         0       0       0       0       0
  5530 ;;      Locals:         0       0       0       0       0
  5531 ;;      Temps:          0       0       2       0       0
  5532 ;;      Totals:         0       0       2       0       0
  5533 ;;Total ram usage:        2 bytes
  5534 ;; Hardware stack levels used: 1
  5535 ;; Hardware stack levels required when called: 7
  5536 ;; This function calls:
  5537 ;;		_i2c_read
  5538 ;;		_i2c_rstart
  5539 ;;		_i2c_write
  5540 ;; This function is called by:
  5541 ;;		_analisisResto
  5542 ;; This function uses a non-reentrant model
  5543 ;;
  5544                           
  5545     0B95                     _setCO2:	
  5546                           ;psect for function _setCO2
  5547                           
  5548     0B95                     l3694:	
  5549                           ;incstack = 0
  5550 ;; hardware stack exceeded
  5551                           ; Regs used in _setCO2: [wreg+status,2+status,0+pclath+cstack]
  5552                           
  5553                           
  5554                           ;main.c: 262:     i2c_rstart();
  5555     0B95  120A  158A  202A  120A  158A  	fcall	_i2c_rstart
  5556     0B9A                     l3696:
  5557                           
  5558                           ;main.c: 264:     i2c_write(0xB5);
  5559     0B9A  30B5               	movlw	181
  5560     0B9B  120A  158A  2069  120A  158A  	fcall	_i2c_write
  5561     0BA0                     l3698:
  5562                           
  5563                           ;main.c: 265:     valorI2C[0] = i2c_read(1);
  5564     0BA0  3001               	movlw	1
  5565     0BA1  120A  158A  21A3  120A  158A  	fcall	_i2c_read
  5566     0BA6  1683               	bsf	3,5	;RP0=1, select bank1
  5567     0BA7  1303               	bcf	3,6	;RP1=0, select bank1
  5568     0BA8  00A2               	movwf	??_setCO2^(0+128)
  5569     0BA9  01A3               	clrf	(??_setCO2^(0+128)+1)
  5570     0BAA  0822               	movf	??_setCO2^(0+128),w
  5571     0BAB  00D1               	movwf	_valorI2C^(0+128)
  5572     0BAC  0823               	movf	(??_setCO2+1)^(0+128),w
  5573     0BAD  00D2               	movwf	(_valorI2C+1)^(0+128)
  5574     0BAE                     l3700:
  5575                           
  5576                           ;main.c: 267:     valorI2C[0] += (i2c_read(1) * 0x10);
  5577     0BAE  3001               	movlw	1
  5578     0BAF  120A  158A  21A3  120A  158A  	fcall	_i2c_read
  5579     0BB4  1683               	bsf	3,5	;RP0=1, select bank1
  5580     0BB5  1303               	bcf	3,6	;RP1=0, select bank1
  5581     0BB6  00A2               	movwf	??_setCO2^(0+128)
  5582     0BB7  01A3               	clrf	(??_setCO2^(0+128)+1)
  5583     0BB8  0EA2               	swapf	??_setCO2^(0+128),f
  5584     0BB9  0EA3               	swapf	(??_setCO2^(0+128)+1),f
  5585     0BBA  30F0               	movlw	240
  5586     0BBB  05A3               	andwf	(??_setCO2^(0+128)+1),f
  5587     0BBC  0822               	movf	??_setCO2^(0+128),w
  5588     0BBD  390F               	andlw	15
  5589     0BBE  04A3               	iorwf	(??_setCO2^(0+128)+1),f
  5590     0BBF  30F0               	movlw	240
  5591     0BC0  05A2               	andwf	??_setCO2^(0+128),f
  5592     0BC1  0822               	movf	??_setCO2^(0+128),w
  5593     0BC2  07D1               	addwf	_valorI2C^(0+128),f
  5594     0BC3  1803               	skipnc
  5595     0BC4  0AD2               	incf	(_valorI2C+1)^(0+128),f
  5596     0BC5  0823               	movf	(??_setCO2+1)^(0+128),w
  5597     0BC6  07D2               	addwf	(_valorI2C+1)^(0+128),f
  5598     0BC7                     l3702:
  5599                           
  5600                           ;main.c: 268:     if (i2c_read(0) == 0x10) valorI2C[0] = -1;
  5601     0BC7  3000               	movlw	0
  5602     0BC8  120A  158A  21A3  120A  158A  	fcall	_i2c_read
  5603     0BCD  3A10               	xorlw	16
  5604     0BCE  1D03               	skipz
  5605     0BCF  2BD1               	goto	u3061
  5606     0BD0  2BD2               	goto	u3060
  5607     0BD1                     u3061:
  5608     0BD1  2BD8               	goto	l213
  5609     0BD2                     u3060:
  5610     0BD2                     l3704:
  5611     0BD2  30FF               	movlw	255
  5612     0BD3  1683               	bsf	3,5	;RP0=1, select bank1
  5613     0BD4  1303               	bcf	3,6	;RP1=0, select bank1
  5614     0BD5  00D1               	movwf	_valorI2C^(0+128)
  5615     0BD6  30FF               	movlw	255
  5616     0BD7  00D2               	movwf	(_valorI2C^(0+128)+1)
  5617     0BD8                     l213:
  5618     0BD8  0008               	return
  5619     0BD9                     __end_of_setCO2:
  5620                           
  5621                           	psect	text30
  5622     0869                     __ptext30:	
  5623 ;; *************** function _i2c_write *****************
  5624 ;; Defined at:
  5625 ;;		line 37 in file "i2c-v2.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;  I2C_data        1    wreg     unsigned char 
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;  I2C_data        1    0[BANK1 ] unsigned char 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  1    wreg      unsigned char 
  5632 ;; Registers used:
  5633 ;;		wreg, status,2, status,0, pclath, cstack
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5639 ;;      Params:         0       0       0       0       0
  5640 ;;      Locals:         0       0       1       0       0
  5641 ;;      Temps:          0       0       0       0       0
  5642 ;;      Totals:         0       0       1       0       0
  5643 ;;Total ram usage:        1 bytes
  5644 ;; Hardware stack levels used: 1
  5645 ;; Hardware stack levels required when called: 6
  5646 ;; This function calls:
  5647 ;;		_wait_MSSP
  5648 ;; This function is called by:
  5649 ;;		_setLumen
  5650 ;;		_setCO2
  5651 ;; This function uses a non-reentrant model
  5652 ;;
  5653                           
  5654     0869                     _i2c_write:	
  5655                           ;psect for function _i2c_write
  5656                           
  5657                           
  5658                           ;incstack = 0
  5659 ;; hardware stack exceeded
  5660                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  5661                           ;i2c_write@I2C_data stored from wreg
  5662     0869  1683               	bsf	3,5	;RP0=1, select bank1
  5663     086A  1303               	bcf	3,6	;RP1=0, select bank1
  5664     086B  00A0               	movwf	i2c_write@I2C_data^(0+128)
  5665     086C                     l3410:
  5666                           
  5667                           ;i2c-v2.c: 37: unsigned char i2c_write(unsigned char I2C_data);i2c-v2.c: 38: {;i2c-v2.c:
      +                           39:     SSPBUF = I2C_data;
  5668     086C  0820               	movf	i2c_write@I2C_data^(0+128),w
  5669     086D  1283               	bcf	3,5	;RP0=0, select bank0
  5670     086E  1303               	bcf	3,6	;RP1=0, select bank0
  5671     086F  0093               	movwf	19	;volatile
  5672     0870                     l3412:
  5673                           
  5674                           ;i2c-v2.c: 40:     wait_MSSP();
  5675     0870  120A  158A  201A  120A  158A  	fcall	_wait_MSSP
  5676     0875                     l3414:
  5677                           
  5678                           ;i2c-v2.c: 41:     return((unsigned char)!SSPCON2bits.ACKSTAT);;	Return value of _i2c_wr
      +                          ite is never used
  5679     0875  1683               	bsf	3,5	;RP0=1, select bank1
  5680     0876  1303               	bcf	3,6	;RP1=0, select bank1
  5681     0877  0811               	movf	17,w	;volatile
  5682     0878                     l368:
  5683     0878  0008               	return
  5684     0879                     __end_of_i2c_write:
  5685                           
  5686                           	psect	text31
  5687     082A                     __ptext31:	
  5688 ;; *************** function _i2c_rstart *****************
  5689 ;; Defined at:
  5690 ;;		line 30 in file "i2c-v2.c"
  5691 ;; Parameters:    Size  Location     Type
  5692 ;;		None
  5693 ;; Auto vars:     Size  Location     Type
  5694 ;;		None
  5695 ;; Return value:  Size  Location     Type
  5696 ;;                  1    wreg      void 
  5697 ;; Registers used:
  5698 ;;		status,2, status,0, pclath, cstack
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/0
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5704 ;;      Params:         0       0       0       0       0
  5705 ;;      Locals:         0       0       0       0       0
  5706 ;;      Temps:          0       0       0       0       0
  5707 ;;      Totals:         0       0       0       0       0
  5708 ;;Total ram usage:        0 bytes
  5709 ;; Hardware stack levels used: 1
  5710 ;; Hardware stack levels required when called: 6
  5711 ;; This function calls:
  5712 ;;		_wait_MSSP
  5713 ;; This function is called by:
  5714 ;;		_setLumen
  5715 ;;		_setCO2
  5716 ;; This function uses a non-reentrant model
  5717 ;;
  5718                           
  5719     082A                     _i2c_rstart:	
  5720                           ;psect for function _i2c_rstart
  5721                           
  5722     082A                     l3404:	
  5723                           ;incstack = 0
  5724 ;; hardware stack exceeded
  5725                           ; Regs used in _i2c_rstart: [status,2+status,0+pclath+cstack]
  5726                           
  5727                           
  5728                           ;i2c-v2.c: 32:     SSPCON2bits.RSEN = 1;
  5729     082A  1683               	bsf	3,5	;RP0=1, select bank1
  5730     082B  1303               	bcf	3,6	;RP1=0, select bank1
  5731     082C  1491               	bsf	17,1	;volatile
  5732     082D                     l3406:
  5733                           
  5734                           ;i2c-v2.c: 33:     wait_MSSP();
  5735     082D  120A  158A  201A  120A  158A  	fcall	_wait_MSSP
  5736     0832                     l365:
  5737     0832  0008               	return
  5738     0833                     __end_of_i2c_rstart:
  5739                           
  5740                           	psect	text32
  5741     09A3                     __ptext32:	
  5742 ;; *************** function _i2c_read *****************
  5743 ;; Defined at:
  5744 ;;		line 47 in file "i2c-v2.c"
  5745 ;; Parameters:    Size  Location     Type
  5746 ;;  master_ack      1    wreg     unsigned char 
  5747 ;; Auto vars:     Size  Location     Type
  5748 ;;  master_ack      1    0[BANK1 ] unsigned char 
  5749 ;;  I2C_data        1    1[BANK1 ] unsigned char 
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  1    wreg      unsigned char 
  5752 ;; Registers used:
  5753 ;;		wreg, status,2, status,0, pclath, cstack
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5759 ;;      Params:         0       0       0       0       0
  5760 ;;      Locals:         0       0       2       0       0
  5761 ;;      Temps:          0       0       0       0       0
  5762 ;;      Totals:         0       0       2       0       0
  5763 ;;Total ram usage:        2 bytes
  5764 ;; Hardware stack levels used: 1
  5765 ;; Hardware stack levels required when called: 6
  5766 ;; This function calls:
  5767 ;;		_wait_MSSP
  5768 ;; This function is called by:
  5769 ;;		_setLumen
  5770 ;;		_setCO2
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774     09A3                     _i2c_read:	
  5775                           ;psect for function _i2c_read
  5776                           
  5777                           
  5778                           ;incstack = 0
  5779 ;; hardware stack exceeded
  5780                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  5781                           ;i2c_read@master_ack stored from wreg
  5782     09A3  1683               	bsf	3,5	;RP0=1, select bank1
  5783     09A4  1303               	bcf	3,6	;RP1=0, select bank1
  5784     09A5  00A0               	movwf	i2c_read@master_ack^(0+128)
  5785     09A6                     l3418:
  5786                           
  5787                           ;i2c-v2.c: 47: unsigned char i2c_read(char master_ack);i2c-v2.c: 48: {;i2c-v2.c: 49:    
      +                           unsigned char I2C_data;;i2c-v2.c: 51:     SSPCON2bits.RCEN = 1;
  5788     09A6  1591               	bsf	17,3	;volatile
  5789     09A7                     l3420:
  5790                           
  5791                           ;i2c-v2.c: 52:     wait_MSSP();
  5792     09A7  120A  158A  201A  120A  158A  	fcall	_wait_MSSP
  5793     09AC                     l3422:
  5794                           
  5795                           ;i2c-v2.c: 54:     I2C_data = SSPBUF;
  5796     09AC  1283               	bcf	3,5	;RP0=0, select bank0
  5797     09AD  1303               	bcf	3,6	;RP1=0, select bank0
  5798     09AE  0813               	movf	19,w	;volatile
  5799     09AF  1683               	bsf	3,5	;RP0=1, select bank1
  5800     09B0  1303               	bcf	3,6	;RP1=0, select bank1
  5801     09B1  00A1               	movwf	i2c_read@I2C_data^(0+128)
  5802     09B2                     l3424:
  5803                           
  5804                           ;i2c-v2.c: 56:     if(master_ack)
  5805     09B2  0820               	movf	i2c_read@master_ack^(0+128),w
  5806     09B3  1903               	btfsc	3,2
  5807     09B4  29B6               	goto	u2861
  5808     09B5  29B7               	goto	u2860
  5809     09B6                     u2861:
  5810     09B6  29B9               	goto	l371
  5811     09B7                     u2860:
  5812     09B7                     l3426:
  5813                           
  5814                           ;i2c-v2.c: 57:         SSPCON2bits.ACKDT = 0;
  5815     09B7  1291               	bcf	17,5	;volatile
  5816     09B8  29BA               	goto	l372
  5817     09B9                     l371:	
  5818                           ;i2c-v2.c: 58:     else
  5819                           
  5820                           
  5821                           ;i2c-v2.c: 59:         SSPCON2bits.ACKDT = 1;
  5822     09B9  1691               	bsf	17,5	;volatile
  5823     09BA                     l372:
  5824                           
  5825                           ;i2c-v2.c: 61:     SSPCON2bits.ACKEN = 1;
  5826     09BA  1611               	bsf	17,4	;volatile
  5827     09BB                     l3428:
  5828                           
  5829                           ;i2c-v2.c: 62:     wait_MSSP();
  5830     09BB  120A  158A  201A  120A  158A  	fcall	_wait_MSSP
  5831     09C0                     l3430:
  5832                           
  5833                           ;i2c-v2.c: 63:     return(I2C_data);
  5834     09C0  1683               	bsf	3,5	;RP0=1, select bank1
  5835     09C1  1303               	bcf	3,6	;RP1=0, select bank1
  5836     09C2  0821               	movf	i2c_read@I2C_data^(0+128),w
  5837     09C3                     l373:
  5838     09C3  0008               	return
  5839     09C4                     __end_of_i2c_read:
  5840                           
  5841                           	psect	text33
  5842     081A                     __ptext33:	
  5843 ;; *************** function _wait_MSSP *****************
  5844 ;; Defined at:
  5845 ;;		line 8 in file "i2c-v2.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;		None
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;		None
  5850 ;; Return value:  Size  Location     Type
  5851 ;;                  1    wreg      void 
  5852 ;; Registers used:
  5853 ;;		None
  5854 ;; Tracked objects:
  5855 ;;		On entry : 0/0
  5856 ;;		On exit  : 0/0
  5857 ;;		Unchanged: 0/0
  5858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5859 ;;      Params:         0       0       0       0       0
  5860 ;;      Locals:         0       0       0       0       0
  5861 ;;      Temps:          0       0       0       0       0
  5862 ;;      Totals:         0       0       0       0       0
  5863 ;;Total ram usage:        0 bytes
  5864 ;; Hardware stack levels used: 1
  5865 ;; Hardware stack levels required when called: 5
  5866 ;; This function calls:
  5867 ;;		Nothing
  5868 ;; This function is called by:
  5869 ;;		_i2c_stop
  5870 ;;		_i2c_rstart
  5871 ;;		_i2c_write
  5872 ;;		_i2c_read
  5873 ;;		_i2c_start
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877     081A                     _wait_MSSP:	
  5878                           ;psect for function _wait_MSSP
  5879                           
  5880     081A                     l3402:	
  5881                           ;incstack = 0
  5882                           ; Regs used in _wait_MSSP: []
  5883                           
  5884     081A                     l353:	
  5885                           ;i2c-v2.c: 10:     while(!PIR1bits.SSPIF);
  5886                           
  5887     081A  1283               	bcf	3,5	;RP0=0, select bank0
  5888     081B  1303               	bcf	3,6	;RP1=0, select bank0
  5889     081C  1D8C               	btfss	12,3	;volatile
  5890     081D  281F               	goto	u2851
  5891     081E  2820               	goto	u2850
  5892     081F                     u2851:
  5893     081F  281A               	goto	l353
  5894     0820                     u2850:
  5895     0820                     l355:
  5896                           
  5897                           ;i2c-v2.c: 12:     PIR1bits.SSPIF = 0;
  5898     0820  118C               	bcf	12,3	;volatile
  5899     0821                     l356:	
  5900                           ;i2c-v2.c: 13:     return;
  5901                           
  5902     0821  0008               	return
  5903     0822                     __end_of_wait_MSSP:
  5904                           
  5905                           	psect	text34
  5906     0813                     __ptext34:	
  5907 ;; *************** function _getLumen *****************
  5908 ;; Defined at:
  5909 ;;		line 255 in file "main.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;		None
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;		None
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  2    0[BANK1 ] int 
  5916 ;; Registers used:
  5917 ;;		wreg
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/0
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5923 ;;      Params:         0       0       2       0       0
  5924 ;;      Locals:         0       0       0       0       0
  5925 ;;      Temps:          0       0       0       0       0
  5926 ;;      Totals:         0       0       2       0       0
  5927 ;;Total ram usage:        2 bytes
  5928 ;; Hardware stack levels used: 1
  5929 ;; Hardware stack levels required when called: 5
  5930 ;; This function calls:
  5931 ;;		Nothing
  5932 ;; This function is called by:
  5933 ;;		_analisisResto
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937     0813                     _getLumen:	
  5938                           ;psect for function _getLumen
  5939                           
  5940     0813                     l3690:	
  5941                           ;incstack = 0
  5942                           ; Regs used in _getLumen: [wreg]
  5943                           
  5944                           
  5945                           ;main.c: 256:     return valorI2C[1];
  5946     0813  1683               	bsf	3,5	;RP0=1, select bank1
  5947     0814  1303               	bcf	3,6	;RP1=0, select bank1
  5948     0815  0854               	movf	((_valorI2C+1)^(0+128)+2),w
  5949     0816  00A1               	movwf	(?_getLumen+1)^(0+128)
  5950     0817  0853               	movf	(_valorI2C^(0+128)+2),w
  5951     0818  00A0               	movwf	?_getLumen^(0+128)
  5952     0819                     l209:
  5953     0819  0008               	return
  5954     081A                     __end_of_getLumen:
  5955                           
  5956                           	psect	text35
  5957     080C                     __ptext35:	
  5958 ;; *************** function _getCO2 *****************
  5959 ;; Defined at:
  5960 ;;		line 271 in file "main.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;		None
  5963 ;; Auto vars:     Size  Location     Type
  5964 ;;		None
  5965 ;; Return value:  Size  Location     Type
  5966 ;;                  2    0[BANK1 ] int 
  5967 ;; Registers used:
  5968 ;;		wreg
  5969 ;; Tracked objects:
  5970 ;;		On entry : 0/0
  5971 ;;		On exit  : 0/0
  5972 ;;		Unchanged: 0/0
  5973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5974 ;;      Params:         0       0       2       0       0
  5975 ;;      Locals:         0       0       0       0       0
  5976 ;;      Temps:          0       0       0       0       0
  5977 ;;      Totals:         0       0       2       0       0
  5978 ;;Total ram usage:        2 bytes
  5979 ;; Hardware stack levels used: 1
  5980 ;; Hardware stack levels required when called: 5
  5981 ;; This function calls:
  5982 ;;		Nothing
  5983 ;; This function is called by:
  5984 ;;		_analisisResto
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988     080C                     _getCO2:	
  5989                           ;psect for function _getCO2
  5990                           
  5991     080C                     l3706:	
  5992                           ;incstack = 0
  5993                           ; Regs used in _getCO2: [wreg]
  5994                           
  5995                           
  5996                           ;main.c: 272:     return valorI2C[0];
  5997     080C  1683               	bsf	3,5	;RP0=1, select bank1
  5998     080D  1303               	bcf	3,6	;RP1=0, select bank1
  5999     080E  0852               	movf	(_valorI2C+1)^(0+128),w
  6000     080F  00A1               	movwf	(?_getCO2+1)^(0+128)
  6001     0810  0851               	movf	_valorI2C^(0+128),w
  6002     0811  00A0               	movwf	?_getCO2^(0+128)
  6003     0812                     l216:
  6004     0812  0008               	return
  6005     0813                     __end_of_getCO2:
  6006                           
  6007                           	psect	text36
  6008     0052                     __ptext36:	
  6009 ;; *************** function _TRAT_INT *****************
  6010 ;; Defined at:
  6011 ;;		line 465 in file "main.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;		None
  6014 ;; Auto vars:     Size  Location     Type
  6015 ;;		None
  6016 ;; Return value:  Size  Location     Type
  6017 ;;                  1    wreg      void 
  6018 ;; Registers used:
  6019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6025 ;;      Params:         0       0       0       0       0
  6026 ;;      Locals:         0       0       0       0       0
  6027 ;;      Temps:          0       6       0       0       0
  6028 ;;      Totals:         0       6       0       0       0
  6029 ;;Total ram usage:        6 bytes
  6030 ;; Hardware stack levels used: 1
  6031 ;; Hardware stack levels required when called: 4
  6032 ;; This function calls:
  6033 ;;		i1_setLED
  6034 ;;		i1_setPWM
  6035 ;; This function is called by:
  6036 ;;		Interrupt level 1
  6037 ;; This function uses a non-reentrant model
  6038 ;;
  6039                           
  6040     0052                     _TRAT_INT:	
  6041                           ;psect for function _TRAT_INT
  6042                           
  6043     0052                     i1l3020:
  6044                           
  6045                           ;main.c: 466:     if (INTCONbits.TMR0IF)
  6046     0052  1D0B               	btfss	11,2	;volatile
  6047     0053  2855               	goto	u234_21
  6048     0054  2856               	goto	u234_20
  6049     0055                     u234_21:
  6050     0055  28B2               	goto	i1l286
  6051     0056                     u234_20:
  6052     0056                     i1l3022:
  6053                           
  6054                           ;main.c: 467:     {;main.c: 469:         TMR0 = 61;
  6055     0056  303D               	movlw	61
  6056     0057  0081               	movwf	1	;volatile
  6057                           
  6058                           ;main.c: 470:         if (copias >= los5msen1sT0) {
  6059     0058  1683               	bsf	3,5	;RP0=1, select bank1
  6060     0059  1303               	bcf	3,6	;RP1=0, select bank1
  6061     005A  0858               	movf	(_copias+1)^(0+128),w
  6062     005B  3A80               	xorlw	128
  6063     005C  1283               	bcf	3,5	;RP0=0, select bank0
  6064     005D  1303               	bcf	3,6	;RP1=0, select bank0
  6065     005E  00B9               	movwf	??_TRAT_INT
  6066     005F  1683               	bsf	3,5	;RP0=1, select bank1
  6067     0060  1303               	bcf	3,6	;RP1=0, select bank1
  6068     0061  0860               	movf	(_los5msen1sT0+1)^(0+128),w
  6069     0062  3A80               	xorlw	128
  6070     0063  1283               	bcf	3,5	;RP0=0, select bank0
  6071     0064  1303               	bcf	3,6	;RP1=0, select bank0
  6072     0065  0239               	subwf	??_TRAT_INT,w
  6073     0066  1D03               	skipz
  6074     0067  286C               	goto	u235_25
  6075     0068  1683               	bsf	3,5	;RP0=1, select bank1
  6076     0069  1303               	bcf	3,6	;RP1=0, select bank1
  6077     006A  085F               	movf	_los5msen1sT0^(0+128),w
  6078     006B  0257               	subwf	_copias^(0+128),w
  6079     006C                     u235_25:
  6080     006C  1C03               	skipc
  6081     006D  286F               	goto	u235_21
  6082     006E  2870               	goto	u235_20
  6083     006F                     u235_21:
  6084     006F  28A8               	goto	i1l3036
  6085     0070                     u235_20:
  6086     0070                     i1l3024:
  6087                           
  6088                           ;main.c: 472:             copias = 0;
  6089     0070  1683               	bsf	3,5	;RP0=1, select bank1
  6090     0071  1303               	bcf	3,6	;RP1=0, select bank1
  6091     0072  01D7               	clrf	_copias^(0+128)
  6092     0073  01D8               	clrf	(_copias+1)^(0+128)
  6093     0074                     i1l3026:
  6094                           
  6095                           ;main.c: 473:             copias5s++;
  6096     0074  3001               	movlw	1
  6097     0075  07D5               	addwf	_copias5s^(0+128),f
  6098     0076  1803               	skipnc
  6099     0077  0AD6               	incf	(_copias5s+1)^(0+128),f
  6100     0078  3000               	movlw	0
  6101     0079  07D6               	addwf	(_copias5s+1)^(0+128),f
  6102     007A                     i1l3028:
  6103                           
  6104                           ;main.c: 475:             emitoSensores[0] = ruidoMasAlto;
  6105     007A  1283               	bcf	3,5	;RP0=0, select bank0
  6106     007B  1303               	bcf	3,6	;RP1=0, select bank0
  6107     007C  0844               	movf	_ruidoMasAlto+1,w
  6108     007D  1683               	bsf	3,5	;RP0=1, select bank3
  6109     007E  1703               	bsf	3,6	;RP1=1, select bank3
  6110     007F  0091               	movwf	(_emitoSensores+1)^(0+384)
  6111     0080  1283               	bcf	3,5	;RP0=0, select bank0
  6112     0081  1303               	bcf	3,6	;RP1=0, select bank0
  6113     0082  0843               	movf	_ruidoMasAlto,w
  6114     0083  1683               	bsf	3,5	;RP0=1, select bank3
  6115     0084  1703               	bsf	3,6	;RP1=1, select bank3
  6116     0085  0090               	movwf	_emitoSensores^(0+384)
  6117                           
  6118                           ;main.c: 476:             ruidoMasAlto = 0;
  6119     0086  1283               	bcf	3,5	;RP0=0, select bank0
  6120     0087  1303               	bcf	3,6	;RP1=0, select bank0
  6121     0088  01C3               	clrf	_ruidoMasAlto
  6122     0089  01C4               	clrf	_ruidoMasAlto+1
  6123     008A                     i1l3030:
  6124                           
  6125                           ;main.c: 480:             if (copias5s >= 5)
  6126     008A  1683               	bsf	3,5	;RP0=1, select bank1
  6127     008B  1303               	bcf	3,6	;RP1=0, select bank1
  6128     008C  0856               	movf	(_copias5s+1)^(0+128),w
  6129     008D  3A80               	xorlw	128
  6130     008E  00FF               	movwf	btemp+1
  6131     008F  3080               	movlw	128
  6132     0090  027F               	subwf	btemp+1,w
  6133     0091  1D03               	skipz
  6134     0092  2895               	goto	u236_25
  6135     0093  3005               	movlw	5
  6136     0094  0255               	subwf	_copias5s^(0+128),w
  6137     0095                     u236_25:
  6138     0095  1C03               	skipc
  6139     0096  2898               	goto	u236_21
  6140     0097  2899               	goto	u236_20
  6141     0098                     u236_21:
  6142     0098  28B0               	goto	i1l3038
  6143     0099                     u236_20:
  6144     0099                     i1l3032:
  6145                           
  6146                           ;main.c: 481:             {;main.c: 482:                 actualizoLecturas = 1;
  6147     0099  3001               	movlw	1
  6148     009A  1283               	bcf	3,5	;RP0=0, select bank0
  6149     009B  1303               	bcf	3,6	;RP1=0, select bank0
  6150     009C  00C1               	movwf	_actualizoLecturas
  6151     009D  3000               	movlw	0
  6152     009E  00C2               	movwf	_actualizoLecturas+1
  6153                           
  6154                           ;main.c: 483:                 leoADCHumedadTemp = 2;
  6155     009F  3002               	movlw	2
  6156     00A0  00D2               	movwf	_leoADCHumedadTemp
  6157     00A1  3000               	movlw	0
  6158     00A2  00D3               	movwf	_leoADCHumedadTemp+1
  6159     00A3                     i1l3034:
  6160                           
  6161                           ;main.c: 484:                 copias5s = 0;
  6162     00A3  1683               	bsf	3,5	;RP0=1, select bank1
  6163     00A4  1303               	bcf	3,6	;RP1=0, select bank1
  6164     00A5  01D5               	clrf	_copias5s^(0+128)
  6165     00A6  01D6               	clrf	(_copias5s+1)^(0+128)
  6166     00A7  28B0               	goto	i1l3038
  6167     00A8                     i1l3036:
  6168                           
  6169                           ;main.c: 488:             copias += 1;
  6170     00A8  3001               	movlw	1
  6171     00A9  1683               	bsf	3,5	;RP0=1, select bank1
  6172     00AA  1303               	bcf	3,6	;RP1=0, select bank1
  6173     00AB  07D7               	addwf	_copias^(0+128),f
  6174     00AC  1803               	skipnc
  6175     00AD  0AD8               	incf	(_copias+1)^(0+128),f
  6176     00AE  3000               	movlw	0
  6177     00AF  07D8               	addwf	(_copias+1)^(0+128),f
  6178     00B0                     i1l3038:
  6179                           
  6180                           ;main.c: 490:         INTCONbits.T0IF = 0;
  6181     00B0  110B               	bcf	11,2	;volatile
  6182                           
  6183                           ;main.c: 492:     } else {
  6184     00B1  2A25               	goto	i1l329
  6185     00B2                     i1l286:
  6186                           
  6187                           ;main.c: 493:         if (PIR1bits.TMR1IF == 1)
  6188     00B2  1C0C               	btfss	12,0	;volatile
  6189     00B3  28B5               	goto	u237_21
  6190     00B4  28B6               	goto	u237_20
  6191     00B5                     u237_21:
  6192     00B5  291E               	goto	i1l291
  6193     00B6                     u237_20:
  6194     00B6                     i1l3040:
  6195                           
  6196                           ;main.c: 494:         {;main.c: 496:             if (copias1 >= los5msen15ms) {
  6197     00B6  0840               	movf	_copias1+1,w
  6198     00B7  3A80               	xorlw	128
  6199     00B8  00B9               	movwf	??_TRAT_INT
  6200     00B9  0851               	movf	_los5msen15ms+1,w
  6201     00BA  3A80               	xorlw	128
  6202     00BB  0239               	subwf	??_TRAT_INT,w
  6203     00BC  1D03               	skipz
  6204     00BD  28C0               	goto	u238_25
  6205     00BE  0850               	movf	_los5msen15ms,w
  6206     00BF  023F               	subwf	_copias1,w
  6207     00C0                     u238_25:
  6208     00C0  1C03               	skipc
  6209     00C1  28C3               	goto	u238_21
  6210     00C2  28C4               	goto	u238_20
  6211     00C3                     u238_21:
  6212     00C3  28D9               	goto	i1l3048
  6213     00C4                     u238_20:
  6214     00C4                     i1l3042:
  6215                           
  6216                           ;main.c: 497:                 copias1 = 0;
  6217     00C4  1283               	bcf	3,5	;RP0=0, select bank0
  6218     00C5  1303               	bcf	3,6	;RP1=0, select bank0
  6219     00C6  01BF               	clrf	_copias1
  6220     00C7  01C0               	clrf	_copias1+1
  6221     00C8                     i1l3044:
  6222                           
  6223                           ;main.c: 500:                 if (leoADCHumedadTemp > 0) ADCON0bits.GO_DONE = 1;
  6224     00C8  0853               	movf	_leoADCHumedadTemp+1,w
  6225     00C9  3A80               	xorlw	128
  6226     00CA  00FF               	movwf	btemp+1
  6227     00CB  3080               	movlw	128
  6228     00CC  027F               	subwf	btemp+1,w
  6229     00CD  1D03               	skipz
  6230     00CE  28D1               	goto	u239_25
  6231     00CF  3001               	movlw	1
  6232     00D0  0252               	subwf	_leoADCHumedadTemp,w
  6233     00D1                     u239_25:
  6234     00D1  1C03               	skipc
  6235     00D2  28D4               	goto	u239_21
  6236     00D3  28D5               	goto	u239_20
  6237     00D4                     u239_21:
  6238     00D4  2915               	goto	i1l294
  6239     00D5                     u239_20:
  6240     00D5                     i1l3046:
  6241     00D5  1283               	bcf	3,5	;RP0=0, select bank0
  6242     00D6  1303               	bcf	3,6	;RP1=0, select bank0
  6243     00D7  149F               	bsf	31,1	;volatile
  6244     00D8  2915               	goto	i1l294
  6245     00D9                     i1l3048:
  6246                           
  6247                           ;main.c: 502:                 copias1 += 1;
  6248     00D9  3001               	movlw	1
  6249     00DA  1283               	bcf	3,5	;RP0=0, select bank0
  6250     00DB  1303               	bcf	3,6	;RP1=0, select bank0
  6251     00DC  07BF               	addwf	_copias1,f
  6252     00DD  1803               	skipnc
  6253     00DE  0AC0               	incf	_copias1+1,f
  6254     00DF  3000               	movlw	0
  6255     00E0  07C0               	addwf	_copias1+1,f
  6256     00E1                     i1l3050:
  6257                           
  6258                           ;main.c: 503:                 if (copias1 == los5msen15ms - 1 || (leoADCHumedadTemp > 0 
      +                          && copias1 == los5msen15ms - 2))
  6259     00E1  0850               	movf	_los5msen15ms,w
  6260     00E2  3EFF               	addlw	255
  6261     00E3  00B9               	movwf	??_TRAT_INT
  6262     00E4  0851               	movf	_los5msen15ms+1,w
  6263     00E5  1803               	skipnc
  6264     00E6  3E01               	addlw	1
  6265     00E7  3EFF               	addlw	255
  6266     00E8  00BA               	movwf	??_TRAT_INT+1
  6267     00E9  0840               	movf	_copias1+1,w
  6268     00EA  063A               	xorwf	??_TRAT_INT+1,w
  6269     00EB  1D03               	skipz
  6270     00EC  28EF               	goto	u240_25
  6271     00ED  083F               	movf	_copias1,w
  6272     00EE  0639               	xorwf	??_TRAT_INT,w
  6273     00EF                     u240_25:
  6274     00EF  1903               	skipnz
  6275     00F0  28F2               	goto	u240_21
  6276     00F1  28F3               	goto	u240_20
  6277     00F2                     u240_21:
  6278     00F2  2914               	goto	i1l297
  6279     00F3                     u240_20:
  6280     00F3                     i1l3052:
  6281     00F3  0853               	movf	_leoADCHumedadTemp+1,w
  6282     00F4  3A80               	xorlw	128
  6283     00F5  00FF               	movwf	btemp+1
  6284     00F6  3080               	movlw	128
  6285     00F7  027F               	subwf	btemp+1,w
  6286     00F8  1D03               	skipz
  6287     00F9  28FC               	goto	u241_25
  6288     00FA  3001               	movlw	1
  6289     00FB  0252               	subwf	_leoADCHumedadTemp,w
  6290     00FC                     u241_25:
  6291     00FC  1C03               	skipc
  6292     00FD  28FF               	goto	u241_21
  6293     00FE  2900               	goto	u241_20
  6294     00FF                     u241_21:
  6295     00FF  2915               	goto	i1l294
  6296     0100                     u241_20:
  6297     0100                     i1l3054:
  6298     0100  1283               	bcf	3,5	;RP0=0, select bank0
  6299     0101  1303               	bcf	3,6	;RP1=0, select bank0
  6300     0102  0850               	movf	_los5msen15ms,w
  6301     0103  3EFE               	addlw	254
  6302     0104  00B9               	movwf	??_TRAT_INT
  6303     0105  0851               	movf	_los5msen15ms+1,w
  6304     0106  1803               	skipnc
  6305     0107  3E01               	addlw	1
  6306     0108  3EFF               	addlw	255
  6307     0109  00BA               	movwf	??_TRAT_INT+1
  6308     010A  0840               	movf	_copias1+1,w
  6309     010B  063A               	xorwf	??_TRAT_INT+1,w
  6310     010C  1D03               	skipz
  6311     010D  2910               	goto	u242_25
  6312     010E  083F               	movf	_copias1,w
  6313     010F  0639               	xorwf	??_TRAT_INT,w
  6314     0110                     u242_25:
  6315     0110  1D03               	skipz
  6316     0111  2913               	goto	u242_21
  6317     0112  2914               	goto	u242_20
  6318     0113                     u242_21:
  6319     0113  2915               	goto	i1l294
  6320     0114                     u242_20:
  6321     0114                     i1l297:
  6322                           
  6323                           ;main.c: 504:                     ADCON0bits.GO_DONE = 1;
  6324     0114  149F               	bsf	31,1	;volatile
  6325     0115                     i1l294:	
  6326                           ;main.c: 507:             }
  6327                           
  6328                           
  6329                           ;main.c: 508:             ADCON0bits.GO_DONE = 1;
  6330     0115  1283               	bcf	3,5	;RP0=0, select bank0
  6331     0116  1303               	bcf	3,6	;RP1=0, select bank0
  6332     0117  149F               	bsf	31,1	;volatile
  6333     0118                     i1l3056:
  6334                           
  6335                           ;main.c: 509:             TMR1H = eltimer1H;
  6336     0118  085C               	movf	_eltimer1H,w
  6337     0119  008F               	movwf	15	;volatile
  6338                           
  6339                           ;main.c: 510:             TMR1L = eltimer1L;
  6340     011A  085B               	movf	_eltimer1L,w
  6341     011B  008E               	movwf	14	;volatile
  6342     011C                     i1l3058:
  6343                           
  6344                           ;main.c: 511:             PIR1bits.TMR1IF = 0;
  6345     011C  100C               	bcf	12,0	;volatile
  6346                           
  6347                           ;main.c: 512:         } else {
  6348     011D  2A25               	goto	i1l329
  6349     011E                     i1l291:
  6350                           
  6351                           ;main.c: 513:             if (PIR1bits.TMR2IF)
  6352     011E  1C8C               	btfss	12,1	;volatile
  6353     011F  2921               	goto	u243_21
  6354     0120  2922               	goto	u243_20
  6355     0121                     u243_21:
  6356     0121  2929               	goto	i1l299
  6357     0122                     u243_20:
  6358     0122                     i1l3060:
  6359                           
  6360                           ;main.c: 514:             {;main.c: 516:                 TRISC = 0;
  6361     0122  1683               	bsf	3,5	;RP0=1, select bank1
  6362     0123  1303               	bcf	3,6	;RP1=0, select bank1
  6363     0124  0187               	clrf	7	;volatile
  6364     0125                     i1l3062:
  6365                           
  6366                           ;main.c: 517:                 PIR1bits.TMR2IF = 0;
  6367     0125  1283               	bcf	3,5	;RP0=0, select bank0
  6368     0126  1303               	bcf	3,6	;RP1=0, select bank0
  6369     0127  108C               	bcf	12,1	;volatile
  6370                           
  6371                           ;main.c: 518:             } else {
  6372     0128  2A25               	goto	i1l329
  6373     0129                     i1l299:
  6374                           
  6375                           ;main.c: 519:                 if (PIR1bits.ADIF) {
  6376     0129  1F0C               	btfss	12,6	;volatile
  6377     012A  292C               	goto	u244_21
  6378     012B  292D               	goto	u244_20
  6379     012C                     u244_21:
  6380     012C  297D               	goto	i1l301
  6381     012D                     u244_20:
  6382     012D                     i1l3064:
  6383                           
  6384                           ;main.c: 521:                     PIR1bits.ADIF = 0;
  6385     012D  130C               	bcf	12,6	;volatile
  6386     012E                     i1l3066:
  6387                           
  6388                           ;main.c: 522:                     valor[anI] = (int) ADRESH * 0x100 + ADRESL;
  6389     012E  0854               	movf	_anI,w
  6390     012F  00B9               	movwf	??_TRAT_INT
  6391     0130  0739               	addwf	??_TRAT_INT,w
  6392     0131  3ECB               	addlw	(low (_valor| 0))& (0+255)
  6393     0132  0084               	movwf	4
  6394     0133  1683               	bsf	3,5	;RP0=1, select bank1
  6395     0134  1303               	bcf	3,6	;RP1=0, select bank1
  6396     0135  081E               	movf	30,w	;volatile
  6397     0136  1383               	bcf	3,7	;select IRP bank1
  6398     0137  0080               	movwf	0
  6399     0138  0A84               	incf	4,f
  6400     0139  1283               	bcf	3,5	;RP0=0, select bank0
  6401     013A  1303               	bcf	3,6	;RP1=0, select bank0
  6402     013B  081E               	movf	30,w	;volatile
  6403     013C  0080               	movwf	0
  6404     013D                     i1l3068:
  6405                           
  6406                           ;main.c: 541:                     if (leoADCHumedadTemp > 0)
  6407     013D  0853               	movf	_leoADCHumedadTemp+1,w
  6408     013E  3A80               	xorlw	128
  6409     013F  00FF               	movwf	btemp+1
  6410     0140  3080               	movlw	128
  6411     0141  027F               	subwf	btemp+1,w
  6412     0142  1D03               	skipz
  6413     0143  2946               	goto	u245_25
  6414     0144  3001               	movlw	1
  6415     0145  0252               	subwf	_leoADCHumedadTemp,w
  6416     0146                     u245_25:
  6417     0146  1C03               	skipc
  6418     0147  2949               	goto	u245_21
  6419     0148  294A               	goto	u245_20
  6420     0149                     u245_21:
  6421     0149  296F               	goto	i1l3078
  6422     014A                     u245_20:
  6423     014A                     i1l3070:
  6424                           
  6425                           ;main.c: 542:                     {;main.c: 543:                         if (copias1 == 
      +                          0)
  6426     014A  1283               	bcf	3,5	;RP0=0, select bank0
  6427     014B  1303               	bcf	3,6	;RP1=0, select bank0
  6428     014C  083F               	movf	_copias1,w
  6429     014D  0440               	iorwf	_copias1+1,w
  6430     014E  1D03               	btfss	3,2
  6431     014F  2951               	goto	u246_21
  6432     0150  2952               	goto	u246_20
  6433     0151                     u246_21:
  6434     0151  295D               	goto	i1l3074
  6435     0152                     u246_20:
  6436     0152                     i1l3072:
  6437                           
  6438                           ;main.c: 544:                         {;main.c: 545:                             leoADCH
      +                          umedadTemp--;
  6439     0152  30FF               	movlw	255
  6440     0153  07D2               	addwf	_leoADCHumedadTemp,f
  6441     0154  1803               	skipnc
  6442     0155  0AD3               	incf	_leoADCHumedadTemp+1,f
  6443     0156  30FF               	movlw	255
  6444     0157  07D3               	addwf	_leoADCHumedadTemp+1,f
  6445                           
  6446                           ;main.c: 546:                             anI = 1;
  6447     0158  3001               	movlw	1
  6448     0159  00D4               	movwf	_anI
  6449     015A  3000               	movlw	0
  6450     015B  00D5               	movwf	_anI+1
  6451                           
  6452                           ;main.c: 547:                         } else if (copias1 == 2)
  6453     015C  2973               	goto	i1l3082
  6454     015D                     i1l3074:
  6455     015D  3002               	movlw	2
  6456     015E  063F               	xorwf	_copias1,w
  6457     015F  0440               	iorwf	_copias1+1,w
  6458     0160  1D03               	btfss	3,2
  6459     0161  2963               	goto	u247_21
  6460     0162  2964               	goto	u247_20
  6461     0163                     u247_21:
  6462     0163  296F               	goto	i1l3078
  6463     0164                     u247_20:
  6464     0164                     i1l3076:
  6465                           
  6466                           ;main.c: 548:                         {;main.c: 549:                             leoADCH
      +                          umedadTemp--;
  6467     0164  30FF               	movlw	255
  6468     0165  07D2               	addwf	_leoADCHumedadTemp,f
  6469     0166  1803               	skipnc
  6470     0167  0AD3               	incf	_leoADCHumedadTemp+1,f
  6471     0168  30FF               	movlw	255
  6472     0169  07D3               	addwf	_leoADCHumedadTemp+1,f
  6473                           
  6474                           ;main.c: 550:                             anI = 2;
  6475     016A  3002               	movlw	2
  6476     016B  00D4               	movwf	_anI
  6477     016C  3000               	movlw	0
  6478     016D  00D5               	movwf	_anI+1
  6479                           
  6480                           ;main.c: 551:                         } else anI = 0;
  6481     016E  2973               	goto	i1l3082
  6482     016F                     i1l3078:
  6483     016F  1283               	bcf	3,5	;RP0=0, select bank0
  6484     0170  1303               	bcf	3,6	;RP1=0, select bank0
  6485     0171  01D4               	clrf	_anI
  6486     0172  01D5               	clrf	_anI+1
  6487     0173                     i1l3082:
  6488                           
  6489                           ;main.c: 554:                     ADCON0bits.CHS = (char) anI;
  6490     0173  0854               	movf	_anI,w
  6491     0174  00B9               	movwf	??_TRAT_INT
  6492     0175  0DB9               	rlf	??_TRAT_INT,f
  6493     0176  0DB9               	rlf	??_TRAT_INT,f
  6494     0177  081F               	movf	31,w	;volatile
  6495     0178  0639               	xorwf	??_TRAT_INT,w
  6496     0179  39C3               	andlw	-61
  6497     017A  0639               	xorwf	??_TRAT_INT,w
  6498     017B  009F               	movwf	31	;volatile
  6499                           
  6500                           ;main.c: 557:                 } else if (PIR2bits.EEIF) {
  6501     017C  2A25               	goto	i1l329
  6502     017D                     i1l301:
  6503     017D  1E0D               	btfss	13,4	;volatile
  6504     017E  2980               	goto	u248_21
  6505     017F  2981               	goto	u248_20
  6506     0180                     u248_21:
  6507     0180  2987               	goto	i1l309
  6508     0181                     u248_20:
  6509     0181                     i1l3084:
  6510                           
  6511                           ;main.c: 558:                     PIR2bits.EEIF = 0;
  6512     0181  120D               	bcf	13,4	;volatile
  6513     0182                     i1l3086:
  6514                           
  6515                           ;main.c: 559:                     continuoEscribiendo = 1;
  6516     0182  3001               	movlw	1
  6517     0183  00C9               	movwf	_continuoEscribiendo
  6518     0184  3000               	movlw	0
  6519     0185  00CA               	movwf	_continuoEscribiendo+1
  6520                           
  6521                           ;main.c: 562:                 } else if (PIR1bits.TXIF) {
  6522     0186  2A25               	goto	i1l329
  6523     0187                     i1l309:
  6524     0187  1E0C               	btfss	12,4	;volatile
  6525     0188  298A               	goto	u249_21
  6526     0189  298B               	goto	u249_20
  6527     018A                     u249_21:
  6528     018A  298D               	goto	i1l311
  6529     018B                     u249_20:
  6530     018B                     i1l3088:
  6531                           
  6532                           ;main.c: 563:                     PIR1bits.TXIF = 0;
  6533     018B  120C               	bcf	12,4	;volatile
  6534                           
  6535                           ;main.c: 567:                 } else if (PIR1bits.RCIF) {
  6536     018C  2A25               	goto	i1l329
  6537     018D                     i1l311:
  6538     018D  1E8C               	btfss	12,5	;volatile
  6539     018E  2990               	goto	u250_21
  6540     018F  2991               	goto	u250_20
  6541     0190                     u250_21:
  6542     0190  2A1F               	goto	i1l313
  6543     0191                     u250_20:
  6544     0191                     i1l3090:
  6545                           
  6546                           ;main.c: 568:                     PIR1bits.RCIF = 0;
  6547     0191  128C               	bcf	12,5	;volatile
  6548     0192                     i1l3092:
  6549                           
  6550                           ;main.c: 570:                     if (reciboLED > 0) {
  6551     0192  0848               	movf	_reciboLED+1,w
  6552     0193  3A80               	xorlw	128
  6553     0194  00FF               	movwf	btemp+1
  6554     0195  3080               	movlw	128
  6555     0196  027F               	subwf	btemp+1,w
  6556     0197  1D03               	skipz
  6557     0198  299B               	goto	u251_25
  6558     0199  3001               	movlw	1
  6559     019A  0247               	subwf	_reciboLED,w
  6560     019B                     u251_25:
  6561     019B  1C03               	skipc
  6562     019C  299E               	goto	u251_21
  6563     019D  299F               	goto	u251_20
  6564     019E                     u251_21:
  6565     019E  29CE               	goto	i1l3102
  6566     019F                     u251_20:
  6567     019F                     i1l3094:
  6568                           
  6569                           ;main.c: 571:                         reciboLED--;
  6570     019F  30FF               	movlw	255
  6571     01A0  1283               	bcf	3,5	;RP0=0, select bank0
  6572     01A1  1303               	bcf	3,6	;RP1=0, select bank0
  6573     01A2  07C7               	addwf	_reciboLED,f
  6574     01A3  1803               	skipnc
  6575     01A4  0AC8               	incf	_reciboLED+1,f
  6576     01A5  30FF               	movlw	255
  6577     01A6  07C8               	addwf	_reciboLED+1,f
  6578     01A7                     i1l3096:
  6579                           
  6580                           ;main.c: 572:                         miLED[reciboLED] = RCREG;
  6581     01A7  0847               	movf	_reciboLED,w
  6582     01A8  3EEC               	addlw	(low (_miLED| 0))& (0+255)
  6583     01A9  0084               	movwf	4
  6584     01AA  081A               	movf	26,w	;volatile
  6585     01AB  1383               	bcf	3,7	;select IRP bank1
  6586     01AC  0080               	movwf	0
  6587     01AD                     i1l3098:
  6588                           
  6589                           ;main.c: 573:                         if (reciboLED == 0) setLED(miLED[3], miLED[2], miL
      +                          ED[1], miLED[0]);
  6590     01AD  0847               	movf	_reciboLED,w
  6591     01AE  0448               	iorwf	_reciboLED+1,w
  6592     01AF  1D03               	btfss	3,2
  6593     01B0  29B2               	goto	u252_21
  6594     01B1  29B3               	goto	u252_20
  6595     01B2                     u252_21:
  6596     01B2  2A25               	goto	i1l310
  6597     01B3                     u252_20:
  6598     01B3                     i1l3100:
  6599     01B3  1683               	bsf	3,5	;RP0=1, select bank1
  6600     01B4  1303               	bcf	3,6	;RP1=0, select bank1
  6601     01B5  086E               	movf	(_miLED^(0+128)+2),w
  6602     01B6  1283               	bcf	3,5	;RP0=0, select bank0
  6603     01B7  1303               	bcf	3,6	;RP1=0, select bank0
  6604     01B8  00B5               	movwf	i1setLED@green
  6605     01B9  1683               	bsf	3,5	;RP0=1, select bank1
  6606     01BA  1303               	bcf	3,6	;RP1=0, select bank1
  6607     01BB  086D               	movf	(_miLED^(0+128)+1),w
  6608     01BC  1283               	bcf	3,5	;RP0=0, select bank0
  6609     01BD  1303               	bcf	3,6	;RP1=0, select bank0
  6610     01BE  00B6               	movwf	i1setLED@blue
  6611     01BF  1683               	bsf	3,5	;RP0=1, select bank1
  6612     01C0  1303               	bcf	3,6	;RP1=0, select bank1
  6613     01C1  086C               	movf	_miLED^(0+128),w
  6614     01C2  1283               	bcf	3,5	;RP0=0, select bank0
  6615     01C3  1303               	bcf	3,6	;RP1=0, select bank0
  6616     01C4  00B7               	movwf	i1setLED@luminosidad
  6617     01C5  1683               	bsf	3,5	;RP0=1, select bank1
  6618     01C6  1303               	bcf	3,6	;RP1=0, select bank1
  6619     01C7  086F               	movf	(_miLED^(0+128)+3),w
  6620     01C8  120A  158A  25DE  120A  118A  	fcall	i1_setLED
  6621     01CD  2A25               	goto	i1l329
  6622     01CE                     i1l3102:
  6623     01CE  1283               	bcf	3,5	;RP0=0, select bank0
  6624     01CF  1303               	bcf	3,6	;RP1=0, select bank0
  6625     01D0  0846               	movf	_reciboPWM+1,w
  6626     01D1  3A80               	xorlw	128
  6627     01D2  00FF               	movwf	btemp+1
  6628     01D3  3080               	movlw	128
  6629     01D4  027F               	subwf	btemp+1,w
  6630     01D5  1D03               	skipz
  6631     01D6  29D9               	goto	u253_25
  6632     01D7  3001               	movlw	1
  6633     01D8  0245               	subwf	_reciboPWM,w
  6634     01D9                     u253_25:
  6635     01D9  1C03               	skipc
  6636     01DA  29DC               	goto	u253_21
  6637     01DB  29DD               	goto	u253_20
  6638     01DC                     u253_21:
  6639     01DC  2A04               	goto	i1l3122
  6640     01DD                     u253_20:
  6641     01DD                     i1l3104:
  6642                           
  6643                           ;main.c: 575:                         reciboPWM = 0;
  6644     01DD  1283               	bcf	3,5	;RP0=0, select bank0
  6645     01DE  1303               	bcf	3,6	;RP1=0, select bank0
  6646     01DF  01C5               	clrf	_reciboPWM
  6647     01E0  01C6               	clrf	_reciboPWM+1
  6648     01E1                     i1l3106:
  6649                           
  6650                           ;main.c: 576:                         setPWM(RCREG);
  6651     01E1  081A               	movf	26,w	;volatile
  6652     01E2  120A  158A  21C4  120A  118A  	fcall	i1_setPWM
  6653                           
  6654                           ;main.c: 577:                     } else {
  6655     01E7  2A25               	goto	i1l329
  6656     01E8                     i1l3108:
  6657                           
  6658                           ;main.c: 580:                                 emitirMisSensores = 1;
  6659     01E8  3001               	movlw	1
  6660     01E9  1683               	bsf	3,5	;RP0=1, select bank1
  6661     01EA  1303               	bcf	3,6	;RP1=0, select bank1
  6662     01EB  00DB               	movwf	_emitirMisSensores^(0+128)
  6663     01EC  3000               	movlw	0
  6664     01ED  00DC               	movwf	(_emitirMisSensores^(0+128)+1)
  6665                           
  6666                           ;main.c: 581:                                 break;
  6667     01EE  2A25               	goto	i1l329
  6668     01EF                     i1l3110:
  6669                           
  6670                           ;main.c: 583:                                 TXREG = 'B';
  6671     01EF  3042               	movlw	66
  6672     01F0  0099               	movwf	25	;volatile
  6673                           
  6674                           ;main.c: 584:                                 break;
  6675     01F1  2A25               	goto	i1l329
  6676     01F2                     i1l3112:
  6677                           
  6678                           ;main.c: 586:                                 reciboPWM = 1;
  6679     01F2  3001               	movlw	1
  6680     01F3  00C5               	movwf	_reciboPWM
  6681     01F4  3000               	movlw	0
  6682     01F5  00C6               	movwf	_reciboPWM+1
  6683                           
  6684                           ;main.c: 587:                                 break;
  6685     01F6  2A25               	goto	i1l329
  6686     01F7                     i1l3114:
  6687                           
  6688                           ;main.c: 590:                                 reciboLED = 4;
  6689     01F7  3004               	movlw	4
  6690     01F8  00C7               	movwf	_reciboLED
  6691     01F9  3000               	movlw	0
  6692     01FA  00C8               	movwf	_reciboLED+1
  6693                           
  6694                           ;main.c: 591:                                 break;
  6695     01FB  2A25               	goto	i1l329
  6696     01FC                     i1l3116:
  6697                           
  6698                           ;main.c: 594:                                 deboContinuar = 0;
  6699     01FC  1683               	bsf	3,5	;RP0=1, select bank1
  6700     01FD  1303               	bcf	3,6	;RP1=0, select bank1
  6701     01FE  01E9               	clrf	_deboContinuar^(0+128)
  6702     01FF  01EA               	clrf	(_deboContinuar+1)^(0+128)
  6703                           
  6704                           ;main.c: 595:                                 break;
  6705     0200  2A25               	goto	i1l329
  6706     0201                     i1l3118:
  6707                           
  6708                           ;main.c: 597:                                 TXREG = 'E';
  6709     0201  3045               	movlw	69
  6710     0202  0099               	movwf	25	;volatile
  6711                           
  6712                           ;main.c: 598:                                 break;
  6713     0203  2A25               	goto	i1l329
  6714     0204                     i1l3122:
  6715     0204  1283               	bcf	3,5	;RP0=0, select bank0
  6716     0205  1303               	bcf	3,6	;RP1=0, select bank0
  6717     0206  081A               	movf	26,w	;volatile
  6718     0207  00B9               	movwf	??_TRAT_INT
  6719     0208  01BA               	clrf	??_TRAT_INT+1
  6720                           
  6721                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6722                           ; Switch size 1, requested type "simple"
  6723                           ; Number of cases is 1, Range of values is 0 to 0
  6724                           ; switch strategies available:
  6725                           ; Name         Instructions Cycles
  6726                           ; simple_byte            4     3 (average)
  6727                           ; direct_byte           11     8 (fixed)
  6728                           ; jumptable            260     6 (fixed)
  6729                           ;	Chosen strategy is simple_byte
  6730     0209  083A               	movf	??_TRAT_INT+1,w
  6731     020A  3A00               	xorlw	0	; case 0
  6732     020B  1903               	skipnz
  6733     020C  2A0E               	goto	i1l3966
  6734     020D  2A01               	goto	i1l3118
  6735     020E                     i1l3966:
  6736                           
  6737                           ; Switch size 1, requested type "simple"
  6738                           ; Number of cases is 5, Range of values is 97 to 101
  6739                           ; switch strategies available:
  6740                           ; Name         Instructions Cycles
  6741                           ; simple_byte           16     9 (average)
  6742                           ; direct_byte           26    11 (fixed)
  6743                           ; jumptable            263     9 (fixed)
  6744                           ;	Chosen strategy is simple_byte
  6745     020E  0839               	movf	??_TRAT_INT,w
  6746     020F  3A61               	xorlw	97	; case 97
  6747     0210  1903               	skipnz
  6748     0211  29E8               	goto	i1l3108
  6749     0212  3A03               	xorlw	3	; case 98
  6750     0213  1903               	skipnz
  6751     0214  29EF               	goto	i1l3110
  6752     0215  3A01               	xorlw	1	; case 99
  6753     0216  1903               	skipnz
  6754     0217  29F2               	goto	i1l3112
  6755     0218  3A07               	xorlw	7	; case 100
  6756     0219  1903               	skipnz
  6757     021A  29F7               	goto	i1l3114
  6758     021B  3A01               	xorlw	1	; case 101
  6759     021C  1903               	skipnz
  6760     021D  29FC               	goto	i1l3116
  6761     021E  2A01               	goto	i1l3118
  6762     021F                     i1l313:
  6763     021F  1D8C               	btfss	12,3	;volatile
  6764     0220  2A22               	goto	u254_21
  6765     0221  2A23               	goto	u254_20
  6766     0222                     u254_21:
  6767     0222  2A25               	goto	i1l310
  6768     0223                     u254_20:
  6769     0223                     i1l3124:
  6770                           
  6771                           ;main.c: 602:                     PIR1bits.SSPIF = 0;
  6772     0223  118C               	bcf	12,3	;volatile
  6773     0224  2A25               	goto	i1l329
  6774     0225                     i1l310:
  6775     0225                     i1l329:
  6776     0225  1283               	bcf	3,5	;RP0=0, select bank0
  6777     0226  1303               	bcf	3,6	;RP1=0, select bank0
  6778     0227  083E               	movf	??_TRAT_INT+5,w
  6779     0228  00FF               	movwf	btemp+1
  6780     0229  083D               	movf	??_TRAT_INT+4,w
  6781     022A  008A               	movwf	10
  6782     022B  083C               	movf	??_TRAT_INT+3,w
  6783     022C  0084               	movwf	4
  6784     022D  0E3B               	swapf	??_TRAT_INT+2,w
  6785     022E  0083               	movwf	3
  6786     022F  0EFE               	swapf	btemp,f
  6787     0230  0E7E               	swapf	btemp,w
  6788     0231  0009               	retfie
  6789     0232                     __end_of_TRAT_INT:
  6790                           
  6791                           	psect	intentry
  6792     0004                     __pintentry:	
  6793                           ;incstack = 0
  6794 ;; hardware stack exceeded
  6795                           ; Regs used in _TRAT_INT: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6796                           
  6797     0004                     interrupt_function:
  6798     007E                     saved_w	set	btemp
  6799     0004  00FE               	movwf	btemp
  6800     0005  0E03               	swapf	3,w
  6801     0006  1283               	bcf	3,5	;RP0=0, select bank0
  6802     0007  1303               	bcf	3,6	;RP1=0, select bank0
  6803     0008  00BB               	movwf	??_TRAT_INT+2
  6804     0009  0804               	movf	4,w
  6805     000A  00BC               	movwf	??_TRAT_INT+3
  6806     000B  080A               	movf	10,w
  6807     000C  00BD               	movwf	??_TRAT_INT+4
  6808     000D  087F               	movf	btemp+1,w
  6809     000E  00BE               	movwf	??_TRAT_INT+5
  6810     000F  120A  118A  2852   	ljmp	_TRAT_INT
  6811                           
  6812                           	psect	text37
  6813     09C4                     __ptext37:	
  6814 ;; *************** function i1_setPWM *****************
  6815 ;; Defined at:
  6816 ;;		line 358 in file "main.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;  porcent         1    wreg     unsigned char 
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;  porcent         1   11[COMMON] unsigned char 
  6821 ;; Return value:  Size  Location     Type
  6822 ;;                  1    wreg      void 
  6823 ;; Registers used:
  6824 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6830 ;;      Params:         0       0       0       0       0
  6831 ;;      Locals:         1       0       0       0       0
  6832 ;;      Temps:          2       0       0       0       0
  6833 ;;      Totals:         3       0       0       0       0
  6834 ;;Total ram usage:        3 bytes
  6835 ;; Hardware stack levels used: 1
  6836 ;; Hardware stack levels required when called: 2
  6837 ;; This function calls:
  6838 ;;		i1___awdiv
  6839 ;;		i1___bmul
  6840 ;;		i1_escribirMemoria
  6841 ;; This function is called by:
  6842 ;;		_TRAT_INT
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           
  6846     09C4                     i1_setPWM:	
  6847                           ;psect for function i1_setPWM
  6848                           
  6849                           
  6850                           ;incstack = 0
  6851 ;; hardware stack exceeded
  6852                           ; Regs used in i1_setPWM: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6853                           ;i1setPWM@porcent stored from wreg
  6854     09C4  00FB               	movwf	i1setPWM@porcent
  6855     09C5                     i1l2996:
  6856                           
  6857                           ;main.c: 359:     porcentaje = (char) (porcent / 100);
  6858     09C5  3064               	movlw	100
  6859     09C6  00F0               	movwf	i1___awdiv@divisor
  6860     09C7  3000               	movlw	0
  6861     09C8  00F1               	movwf	i1___awdiv@divisor+1
  6862     09C9  087B               	movf	i1setPWM@porcent,w
  6863     09CA  00F9               	movwf	??i1_setPWM
  6864     09CB  01FA               	clrf	??i1_setPWM+1
  6865     09CC  0879               	movf	??i1_setPWM,w
  6866     09CD  00F2               	movwf	i1___awdiv@dividend
  6867     09CE  087A               	movf	??i1_setPWM+1,w
  6868     09CF  00F3               	movwf	i1___awdiv@dividend+1
  6869     09D0  120A  158A  2577  120A  158A  	fcall	i1___awdiv
  6870     09D5  0870               	movf	?i1___awdiv,w
  6871     09D6  1283               	bcf	3,5	;RP0=0, select bank0
  6872     09D7  1303               	bcf	3,6	;RP1=0, select bank0
  6873     09D8  00CC               	movwf	_porcentaje
  6874                           
  6875                           ;main.c: 360:     CCPR1L = porcentaje * porcentajeMax;
  6876     09D9  0859               	movf	_porcentajeMax,w
  6877     09DA  00F0               	movwf	i1___bmul@multiplicand
  6878     09DB  084C               	movf	_porcentaje,w
  6879     09DC  120A  158A  20E2  120A  158A  	fcall	i1___bmul
  6880     09E1  1283               	bcf	3,5	;RP0=0, select bank0
  6881     09E2  1303               	bcf	3,6	;RP1=0, select bank0
  6882     09E3  0095               	movwf	21	;volatile
  6883     09E4                     i1l2998:
  6884                           
  6885                           ;main.c: 361:     escribirMemoria(direccionPWM, porcent);
  6886     09E4  087B               	movf	i1setPWM@porcent,w
  6887     09E5  00F1               	movwf	i1escribirMemoria@dato
  6888     09E6  085A               	movf	_direccionPWM,w
  6889     09E7  120A  158A  2512  120A  158A  	fcall	i1_escribirMemoria
  6890     09EC                     i1l3000:
  6891                           
  6892                           ;main.c: 362:     pPWM = porcent;
  6893     09EC  087B               	movf	i1setPWM@porcent,w
  6894     09ED  1283               	bcf	3,5	;RP0=0, select bank0
  6895     09EE  1303               	bcf	3,6	;RP1=0, select bank0
  6896     09EF  00CE               	movwf	_pPWM
  6897     09F0                     i1l250:
  6898     09F0  0008               	return
  6899     09F1                     __end_ofi1_setPWM:
  6900                           
  6901                           	psect	text38
  6902     08E2                     __ptext38:	
  6903 ;; *************** function i1___bmul *****************
  6904 ;; Defined at:
  6905 ;;		line 4 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/Umul8.c"
  6906 ;; Parameters:    Size  Location     Type
  6907 ;;  multiplier      1    wreg     unsigned char 
  6908 ;;  multiplicand    1    0[COMMON] unsigned char 
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;  multiplier      1    3[COMMON] unsigned char 
  6911 ;;  product         1    2[COMMON] unsigned char 
  6912 ;; Return value:  Size  Location     Type
  6913 ;;                  1    wreg      unsigned char 
  6914 ;; Registers used:
  6915 ;;		wreg, status,2, status,0
  6916 ;; Tracked objects:
  6917 ;;		On entry : 0/0
  6918 ;;		On exit  : 0/0
  6919 ;;		Unchanged: 0/0
  6920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6921 ;;      Params:         1       0       0       0       0
  6922 ;;      Locals:         2       0       0       0       0
  6923 ;;      Temps:          1       0       0       0       0
  6924 ;;      Totals:         4       0       0       0       0
  6925 ;;Total ram usage:        4 bytes
  6926 ;; Hardware stack levels used: 1
  6927 ;; This function calls:
  6928 ;;		Nothing
  6929 ;; This function is called by:
  6930 ;;		i1_setPWM
  6931 ;; This function uses a non-reentrant model
  6932 ;;
  6933                           
  6934     08E2                     i1___bmul:	
  6935                           ;psect for function i1___bmul
  6936                           
  6937                           
  6938                           ;incstack = 0
  6939                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  6940                           ;i1___bmul@multiplier stored from wreg
  6941     08E2  00F3               	movwf	i1___bmul@multiplier
  6942     08E3                     i1l2856:
  6943     08E3  01F2               	clrf	i1___bmul@product
  6944     08E4                     i1l2858:
  6945     08E4  1C73               	btfss	i1___bmul@multiplier,0
  6946     08E5  28E7               	goto	u217_21
  6947     08E6  28E8               	goto	u217_20
  6948     08E7                     u217_21:
  6949     08E7  28EC               	goto	i1l2862
  6950     08E8                     u217_20:
  6951     08E8                     i1l2860:
  6952     08E8  0870               	movf	i1___bmul@multiplicand,w
  6953     08E9  00F1               	movwf	??i1___bmul
  6954     08EA  0871               	movf	??i1___bmul,w
  6955     08EB  07F2               	addwf	i1___bmul@product,f
  6956     08EC                     i1l2862:
  6957     08EC  1003               	clrc
  6958     08ED  0DF0               	rlf	i1___bmul@multiplicand,f
  6959     08EE                     i1l2864:
  6960     08EE  1003               	clrc
  6961     08EF  0CF3               	rrf	i1___bmul@multiplier,f
  6962     08F0  0873               	movf	i1___bmul@multiplier,w
  6963     08F1  1D03               	btfss	3,2
  6964     08F2  28F4               	goto	u218_21
  6965     08F3  28F5               	goto	u218_20
  6966     08F4                     u218_21:
  6967     08F4  28E4               	goto	i1l2858
  6968     08F5                     u218_20:
  6969     08F5                     i1l2866:
  6970     08F5  0872               	movf	i1___bmul@product,w
  6971     08F6                     i1l526:
  6972     08F6  0008               	return
  6973     08F7                     __end_ofi1___bmul:
  6974                           
  6975                           	psect	text39
  6976     0D77                     __ptext39:	
  6977 ;; *************** function i1___awdiv *****************
  6978 ;; Defined at:
  6979 ;;		line 5 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/awdiv.c"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;  divisor         2    0[COMMON] int 
  6982 ;;  dividend        2    2[COMMON] int 
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;  quotient        2    7[COMMON] int 
  6985 ;;  sign            1    6[COMMON] unsigned char 
  6986 ;;  counter         1    5[COMMON] unsigned char 
  6987 ;; Return value:  Size  Location     Type
  6988 ;;                  2    0[COMMON] int 
  6989 ;; Registers used:
  6990 ;;		wreg, status,2, status,0
  6991 ;; Tracked objects:
  6992 ;;		On entry : 0/0
  6993 ;;		On exit  : 0/0
  6994 ;;		Unchanged: 0/0
  6995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6996 ;;      Params:         4       0       0       0       0
  6997 ;;      Locals:         4       0       0       0       0
  6998 ;;      Temps:          1       0       0       0       0
  6999 ;;      Totals:         9       0       0       0       0
  7000 ;;Total ram usage:        9 bytes
  7001 ;; Hardware stack levels used: 1
  7002 ;; This function calls:
  7003 ;;		Nothing
  7004 ;; This function is called by:
  7005 ;;		i1_setPWM
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009     0D77                     i1___awdiv:	
  7010                           ;psect for function i1___awdiv
  7011                           
  7012     0D77                     i1l2870:	
  7013                           ;incstack = 0
  7014                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  7015                           
  7016     0D77  01F6               	clrf	i1___awdiv@sign
  7017     0D78                     i1l2872:
  7018     0D78  1FF1               	btfss	i1___awdiv@divisor+1,7
  7019     0D79  2D7B               	goto	u219_21
  7020     0D7A  2D7C               	goto	u219_20
  7021     0D7B                     u219_21:
  7022     0D7B  2D83               	goto	i1l2878
  7023     0D7C                     u219_20:
  7024     0D7C                     i1l2874:
  7025     0D7C  09F0               	comf	i1___awdiv@divisor,f
  7026     0D7D  09F1               	comf	i1___awdiv@divisor+1,f
  7027     0D7E  0AF0               	incf	i1___awdiv@divisor,f
  7028     0D7F  1903               	skipnz
  7029     0D80  0AF1               	incf	i1___awdiv@divisor+1,f
  7030     0D81                     i1l2876:
  7031     0D81  01F6               	clrf	i1___awdiv@sign
  7032     0D82  0AF6               	incf	i1___awdiv@sign,f
  7033     0D83                     i1l2878:
  7034     0D83  1FF3               	btfss	i1___awdiv@dividend+1,7
  7035     0D84  2D86               	goto	u220_21
  7036     0D85  2D87               	goto	u220_20
  7037     0D86                     u220_21:
  7038     0D86  2D90               	goto	i1l2884
  7039     0D87                     u220_20:
  7040     0D87                     i1l2880:
  7041     0D87  09F2               	comf	i1___awdiv@dividend,f
  7042     0D88  09F3               	comf	i1___awdiv@dividend+1,f
  7043     0D89  0AF2               	incf	i1___awdiv@dividend,f
  7044     0D8A  1903               	skipnz
  7045     0D8B  0AF3               	incf	i1___awdiv@dividend+1,f
  7046     0D8C                     i1l2882:
  7047     0D8C  3001               	movlw	1
  7048     0D8D  00F4               	movwf	??i1___awdiv
  7049     0D8E  0874               	movf	??i1___awdiv,w
  7050     0D8F  06F6               	xorwf	i1___awdiv@sign,f
  7051     0D90                     i1l2884:
  7052     0D90  01F7               	clrf	i1___awdiv@quotient
  7053     0D91  01F8               	clrf	i1___awdiv@quotient+1
  7054     0D92                     i1l2886:
  7055     0D92  0870               	movf	i1___awdiv@divisor,w
  7056     0D93  0471               	iorwf	i1___awdiv@divisor+1,w
  7057     0D94  1903               	btfsc	3,2
  7058     0D95  2D97               	goto	u221_21
  7059     0D96  2D98               	goto	u221_20
  7060     0D97                     u221_21:
  7061     0D97  2DCF               	goto	i1l2906
  7062     0D98                     u221_20:
  7063     0D98                     i1l2888:
  7064     0D98  01F5               	clrf	i1___awdiv@counter
  7065     0D99  0AF5               	incf	i1___awdiv@counter,f
  7066     0D9A  2DA6               	goto	i1l2894
  7067     0D9B                     i1l2890:
  7068     0D9B  3001               	movlw	1
  7069     0D9C                     u222_25:
  7070     0D9C  1003               	clrc
  7071     0D9D  0DF0               	rlf	i1___awdiv@divisor,f
  7072     0D9E  0DF1               	rlf	i1___awdiv@divisor+1,f
  7073     0D9F  3EFF               	addlw	-1
  7074     0DA0  1D03               	skipz
  7075     0DA1  2D9C               	goto	u222_25
  7076     0DA2                     i1l2892:
  7077     0DA2  3001               	movlw	1
  7078     0DA3  00F4               	movwf	??i1___awdiv
  7079     0DA4  0874               	movf	??i1___awdiv,w
  7080     0DA5  07F5               	addwf	i1___awdiv@counter,f
  7081     0DA6                     i1l2894:
  7082     0DA6  1FF1               	btfss	i1___awdiv@divisor+1,7
  7083     0DA7  2DA9               	goto	u223_21
  7084     0DA8  2DAA               	goto	u223_20
  7085     0DA9                     u223_21:
  7086     0DA9  2D9B               	goto	i1l2890
  7087     0DAA                     u223_20:
  7088     0DAA                     i1l2896:
  7089     0DAA  3001               	movlw	1
  7090     0DAB                     u224_25:
  7091     0DAB  1003               	clrc
  7092     0DAC  0DF7               	rlf	i1___awdiv@quotient,f
  7093     0DAD  0DF8               	rlf	i1___awdiv@quotient+1,f
  7094     0DAE  3EFF               	addlw	-1
  7095     0DAF  1D03               	skipz
  7096     0DB0  2DAB               	goto	u224_25
  7097     0DB1  0871               	movf	i1___awdiv@divisor+1,w
  7098     0DB2  0273               	subwf	i1___awdiv@dividend+1,w
  7099     0DB3  1D03               	skipz
  7100     0DB4  2DB7               	goto	u225_25
  7101     0DB5  0870               	movf	i1___awdiv@divisor,w
  7102     0DB6  0272               	subwf	i1___awdiv@dividend,w
  7103     0DB7                     u225_25:
  7104     0DB7  1C03               	skipc
  7105     0DB8  2DBA               	goto	u225_21
  7106     0DB9  2DBB               	goto	u225_20
  7107     0DBA                     u225_21:
  7108     0DBA  2DC2               	goto	i1l2902
  7109     0DBB                     u225_20:
  7110     0DBB                     i1l2898:
  7111     0DBB  0870               	movf	i1___awdiv@divisor,w
  7112     0DBC  02F2               	subwf	i1___awdiv@dividend,f
  7113     0DBD  0871               	movf	i1___awdiv@divisor+1,w
  7114     0DBE  1C03               	skipc
  7115     0DBF  03F3               	decf	i1___awdiv@dividend+1,f
  7116     0DC0  02F3               	subwf	i1___awdiv@dividend+1,f
  7117     0DC1                     i1l2900:
  7118     0DC1  1477               	bsf	i1___awdiv@quotient,0
  7119     0DC2                     i1l2902:
  7120     0DC2  3001               	movlw	1
  7121     0DC3                     u226_25:
  7122     0DC3  1003               	clrc
  7123     0DC4  0CF1               	rrf	i1___awdiv@divisor+1,f
  7124     0DC5  0CF0               	rrf	i1___awdiv@divisor,f
  7125     0DC6  3EFF               	addlw	-1
  7126     0DC7  1D03               	skipz
  7127     0DC8  2DC3               	goto	u226_25
  7128     0DC9                     i1l2904:
  7129     0DC9  3001               	movlw	1
  7130     0DCA  02F5               	subwf	i1___awdiv@counter,f
  7131     0DCB  1D03               	btfss	3,2
  7132     0DCC  2DCE               	goto	u227_21
  7133     0DCD  2DCF               	goto	u227_20
  7134     0DCE                     u227_21:
  7135     0DCE  2DAA               	goto	i1l2896
  7136     0DCF                     u227_20:
  7137     0DCF                     i1l2906:
  7138     0DCF  0876               	movf	i1___awdiv@sign,w
  7139     0DD0  1903               	btfsc	3,2
  7140     0DD1  2DD3               	goto	u228_21
  7141     0DD2  2DD4               	goto	u228_20
  7142     0DD3                     u228_21:
  7143     0DD3  2DD9               	goto	i1l2910
  7144     0DD4                     u228_20:
  7145     0DD4                     i1l2908:
  7146     0DD4  09F7               	comf	i1___awdiv@quotient,f
  7147     0DD5  09F8               	comf	i1___awdiv@quotient+1,f
  7148     0DD6  0AF7               	incf	i1___awdiv@quotient,f
  7149     0DD7  1903               	skipnz
  7150     0DD8  0AF8               	incf	i1___awdiv@quotient+1,f
  7151     0DD9                     i1l2910:
  7152     0DD9  0878               	movf	i1___awdiv@quotient+1,w
  7153     0DDA  00F1               	movwf	?i1___awdiv+1
  7154     0DDB  0877               	movf	i1___awdiv@quotient,w
  7155     0DDC  00F0               	movwf	?i1___awdiv
  7156     0DDD                     i1l653:
  7157     0DDD  0008               	return
  7158     0DDE                     __end_ofi1___awdiv:
  7159                           
  7160                           	psect	text40
  7161     0DDE                     __ptext40:	
  7162 ;; *************** function i1_setLED *****************
  7163 ;; Defined at:
  7164 ;;		line 395 in file "main.c"
  7165 ;; Parameters:    Size  Location     Type
  7166 ;;  red             1    wreg     unsigned char 
  7167 ;;  green           1   21[BANK0 ] unsigned char 
  7168 ;;  blue            1   22[BANK0 ] unsigned char 
  7169 ;;  luminosidad     1   23[BANK0 ] unsigned char 
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;  red             1   24[BANK0 ] unsigned char 
  7172 ;; Return value:  Size  Location     Type
  7173 ;;                  1    wreg      void 
  7174 ;; Registers used:
  7175 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7176 ;; Tracked objects:
  7177 ;;		On entry : 0/0
  7178 ;;		On exit  : 0/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7181 ;;      Params:         0       3       0       0       0
  7182 ;;      Locals:         0       1       0       0       0
  7183 ;;      Temps:          0       0       0       0       0
  7184 ;;      Totals:         0       4       0       0       0
  7185 ;;Total ram usage:        4 bytes
  7186 ;; Hardware stack levels used: 1
  7187 ;; Hardware stack levels required when called: 3
  7188 ;; This function calls:
  7189 ;;		i1_cosasSPI
  7190 ;;		i1_escribirMemoria
  7191 ;;		i1_printf
  7192 ;; This function is called by:
  7193 ;;		_TRAT_INT
  7194 ;; This function uses a non-reentrant model
  7195 ;;
  7196                           
  7197     0DDE                     i1_setLED:	
  7198                           ;psect for function i1_setLED
  7199                           
  7200                           
  7201                           ;incstack = 0
  7202 ;; hardware stack exceeded
  7203                           ; Regs used in i1_setLED: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7204                           ;i1setLED@red stored from wreg
  7205     0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  7206     0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  7207     0DE0  00B8               	movwf	i1setLED@red
  7208     0DE1                     i1l3002:
  7209                           
  7210                           ;main.c: 397:     printf("Iniciar cosas SPI a");
  7211     0DE1  3010               	movlw	low (STR_10| (0+32768))
  7212     0DE2  00A0               	movwf	i1printf@f
  7213     0DE3  3084               	movlw	high (STR_10| (0+32768))
  7214     0DE4  00A1               	movwf	i1printf@f+1
  7215     0DE5  120A  118A  25B0  120A  158A  	fcall	i1_printf
  7216                           
  7217                           ;main.c: 398:     cosasSPI(red, green, blue, luminosidad);
  7218     0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  7219     0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  7220     0DEC  0835               	movf	i1setLED@green,w
  7221     0DED  00AE               	movwf	i1cosasSPI@verd
  7222     0DEE  0836               	movf	i1setLED@blue,w
  7223     0DEF  00AF               	movwf	i1cosasSPI@azu
  7224     0DF0  0837               	movf	i1setLED@luminosidad,w
  7225     0DF1  00B0               	movwf	i1cosasSPI@lumi
  7226     0DF2  0838               	movf	i1setLED@red,w
  7227     0DF3  120A  118A  275C  120A  158A  	fcall	i1_cosasSPI
  7228     0DF8                     i1l3004:
  7229                           
  7230                           ;main.c: 400:     miLED[0] = red;
  7231     0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  7232     0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  7233     0DFA  0838               	movf	i1setLED@red,w
  7234     0DFB  1683               	bsf	3,5	;RP0=1, select bank1
  7235     0DFC  1303               	bcf	3,6	;RP1=0, select bank1
  7236     0DFD  00EC               	movwf	_miLED^(0+128)
  7237     0DFE                     i1l3006:
  7238                           
  7239                           ;main.c: 401:     miLED[1] = green;
  7240     0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  7241     0DFF  1303               	bcf	3,6	;RP1=0, select bank0
  7242     0E00  0835               	movf	i1setLED@green,w
  7243     0E01  1683               	bsf	3,5	;RP0=1, select bank1
  7244     0E02  1303               	bcf	3,6	;RP1=0, select bank1
  7245     0E03  00ED               	movwf	(_miLED^(0+128)+1)
  7246     0E04                     i1l3008:
  7247                           
  7248                           ;main.c: 402:     miLED[2] = blue;
  7249     0E04  1283               	bcf	3,5	;RP0=0, select bank0
  7250     0E05  1303               	bcf	3,6	;RP1=0, select bank0
  7251     0E06  0836               	movf	i1setLED@blue,w
  7252     0E07  1683               	bsf	3,5	;RP0=1, select bank1
  7253     0E08  1303               	bcf	3,6	;RP1=0, select bank1
  7254     0E09  00EE               	movwf	(_miLED^(0+128)+2)
  7255     0E0A                     i1l3010:
  7256                           
  7257                           ;main.c: 403:     miLED[3] = luminosidad;
  7258     0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  7259     0E0B  1303               	bcf	3,6	;RP1=0, select bank0
  7260     0E0C  0837               	movf	i1setLED@luminosidad,w
  7261     0E0D  1683               	bsf	3,5	;RP0=1, select bank1
  7262     0E0E  1303               	bcf	3,6	;RP1=0, select bank1
  7263     0E0F  00EF               	movwf	(_miLED^(0+128)+3)
  7264                           
  7265                           ;main.c: 405:     printf("Guardar opcion de led");
  7266     0E10  30E5               	movlw	low (STR_11| (0+32768))
  7267     0E11  1283               	bcf	3,5	;RP0=0, select bank0
  7268     0E12  1303               	bcf	3,6	;RP1=0, select bank0
  7269     0E13  00A0               	movwf	i1printf@f
  7270     0E14  3083               	movlw	high (STR_11| (0+32768))
  7271     0E15  00A1               	movwf	i1printf@f+1
  7272     0E16  120A  118A  25B0  120A  158A  	fcall	i1_printf
  7273     0E1B                     i1l3012:
  7274                           
  7275                           ;main.c: 406:     escribirMemoria(direccionLED, miLED[0]);
  7276     0E1B  1683               	bsf	3,5	;RP0=1, select bank1
  7277     0E1C  1303               	bcf	3,6	;RP1=0, select bank1
  7278     0E1D  086C               	movf	_miLED^(0+128),w
  7279     0E1E  00F1               	movwf	i1escribirMemoria@dato
  7280     0E1F  086B               	movf	_direccionLED^(0+128),w
  7281     0E20  120A  158A  2512  120A  158A  	fcall	i1_escribirMemoria
  7282     0E25                     i1l3014:
  7283                           
  7284                           ;main.c: 407:     escribirMemoria(direccionLED + 1 * sizeof (char), miLED[1]);
  7285     0E25  1683               	bsf	3,5	;RP0=1, select bank1
  7286     0E26  1303               	bcf	3,6	;RP1=0, select bank1
  7287     0E27  086D               	movf	(_miLED^(0+128)+1),w
  7288     0E28  00F1               	movwf	i1escribirMemoria@dato
  7289     0E29  086B               	movf	_direccionLED^(0+128),w
  7290     0E2A  3E01               	addlw	1
  7291     0E2B  120A  158A  2512  120A  158A  	fcall	i1_escribirMemoria
  7292     0E30                     i1l3016:
  7293                           
  7294                           ;main.c: 408:     escribirMemoria(direccionLED + 2 * sizeof (char), miLED[2]);
  7295     0E30  1683               	bsf	3,5	;RP0=1, select bank1
  7296     0E31  1303               	bcf	3,6	;RP1=0, select bank1
  7297     0E32  086E               	movf	(_miLED^(0+128)+2),w
  7298     0E33  00F1               	movwf	i1escribirMemoria@dato
  7299     0E34  086B               	movf	_direccionLED^(0+128),w
  7300     0E35  3E02               	addlw	2
  7301     0E36  120A  158A  2512  120A  158A  	fcall	i1_escribirMemoria
  7302     0E3B                     i1l3018:
  7303                           
  7304                           ;main.c: 409:     escribirMemoria(direccionLED + 3 * sizeof (char), miLED[3]);
  7305     0E3B  1683               	bsf	3,5	;RP0=1, select bank1
  7306     0E3C  1303               	bcf	3,6	;RP1=0, select bank1
  7307     0E3D  086F               	movf	(_miLED^(0+128)+3),w
  7308     0E3E  00F1               	movwf	i1escribirMemoria@dato
  7309     0E3F  086B               	movf	_direccionLED^(0+128),w
  7310     0E40  3E03               	addlw	3
  7311     0E41  120A  158A  2512  120A  158A  	fcall	i1_escribirMemoria
  7312     0E46                     i1l261:
  7313     0E46  0008               	return
  7314     0E47                     __end_ofi1_setLED:
  7315                           
  7316                           	psect	text41
  7317     0D12                     __ptext41:	
  7318 ;; *************** function i1_escribirMemoria *****************
  7319 ;; Defined at:
  7320 ;;		line 289 in file "main.c"
  7321 ;; Parameters:    Size  Location     Type
  7322 ;;  direccion       1    wreg     unsigned char 
  7323 ;;  dato            1    1[COMMON] unsigned char 
  7324 ;; Auto vars:     Size  Location     Type
  7325 ;;  direccion       1    4[COMMON] unsigned char 
  7326 ;;  contador        2    5[COMMON] int 
  7327 ;;  confirmado      2    2[COMMON] int 
  7328 ;;  valorSal        2    0        int 
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  2    1[COMMON] int 
  7331 ;; Registers used:
  7332 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7338 ;;      Params:         1       0       0       0       0
  7339 ;;      Locals:         5       0       0       0       0
  7340 ;;      Temps:          0       0       0       0       0
  7341 ;;      Totals:         6       0       0       0       0
  7342 ;;Total ram usage:        6 bytes
  7343 ;; Hardware stack levels used: 1
  7344 ;; Hardware stack levels required when called: 1
  7345 ;; This function calls:
  7346 ;;		i1_leerMemoria
  7347 ;; This function is called by:
  7348 ;;		i1_setPWM
  7349 ;;		i1_setLED
  7350 ;; This function uses a non-reentrant model
  7351 ;;
  7352                           
  7353     0D12                     i1_escribirMemoria:	
  7354                           ;psect for function i1_escribirMemoria
  7355                           
  7356                           
  7357                           ;incstack = 0
  7358 ;; hardware stack exceeded
  7359                           ; Regs used in i1_escribirMemoria: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7360                           ;i1escribirMemoria@direccion stored from wreg
  7361     0D12  00F4               	movwf	i1escribirMemoria@direccion
  7362     0D13                     i1l2774:
  7363                           
  7364                           ;main.c: 290:     int valorSal;;main.c: 291:     EECON1bits.EEPGD = 0;
  7365     0D13  1683               	bsf	3,5	;RP0=1, select bank3
  7366     0D14  1703               	bsf	3,6	;RP1=1, select bank3
  7367     0D15  138C               	bcf	12,7	;volsfr
  7368                           
  7369                           ;main.c: 293:     EECON1bits.WREN = 1;
  7370     0D16  150C               	bsf	12,2	;volsfr
  7371     0D17                     i1l2776:
  7372                           
  7373                           ;main.c: 294:     EEADRH = 0;
  7374     0D17  1283               	bcf	3,5	;RP0=0, select bank2
  7375     0D18  1703               	bsf	3,6	;RP1=1, select bank2
  7376     0D19  018F               	clrf	15	;volatile
  7377     0D1A                     i1l2778:
  7378                           
  7379                           ;main.c: 295:     EEADR = direccion;
  7380     0D1A  0874               	movf	i1escribirMemoria@direccion,w
  7381     0D1B  008D               	movwf	13	;volatile
  7382     0D1C                     i1l2780:
  7383                           
  7384                           ;main.c: 296:     if (EECON1bits.RD == 0) {
  7385     0D1C  1683               	bsf	3,5	;RP0=1, select bank3
  7386     0D1D  1703               	bsf	3,6	;RP1=1, select bank3
  7387     0D1E  180C               	btfsc	12,0	;volsfr
  7388     0D1F  2D21               	goto	u210_21
  7389     0D20  2D22               	goto	u210_20
  7390     0D21                     u210_21:
  7391     0D21  2D76               	goto	i1l2810
  7392     0D22                     u210_20:
  7393     0D22                     i1l2782:
  7394                           
  7395                           ;main.c: 297:         int contador = 0;
  7396     0D22  01F5               	clrf	i1escribirMemoria@contador
  7397     0D23  01F6               	clrf	i1escribirMemoria@contador+1
  7398                           
  7399                           ;main.c: 298:         int confirmado = 0;
  7400     0D24  01F2               	clrf	i1escribirMemoria@confirmado
  7401     0D25  01F3               	clrf	i1escribirMemoria@confirmado+1
  7402                           
  7403                           ;main.c: 299:         while (contador < 10 && confirmado == 0) {
  7404     0D26  2D54               	goto	i1l2800
  7405     0D27                     i1l225:
  7406                           
  7407                           ;main.c: 300:             INTCONbits.GIE = 0;
  7408     0D27  138B               	bcf	11,7	;volatile
  7409     0D28                     i1l2784:
  7410                           
  7411                           ;main.c: 301:             EEDAT = dato;
  7412     0D28  0871               	movf	i1escribirMemoria@dato,w
  7413     0D29  1283               	bcf	3,5	;RP0=0, select bank2
  7414     0D2A  1703               	bsf	3,6	;RP1=1, select bank2
  7415     0D2B  008C               	movwf	12	;volatile
  7416                           
  7417                           ;main.c: 302:             EECON2 = 0x55;
  7418     0D2C  3055               	movlw	85
  7419     0D2D  1683               	bsf	3,5	;RP0=1, select bank3
  7420     0D2E  1703               	bsf	3,6	;RP1=1, select bank3
  7421     0D2F  008D               	movwf	13	;volsfr
  7422                           
  7423                           ;main.c: 303:             EECON2 = 0xAA;
  7424     0D30  30AA               	movlw	170
  7425     0D31  008D               	movwf	13	;volsfr
  7426     0D32                     i1l2786:
  7427                           
  7428                           ;main.c: 304:             EECON1bits.WR = 1;
  7429     0D32  148C               	bsf	12,1	;volsfr
  7430     0D33                     i1l2788:
  7431                           
  7432                           ;main.c: 305:             INTCONbits.GIE = 1;
  7433     0D33  178B               	bsf	11,7	;volatile
  7434     0D34                     i1l2790:	
  7435                           ;main.c: 306:             while (!continuoEscribiendo);
  7436                           
  7437     0D34  1283               	bcf	3,5	;RP0=0, select bank0
  7438     0D35  1303               	bcf	3,6	;RP1=0, select bank0
  7439     0D36  0849               	movf	_continuoEscribiendo,w
  7440     0D37  044A               	iorwf	_continuoEscribiendo+1,w
  7441     0D38  1903               	btfsc	3,2
  7442     0D39  2D3B               	goto	u211_21
  7443     0D3A  2D3C               	goto	u211_20
  7444     0D3B                     u211_21:
  7445     0D3B  2D34               	goto	i1l2790
  7446     0D3C                     u211_20:
  7447     0D3C                     i1l2792:
  7448                           
  7449                           ;main.c: 307:             continuoEscribiendo = 0;
  7450     0D3C  01C9               	clrf	_continuoEscribiendo
  7451     0D3D  01CA               	clrf	_continuoEscribiendo+1
  7452     0D3E                     i1l2794:
  7453                           
  7454                           ;main.c: 308:             if (leerMemoria(direccion) == dato)
  7455     0D3E  0874               	movf	i1escribirMemoria@direccion,w
  7456     0D3F  120A  158A  20F7  120A  158A  	fcall	i1_leerMemoria
  7457     0D44  0671               	xorwf	i1escribirMemoria@dato,w
  7458     0D45  1D03               	skipz
  7459     0D46  2D48               	goto	u212_21
  7460     0D47  2D49               	goto	u212_20
  7461     0D48                     u212_21:
  7462     0D48  2D4E               	goto	i1l2798
  7463     0D49                     u212_20:
  7464     0D49                     i1l2796:
  7465                           
  7466                           ;main.c: 309:                 confirmado = 1;
  7467     0D49  3001               	movlw	1
  7468     0D4A  00F2               	movwf	i1escribirMemoria@confirmado
  7469     0D4B  3000               	movlw	0
  7470     0D4C  00F3               	movwf	i1escribirMemoria@confirmado+1
  7471     0D4D  2D54               	goto	i1l2800
  7472     0D4E                     i1l2798:
  7473                           
  7474                           ;main.c: 311:                 contador++;
  7475     0D4E  3001               	movlw	1
  7476     0D4F  07F5               	addwf	i1escribirMemoria@contador,f
  7477     0D50  1803               	skipnc
  7478     0D51  0AF6               	incf	i1escribirMemoria@contador+1,f
  7479     0D52  3000               	movlw	0
  7480     0D53  07F6               	addwf	i1escribirMemoria@contador+1,f
  7481     0D54                     i1l2800:
  7482                           
  7483                           ;main.c: 299:         while (contador < 10 && confirmado == 0) {
  7484     0D54  0876               	movf	i1escribirMemoria@contador+1,w
  7485     0D55  3A80               	xorlw	128
  7486     0D56  00FF               	movwf	btemp+1
  7487     0D57  3080               	movlw	128
  7488     0D58  027F               	subwf	btemp+1,w
  7489     0D59  1D03               	skipz
  7490     0D5A  2D5D               	goto	u213_25
  7491     0D5B  300A               	movlw	10
  7492     0D5C  0275               	subwf	i1escribirMemoria@contador,w
  7493     0D5D                     u213_25:
  7494     0D5D  1803               	skipnc
  7495     0D5E  2D60               	goto	u213_21
  7496     0D5F  2D61               	goto	u213_20
  7497     0D60                     u213_21:
  7498     0D60  2D67               	goto	i1l2804
  7499     0D61                     u213_20:
  7500     0D61                     i1l2802:
  7501     0D61  0872               	movf	i1escribirMemoria@confirmado,w
  7502     0D62  0473               	iorwf	i1escribirMemoria@confirmado+1,w
  7503     0D63  1903               	btfsc	3,2
  7504     0D64  2D66               	goto	u214_21
  7505     0D65  2D67               	goto	u214_20
  7506     0D66                     u214_21:
  7507     0D66  2D27               	goto	i1l225
  7508     0D67                     u214_20:
  7509     0D67                     i1l2804:
  7510                           
  7511                           ;main.c: 313:         if (contador >= 10) valorSal = 1;
  7512     0D67  0876               	movf	i1escribirMemoria@contador+1,w
  7513     0D68  3A80               	xorlw	128
  7514     0D69  00FF               	movwf	btemp+1
  7515     0D6A  3080               	movlw	128
  7516     0D6B  027F               	subwf	btemp+1,w
  7517     0D6C  1D03               	skipz
  7518     0D6D  2D70               	goto	u215_25
  7519     0D6E  300A               	movlw	10
  7520     0D6F  0275               	subwf	i1escribirMemoria@contador,w
  7521     0D70                     u215_25:
  7522     0D70  1C03               	skipc
  7523     0D71  2D73               	goto	u215_21
  7524     0D72  2D74               	goto	u215_20
  7525     0D73                     u215_21:
  7526     0D73  2D75               	goto	i1l2808
  7527     0D74                     u215_20:
  7528     0D74                     i1l2806:
  7529     0D74  2D76               	goto	i1l237
  7530     0D75                     i1l2808:
  7531     0D75  2D76               	goto	i1l237
  7532     0D76                     i1l2810:
  7533     0D76                     i1l237:
  7534     0D76  0008               	return
  7535     0D77                     __end_ofi1_escribirMemoria:
  7536                           
  7537                           	psect	text42
  7538     08F7                     __ptext42:	
  7539 ;; *************** function i1_leerMemoria *****************
  7540 ;; Defined at:
  7541 ;;		line 276 in file "main.c"
  7542 ;; Parameters:    Size  Location     Type
  7543 ;;  direccion       1    wreg     unsigned char 
  7544 ;; Auto vars:     Size  Location     Type
  7545 ;;  direccion       1    0[COMMON] unsigned char 
  7546 ;; Return value:  Size  Location     Type
  7547 ;;                  1    wreg      unsigned char 
  7548 ;; Registers used:
  7549 ;;		wreg, status,2
  7550 ;; Tracked objects:
  7551 ;;		On entry : 0/0
  7552 ;;		On exit  : 0/0
  7553 ;;		Unchanged: 0/0
  7554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7555 ;;      Params:         0       0       0       0       0
  7556 ;;      Locals:         1       0       0       0       0
  7557 ;;      Temps:          0       0       0       0       0
  7558 ;;      Totals:         1       0       0       0       0
  7559 ;;Total ram usage:        1 bytes
  7560 ;; Hardware stack levels used: 1
  7561 ;; This function calls:
  7562 ;;		Nothing
  7563 ;; This function is called by:
  7564 ;;		i1_escribirMemoria
  7565 ;; This function uses a non-reentrant model
  7566 ;;
  7567                           
  7568     08F7                     i1_leerMemoria:	
  7569                           ;psect for function i1_leerMemoria
  7570                           
  7571                           
  7572                           ;incstack = 0
  7573 ;; hardware stack exceeded
  7574                           ; Regs used in i1_leerMemoria: [wreg+status,2]
  7575                           ;i1leerMemoria@direccion stored from wreg
  7576     08F7  00F0               	movwf	i1leerMemoria@direccion
  7577     08F8                     i1l2504:
  7578                           
  7579                           ;main.c: 277:     EECON1bits.EEPGD = 0;
  7580     08F8  1683               	bsf	3,5	;RP0=1, select bank3
  7581     08F9  1703               	bsf	3,6	;RP1=1, select bank3
  7582     08FA  138C               	bcf	12,7	;volsfr
  7583                           
  7584                           ;main.c: 279:     EECON1bits.WREN = 0;
  7585     08FB  110C               	bcf	12,2	;volsfr
  7586     08FC                     i1l2506:
  7587                           
  7588                           ;main.c: 280:     EEDATH = 0;
  7589     08FC  1283               	bcf	3,5	;RP0=0, select bank2
  7590     08FD  1703               	bsf	3,6	;RP1=1, select bank2
  7591     08FE  018E               	clrf	14	;volatile
  7592                           
  7593                           ;main.c: 281:     EEADRH = 0;
  7594     08FF  018F               	clrf	15	;volatile
  7595     0900                     i1l2508:
  7596                           
  7597                           ;main.c: 282:     EEADR = direccion;
  7598     0900  0870               	movf	i1leerMemoria@direccion,w
  7599     0901  008D               	movwf	13	;volatile
  7600     0902                     i1l2510:
  7601                           
  7602                           ;main.c: 283:     if (EECON1bits.WR == 0)
  7603     0902  1683               	bsf	3,5	;RP0=1, select bank3
  7604     0903  1703               	bsf	3,6	;RP1=1, select bank3
  7605     0904  188C               	btfsc	12,1	;volsfr
  7606     0905  2907               	goto	u193_21
  7607     0906  2908               	goto	u193_20
  7608     0907                     u193_21:
  7609     0907  2909               	goto	i1l2514
  7610     0908                     u193_20:
  7611     0908                     i1l2512:
  7612                           
  7613                           ;main.c: 284:         EECON1bits.RD = 1;
  7614     0908  140C               	bsf	12,0	;volsfr
  7615     0909                     i1l2514:
  7616                           
  7617                           ;main.c: 286:     return EEDAT;
  7618     0909  1283               	bcf	3,5	;RP0=0, select bank2
  7619     090A  1703               	bsf	3,6	;RP1=1, select bank2
  7620     090B  080C               	movf	12,w	;volatile
  7621     090C                     i1l220:
  7622     090C  0008               	return
  7623     090D                     __end_ofi1_leerMemoria:
  7624                           
  7625                           	psect	text43
  7626     075C                     __ptext43:	
  7627 ;; *************** function i1_cosasSPI *****************
  7628 ;; Defined at:
  7629 ;;		line 371 in file "main.c"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;  roj             1    wreg     unsigned char 
  7632 ;;  verd            1   14[BANK0 ] unsigned char 
  7633 ;;  azu             1   15[BANK0 ] unsigned char 
  7634 ;;  lumi            1   16[BANK0 ] unsigned char 
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;  roj             1   17[BANK0 ] unsigned char 
  7637 ;;  i               2   19[BANK0 ] int 
  7638 ;;  lumo            1   18[BANK0 ] unsigned char 
  7639 ;; Return value:  Size  Location     Type
  7640 ;;                  1    wreg      void 
  7641 ;; Registers used:
  7642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7643 ;; Tracked objects:
  7644 ;;		On entry : 0/0
  7645 ;;		On exit  : 0/0
  7646 ;;		Unchanged: 0/0
  7647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7648 ;;      Params:         0       3       0       0       0
  7649 ;;      Locals:         0       4       0       0       0
  7650 ;;      Temps:          0       0       0       0       0
  7651 ;;      Totals:         0       7       0       0       0
  7652 ;;Total ram usage:        7 bytes
  7653 ;; Hardware stack levels used: 1
  7654 ;; Hardware stack levels required when called: 2
  7655 ;; This function calls:
  7656 ;;		i1_printf
  7657 ;;		i1_spi_write_read
  7658 ;; This function is called by:
  7659 ;;		i1_setLED
  7660 ;; This function uses a non-reentrant model
  7661 ;;
  7662                           
  7663     075C                     i1_cosasSPI:	
  7664                           ;psect for function i1_cosasSPI
  7665                           
  7666                           
  7667                           ;incstack = 0
  7668 ;; hardware stack exceeded
  7669                           ; Regs used in i1_cosasSPI: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7670                           ;i1cosasSPI@roj stored from wreg
  7671     075C  1283               	bcf	3,5	;RP0=0, select bank0
  7672     075D  1303               	bcf	3,6	;RP1=0, select bank0
  7673     075E  00B1               	movwf	i1cosasSPI@roj
  7674     075F                     i1l2814:
  7675                           
  7676                           ;main.c: 372:     int i;;main.c: 373:     char lumo = 0b11100000 + (lumi % 32);
  7677     075F  0830               	movf	i1cosasSPI@lumi,w
  7678     0760  391F               	andlw	31
  7679     0761  3EE0               	addlw	224
  7680     0762  00B2               	movwf	i1cosasSPI@lumo
  7681     0763                     i1l2816:
  7682                           
  7683                           ;main.c: 374:     printf("Escribo en SPI cadena inicial");
  7684     0763  307E               	movlw	low (STR_6| (0+32768))
  7685     0764  00A0               	movwf	i1printf@f
  7686     0765  3083               	movlw	high (STR_6| (0+32768))
  7687     0766  00A1               	movwf	i1printf@f+1
  7688     0767  120A  118A  25B0  120A  118A  	fcall	i1_printf
  7689     076C                     i1l2818:
  7690                           
  7691                           ;main.c: 375:     spi_write_read(0x00);
  7692     076C  3000               	movlw	0
  7693     076D  120A  158A  21F1  120A  118A  	fcall	i1_spi_write_read
  7694     0772                     i1l2820:
  7695                           
  7696                           ;main.c: 376:     spi_write_read(0x00);
  7697     0772  3000               	movlw	0
  7698     0773  120A  158A  21F1  120A  118A  	fcall	i1_spi_write_read
  7699     0778                     i1l2822:
  7700                           
  7701                           ;main.c: 377:     spi_write_read(0x00);
  7702     0778  3000               	movlw	0
  7703     0779  120A  158A  21F1  120A  118A  	fcall	i1_spi_write_read
  7704     077E                     i1l2824:
  7705                           
  7706                           ;main.c: 378:     spi_write_read(0x00);
  7707     077E  3000               	movlw	0
  7708     077F  120A  158A  21F1  120A  118A  	fcall	i1_spi_write_read
  7709     0784                     i1l2826:
  7710                           
  7711                           ;main.c: 379:     for (i = numLedes; i == 0; i--) {
  7712     0784  1683               	bsf	3,5	;RP0=1, select bank1
  7713     0785  1303               	bcf	3,6	;RP1=0, select bank1
  7714     0786  0862               	movf	(_numLedes+1)^(0+128),w
  7715     0787  1283               	bcf	3,5	;RP0=0, select bank0
  7716     0788  1303               	bcf	3,6	;RP1=0, select bank0
  7717     0789  00B4               	movwf	i1cosasSPI@i+1
  7718     078A  1683               	bsf	3,5	;RP0=1, select bank1
  7719     078B  1303               	bcf	3,6	;RP1=0, select bank1
  7720     078C  0861               	movf	_numLedes^(0+128),w
  7721     078D  1283               	bcf	3,5	;RP0=0, select bank0
  7722     078E  1303               	bcf	3,6	;RP1=0, select bank0
  7723     078F  00B3               	movwf	i1cosasSPI@i
  7724     0790                     i1l2828:
  7725     0790  0833               	movf	i1cosasSPI@i,w
  7726     0791  0434               	iorwf	i1cosasSPI@i+1,w
  7727     0792  1903               	btfsc	3,2
  7728     0793  2F95               	goto	u216_21
  7729     0794  2F96               	goto	u216_20
  7730     0795                     u216_21:
  7731     0795  2F97               	goto	i1l2832
  7732     0796                     u216_20:
  7733     0796  2FCD               	goto	i1l2846
  7734     0797                     i1l2832:
  7735                           
  7736                           ;main.c: 380:         printf("Escribo color led %d", i);
  7737     0797  30FB               	movlw	low (STR_7| (0+32768))
  7738     0798  00A0               	movwf	i1printf@f
  7739     0799  3083               	movlw	high (STR_7| (0+32768))
  7740     079A  00A1               	movwf	i1printf@f+1
  7741     079B  0834               	movf	i1cosasSPI@i+1,w
  7742     079C  00A3               	movwf	?i1_printf+3
  7743     079D  0833               	movf	i1cosasSPI@i,w
  7744     079E  00A2               	movwf	?i1_printf+2
  7745     079F  120A  118A  25B0  120A  118A  	fcall	i1_printf
  7746     07A4                     i1l2834:
  7747                           
  7748                           ;main.c: 381:         spi_write_read(lumo);
  7749     07A4  1283               	bcf	3,5	;RP0=0, select bank0
  7750     07A5  1303               	bcf	3,6	;RP1=0, select bank0
  7751     07A6  0832               	movf	i1cosasSPI@lumo,w
  7752     07A7  120A  158A  21F1  120A  118A  	fcall	i1_spi_write_read
  7753     07AC                     i1l2836:
  7754                           
  7755                           ;main.c: 382:         spi_write_read(azu);
  7756     07AC  1283               	bcf	3,5	;RP0=0, select bank0
  7757     07AD  1303               	bcf	3,6	;RP1=0, select bank0
  7758     07AE  082F               	movf	i1cosasSPI@azu,w
  7759     07AF  120A  158A  21F1  120A  118A  	fcall	i1_spi_write_read
  7760     07B4                     i1l2838:
  7761                           
  7762                           ;main.c: 383:         spi_write_read(verd);
  7763     07B4  1283               	bcf	3,5	;RP0=0, select bank0
  7764     07B5  1303               	bcf	3,6	;RP1=0, select bank0
  7765     07B6  082E               	movf	i1cosasSPI@verd,w
  7766     07B7  120A  158A  21F1  120A  118A  	fcall	i1_spi_write_read
  7767     07BC                     i1l2840:
  7768                           
  7769                           ;main.c: 384:         spi_write_read(roj);
  7770     07BC  1283               	bcf	3,5	;RP0=0, select bank0
  7771     07BD  1303               	bcf	3,6	;RP1=0, select bank0
  7772     07BE  0831               	movf	i1cosasSPI@roj,w
  7773     07BF  120A  158A  21F1  120A  118A  	fcall	i1_spi_write_read
  7774     07C4                     i1l2842:
  7775                           
  7776                           ;main.c: 385:     }
  7777     07C4  30FF               	movlw	255
  7778     07C5  1283               	bcf	3,5	;RP0=0, select bank0
  7779     07C6  1303               	bcf	3,6	;RP1=0, select bank0
  7780     07C7  07B3               	addwf	i1cosasSPI@i,f
  7781     07C8  1803               	skipnc
  7782     07C9  0AB4               	incf	i1cosasSPI@i+1,f
  7783     07CA  30FF               	movlw	255
  7784     07CB  07B4               	addwf	i1cosasSPI@i+1,f
  7785     07CC  2F90               	goto	i1l2828
  7786     07CD                     i1l2846:
  7787                           
  7788                           ;main.c: 386:     printf("Escribo en SPI cadena final");
  7789     07CD  309C               	movlw	low (STR_8| (0+32768))
  7790     07CE  00A0               	movwf	i1printf@f
  7791     07CF  3083               	movlw	high (STR_8| (0+32768))
  7792     07D0  00A1               	movwf	i1printf@f+1
  7793     07D1  120A  118A  25B0  120A  118A  	fcall	i1_printf
  7794     07D6                     i1l2848:
  7795                           
  7796                           ;main.c: 387:     spi_write_read(0xFF);
  7797     07D6  30FF               	movlw	255
  7798     07D7  120A  158A  21F1  120A  118A  	fcall	i1_spi_write_read
  7799     07DC                     i1l2850:
  7800                           
  7801                           ;main.c: 388:     spi_write_read(0xFF);
  7802     07DC  30FF               	movlw	255
  7803     07DD  120A  158A  21F1  120A  118A  	fcall	i1_spi_write_read
  7804     07E2                     i1l2852:
  7805                           
  7806                           ;main.c: 389:     spi_write_read(0xFF);
  7807     07E2  30FF               	movlw	255
  7808     07E3  120A  158A  21F1  120A  118A  	fcall	i1_spi_write_read
  7809     07E8                     i1l2854:
  7810                           
  7811                           ;main.c: 390:     spi_write_read(0xFF);
  7812     07E8  30FF               	movlw	255
  7813     07E9  120A  158A  21F1  120A  118A  	fcall	i1_spi_write_read
  7814                           
  7815                           ;main.c: 391:     printf("Exito SPI cadena final");
  7816     07EE  30B8               	movlw	low (STR_9| (0+32768))
  7817     07EF  1283               	bcf	3,5	;RP0=0, select bank0
  7818     07F0  1303               	bcf	3,6	;RP1=0, select bank0
  7819     07F1  00A0               	movwf	i1printf@f
  7820     07F2  3083               	movlw	high (STR_9| (0+32768))
  7821     07F3  00A1               	movwf	i1printf@f+1
  7822     07F4  120A  118A  25B0  120A  118A  	fcall	i1_printf
  7823     07F9                     i1l258:
  7824     07F9  0008               	return
  7825     07FA                     __end_ofi1_cosasSPI:
  7826                           
  7827                           	psect	text44
  7828     09F1                     __ptext44:	
  7829 ;; *************** function i1_spi_write_read *****************
  7830 ;; Defined at:
  7831 ;;		line 8 in file "spi-master-v1.c"
  7832 ;; Parameters:    Size  Location     Type
  7833 ;;  one_byte        1    wreg     unsigned char 
  7834 ;; Auto vars:     Size  Location     Type
  7835 ;;  one_byte        1    2[COMMON] unsigned char 
  7836 ;;  x               1    4[COMMON] unsigned char 
  7837 ;;  answer          1    3[COMMON] unsigned char 
  7838 ;; Return value:  Size  Location     Type
  7839 ;;                  1    wreg      unsigned char 
  7840 ;; Registers used:
  7841 ;;		wreg, status,2, status,0
  7842 ;; Tracked objects:
  7843 ;;		On entry : 0/0
  7844 ;;		On exit  : 0/0
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7847 ;;      Params:         0       0       0       0       0
  7848 ;;      Locals:         3       0       0       0       0
  7849 ;;      Temps:          2       0       0       0       0
  7850 ;;      Totals:         5       0       0       0       0
  7851 ;;Total ram usage:        5 bytes
  7852 ;; Hardware stack levels used: 1
  7853 ;; This function calls:
  7854 ;;		Nothing
  7855 ;; This function is called by:
  7856 ;;		i1_cosasSPI
  7857 ;; This function uses a non-reentrant model
  7858 ;;
  7859                           
  7860     09F1                     i1_spi_write_read:	
  7861                           ;psect for function i1_spi_write_read
  7862                           
  7863                           
  7864                           ;incstack = 0
  7865 ;; hardware stack exceeded
  7866                           ; Regs used in i1_spi_write_read: [wreg+status,2+status,0]
  7867                           ;i1spi_write_read@one_byte stored from wreg
  7868     09F1  00F2               	movwf	i1spi_write_read@one_byte
  7869     09F2                     i1l2518:
  7870                           
  7871                           ;spi-master-v1.c: 8: char spi_write_read(char one_byte);spi-master-v1.c: 9: {;spi-master
      +                          -v1.c: 11:     char answer, x;;spi-master-v1.c: 13:     answer = 0;
  7872     09F2  01F3               	clrf	i1spi_write_read@answer
  7873     09F3                     i1l2520:
  7874                           
  7875                           ;spi-master-v1.c: 15:     for(x = 8; x > 0; x--)
  7876     09F3  3008               	movlw	8
  7877     09F4  00F4               	movwf	i1spi_write_read@x
  7878     09F5                     i1l2526:
  7879                           
  7880                           ;spi-master-v1.c: 16:     {;spi-master-v1.c: 17:         PORTCbits.RC0 = (__bit)((one_by
      +                          te >> (x - 1)) & 0b00000001);
  7881     09F5  0872               	movf	i1spi_write_read@one_byte,w
  7882     09F6  00F0               	movwf	??i1_spi_write_read
  7883     09F7  0874               	movf	i1spi_write_read@x,w
  7884     09F8  3EFF               	addlw	-1
  7885     09F9  3E01               	addlw	1
  7886     09FA  29FD               	goto	u194_24
  7887     09FB                     u194_25:
  7888     09FB  1003               	clrc
  7889     09FC  0CF0               	rrf	??i1_spi_write_read,f
  7890     09FD                     u194_24:
  7891     09FD  3EFF               	addlw	-1
  7892     09FE  1D03               	skipz
  7893     09FF  29FB               	goto	u194_25
  7894     0A00  1870               	btfsc	??i1_spi_write_read,0
  7895     0A01  2A03               	goto	u195_21
  7896     0A02  2A07               	goto	u195_20
  7897     0A03                     u195_21:
  7898     0A03  1283               	bcf	3,5	;RP0=0, select bank0
  7899     0A04  1303               	bcf	3,6	;RP1=0, select bank0
  7900     0A05  1407               	bsf	7,0	;volatile
  7901     0A06  2A0A               	goto	u196_24
  7902     0A07                     u195_20:
  7903     0A07  1283               	bcf	3,5	;RP0=0, select bank0
  7904     0A08  1303               	bcf	3,6	;RP1=0, select bank0
  7905     0A09  1007               	bcf	7,0	;volatile
  7906     0A0A                     u196_24:
  7907     0A0A                     i1l2528:
  7908                           
  7909                           ;spi-master-v1.c: 19:         PORTCbits.RC5 = 1;
  7910     0A0A  1687               	bsf	7,5	;volatile
  7911                           
  7912                           ;spi-master-v1.c: 21:         answer |= (char)PORTAbits.RA5;
  7913     0A0B  0E05               	swapf	5,w	;volatile
  7914     0A0C  00F0               	movwf	??i1_spi_write_read
  7915     0A0D  0C70               	rrf	??i1_spi_write_read,w
  7916     0A0E  3901               	andlw	1
  7917     0A0F  00F1               	movwf	??i1_spi_write_read+1
  7918     0A10  0871               	movf	??i1_spi_write_read+1,w
  7919     0A11  04F3               	iorwf	i1spi_write_read@answer,f
  7920     0A12                     i1l2530:
  7921                           
  7922                           ;spi-master-v1.c: 22:         PORTCbits.RC5 = 0;
  7923     0A12  1287               	bcf	7,5	;volatile
  7924     0A13                     i1l2532:
  7925                           
  7926                           ;spi-master-v1.c: 24:         if(x > 1)
  7927     0A13  3002               	movlw	2
  7928     0A14  0274               	subwf	i1spi_write_read@x,w
  7929     0A15  1C03               	skipc
  7930     0A16  2A18               	goto	u197_21
  7931     0A17  2A19               	goto	u197_20
  7932     0A18                     u197_21:
  7933     0A18  2A1D               	goto	i1l382
  7934     0A19                     u197_20:
  7935     0A19                     i1l2534:
  7936                           
  7937                           ;spi-master-v1.c: 25:             answer = answer << 1;
  7938     0A19  0873               	movf	i1spi_write_read@answer,w
  7939     0A1A  00F0               	movwf	??i1_spi_write_read
  7940     0A1B  0770               	addwf	??i1_spi_write_read,w
  7941     0A1C  00F3               	movwf	i1spi_write_read@answer
  7942     0A1D                     i1l382:
  7943                           
  7944                           ;spi-master-v1.c: 26:     }
  7945     0A1D  3001               	movlw	1
  7946     0A1E  02F4               	subwf	i1spi_write_read@x,f
  7947     0A1F  0874               	movf	i1spi_write_read@x,w
  7948     0A20  1D03               	btfss	3,2
  7949     0A21  2A23               	goto	u198_21
  7950     0A22  2A24               	goto	u198_20
  7951     0A23                     u198_21:
  7952     0A23  29F5               	goto	i1l2526
  7953     0A24                     u198_20:
  7954     0A24                     i1l383:
  7955     0A24  0008               	return
  7956     0A25                     __end_ofi1_spi_write_read:
  7957                           
  7958                           	psect	text45
  7959     05B0                     __ptext45:	
  7960 ;; *************** function i1_printf *****************
  7961 ;; Defined at:
  7962 ;;		line 477 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c"
  7963 ;; Parameters:    Size  Location     Type
  7964 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  7965 ;;		 -> STR_17(98), STR_16(19), STR_15(18), STR_14(7), 
  7966 ;;		 -> STR_13(8), STR_12(15), STR_11(22), STR_10(20), 
  7967 ;;		 -> STR_9(23), STR_8(28), STR_7(21), STR_6(30), 
  7968 ;;		 -> STR_5(14), STR_4(10), STR_3(10), STR_2(11), 
  7969 ;;		 -> STR_1(22), 
  7970 ;; Auto vars:     Size  Location     Type
  7971 ;;  tmpval          4    0        struct .
  7972 ;;  val             2   11[BANK0 ] unsigned int 
  7973 ;;  cp              2    0        PTR const unsigned char 
  7974 ;;  len             2    0        unsigned int 
  7975 ;;  c               1   13[BANK0 ] unsigned char 
  7976 ;;  ap              1   10[BANK0 ] PTR void [1]
  7977 ;;		 -> ?i1_printf(2), ?_printf(2), 
  7978 ;;  prec            1    9[BANK0 ] char 
  7979 ;;  flag            1    8[BANK0 ] unsigned char 
  7980 ;; Return value:  Size  Location     Type
  7981 ;;                  2    0[BANK0 ] int 
  7982 ;; Registers used:
  7983 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7984 ;; Tracked objects:
  7985 ;;		On entry : 0/0
  7986 ;;		On exit  : 0/0
  7987 ;;		Unchanged: 0/0
  7988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7989 ;;      Params:         0       4       0       0       0
  7990 ;;      Locals:         0       6       0       0       0
  7991 ;;      Temps:          0       4       0       0       0
  7992 ;;      Totals:         0      14       0       0       0
  7993 ;;Total ram usage:       14 bytes
  7994 ;; Hardware stack levels used: 1
  7995 ;; Hardware stack levels required when called: 1
  7996 ;; This function calls:
  7997 ;;		i1___lwdiv
  7998 ;;		i1___lwmod
  7999 ;;		i1_putch
  8000 ;; This function is called by:
  8001 ;;		i1_cosasSPI
  8002 ;;		i1_setLED
  8003 ;; This function uses a non-reentrant model
  8004 ;;
  8005                           
  8006     05B0                     i1_printf:	
  8007                           ;psect for function i1_printf
  8008                           
  8009     05B0                     i1l2536:	
  8010                           ;incstack = 0
  8011 ;; hardware stack exceeded
  8012                           ; Regs used in i1_printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8013                           
  8014                           
  8015                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 477: printf(const char * f, .
      +                          ..);/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 478: {;/opt/microchip/xc8/
      +                          v2.40/pic/sources/c90/common/doprnt.c: 479:  va_list ap;;/opt/microchip/xc8/v2.40/pic/so
      +                          urces/c90/common/doprnt.c: 512:  char c;;/opt/microchip/xc8/v2.40/pic/sources/c90/common
      +                          /doprnt.c: 521:  signed char prec;;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprn
      +                          t.c: 525:  unsigned char flag;;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c:
      +                           543:  } tmpval;
  8016     05B0  3022               	movlw	(low ((?i1_printf| 0+2)))& (0+255)
  8017     05B1  1283               	bcf	3,5	;RP0=0, select bank0
  8018     05B2  1303               	bcf	3,6	;RP1=0, select bank0
  8019     05B3  00AA               	movwf	i1printf@ap
  8020                           
  8021                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 553:  while((c = *f++)) {
  8022     05B4  2E91               	goto	i1l2588
  8023     05B5                     i1l2538:
  8024                           
  8025                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 555:   if(c != '%')
  8026     05B5  3025               	movlw	37
  8027     05B6  062D               	xorwf	i1printf@c,w
  8028     05B7  1903               	btfsc	3,2
  8029     05B8  2DBA               	goto	u199_21
  8030     05B9  2DBB               	goto	u199_20
  8031     05BA                     u199_21:
  8032     05BA  2DC2               	goto	i1l2542
  8033     05BB                     u199_20:
  8034     05BB                     i1l2540:
  8035                           
  8036                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 557:   {;/opt/microchip/xc8/v
      +                          2.40/pic/sources/c90/common/doprnt.c: 558:    (putch(c) );
  8037     05BB  082D               	movf	i1printf@c,w
  8038     05BC  120A  158A  2079  120A  118A  	fcall	i1_putch
  8039                           
  8040                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 559:    continue;
  8041     05C1  2E91               	goto	i1l2588
  8042     05C2                     i1l2542:
  8043                           
  8044                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 565:   flag = 0;
  8045     05C2  01A8               	clrf	i1printf@flag
  8046                           
  8047                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 661:   switch(c = *f++) {
  8048     05C3  2DD4               	goto	i1l2552
  8049     05C4                     i1l2544:
  8050                           
  8051                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 825:    c = (char)(*(int *)__
      +                          va_arg((*(int **)ap), (int)0));
  8052     05C4  082A               	movf	i1printf@ap,w
  8053     05C5  0084               	movwf	4
  8054     05C6  1383               	bcf	3,7	;select IRP bank0
  8055     05C7  0800               	movf	0,w
  8056     05C8  00AD               	movwf	i1printf@c
  8057     05C9                     i1l2546:
  8058     05C9  3002               	movlw	2
  8059     05CA  00A4               	movwf	??i1_printf
  8060     05CB  0824               	movf	??i1_printf,w
  8061     05CC  07AA               	addwf	i1printf@ap,f
  8062     05CD                     i1l2548:
  8063                           
  8064                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 835:    (putch(c) );
  8065     05CD  082D               	movf	i1printf@c,w
  8066     05CE  120A  158A  2079  120A  118A  	fcall	i1_putch
  8067                           
  8068                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 836:    continue;
  8069     05D3  2E91               	goto	i1l2588
  8070     05D4                     i1l2552:
  8071     05D4  0821               	movf	i1printf@f+1,w
  8072     05D5  00A5               	movwf	??i1_printf+1
  8073     05D6  0820               	movf	i1printf@f,w
  8074     05D7  00A4               	movwf	??i1_printf
  8075     05D8  0AA0               	incf	i1printf@f,f
  8076     05D9  1903               	skipnz
  8077     05DA  0AA1               	incf	i1printf@f+1,f
  8078     05DB  0825               	movf	??i1_printf+1,w
  8079     05DC  00FF               	movwf	btemp+1
  8080     05DD  0824               	movf	??i1_printf,w
  8081     05DE  0084               	movwf	4
  8082     05DF  120A  118A  2300  120A  118A  	fcall	stringtab
  8083     05E4  00AD               	movwf	i1printf@c
  8084     05E5  00A6               	movwf	??i1_printf+2
  8085     05E6  01A7               	clrf	??i1_printf+3
  8086                           
  8087                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8088                           ; Switch size 1, requested type "simple"
  8089                           ; Number of cases is 1, Range of values is 0 to 0
  8090                           ; switch strategies available:
  8091                           ; Name         Instructions Cycles
  8092                           ; simple_byte            4     3 (average)
  8093                           ; direct_byte           11     8 (fixed)
  8094                           ; jumptable            260     6 (fixed)
  8095                           ;	Chosen strategy is simple_byte
  8096     05E7  0827               	movf	??i1_printf+3,w
  8097     05E8  3A00               	xorlw	0	; case 0
  8098     05E9  1903               	skipnz
  8099     05EA  2DEC               	goto	i1l3968
  8100     05EB  2DCD               	goto	i1l2548
  8101     05EC                     i1l3968:
  8102                           
  8103                           ; Switch size 1, requested type "simple"
  8104                           ; Number of cases is 4, Range of values is 0 to 105
  8105                           ; switch strategies available:
  8106                           ; Name         Instructions Cycles
  8107                           ; simple_byte           13     7 (average)
  8108                           ; jumptable            260     6 (fixed)
  8109                           ;	Chosen strategy is simple_byte
  8110     05EC  0826               	movf	??i1_printf+2,w
  8111     05ED  3A00               	xorlw	0	; case 0
  8112     05EE  1903               	skipnz
  8113     05EF  2EA9               	goto	i1l496
  8114     05F0  3A63               	xorlw	99	; case 99
  8115     05F1  1903               	skipnz
  8116     05F2  2DC4               	goto	i1l2544
  8117     05F3  3A07               	xorlw	7	; case 100
  8118     05F4  1903               	skipnz
  8119     05F5  2DFA               	goto	i1l2554
  8120     05F6  3A0D               	xorlw	13	; case 105
  8121     05F7  1903               	skipnz
  8122     05F8  2DFA               	goto	i1l2554
  8123     05F9  2DCD               	goto	i1l2548
  8124     05FA                     i1l2554:
  8125                           
  8126                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1279:   {;/opt/microchip/xc8/
      +                          v2.40/pic/sources/c90/common/doprnt.c: 1285:     val = (unsigned int)(*(int *)__va_arg((
      +                          *(int **)ap), (int)0));
  8127     05FA  082A               	movf	i1printf@ap,w
  8128     05FB  0084               	movwf	4
  8129     05FC  1383               	bcf	3,7	;select IRP bank0
  8130     05FD  0800               	movf	0,w
  8131     05FE  00AB               	movwf	i1printf@val
  8132     05FF  0A84               	incf	4,f
  8133     0600  0800               	movf	0,w
  8134     0601  00AC               	movwf	i1printf@val+1
  8135     0602                     i1l2556:
  8136     0602  3002               	movlw	2
  8137     0603  00A4               	movwf	??i1_printf
  8138     0604  0824               	movf	??i1_printf,w
  8139     0605  07AA               	addwf	i1printf@ap,f
  8140     0606                     i1l2558:
  8141                           
  8142                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1287:    if((int)val < 0) {
  8143     0606  1FAC               	btfss	i1printf@val+1,7
  8144     0607  2E09               	goto	u200_21
  8145     0608  2E0A               	goto	u200_20
  8146     0609                     u200_21:
  8147     0609  2E13               	goto	i1l2564
  8148     060A                     u200_20:
  8149     060A                     i1l2560:
  8150                           
  8151                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1288:     flag |= 0x03;
  8152     060A  3003               	movlw	3
  8153     060B  00A4               	movwf	??i1_printf
  8154     060C  0824               	movf	??i1_printf,w
  8155     060D  04A8               	iorwf	i1printf@flag,f
  8156     060E                     i1l2562:
  8157                           
  8158                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1289:     val = -val;
  8159     060E  09AB               	comf	i1printf@val,f
  8160     060F  09AC               	comf	i1printf@val+1,f
  8161     0610  0AAB               	incf	i1printf@val,f
  8162     0611  1903               	skipnz
  8163     0612  0AAC               	incf	i1printf@val+1,f
  8164     0613                     i1l2564:
  8165                           
  8166                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1292:   };/opt/microchip/xc8/
      +                          v2.40/pic/sources/c90/common/doprnt.c: 1331:    for(c = 1 ; c != sizeof dpowers/sizeof d
      +                          powers[0] ; c++)
  8167     0613  01AD               	clrf	i1printf@c
  8168     0614  0AAD               	incf	i1printf@c,f
  8169     0615                     i1l2570:
  8170                           
  8171                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1332:     if(val < dpowers[c]
      +                          )
  8172     0615  082D               	movf	i1printf@c,w
  8173     0616  00A4               	movwf	??i1_printf
  8174     0617  0724               	addwf	??i1_printf,w
  8175     0618  3E12               	addlw	low (_dpowers| (0+32768))
  8176     0619  0084               	movwf	4
  8177     061A  3083               	movlw	high (_dpowers| (0+32768))
  8178     061B  1803               	skipnc
  8179     061C  3E01               	addlw	1
  8180     061D  00FF               	movwf	btemp+1
  8181     061E  120A  118A  2300  120A  118A  	fcall	stringtab
  8182     0623  00A5               	movwf	??i1_printf+1
  8183     0624  120A  118A  2300  120A  118A  	fcall	stringtab
  8184     0629  00A6               	movwf	??i1_printf+2
  8185     062A  0826               	movf	??i1_printf+2,w
  8186     062B  022C               	subwf	i1printf@val+1,w
  8187     062C  1D03               	skipz
  8188     062D  2E30               	goto	u201_25
  8189     062E  0825               	movf	??i1_printf+1,w
  8190     062F  022B               	subwf	i1printf@val,w
  8191     0630                     u201_25:
  8192     0630  1803               	skipnc
  8193     0631  2E33               	goto	u201_21
  8194     0632  2E34               	goto	u201_20
  8195     0633                     u201_21:
  8196     0633  2E35               	goto	i1l2574
  8197     0634                     u201_20:
  8198     0634  2E3F               	goto	i1l2576
  8199     0635                     i1l2574:
  8200     0635  3001               	movlw	1
  8201     0636  00A4               	movwf	??i1_printf
  8202     0637  0824               	movf	??i1_printf,w
  8203     0638  07AD               	addwf	i1printf@c,f
  8204     0639  3005               	movlw	5
  8205     063A  062D               	xorwf	i1printf@c,w
  8206     063B  1D03               	btfss	3,2
  8207     063C  2E3E               	goto	u202_21
  8208     063D  2E3F               	goto	u202_20
  8209     063E                     u202_21:
  8210     063E  2E15               	goto	i1l2570
  8211     063F                     u202_20:
  8212     063F                     i1l2576:
  8213                           
  8214                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1448:   {;/opt/microchip/xc8/
      +                          v2.40/pic/sources/c90/common/doprnt.c: 1464:    if(flag & 0x03)
  8215     063F  0828               	movf	i1printf@flag,w
  8216     0640  3903               	andlw	3
  8217     0641  1903               	btfsc	3,2
  8218     0642  2E44               	goto	u203_21
  8219     0643  2E45               	goto	u203_20
  8220     0644                     u203_21:
  8221     0644  2E4B               	goto	i1l2580
  8222     0645                     u203_20:
  8223     0645                     i1l2578:
  8224                           
  8225                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1465:     (putch('-') );
  8226     0645  302D               	movlw	45
  8227     0646  120A  158A  2079  120A  118A  	fcall	i1_putch
  8228     064B                     i1l2580:
  8229                           
  8230                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1495:   };/opt/microchip/xc8/
      +                          v2.40/pic/sources/c90/common/doprnt.c: 1498:   prec = c;
  8231     064B  1283               	bcf	3,5	;RP0=0, select bank0
  8232     064C  1303               	bcf	3,6	;RP1=0, select bank0
  8233     064D  082D               	movf	i1printf@c,w
  8234     064E  00A9               	movwf	i1printf@prec
  8235                           
  8236                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1500:   while(prec--) {
  8237     064F  2E86               	goto	i1l2586
  8238     0650                     i1l2582:
  8239                           
  8240                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1504:    {;/opt/microchip/xc8
      +                          /v2.40/pic/sources/c90/common/doprnt.c: 1515:     c = (val / dpowers[(unsigned char)prec
      +                          ]) % 10 + '0';
  8241     0650  300A               	movlw	10
  8242     0651  00F8               	movwf	i1___lwmod@divisor
  8243     0652  3000               	movlw	0
  8244     0653  00F9               	movwf	i1___lwmod@divisor+1
  8245     0654  0829               	movf	i1printf@prec,w
  8246     0655  00A4               	movwf	??i1_printf
  8247     0656  0724               	addwf	??i1_printf,w
  8248     0657  3E12               	addlw	low (_dpowers| (0+32768))
  8249     0658  0084               	movwf	4
  8250     0659  3083               	movlw	high (_dpowers| (0+32768))
  8251     065A  1803               	skipnc
  8252     065B  3E01               	addlw	1
  8253     065C  00FF               	movwf	btemp+1
  8254     065D  120A  118A  2300  120A  118A  	fcall	stringtab
  8255     0662  00F0               	movwf	i1___lwdiv@divisor
  8256     0663  120A  118A  2300  120A  118A  	fcall	stringtab
  8257     0668  00F1               	movwf	i1___lwdiv@divisor+1
  8258     0669  082C               	movf	i1printf@val+1,w
  8259     066A  00F3               	movwf	i1___lwdiv@dividend+1
  8260     066B  082B               	movf	i1printf@val,w
  8261     066C  00F2               	movwf	i1___lwdiv@dividend
  8262     066D  120A  158A  2351  120A  118A  	fcall	i1___lwdiv
  8263     0672  0871               	movf	?i1___lwdiv+1,w
  8264     0673  00FB               	movwf	i1___lwmod@dividend+1
  8265     0674  0870               	movf	?i1___lwdiv,w
  8266     0675  00FA               	movwf	i1___lwmod@dividend
  8267     0676  120A  158A  2225  120A  118A  	fcall	i1___lwmod
  8268     067B  0878               	movf	?i1___lwmod,w
  8269     067C  3E30               	addlw	48
  8270     067D  1283               	bcf	3,5	;RP0=0, select bank0
  8271     067E  1303               	bcf	3,6	;RP1=0, select bank0
  8272     067F  00AD               	movwf	i1printf@c
  8273     0680                     i1l2584:
  8274                           
  8275                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1549:    };/opt/microchip/xc8
      +                          /v2.40/pic/sources/c90/common/doprnt.c: 1550:    (putch(c) );
  8276     0680  082D               	movf	i1printf@c,w
  8277     0681  120A  158A  2079  120A  118A  	fcall	i1_putch
  8278     0686                     i1l2586:
  8279                           
  8280                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1500:   while(prec--) {
  8281     0686  30FF               	movlw	255
  8282     0687  1283               	bcf	3,5	;RP0=0, select bank0
  8283     0688  1303               	bcf	3,6	;RP1=0, select bank0
  8284     0689  00A4               	movwf	??i1_printf
  8285     068A  0824               	movf	??i1_printf,w
  8286     068B  07A9               	addwf	i1printf@prec,f
  8287     068C  0A29               	incf	i1printf@prec,w
  8288     068D  1D03               	btfss	3,2
  8289     068E  2E90               	goto	u204_21
  8290     068F  2E91               	goto	u204_20
  8291     0690                     u204_21:
  8292     0690  2E50               	goto	i1l2582
  8293     0691                     u204_20:
  8294     0691                     i1l2588:
  8295                           
  8296                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 553:  while((c = *f++)) {
  8297     0691  1283               	bcf	3,5	;RP0=0, select bank0
  8298     0692  1303               	bcf	3,6	;RP1=0, select bank0
  8299     0693  0821               	movf	i1printf@f+1,w
  8300     0694  00A5               	movwf	??i1_printf+1
  8301     0695  0820               	movf	i1printf@f,w
  8302     0696  00A4               	movwf	??i1_printf
  8303     0697  0AA0               	incf	i1printf@f,f
  8304     0698  1903               	skipnz
  8305     0699  0AA1               	incf	i1printf@f+1,f
  8306     069A  0825               	movf	??i1_printf+1,w
  8307     069B  00FF               	movwf	btemp+1
  8308     069C  0824               	movf	??i1_printf,w
  8309     069D  0084               	movwf	4
  8310     069E  120A  118A  2300  120A  118A  	fcall	stringtab
  8311     06A3  00AD               	movwf	i1printf@c
  8312     06A4  082D               	movf	i1printf@c,w
  8313     06A5  1D03               	btfss	3,2
  8314     06A6  2EA8               	goto	u205_21
  8315     06A7  2EA9               	goto	u205_20
  8316     06A8                     u205_21:
  8317     06A8  2DB5               	goto	i1l2538
  8318     06A9                     u205_20:
  8319     06A9                     i1l496:
  8320     06A9  0008               	return
  8321     06AA                     __end_ofi1_printf:
  8322                           
  8323                           	psect	text46
  8324     0879                     __ptext46:	
  8325 ;; *************** function i1_putch *****************
  8326 ;; Defined at:
  8327 ;;		line 234 in file "main.c"
  8328 ;; Parameters:    Size  Location     Type
  8329 ;;  c               1    wreg     unsigned char 
  8330 ;; Auto vars:     Size  Location     Type
  8331 ;;  c               1    0[COMMON] unsigned char 
  8332 ;; Return value:  Size  Location     Type
  8333 ;;                  1    wreg      void 
  8334 ;; Registers used:
  8335 ;;		wreg
  8336 ;; Tracked objects:
  8337 ;;		On entry : 0/0
  8338 ;;		On exit  : 0/0
  8339 ;;		Unchanged: 0/0
  8340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8341 ;;      Params:         0       0       0       0       0
  8342 ;;      Locals:         1       0       0       0       0
  8343 ;;      Temps:          0       0       0       0       0
  8344 ;;      Totals:         1       0       0       0       0
  8345 ;;Total ram usage:        1 bytes
  8346 ;; Hardware stack levels used: 1
  8347 ;; This function calls:
  8348 ;;		Nothing
  8349 ;; This function is called by:
  8350 ;;		i1_printf
  8351 ;; This function uses a non-reentrant model
  8352 ;;
  8353                           
  8354     0879                     i1_putch:	
  8355                           ;psect for function i1_putch
  8356                           
  8357                           
  8358                           ;incstack = 0
  8359 ;; hardware stack exceeded
  8360                           ; Regs used in i1_putch: [wreg]
  8361                           ;i1putch@c stored from wreg
  8362     0879  00F0               	movwf	i1putch@c
  8363     087A                     i1l2280:
  8364     087A                     i1l198:	
  8365                           ;main.c: 238:     }
  8366                           
  8367                           
  8368                           ;main.c: 235:     while (!TXIF && !TXSTAbits.TRMT) {
  8369     087A  1283               	bcf	3,5	;RP0=0, select bank0
  8370     087B  1303               	bcf	3,6	;RP1=0, select bank0
  8371     087C  1A0C               	btfsc	12,4	;volatile
  8372     087D  287F               	goto	u158_21
  8373     087E  2880               	goto	u158_20
  8374     087F                     u158_21:
  8375     087F  2886               	goto	i1l2284
  8376     0880                     u158_20:
  8377     0880                     i1l2282:
  8378     0880  1683               	bsf	3,5	;RP0=1, select bank1
  8379     0881  1303               	bcf	3,6	;RP1=0, select bank1
  8380     0882  1C98               	btfss	24,1	;volatile
  8381     0883  2885               	goto	u159_21
  8382     0884  2886               	goto	u159_20
  8383     0885                     u159_21:
  8384     0885  287A               	goto	i1l198
  8385     0886                     u159_20:
  8386     0886                     i1l2284:
  8387                           
  8388                           ;main.c: 239:     TXREG = c;
  8389     0886  0870               	movf	i1putch@c,w
  8390     0887  1283               	bcf	3,5	;RP0=0, select bank0
  8391     0888  0099               	movwf	25	;volatile
  8392     0889                     i1l203:
  8393     0889  0008               	return
  8394     088A                     __end_ofi1_putch:
  8395                           
  8396                           	psect	text47
  8397     0A25                     __ptext47:	
  8398 ;; *************** function i1___lwmod *****************
  8399 ;; Defined at:
  8400 ;;		line 5 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/lwmod.c"
  8401 ;; Parameters:    Size  Location     Type
  8402 ;;  divisor         2    8[COMMON] unsigned int 
  8403 ;;  dividend        2   10[COMMON] unsigned int 
  8404 ;; Auto vars:     Size  Location     Type
  8405 ;;  counter         1   13[COMMON] unsigned char 
  8406 ;; Return value:  Size  Location     Type
  8407 ;;                  2    8[COMMON] unsigned int 
  8408 ;; Registers used:
  8409 ;;		wreg, status,2, status,0
  8410 ;; Tracked objects:
  8411 ;;		On entry : 0/0
  8412 ;;		On exit  : 0/0
  8413 ;;		Unchanged: 0/0
  8414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8415 ;;      Params:         4       0       0       0       0
  8416 ;;      Locals:         1       0       0       0       0
  8417 ;;      Temps:          1       0       0       0       0
  8418 ;;      Totals:         6       0       0       0       0
  8419 ;;Total ram usage:        6 bytes
  8420 ;; Hardware stack levels used: 1
  8421 ;; This function calls:
  8422 ;;		Nothing
  8423 ;; This function is called by:
  8424 ;;		i1_printf
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           
  8428     0A25                     i1___lwmod:	
  8429                           ;psect for function i1___lwmod
  8430                           
  8431     0A25                     i1l2312:	
  8432                           ;incstack = 0
  8433 ;; hardware stack exceeded
  8434                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  8435                           
  8436     0A25  0878               	movf	i1___lwmod@divisor,w
  8437     0A26  0479               	iorwf	i1___lwmod@divisor+1,w
  8438     0A27  1903               	btfsc	3,2
  8439     0A28  2A2A               	goto	u167_21
  8440     0A29  2A2B               	goto	u167_20
  8441     0A2A                     u167_21:
  8442     0A2A  2A5A               	goto	i1l2330
  8443     0A2B                     u167_20:
  8444     0A2B                     i1l2314:
  8445     0A2B  01FD               	clrf	i1___lwmod@counter
  8446     0A2C  0AFD               	incf	i1___lwmod@counter,f
  8447     0A2D  2A39               	goto	i1l2320
  8448     0A2E                     i1l2316:
  8449     0A2E  3001               	movlw	1
  8450     0A2F                     u168_25:
  8451     0A2F  1003               	clrc
  8452     0A30  0DF8               	rlf	i1___lwmod@divisor,f
  8453     0A31  0DF9               	rlf	i1___lwmod@divisor+1,f
  8454     0A32  3EFF               	addlw	-1
  8455     0A33  1D03               	skipz
  8456     0A34  2A2F               	goto	u168_25
  8457     0A35                     i1l2318:
  8458     0A35  3001               	movlw	1
  8459     0A36  00FC               	movwf	??i1___lwmod
  8460     0A37  087C               	movf	??i1___lwmod,w
  8461     0A38  07FD               	addwf	i1___lwmod@counter,f
  8462     0A39                     i1l2320:
  8463     0A39  1FF9               	btfss	i1___lwmod@divisor+1,7
  8464     0A3A  2A3C               	goto	u169_21
  8465     0A3B  2A3D               	goto	u169_20
  8466     0A3C                     u169_21:
  8467     0A3C  2A2E               	goto	i1l2316
  8468     0A3D                     u169_20:
  8469     0A3D                     i1l2322:
  8470     0A3D  0879               	movf	i1___lwmod@divisor+1,w
  8471     0A3E  027B               	subwf	i1___lwmod@dividend+1,w
  8472     0A3F  1D03               	skipz
  8473     0A40  2A43               	goto	u170_25
  8474     0A41  0878               	movf	i1___lwmod@divisor,w
  8475     0A42  027A               	subwf	i1___lwmod@dividend,w
  8476     0A43                     u170_25:
  8477     0A43  1C03               	skipc
  8478     0A44  2A46               	goto	u170_21
  8479     0A45  2A47               	goto	u170_20
  8480     0A46                     u170_21:
  8481     0A46  2A4D               	goto	i1l2326
  8482     0A47                     u170_20:
  8483     0A47                     i1l2324:
  8484     0A47  0878               	movf	i1___lwmod@divisor,w
  8485     0A48  02FA               	subwf	i1___lwmod@dividend,f
  8486     0A49  0879               	movf	i1___lwmod@divisor+1,w
  8487     0A4A  1C03               	skipc
  8488     0A4B  03FB               	decf	i1___lwmod@dividend+1,f
  8489     0A4C  02FB               	subwf	i1___lwmod@dividend+1,f
  8490     0A4D                     i1l2326:
  8491     0A4D  3001               	movlw	1
  8492     0A4E                     u171_25:
  8493     0A4E  1003               	clrc
  8494     0A4F  0CF9               	rrf	i1___lwmod@divisor+1,f
  8495     0A50  0CF8               	rrf	i1___lwmod@divisor,f
  8496     0A51  3EFF               	addlw	-1
  8497     0A52  1D03               	skipz
  8498     0A53  2A4E               	goto	u171_25
  8499     0A54                     i1l2328:
  8500     0A54  3001               	movlw	1
  8501     0A55  02FD               	subwf	i1___lwmod@counter,f
  8502     0A56  1D03               	btfss	3,2
  8503     0A57  2A59               	goto	u172_21
  8504     0A58  2A5A               	goto	u172_20
  8505     0A59                     u172_21:
  8506     0A59  2A3D               	goto	i1l2322
  8507     0A5A                     u172_20:
  8508     0A5A                     i1l2330:
  8509     0A5A  087B               	movf	i1___lwmod@dividend+1,w
  8510     0A5B  00F9               	movwf	?i1___lwmod+1
  8511     0A5C  087A               	movf	i1___lwmod@dividend,w
  8512     0A5D  00F8               	movwf	?i1___lwmod
  8513     0A5E                     i1l782:
  8514     0A5E  0008               	return
  8515     0A5F                     __end_ofi1___lwmod:
  8516                           
  8517                           	psect	text48
  8518     0B51                     __ptext48:	
  8519 ;; *************** function i1___lwdiv *****************
  8520 ;; Defined at:
  8521 ;;		line 5 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/lwdiv.c"
  8522 ;; Parameters:    Size  Location     Type
  8523 ;;  divisor         2    0[COMMON] unsigned int 
  8524 ;;  dividend        2    2[COMMON] unsigned int 
  8525 ;; Auto vars:     Size  Location     Type
  8526 ;;  quotient        2    5[COMMON] unsigned int 
  8527 ;;  counter         1    7[COMMON] unsigned char 
  8528 ;; Return value:  Size  Location     Type
  8529 ;;                  2    0[COMMON] unsigned int 
  8530 ;; Registers used:
  8531 ;;		wreg, status,2, status,0
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8537 ;;      Params:         4       0       0       0       0
  8538 ;;      Locals:         3       0       0       0       0
  8539 ;;      Temps:          1       0       0       0       0
  8540 ;;      Totals:         8       0       0       0       0
  8541 ;;Total ram usage:        8 bytes
  8542 ;; Hardware stack levels used: 1
  8543 ;; This function calls:
  8544 ;;		Nothing
  8545 ;; This function is called by:
  8546 ;;		i1_printf
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550     0B51                     i1___lwdiv:	
  8551                           ;psect for function i1___lwdiv
  8552                           
  8553     0B51                     i1l2286:	
  8554                           ;incstack = 0
  8555 ;; hardware stack exceeded
  8556                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  8557                           
  8558     0B51  01F5               	clrf	i1___lwdiv@quotient
  8559     0B52  01F6               	clrf	i1___lwdiv@quotient+1
  8560     0B53                     i1l2288:
  8561     0B53  0870               	movf	i1___lwdiv@divisor,w
  8562     0B54  0471               	iorwf	i1___lwdiv@divisor+1,w
  8563     0B55  1903               	btfsc	3,2
  8564     0B56  2B58               	goto	u160_21
  8565     0B57  2B59               	goto	u160_20
  8566     0B58                     u160_21:
  8567     0B58  2B90               	goto	i1l2308
  8568     0B59                     u160_20:
  8569     0B59                     i1l2290:
  8570     0B59  01F7               	clrf	i1___lwdiv@counter
  8571     0B5A  0AF7               	incf	i1___lwdiv@counter,f
  8572     0B5B  2B67               	goto	i1l2296
  8573     0B5C                     i1l2292:
  8574     0B5C  3001               	movlw	1
  8575     0B5D                     u161_25:
  8576     0B5D  1003               	clrc
  8577     0B5E  0DF0               	rlf	i1___lwdiv@divisor,f
  8578     0B5F  0DF1               	rlf	i1___lwdiv@divisor+1,f
  8579     0B60  3EFF               	addlw	-1
  8580     0B61  1D03               	skipz
  8581     0B62  2B5D               	goto	u161_25
  8582     0B63                     i1l2294:
  8583     0B63  3001               	movlw	1
  8584     0B64  00F4               	movwf	??i1___lwdiv
  8585     0B65  0874               	movf	??i1___lwdiv,w
  8586     0B66  07F7               	addwf	i1___lwdiv@counter,f
  8587     0B67                     i1l2296:
  8588     0B67  1FF1               	btfss	i1___lwdiv@divisor+1,7
  8589     0B68  2B6A               	goto	u162_21
  8590     0B69  2B6B               	goto	u162_20
  8591     0B6A                     u162_21:
  8592     0B6A  2B5C               	goto	i1l2292
  8593     0B6B                     u162_20:
  8594     0B6B                     i1l2298:
  8595     0B6B  3001               	movlw	1
  8596     0B6C                     u163_25:
  8597     0B6C  1003               	clrc
  8598     0B6D  0DF5               	rlf	i1___lwdiv@quotient,f
  8599     0B6E  0DF6               	rlf	i1___lwdiv@quotient+1,f
  8600     0B6F  3EFF               	addlw	-1
  8601     0B70  1D03               	skipz
  8602     0B71  2B6C               	goto	u163_25
  8603     0B72  0871               	movf	i1___lwdiv@divisor+1,w
  8604     0B73  0273               	subwf	i1___lwdiv@dividend+1,w
  8605     0B74  1D03               	skipz
  8606     0B75  2B78               	goto	u164_25
  8607     0B76  0870               	movf	i1___lwdiv@divisor,w
  8608     0B77  0272               	subwf	i1___lwdiv@dividend,w
  8609     0B78                     u164_25:
  8610     0B78  1C03               	skipc
  8611     0B79  2B7B               	goto	u164_21
  8612     0B7A  2B7C               	goto	u164_20
  8613     0B7B                     u164_21:
  8614     0B7B  2B83               	goto	i1l2304
  8615     0B7C                     u164_20:
  8616     0B7C                     i1l2300:
  8617     0B7C  0870               	movf	i1___lwdiv@divisor,w
  8618     0B7D  02F2               	subwf	i1___lwdiv@dividend,f
  8619     0B7E  0871               	movf	i1___lwdiv@divisor+1,w
  8620     0B7F  1C03               	skipc
  8621     0B80  03F3               	decf	i1___lwdiv@dividend+1,f
  8622     0B81  02F3               	subwf	i1___lwdiv@dividend+1,f
  8623     0B82                     i1l2302:
  8624     0B82  1475               	bsf	i1___lwdiv@quotient,0
  8625     0B83                     i1l2304:
  8626     0B83  3001               	movlw	1
  8627     0B84                     u165_25:
  8628     0B84  1003               	clrc
  8629     0B85  0CF1               	rrf	i1___lwdiv@divisor+1,f
  8630     0B86  0CF0               	rrf	i1___lwdiv@divisor,f
  8631     0B87  3EFF               	addlw	-1
  8632     0B88  1D03               	skipz
  8633     0B89  2B84               	goto	u165_25
  8634     0B8A                     i1l2306:
  8635     0B8A  3001               	movlw	1
  8636     0B8B  02F7               	subwf	i1___lwdiv@counter,f
  8637     0B8C  1D03               	btfss	3,2
  8638     0B8D  2B8F               	goto	u166_21
  8639     0B8E  2B90               	goto	u166_20
  8640     0B8F                     u166_21:
  8641     0B8F  2B6B               	goto	i1l2298
  8642     0B90                     u166_20:
  8643     0B90                     i1l2308:
  8644     0B90  0876               	movf	i1___lwdiv@quotient+1,w
  8645     0B91  00F1               	movwf	?i1___lwdiv+1
  8646     0B92  0875               	movf	i1___lwdiv@quotient,w
  8647     0B93  00F0               	movwf	?i1___lwdiv
  8648     0B94                     i1l772:
  8649     0B94  0008               	return
  8650     0B95                     __end_ofi1___lwdiv:
  8651     007E                     btemp	set	126	;btemp
  8652     007E                     wtemp0	set	126
  8653                           
  8654                           	psect	idloc
  8655                           
  8656                           ;Config register IDLOC0 @ 0x2000
  8657                           ;	unspecified, using default values
  8658     2000                     	org	8192
  8659     2000  3FFF               	dw	16383
  8660                           
  8661                           ;Config register IDLOC1 @ 0x2001
  8662                           ;	unspecified, using default values
  8663     2001                     	org	8193
  8664     2001  3FFF               	dw	16383
  8665                           
  8666                           ;Config register IDLOC2 @ 0x2002
  8667                           ;	unspecified, using default values
  8668     2002                     	org	8194
  8669     2002  3FFF               	dw	16383
  8670                           
  8671                           ;Config register IDLOC3 @ 0x2003
  8672                           ;	unspecified, using default values
  8673     2003                     	org	8195
  8674     2003  3FFF               	dw	16383
  8675                           
  8676                           	psect	config
  8677                           
  8678                           ;Config register CONFIG1 @ 0x2007
  8679                           ;	Oscillator Selection bits
  8680                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  8681                           ;	Watchdog Timer Enable bit
  8682                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8683                           ;	Power-up Timer Enable bit
  8684                           ;	PWRTE = ON, PWRT enabled
  8685                           ;	RE3/MCLR pin function select bit
  8686                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  8687                           ;	Code Protection bit
  8688                           ;	CP = OFF, Program memory code protection is disabled
  8689                           ;	Data Code Protection bit
  8690                           ;	CPD = OFF, Data memory code protection is disabled
  8691                           ;	Brown Out Reset Selection bits
  8692                           ;	BOREN = OFF, BOR disabled
  8693                           ;	Internal External Switchover bit
  8694                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8695                           ;	Fail-Safe Clock Monitor Enabled bit
  8696                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8697                           ;	Low Voltage Programming Enable bit
  8698                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8699                           ;	In-Circuit Debugger Mode bit
  8700                           ;	DEBUG = OFF, In-Circuit Debugger disabled, RB6/ICSPCLK and RB7/ICSPDAT are general pur
      +                          pose I/O pins
  8701     2007                     	org	8199
  8702     2007  20E2               	dw	8418
  8703                           
  8704                           ;Config register CONFIG2 @ 0x2008
  8705                           ;	Brown-out Reset Selection bit
  8706                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  8707                           ;	Flash Program Memory Self Write Enable bits
  8708                           ;	WRT = OFF, Write protection off
  8709     2008                     	org	8200
  8710     2008  3EFF               	dw	16127

Data Sizes:
    Strings     376
    Constant    10
    Data        40
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     31      61
    BANK1            80     43      80
    BANK3            96      9      19
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 98
		 -> STR_17(CODE[98]), STR_16(CODE[19]), STR_15(CODE[18]), STR_14(CODE[7]), 
		 -> STR_13(CODE[8]), STR_12(CODE[15]), STR_11(CODE[22]), STR_10(CODE[20]), 
		 -> STR_9(CODE[23]), STR_8(CODE[28]), STR_7(CODE[21]), STR_6(CODE[30]), 
		 -> STR_5(CODE[14]), STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[11]), 
		 -> STR_1(CODE[22]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    sp__getLED	PTR unsigned char  size(1) Largest target is 4
		 -> miLED(BANK1[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _TRAT_INT in COMMON

    i1_setPWM->i1___awdiv
    i1_escribirMemoria->i1_leerMemoria
    i1_printf->i1___lwmod
    i1___lwmod->i1___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _TRAT_INT in BANK0

    _TRAT_INT->i1_setLED
    i1_setLED->i1_cosasSPI
    i1_cosasSPI->i1_printf

Critical Paths under _main in BANK1

    _initYo->_printf
    _initActuadoresSegunMemoria->_setLED
    _setPWM->___awdiv
    _setLED->_cosasSPI
    _escribirMemoria->_leerMemoria
    _cosasSPI->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv
    _getnoPrimerArranque->_leerMemoria
    _analisisResto->_setCO2
    _analisisResto->_setLumen
    _setLumen->_i2c_read
    _setCO2->_i2c_read

Critical Paths under _TRAT_INT in BANK1

    None.

Critical Paths under _main in BANK3

    _initActuadoresSegunMemoria->_setLED
    _setLED->_cosasSPI

Critical Paths under _TRAT_INT in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TRAT_INT in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   19679
                                             42 BANK1      1     1      0
                                              7 BANK3      2     2      0
                      _analisisResto
                      _analisisRuido
                           _i2c_stop
         _initActuadoresSegunMemoria
                             _initYo
                             _printf
 ---------------------------------------------------------------------------------
 (1) _initYo                                               0     0      0    3025
                           _init_ADC
                      _init_CCP1_PWM
                           _init_I2C
                           _init_SPI
                          _init_TMR0
                          _init_TMR1
                          _init_TMR2
                       _init_memoria
                          _init_uart
                             _printf
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_memoria                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_TMR2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_TMR0                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_SPI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_I2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_CCP1_PWM                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initActuadoresSegunMemoria                           0     0      0   13320
                _getnoPrimerArranque
                             _printf
                             _setLED
                             _setPWM
 ---------------------------------------------------------------------------------
 (2) _setPWM                                               3     3      0    1670
                                              9 BANK1      3     3      0
                            ___awdiv
                             ___bmul
                    _escribirMemoria
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     226
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     625
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (2) _setLED                                               4     1      3    8464
                                             41 BANK1      1     1      0
                                              4 BANK3      3     0      3
                           _cosasSPI
                    _escribirMemoria
                             _printf
 ---------------------------------------------------------------------------------
 (3) _escribirMemoria                                      8     7      1     726
                                              1 BANK1      6     5      1
                        _leerMemoria
 ---------------------------------------------------------------------------------
 (3) _cosasSPI                                             7     4      3    3760
                                             38 BANK1      3     0      3
                                              0 BANK3      4     4      0
                             _printf
                     _spi_write_read
 ---------------------------------------------------------------------------------
 (4) _spi_write_read                                       5     5      0     208
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (1) _printf                                              32    18     14    3025
                                             14 BANK1     24    10     14
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _getnoPrimerArranque                                  2     2      0     161
                                              1 BANK1      1     1      0
                        _leerMemoria
 ---------------------------------------------------------------------------------
 (4) _leerMemoria                                          1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c_stop                                             0     0      0       0
                          _wait_MSSP
 ---------------------------------------------------------------------------------
 (1) _analisisRuido                                        3     3      0      74
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _analisisResto                                        0     0      0     192
                             _getCO2
                           _getLumen
                             _setCO2
                           _setLumen
 ---------------------------------------------------------------------------------
 (2) _setLumen                                             2     2      0      96
                                              2 BANK1      2     2      0
                           _i2c_read
                         _i2c_rstart
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _setCO2                                               2     2      0      96
                                              2 BANK1      2     2      0
                           _i2c_read
                         _i2c_rstart
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      31
                                              0 BANK1      1     1      0
                          _wait_MSSP
 ---------------------------------------------------------------------------------
 (3) _i2c_rstart                                           0     0      0       0
                          _wait_MSSP
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             2     2      0      65
                                              0 BANK1      2     2      0
                          _wait_MSSP
 ---------------------------------------------------------------------------------
 (2) _wait_MSSP                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getLumen                                             2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _getCO2                                               2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _TRAT_INT                                             6     6      0    3898
                                             25 BANK0      6     6      0
                           i1_setLED
                           i1_setPWM
 ---------------------------------------------------------------------------------
 (7) i1_setPWM                                             3     3      0     855
                                              9 COMMON     3     3      0
                          i1___awdiv
                           i1___bmul
                  i1_escribirMemoria
 ---------------------------------------------------------------------------------
 (8) i1___bmul                                             4     3      1     118
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (8) i1___awdiv                                            9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (7) i1_setLED                                             4     1      3    3043
                                             21 BANK0      4     1      3
                         i1_cosasSPI
                  i1_escribirMemoria
                           i1_printf
 ---------------------------------------------------------------------------------
 (8) i1_escribirMemoria                                    8     7      1     319
                                              1 COMMON     6     5      1
                      i1_leerMemoria
 ---------------------------------------------------------------------------------
 (9) i1_leerMemoria                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_cosasSPI                                           7     4      3    1435
                                             14 BANK0      7     4      3
                           i1_printf
                   i1_spi_write_read
 ---------------------------------------------------------------------------------
 (9) i1_spi_write_read                                     5     5      0     143
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (8) i1_printf                                            22    18      4    1035
                                              0 BANK0     14    10      4
                          i1___lwdiv
                          i1___lwmod
                            i1_putch
 ---------------------------------------------------------------------------------
 (9) i1_putch                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) i1___lwmod                                            6     2      4     211
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (9) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _analisisResto
     _getCO2
     _getLumen
     _setCO2
       _i2c_read
         _wait_MSSP
       _i2c_rstart
         _wait_MSSP
       _i2c_write
         _wait_MSSP
     _setLumen
       _i2c_read
       _i2c_rstart
       _i2c_write
   _analisisRuido
   _i2c_stop
     _wait_MSSP
   _initActuadoresSegunMemoria
     _getnoPrimerArranque
       _leerMemoria
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
     _setLED
       _cosasSPI
         _printf
         _spi_write_read
       _escribirMemoria
         _leerMemoria
       _printf
     _setPWM
       ___awdiv
       ___bmul
       _escribirMemoria
   _initYo
     _init_ADC
     _init_CCP1_PWM
     _init_I2C
     _init_SPI
     _init_TMR0
     _init_TMR1
     _init_TMR2
     _init_memoria
     _init_uart
     _printf
   _printf

 _TRAT_INT (ROOT)
   i1_setLED
     i1_cosasSPI
       i1_printf
         i1___lwdiv
         i1___lwmod
           i1___lwdiv (ARG)
         i1_putch
       i1_spi_write_read
     i1_escribirMemoria
       i1_leerMemoria
     i1_printf
   i1_setPWM
     i1___awdiv
     i1___bmul
     i1_escribirMemoria

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      9      13       9       19.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     2B      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1F      3D       5       76.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AE      12        0.0%
ABS                  0      0      AE       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 15 15:00:23 2022

                      _ruidoMasAlto 0043                                   _x 004B  
                                 pc 0002                      ___bmul@product 00A2  
                      ___awdiv@sign 00A6                                  fsr 0004  
                               l203 0922                                 l220 0986  
                               l213 0BD8                                 l206 0B50  
                               l216 0812                                 l240 0F1B  
                               l209 0819                                 l225 0FA8  
                               l250 0A99                                 l171 085B  
                               l180 089A                                 l237 0FFF  
                               l261 0F8A                                 l246 09A2  
                               l174 08AB                                 l183 02FD  
                               l272 0CBC                                 l192 096A  
                               l344 0759                                 l353 081A  
                               l281 0D11                                 l177 08CE  
                               l362 083B                                 l258 02E1  
                               l186 0951                                 l355 0820  
                               l371 09B9                                 l195 0845  
                               l356 0821                                 l372 09BA  
                               l276 0C6D                                 l268 0C9A  
                               l373 09C3                                 l365 0832  
                               l189 07FD                                 l198 0910  
                               l382 0B0A                                 l526 0939  
                               l383 0B11                                 l368 0878  
                               l653 0EAF                                 l496 05AF  
                               l772 0C1E                                 l782 0AD5  
                               _PR2 0092                       _emitoSensores 0190  
                               _anI 0054                        ?_leerMemoria 0070  
                               fsr0 0004                   i1_escribirMemoria 0D12  
                               indf 0000                         cosasSPI@azu 00C7  
      ??_initActuadoresSegunMemoria 00CA                         cosasSPI@roj 019A  
                        i1_cosasSPI 075C                  ?i1_escribirMemoria 0071  
            i1leerMemoria@direccion 0070                                l3300 0AB4  
                              l3302 0ABE                                l3320 0982  
                              l3312 096E                                l3304 0AC4  
                              l3400 0B06                                l3402 081A  
                              l3410 086C                                l3322 0983  
                              l3314 0972                                l3306 0ACB  
                              l3330 049F                                l3420 09A7  
                              l3404 082A                                l3412 0870  
                              l3316 0976                                l3308 0AD1  
                              l3260 0916                                l3332 04A6  
                              l3500 02A2                                l3430 09C0  
                              l3422 09AC                                l3406 082D  
                              l3414 0875                                l3318 097C  
                              l3270 0BE6                                l3262 091C  
                              l3350 04F6                                l3334 04A8  
                              l3342 04B8                                l3326 0494  
                              l3510 02C4                                l3502 02AA  
                              l3424 09B2                                l3280 0C0C  
                              l3272 0BED                                l3264 0BD9  
                              l3360 0501                                l3352 04FA  
                              l3344 04E6                                l3336 04AD  
                              l3328 0499                                l3512 02CA  
                              l3440 0F9B                                l3520 092B  
                              l3600 08C5                                l3426 09B7  
                              l3418 09A6                                l3282 0C0D  
                              l3274 0BF1                                l3266 0BDD  
                              l3290 0A9A                                l3258 0910  
                              l3370 053F                                l3354 04FF  
                              l3346 04EE                                l3338 04B1  
                              l3514 02D0                                l3506 02B3  
                              l3450 0FB5                                l3442 0FA1  
                              l3434 0F8E                                l3530 0E47  
                              l3522 092F                                l3610 088D  
                              l3602 08C7                                l3428 09BB  
                              l3700 0BAE                                l3284 0C14  
                              l3276 0BF5                                l3268 0BE3  
                              l3292 0AA2                                l3372 0544  
                              l3364 0529                                l3348 04F2  
                              l3508 02BE                                l3452 0FBD  
                              l3444 0FA9                                l3460 0FD9  
                              l3436 0F92                                l3540 0E59  
                              l3532 0E4A                                l3524 0931  
                              l3516 0926                                l3612 0890  
                              l3604 08CA                                l3620 02E8  
                              l3702 0BC7                                l3710 0987  
                              l3278 0C06                                l3286 0C1A  
                              l3294 0AA5                                l3374 057E  
                              l3366 0533                                l3462 0FE6  
                              l3454 0FBF                                l3446 0FB3  
                              l3470 0FFF                                l3438 0F95  
                              l3550 0E6D                                l3542 0E5E  
                              l3534 0E4E                                l3526 0938  
                              l3518 0927                                l3614 0896  
                              l3606 08CD                                l3630 02F2  
                              l3622 02EB                                l3704 0BD2  
                              l3800 0C27                                l3720 099F  
                              l3712 0987                                l3296 0AAC  
                              l3376 0584                                l3368 0539  
                              l3392 0ADC                                l3384 0AD9  
                              l3480 024E                                l3464 0FEE  
                              l3456 0FCE                                l3448 0FB4  
                              l3560 0E93                                l3552 0E74  
                              l3544 0E62                                l3536 0E53  
                              l3616 0898                                l3608 088A  
                              l3640 093A                                l3632 02F5  
                              l3624 02ED                                l3706 080C  
                              l3810 0C63                                l3802 0C29  
                              l3714 0990                                l3298 0AB0  
                              l3378 058F                                l3394 0AF1  
                              l3386 0ADA                                l3482 0254  
                              l3474 0235                                l3466 0FFD  
                              l3458 0FD3                                l3570 0EAB  
                              l3562 0E94                                l3554 0E78  
                              l3546 0E64                                l3538 0E55  
                              l3730 0A62                                l3650 094E  
                              l3642 093E                                l3634 02F6  
                              l3626 02EE                                l3618 02E2  
                              l3812 0C68                                l3804 0C35  
                              l3716 0995                                l3396 0AFB  
                              l3492 0273                                l3484 025A  
                              l3476 023D                                l3468 0FFE  
                              l3740 0F44                                l3564 0E9B  
                              l3556 0E7C                                l3548 0E6A  
                              l3732 0A87                                l3820 0CDD  
                              l3660 095A                                l3644 0944  
                              l3652 07FA                                l3580 0858  
                              l3636 02F9                                l3628 02EF  
                              l3806 0C41                                l3830 0833  
                              l3726 09A1                                l3718 099A  
                              l3398 0AFE                                l3494 028A  
                              l3486 0260                                l3478 0248  
                              l3750 0F74                                l3742 0F4A  
                              l3558 0E8D                                l3566 0EA1  
                              l3734 0A93                                l3822 0CE3  
                              l3814 0CBD                                l3670 0967  
                              l3662 095B                                l3654 0952  
                              l3646 0947                                l3582 085A  
                              l3574 0850                                l3590 08A4  
                              l3638 02FC                                l3680 0B17  
                              l3808 0C52                                l3832 0836  
                              l3496 0292                                l3488 026C  
                              l3752 0F7F                                l3744 0F50  
                              l3736 0F1F                                l3568 0EA6  
                              l3824 0CF2                                l3816 0CC8  
                              l3672 0968                                l3664 0961  
                              l3656 0956                                l3648 094B  
                              l3576 0854                                l3592 08A5  
                              l3584 089B                                l3760 0EBE  
                              l3840 06D1                                l3690 0813  
                              l3682 0B1D                                l3498 029A  
                              l3746 0F5F                                l3738 0F40  
                              l3826 0CFD                                l3818 0CD2  
                              l3674 0969                                l3666 0963  
                              l3658 0959                                l3578 0857  
                              l3594 08A8                                l3586 08A1  
                              l3770 0EDD                                l3762 0EC3  
                              l3754 0EB0                                l3842 06D4  
                              l3850 06E3                                l3684 0B23  
                              l3748 0F69                                l3828 0D03  
                              l3668 0964                                l3588 08A2  
                              l3596 08BD                                l3676 083C  
                              l3780 0F0D                                l3772 0EE8  
                              l3764 0EC8                                l3756 0EB4  
                              l3860 0754                                l3844 06D9  
                              l3852 06F5                                l3836 06AA  
                              l3694 0B95                                l3686 0B29  
                              l3678 0B12                                l3790 0C82  
                              l3598 08C1                                l3782 0F18  
                              l3774 0EED                                l3766 0ECD  
                              l3758 0EB9                                l3846 06DE  
                              l3854 0742                                l3838 06CB  
                              l3696 0B9A                                l3688 0B37  
                              l3792 0C91                                l3784 0C6E  
                              l3776 0EF8                                l3768 0ED8  
                              l3856 0747                                l3698 0BA0  
                              l3794 0C96                                l3786 0C6E  
                              l3778 0F08                                l3962 06EA  
                              l3858 074C                                l3796 0CAD  
                              l3788 0C7D                                l3964 04D8  
                              l3798 0C1F                     spi_write_read@x 00A4  
                              STR_1 03CF                                STR_2 0466  
                              STR_3 0471                                STR_4 047B  
                              STR_5 0458                                STR_6 037E  
                              STR_7 03FB                                STR_8 039C  
                              STR_9 03B8                                u3000 0E7C  
                              u3001 0E7B                                u3100 0C7D  
                              u3020 0E8D                                u3101 0C7C  
                              u3021 0E8C                                u3110 0C91  
                              u3111 0C90                                u3015 0E7D  
                              u3120 0CAD                                u3040 0EA1  
                              u3121 0CAC                                u3105 0C79  
                              u3041 0EA0                                u3025 0E89  
                              u3130 0C27                                u3050 0EA6  
                              u3131 0C26                                u3115 0C8D  
                              u3051 0EA5                                u3035 0E95  
                              u3060 0BD2                                u3140 0CD2  
                              u3061 0BD1                                u3125 0CA9  
                              u3141 0CD1                                u3070 0995  
                              u3150 06D1                                u3071 0994  
                              u3151 06D0                                u3080 099A  
                              u3160 0754                                u3081 0999  
                              u3161 0753                                u3090 099F  
                              u2610 0BF5                                u3091 099E  
                              u2611 0BF4                                u2605 0BE7  
                              u2630 0C06                                u2710 0AD1  
                              u2631 0C05                                u2711 0AD0  
                              u2720 0982                                u2721 0981  
                              u2625 0BF6                                u2705 0AC5  
                              u2650 0C1A                                u2570 0916  
                              u2730 049F                                u2810 0AEE  
                              u2651 0C19                                u2635 0C02  
                              u2571 0915                                u2731 049E  
                              u2811 0AEA                                u2660 0AA2  
                              u2580 091C                                u2740 04F6  
                              u2804 0AE4                                u2900 0FE6  
                              u2645 0C0E                                u2661 0AA1  
                              u2581 091B                                u2741 04F5  
                              u2805 0AE2                                u2901 0FE5  
                              u2590 0BE3                                u2750 0528  
                              u2830 0B06                                u2910 0FEE  
                              u2591 0BE2                                u2751 0527  
                              u2831 0B05                                u2911 0FED  
                              u2680 0AB4                                u2760 0533  
                              u2840 0B11                                u2824 0AF1  
                              u2920 0FFD                                u2681 0AB3  
                              u2761 0532                                u2841 0B10  
                              u2921 0FFC                                u2905 0FE2  
                              u2850 0820                                u2690 0ABE  
                              u2770 0539                                u2930 0272  
                              u2851 081F                                u2691 0ABD  
                              u2675 0AA6                                u2771 0538  
                              u2755 0524                                u2931 0271  
                              u2860 09B7                                u2780 058F  
                              u2940 092B                                u2861 09B6  
                              u2781 058E                                u2925 0FF9  
                              u2941 092A                                u2790 05AF  
                              u2870 0FA1                                u2950 0938  
                              u2695 0ABA                                u2791 05AE  
                              u2871 0FA0                                u2951 0937  
                              u2880 0FBD                                u2960 0E4E  
                              u2881 0FBC                                u2961 0E4D  
                              u2890 0FCE                                u2970 0E59  
                              u2891 0FCD                                u2971 0E58  
                              u2980 0E6A                                u2981 0E69  
                              u2995 0E6E                                _TMR0 0001  
                              _TXIF 0064              __end_of_spi_write_read 0B12  
                              _pPWM 004E                 ??i1_escribirMemoria 0072  
                              _main 06AA                                btemp 007E  
                              start 0012                        cosasSPI@lumi 00C8  
                      cosasSPI@lumo 019B                        cosasSPI@verd 00C6  
                   __end_ofi1_putch 088A                   ___bmul@multiplier 00A3  
         __end_ofi1_escribirMemoria 0D77                               ?_main 0070  
                    i1___awdiv@sign 0076                     __end_of___awdiv 0EB0  
                             _EEADR 010D                               STR_10 0410  
                             _EEDAT 010C                               STR_11 03E5  
                             STR_12 0449                               STR_13 0485  
                             STR_14 048D                               STR_15 0437  
                             STR_16 0424                               STR_17 031C  
                             _ANSEL 0188                     ___awdiv@divisor 00A0  
                   __end_of___lwdiv 0C1F                               i1l203 0889  
                             i1l220 090C                               i1l301 017D  
                             i1l310 0225                               i1l311 018D  
                             i1l225 0D27                               i1l313 021F  
                             i1l250 09F0                               i1l237 0D76  
                             i1l261 0E46                               i1l309 0187  
                             i1l329 0225                     __end_of___lwmod 0AD6  
                             i1l258 07F9                               i1l291 011E  
                             i1l198 087A                               i1l382 0A1D  
                             i1l526 08F6                               i1l294 0115  
                             i1l286 00B2                               i1l383 0A24  
                             i1l297 0114                               i1l299 0129  
                             i1l653 0DDD                               i1l496 06A9  
                             i1l772 0B94                               i1l782 0A5E  
                   ___awdiv@counter 00A5                               _RCREG 001A  
                             _TMR1H 000F                               _TMR1L 000E  
                             _SPBRG 0099                               _TRISA 0085  
                             _TRISB 0086                               _TRISC 0087  
                             _TXREG 0019                  i1___lwmod@dividend 007A  
                             _elPR2 0056                               _miLED 00EC  
                   __end_of_dpowers 031C                    __end_of_TRAT_INT 0232  
                             _valor 00CB                               _putch 090D  
                  __end_ofi1___bmul 08F7                leerMemoria@direccion 00A0  
                             pclath 000A                     ?_spi_write_read 0070  
                      main@ruidoAux 00CA                               status 0003  
                             wtemp0 007E                    __end_ofi1_setLED 0E47  
                  __end_ofi1_setPWM 09F1                       setPWM@porcent 00AB  
                  __end_ofi1_printf 06AA                          i1printf@ap 002A  
                   __initialization 0015                      i1cosasSPI@lumi 0030  
                    i1cosasSPI@lumo 0032                      i1cosasSPI@verd 002E  
                      __end_of_main 075C                          _i2c_rstart 082A  
                       i1cosasSPI@i 0033                    __end_of_i2c_read 09C4  
                  __end_of_i2c_stop 083C                       _init_CCP1_PWM 088A  
             __end_of_analisisResto 0C6E               __end_of_analisisRuido 0CBD  
                            ??_main 01A1                         ?i1_cosasSPI 002E  
                            _ADRESH 001E                              _EEADRH 010F  
                            _ADRESL 009E                              _EEDATH 010E  
                            _CCPR1L 0015                              _EECON2 018D  
                  ___awdiv@dividend 00A2                              ?_putch 0070  
                            i1l3000 09EC                              i1l3010 0E0A  
                            i1l3002 0DE1                              i1l2300 0B7C  
                            i1l3012 0E1B                              i1l3004 0DF8  
                            i1l3100 01B3                              i1l3020 0052  
                            i1l2302 0B82                              i1l3014 0E25  
                            i1l3006 0DFE                              i1l3110 01EF  
                            i1l3102 01CE                              i1l3030 008A  
                            i1l3022 0056                              i1l2304 0B83  
                            i1l2320 0A39                              i1l2312 0A25  
                            u200_20 060A                              i1l3016 0E30  
                            i1l3008 0E04                              i1l3112 01F2  
                            i1l3104 01DD                              i1l3040 00B6  
                            i1l3032 0099                              i1l3024 0070  
                            u200_21 0609                              i1l2306 0B8A  
                            i1l2322 0A3D                              i1l2314 0A2B  
                            i1l2330 0A5A                              i1l3018 0E3B  
                            i1l3114 01F7                              i1l3106 01E1  
                            i1l3122 0204                              i1l3050 00E1  
                            i1l3042 00C4                              i1l3034 00A3  
                            i1l3026 0074                              i1l2308 0B90  
                            i1l2324 0A47                              i1l2316 0A2E  
                            i1l3124 0223                              i1l3116 01FC  
                            i1l3108 01E8                              i1l3060 0122  
                            i1l3052 00F3                              i1l3044 00C8  
                            i1l3028 007A                              i1l3036 00A8  
                            i1l2326 0A4D                              i1l2318 0A35  
                            i1l2510 0902                              i1l3118 0201  
                            i1l3070 014A                              i1l3062 0125  
                            i1l3054 0100                              i1l3046 00D5  
                            i1l3038 00B0                              i1l2328 0A54  
                            i1l2280 087A                              u201_20 0634  
                            i1l2520 09F3                              i1l2512 0908  
                            i1l2504 08F8                              i1l3072 0152  
                            i1l3064 012D                              i1l3056 0118  
                            i1l3048 00D9                              u201_21 0633  
                            i1l2290 0B59                              i1l2282 0880  
                            i1l2530 0A12                              i1l2514 0909  
                            i1l2506 08FC                              i1l3090 0191  
                            i1l3082 0173                              i1l3074 015D  
                            i1l3066 012E                              i1l3058 011C  
                            i1l2292 0B5C                              i1l2284 0886  
                            i1l2540 05BB                              i1l2532 0A13  
                            i1l2508 0900                              i1l3092 0192  
                            i1l3084 0181                              i1l3076 0164  
                            i1l3068 013D                              u201_25 0630  
                            i1l2294 0B63                              i1l2286 0B51  
                            i1l2542 05C2                              i1l2534 0A19  
                            i1l2526 09F5                              i1l2518 09F2  
                            i1l3094 019F                              i1l3086 0182  
                            i1l3078 016F                              i1l2296 0B67  
                            i1l2288 0B53                              u202_20 063F  
                            i1l2560 060A                              i1l2544 05C4  
                            i1l2552 05D4                              i1l2536 05B0  
                            i1l2528 0A0A                              i1l2800 0D54  
                            u210_20 0D22                              i1l3096 01A7  
                            i1l3088 018B                              u202_21 063E  
                            u210_21 0D21                              i1l2298 0B6B  
                            i1l2570 0615                              i1l2562 060E  
                            i1l2554 05FA                              i1l2546 05C9  
                            i1l2538 05B5                              i1l2802 0D61  
                            i1l2810 0D76                              i1l3098 01AD  
                            i1l2580 064B                              i1l2564 0613  
                            i1l2556 0602                              i1l2548 05CD  
                            i1l2820 0772                              i1l2804 0D67  
                            i1l2900 0DC1                              i1l2582 0650  
                            i1l2574 0635                              i1l2558 0606  
                            i1l2822 0778                              i1l2814 075F  
                            i1l2806 0D74                              i1l2910 0DD9  
                            i1l2902 0DC2                              i1l2584 0680  
                            u203_20 0645                              i1l2576 063F  
                            i1l2840 07BC                              i1l2832 0797  
                            i1l2824 077E                              i1l2816 0763  
                            i1l2808 0D75                              u211_20 0D3C  
                            i1l2904 0DC9                              u203_21 0644  
                            u211_21 0D3B                              i1l2586 0686  
                            i1l2578 0645                              i1l2850 07DC  
                            i1l2842 07C4                              i1l2834 07A4  
                            i1l2826 0784                              i1l2818 076C  
                            i1l2906 0DCF                              i1l2588 0691  
                            i1l2852 07E2                              i1l2836 07AC  
                            i1l2828 0790                              i1l2780 0D1C  
                            i1l2908 0DD4                              i1l2860 08E8  
                            i1l2854 07E8                              i1l2838 07B4  
                            i1l2846 07CD                              i1l2790 0D34  
                            i1l2782 0D22                              i1l2774 0D13  
                            i1l2870 0D77                              i1l2862 08EC  
                            u204_20 0691                              i1l2848 07D6  
                            u212_20 0D49                              i1l2792 0D3C  
                            i1l2784 0D28                              i1l2776 0D17  
                            i1l2880 0D87                              u220_20 0D87  
                            i1l2872 0D78                              i1l2864 08EE  
                            i1l2856 08E3                              u204_21 0690  
                            u212_21 0D48                              u220_21 0D86  
                            i1l2794 0D3E                              i1l2786 0D32  
                            i1l2778 0D1A                              i1l2890 0D9B  
                            i1l2882 0D8C                              i1l2874 0D7C  
                            i1l2866 08F5                              i1l2858 08E4  
                            i1l2796 0D49                              i1l2788 0D33  
                            i1l2892 0DA2                              i1l2884 0D90  
                            i1l2876 0D81                              i1l2798 0D4E  
                            i1l2894 0DA6                              i1l2886 0D92  
                            i1l2878 0D83                              u205_20 06A9  
                            u213_20 0D61                              i1l2896 0DAA  
                            i1l2888 0D98                              u221_20 0D98  
                            u205_21 06A8                              u213_21 0D60  
                            u221_21 0D97                              i1l2898 0DBB  
                            i1l2996 09C5                              u213_25 0D5D  
                            i1l2998 09E4                              i1l3966 020E  
                            i1l3968 05EC                              u214_20 0D67  
                            u214_21 0D66                              u222_25 0D9C  
                            u215_20 0D74                              u223_20 0DAA  
                            u215_21 0D73                              u223_21 0DA9  
                            u215_25 0D70                              u160_20 0B59  
                            u216_20 0796                              u240_20 00F3  
                            u160_21 0B58                              u216_21 0795  
                            u240_21 00F2                              u224_25 0DAB  
                            u240_25 00EF                              u225_20 0DBB  
                            u217_20 08E8                              u241_20 0100  
                            u225_21 0DBA                              u217_21 08E7  
                            u241_21 00FF                              u161_25 0B5D  
                            u225_25 0DB7                              u241_25 00FC  
                            u162_20 0B6B                              u170_20 0A47  
                            u218_20 08F5                              u250_20 0191  
                            u242_20 0114                              u234_20 0056  
                            u162_21 0B6A                              u170_21 0A46  
                            u218_21 08F4                              u250_21 0190  
                            u242_21 0113                              u234_21 0055  
                            u170_25 0A43                              u226_25 0DC3  
                            u242_25 0110                              u227_20 0DCF  
                            u219_20 0D7C                              u251_20 019F  
                            u243_20 0122                              u235_20 0070  
                            u227_21 0DCE                              u219_21 0D7B  
                            u251_21 019E                              u243_21 0121  
                            u235_21 006F                              u163_25 0B6C  
                            u171_25 0A4E                              u251_25 019B  
                            u235_25 006C                              u164_20 0B7C  
                            u172_20 0A5A                              u228_20 0DD4  
                            u252_20 01B3                              u244_20 012D  
                            u236_20 0099                              u164_21 0B7B  
                            u172_21 0A59                              u228_21 0DD3  
                            u252_21 01B2                              u244_21 012C  
                            u236_21 0098                              u164_25 0B78  
                            u236_25 0095                              u253_20 01DD  
                            u245_20 014A                              u237_20 00B6  
                            u253_21 01DC                              u245_21 0149  
                            u237_21 00B5                              u165_25 0B84  
                            u253_25 01D9                              u245_25 0146  
                            u166_20 0B90                              u158_20 0880  
                            u254_20 0223                              u246_20 0152  
                            u238_20 00C4                              u166_21 0B8F  
                            u158_21 087F                              u254_21 0222  
                            u246_21 0151                              u238_21 00C3  
                            u238_25 00C0                              u167_20 0A2B  
                            u159_20 0886                              u247_20 0164  
                            u239_20 00D5                              u167_21 0A2A  
                            u159_21 0885                              u247_21 0163  
                            u239_21 00D4                              u239_25 00D1  
                            u248_20 0181                              u248_21 0180  
                            u168_25 0A2F                              u169_20 0A3D  
                            u193_20 0908                              u249_20 018B  
                            u169_21 0A3C                              u193_21 0907  
                            u249_21 018A                              u194_24 09FD  
                            u194_25 09FB                              u195_20 0A07  
                            u195_21 0A03                              u196_24 0A0A  
                            u197_20 0A19                              u197_21 0A18  
                            u198_20 0A24                              u198_21 0A23  
                            u199_20 05BB                              u199_21 05BA  
                            _OSCCON 008F                           ??i1_putch 0070  
                            _SPBRGH 009A                              _SSPADD 0093  
                            _SSPBUF 0013                 _porcentajeSubenBaja 0058  
                     ?_init_memoria 0070                         i1setLED@red 0038  
                 ??_escribirMemoria 00A2                    __end_of_getLumen 081A  
                  __end_of_cosasSPI 02E2                              ___bmul 0923  
                            _getCO2 080C                           ??___awdiv 00A4  
                  __end_of_init_I2C 0952                    __end_of_init_ADC 096B  
                         ??___lwdiv 00A4                           ??___lwmod 00AC  
                  __end_of_init_SPI 07FE                              _copias 00D7  
                            _setCO2 0B95                              _initYo 0EB0  
                            _setLED 0F1C                         setLED@green 019E  
                    ?_init_CCP1_PWM 0070                              _setPWM 0A5F  
                  ___awdiv@quotient 00A7                              _printf 0494  
                  __end_of_setLumen 0B51                   __end_ofi1___awdiv 0DDE  
__end_of_initActuadoresSegunMemoria 0D12          _initActuadoresSegunMemoria 0CBD  
                 __end_ofi1___lwdiv 0B95                   __end_ofi1___lwmod 0A5F  
               i1setLED@luminosidad 0037                 escribirMemoria@dato 00A1  
                            saved_w 007E                              putch@c 00A0  
                    ??_init_memoria 00A0             __end_of__initialization 004E  
               ___bmul@multiplicand 00A0                         i1printf@val 002B  
                 analisisRuido@temp 00A2                      __pcstackCOMMON 0070  
                       ?_i2c_rstart 0070                        __pidataBANK0 085C  
                      __pidataBANK1 08AC                        __pidataBANK3 0846  
                   i1setPWM@porcent 007B                           ?_TRAT_INT 0070  
                     __end_of_putch 0923                           ?i1___bmul 0070  
                  i1_spi_write_read 09F1                   __end_of_i2c_write 0879  
                    _OPTION_REGbits 0081                           ?i1_setLED 0035  
                         ?i1_setPWM 0070                       i1_leerMemoria 08F7  
                         ?i1_printf 0020                    i1___bmul@product 0072  
                           ??_putch 00A0                          __pbssBANK0 003F  
                        __pbssBANK1 00CB                           ?_i2c_read 0070  
                         ?_i2c_stop 0070            i1spi_write_read@one_byte 0072  
            i1spi_write_read@answer 0073                          __pmaintext 06AA  
                           ?___bmul 00A0                             ?_getCO2 00A0  
                   ??_init_CCP1_PWM 00A0                          __pintentry 0004  
                        ??_TRAT_INT 0039                             ?_setCO2 0070  
                           ?_initYo 0070                             ?_setLED 019E  
                           ?_setPWM 0070                          ??i1___bmul 0071  
                           ?_printf 00AE                  i1___awdiv@dividend 0072  
                    ?i1_leerMemoria 0070                          ??i1_setLED 007E  
                        ??i1_setPWM 0079                          ??i1_printf 0024  
         escribirMemoria@confirmado 00A2                    ??_spi_write_read 00A0  
                         ?_getLumen 00A0                           ?_cosasSPI 00C6  
                      i1setLED@blue 0036                          __stringtab 0300  
          escribirMemoria@direccion 00A4                           ?_init_I2C 0070  
                         ?_init_ADC 0070                          ??_i2c_read 00A0  
                 _leoADCHumedadTemp 0052                           ?_init_SPI 0070  
                           i1_putch 0879                          ??_i2c_stop 00A0  
                         ?_setLumen 0070                  i1___awdiv@quotient 0077  
              spi_write_read@answer 00A3                             _anINext 00D9  
                     _deboContinuar 00E9                             ___awdiv 0E47  
                           ___lwdiv 0BD9                             ___lwmod 0A9A  
                      _direccionLED 00EB                        _direccionPWM 005A  
                         _ANSELbits 0188                             __ptext1 0EB0  
                           __ptext2 02E2                             __ptext3 083C  
                           __ptext4 08BD                             __ptext5 089B  
                           __ptext6 0850                             __ptext7 07FA  
                           __ptext8 093A                             __ptext9 088A  
                           _copias1 003F                   __end_of_init_TMR0 085C  
                 __end_of_init_TMR1 08AC                   __end_of_init_TMR2 08CF  
              __end_of_init_memoria 0846                           _T1CONbits 0010  
                           _dpowers 0312                   i1___lwdiv@divisor 0070  
                         _T2CONbits 0012                   i1___lwdiv@counter 0077  
        i1escribirMemoria@direccion 0074                   __end_of_init_uart 02FE  
               i1___bmul@multiplier 0073                        ??i1_cosasSPI 007E  
                   _escribirMemoria 0F8B                          ??_getLumen 00A2  
                           clrloop0 0823                          ??_cosasSPI 00C9  
              end_of_initialization 004E                          ??_init_I2C 00A0  
                        ??_init_ADC 00A0                          ??_init_SPI 00A0  
                 __end_of_wait_MSSP 0822                  i2c_read@master_ack 00A0  
                        ??_setLumen 00A2         i1escribirMemoria@confirmado 0072  
                         _RCSTAbits 0018                             printf@c 00C5  
                           printf@f 00AE                  __end_ofi1_cosasSPI 07FA  
                      __pstringtext 0300                          _porcentaje 004C  
                         _PORTAbits 0005                           _PORTCbits 0007  
                   ??i1_leerMemoria 0070         ?_initActuadoresSegunMemoria 0070  
                 _emitirMisSensores 00DB                           _TRISCbits 0087  
                        _ruidoMedio 00E3                           i1___awdiv 0D77  
                         i1___lwdiv 0B51                           i1___lwmod 0A25  
                       _CCP1CONbits 0017            __end_ofi1_spi_write_read 0A25  
                         _TXSTAbits 0098                 _getnoPrimerArranque 0987  
                      i1printf@flag 0028                        i1printf@prec 0029  
                      ??_i2c_rstart 00A0                      __end_of___bmul 093A  
                    __end_of_getCO2 0813                         _BAUDCTLbits 0187  
                 i1___lwmod@divisor 0078                      __end_of_setCO2 0BD9  
           __end_of_escribirMemoria 1000                      __end_of_initYo 0F1C  
                    __end_of_setLED 0F8B                   i1___lwmod@counter 007D  
                    __end_of_setPWM 0A9A                ?_getnoPrimerArranque 0070  
                     ??_leerMemoria 00A0                      __end_of_printf 05B0  
               start_initialization 0015                           i1printf@c 002D  
                         i1printf@f 0020                       i1cosasSPI@azu 002F  
                     i1cosasSPI@roj 0031                          ?i1___awdiv 0070  
                         _i2c_write 0869                          ?i1___lwdiv 0070  
                        ?i1___lwmod 0078                  __end_of_i2c_rstart 0833  
                          ??___bmul 00A1                          setLED@blue 019F  
                          ??_getCO2 00A2                          init_fetch0 08CF  
            spi_write_read@one_byte 00A2                         __pdataBANK0 0050  
                       __pdataBANK1 00DF                         __pdataBANK3 0190  
                  _direccionInicial 004F                            ??_setCO2 00A2  
                          ??_initYo 00C6                            ??_setLED 00C9  
                          ??_setPWM 00A9                        _los5msen15ms 0050  
                          ??_printf 00BC                        _los5msen1sT0 00DF  
             ??_getnoPrimerArranque 00A1                       _analisisResto 0C1F  
                     _analisisRuido 0C6E                           ___latbits 0002  
                     __pcstackBANK0 0020                       __pcstackBANK1 00A0  
                     __pcstackBANK3 019A                   i1spi_write_read@x 0074  
                        ?_i2c_write 0070                 __end_of_leerMemoria 0987  
                          ?i1_putch 0070                        _init_memoria 083C  
                  ___lwdiv@dividend 00A2                            ?___awdiv 00A0  
                          ?___lwdiv 00A0                            ?___lwmod 00A8  
                 i1___awdiv@divisor 0070               __end_of_init_CCP1_PWM 089B  
                 i1___awdiv@counter 0075              getnoPrimerArranque@aux 00A1  
                    ?_analisisResto 0070                      ?_analisisRuido 0070  
                  ?_escribirMemoria 00A1                           _continuar 00DD  
                         _eltimer1H 005C                           _eltimer1L 005B  
             i1escribirMemoria@dato 0071             escribirMemoria@contador 00A5  
                 _actualizoLecturas 0041                           _init_TMR0 0850  
                         _init_TMR1 089B                           _init_TMR2 08BD  
                       ??i1___awdiv 0074                    ___lwdiv@quotient 00A6  
                       ??i1___lwdiv 0074                         ??i1___lwmod 007C  
                  i2c_read@I2C_data 00A1                           _init_uart 02E2  
                         _reciboLED 0047                           _reciboPWM 0045  
                 interrupt_function 0004           i1escribirMemoria@contador 0075  
                         clear_ram0 0822                            _PIE1bits 008C  
                          _PIE2bits 008D               i1___bmul@multiplicand 0070  
                         _wait_MSSP 081A                            _PIR1bits 000C  
                          _PIR2bits 000D                            _TRAT_INT 0052  
                         _ruidoBajo 00E5                       i1setLED@green 0035  
                          i1___bmul 08E2                          _ADCON0bits 001F  
                       __stringbase 0312                          _ADCON1bits 009F  
                         cosasSPI@i 019C                          printf@flag 00C0  
                        printf@prec 00C1                         _leerMemoria 096B  
                          i1_setLED 0DDE                            i1_setPWM 09C4  
                          i1_printf 05B0                          ?_init_TMR0 0070  
                        ?_init_TMR1 0070                          ?_init_TMR2 0070  
                       ??_i2c_write 00A0                          ?_init_uart 0070  
                          _i2c_read 09A3                            i1putch@c 0070  
                          _i2c_stop 0833                   ?i1_spi_write_read 0070  
                        _EECON1bits 018C                          ?_wait_MSSP 0070  
                ??i1_spi_write_read 0070                           setLED@red 00C9  
                 i2c_write@I2C_data 00A0                     ??_analisisResto 00A4  
                   ??_analisisRuido 00A0                  __end_of__stringtab 0312  
             __end_ofi1_leerMemoria 090D                     ___lwdiv@divisor 00A0  
                   ___lwdiv@counter 00A5                            __ptext10 0952  
                          __ptext11 0CBD                            __ptext20 090D  
                          __ptext12 0A5F                            __ptext21 0A9A  
                          __ptext13 0923                            __ptext30 0869  
                          __ptext22 0BD9                            __ptext14 0E47  
                          __ptext31 082A                            __ptext23 0987  
                          __ptext15 0F1C                            __ptext40 0DDE  
                          __ptext32 09A3                            __ptext24 096B  
                          __ptext16 0F8B                            __ptext41 0D12  
                          __ptext33 081A                            __ptext25 0833  
                          __ptext17 0232                            __ptext42 08F7  
                          __ptext34 0813                            __ptext26 0C6E  
                          __ptext18 0AD6                            __ptext43 075C  
                          __ptext35 080C                            __ptext27 0C1F  
                          __ptext19 0494                            __ptext44 09F1  
                          __ptext36 0052                            __ptext28 0B12  
                          __ptext45 05B0                            __ptext37 09C4  
                          __ptext29 0B95                            __ptext46 0879  
                          __ptext38 08E2                            __ptext47 0A25  
                          __ptext39 0D77                            __ptext48 0B51  
                          _getLumen 0813                            _cosasSPI 0232  
                          _copias5s 00D5                            _contado1 00E7  
                i1___lwdiv@dividend 0072                            _init_I2C 093A  
                          _init_ADC 0952                            _init_SPI 07FA  
                     _porcentajeMax 0059                       _porcentajeMin 004D  
                 setLED@luminosidad 01A0                            _setLumen 0B12  
                          _numLedes 00E1                            _valorI2C 00D1  
                         printf@val 00C3                  i1___lwdiv@quotient 0075  
                        _INTCONbits 000B                         ??_init_TMR0 00A0  
                       ??_init_TMR1 00A0                         ??_init_TMR2 00A0  
                          init_ram0 08D3                         ??_init_uart 00A0  
                          intlevel1 0000                 _continuoEscribiendo 0049  
                  ___lwmod@dividend 00AA                           stringcode 030A  
                       ??_wait_MSSP 00A0                            printf@ap 00C2  
       __end_of_getnoPrimerArranque 09A3                     ___lwmod@divisor 00A8  
                   ___lwmod@counter 00AD                            stringtab 0300  
                       _porcentajeC 0057                         _SSPCON2bits 0091  
                    _spi_write_read 0AD6                          _SSPCONbits 0014  
