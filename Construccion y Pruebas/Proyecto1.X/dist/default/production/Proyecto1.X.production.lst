

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 22 14:52:18 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	intentry,global,class=CODE,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    67                           	dabs	1,0x7E,2
    68     0000                     
    69                           ; Version 2.40
    70                           ; Generated 17/11/2021 GMT
    71                           ; 
    72                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution. Publication is not required when
    86                           ;        this file is used in an embedded application.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC16F886 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104     0000                     	;# 
   105     0001                     	;# 
   106     0002                     	;# 
   107     0003                     	;# 
   108     0004                     	;# 
   109     0005                     	;# 
   110     0006                     	;# 
   111     0007                     	;# 
   112     0009                     	;# 
   113     000A                     	;# 
   114     000B                     	;# 
   115     000C                     	;# 
   116     000D                     	;# 
   117     000E                     	;# 
   118     000E                     	;# 
   119     000F                     	;# 
   120     0010                     	;# 
   121     0011                     	;# 
   122     0012                     	;# 
   123     0013                     	;# 
   124     0014                     	;# 
   125     0015                     	;# 
   126     0015                     	;# 
   127     0016                     	;# 
   128     0017                     	;# 
   129     0018                     	;# 
   130     0019                     	;# 
   131     001A                     	;# 
   132     001B                     	;# 
   133     001B                     	;# 
   134     001C                     	;# 
   135     001D                     	;# 
   136     001E                     	;# 
   137     001F                     	;# 
   138     0081                     	;# 
   139     0085                     	;# 
   140     0086                     	;# 
   141     0087                     	;# 
   142     0089                     	;# 
   143     008C                     	;# 
   144     008D                     	;# 
   145     008E                     	;# 
   146     008F                     	;# 
   147     0090                     	;# 
   148     0091                     	;# 
   149     0092                     	;# 
   150     0093                     	;# 
   151     0093                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0095                     	;# 
   155     0096                     	;# 
   156     0097                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009A                     	;# 
   160     009B                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     0105                     	;# 
   166     0107                     	;# 
   167     0108                     	;# 
   168     0109                     	;# 
   169     010C                     	;# 
   170     010C                     	;# 
   171     010D                     	;# 
   172     010E                     	;# 
   173     010F                     	;# 
   174     0185                     	;# 
   175     0187                     	;# 
   176     0188                     	;# 
   177     0189                     	;# 
   178     018C                     	;# 
   179     018D                     	;# 
   180     0000                     	;# 
   181     0001                     	;# 
   182     0002                     	;# 
   183     0003                     	;# 
   184     0004                     	;# 
   185     0005                     	;# 
   186     0006                     	;# 
   187     0007                     	;# 
   188     0009                     	;# 
   189     000A                     	;# 
   190     000B                     	;# 
   191     000C                     	;# 
   192     000D                     	;# 
   193     000E                     	;# 
   194     000E                     	;# 
   195     000F                     	;# 
   196     0010                     	;# 
   197     0011                     	;# 
   198     0012                     	;# 
   199     0013                     	;# 
   200     0014                     	;# 
   201     0015                     	;# 
   202     0015                     	;# 
   203     0016                     	;# 
   204     0017                     	;# 
   205     0018                     	;# 
   206     0019                     	;# 
   207     001A                     	;# 
   208     001B                     	;# 
   209     001B                     	;# 
   210     001C                     	;# 
   211     001D                     	;# 
   212     001E                     	;# 
   213     001F                     	;# 
   214     0081                     	;# 
   215     0085                     	;# 
   216     0086                     	;# 
   217     0087                     	;# 
   218     0089                     	;# 
   219     008C                     	;# 
   220     008D                     	;# 
   221     008E                     	;# 
   222     008F                     	;# 
   223     0090                     	;# 
   224     0091                     	;# 
   225     0092                     	;# 
   226     0093                     	;# 
   227     0093                     	;# 
   228     0093                     	;# 
   229     0094                     	;# 
   230     0095                     	;# 
   231     0096                     	;# 
   232     0097                     	;# 
   233     0098                     	;# 
   234     0099                     	;# 
   235     009A                     	;# 
   236     009B                     	;# 
   237     009C                     	;# 
   238     009D                     	;# 
   239     009E                     	;# 
   240     009F                     	;# 
   241     0105                     	;# 
   242     0107                     	;# 
   243     0108                     	;# 
   244     0109                     	;# 
   245     010C                     	;# 
   246     010C                     	;# 
   247     010D                     	;# 
   248     010E                     	;# 
   249     010F                     	;# 
   250     0185                     	;# 
   251     0187                     	;# 
   252     0188                     	;# 
   253     0189                     	;# 
   254     018C                     	;# 
   255     018D                     	;# 
   256     0000                     	;# 
   257     0001                     	;# 
   258     0002                     	;# 
   259     0003                     	;# 
   260     0004                     	;# 
   261     0005                     	;# 
   262     0006                     	;# 
   263     0007                     	;# 
   264     0009                     	;# 
   265     000A                     	;# 
   266     000B                     	;# 
   267     000C                     	;# 
   268     000D                     	;# 
   269     000E                     	;# 
   270     000E                     	;# 
   271     000F                     	;# 
   272     0010                     	;# 
   273     0011                     	;# 
   274     0012                     	;# 
   275     0013                     	;# 
   276     0014                     	;# 
   277     0015                     	;# 
   278     0015                     	;# 
   279     0016                     	;# 
   280     0017                     	;# 
   281     0018                     	;# 
   282     0019                     	;# 
   283     001A                     	;# 
   284     001B                     	;# 
   285     001B                     	;# 
   286     001C                     	;# 
   287     001D                     	;# 
   288     001E                     	;# 
   289     001F                     	;# 
   290     0081                     	;# 
   291     0085                     	;# 
   292     0086                     	;# 
   293     0087                     	;# 
   294     0089                     	;# 
   295     008C                     	;# 
   296     008D                     	;# 
   297     008E                     	;# 
   298     008F                     	;# 
   299     0090                     	;# 
   300     0091                     	;# 
   301     0092                     	;# 
   302     0093                     	;# 
   303     0093                     	;# 
   304     0093                     	;# 
   305     0094                     	;# 
   306     0095                     	;# 
   307     0096                     	;# 
   308     0097                     	;# 
   309     0098                     	;# 
   310     0099                     	;# 
   311     009A                     	;# 
   312     009B                     	;# 
   313     009C                     	;# 
   314     009D                     	;# 
   315     009E                     	;# 
   316     009F                     	;# 
   317     0105                     	;# 
   318     0107                     	;# 
   319     0108                     	;# 
   320     0109                     	;# 
   321     010C                     	;# 
   322     010C                     	;# 
   323     010D                     	;# 
   324     010E                     	;# 
   325     010F                     	;# 
   326     0185                     	;# 
   327     0187                     	;# 
   328     0188                     	;# 
   329     0189                     	;# 
   330     018C                     	;# 
   331     018D                     	;# 
   332     0000                     	;# 
   333     0001                     	;# 
   334     0002                     	;# 
   335     0003                     	;# 
   336     0004                     	;# 
   337     0005                     	;# 
   338     0006                     	;# 
   339     0007                     	;# 
   340     0009                     	;# 
   341     000A                     	;# 
   342     000B                     	;# 
   343     000C                     	;# 
   344     000D                     	;# 
   345     000E                     	;# 
   346     000E                     	;# 
   347     000F                     	;# 
   348     0010                     	;# 
   349     0011                     	;# 
   350     0012                     	;# 
   351     0013                     	;# 
   352     0014                     	;# 
   353     0015                     	;# 
   354     0015                     	;# 
   355     0016                     	;# 
   356     0017                     	;# 
   357     0018                     	;# 
   358     0019                     	;# 
   359     001A                     	;# 
   360     001B                     	;# 
   361     001B                     	;# 
   362     001C                     	;# 
   363     001D                     	;# 
   364     001E                     	;# 
   365     001F                     	;# 
   366     0081                     	;# 
   367     0085                     	;# 
   368     0086                     	;# 
   369     0087                     	;# 
   370     0089                     	;# 
   371     008C                     	;# 
   372     008D                     	;# 
   373     008E                     	;# 
   374     008F                     	;# 
   375     0090                     	;# 
   376     0091                     	;# 
   377     0092                     	;# 
   378     0093                     	;# 
   379     0093                     	;# 
   380     0093                     	;# 
   381     0094                     	;# 
   382     0095                     	;# 
   383     0096                     	;# 
   384     0097                     	;# 
   385     0098                     	;# 
   386     0099                     	;# 
   387     009A                     	;# 
   388     009B                     	;# 
   389     009C                     	;# 
   390     009D                     	;# 
   391     009E                     	;# 
   392     009F                     	;# 
   393     0105                     	;# 
   394     0107                     	;# 
   395     0108                     	;# 
   396     0109                     	;# 
   397     010C                     	;# 
   398     010C                     	;# 
   399     010D                     	;# 
   400     010E                     	;# 
   401     010F                     	;# 
   402     0185                     	;# 
   403     0187                     	;# 
   404     0188                     	;# 
   405     0189                     	;# 
   406     018C                     	;# 
   407     018D                     	;# 
   408                           
   409                           	psect	idataCOMMON
   410     07FD                     __pidataCOMMON:
   411                           
   412                           ;initializer for _eltimer1H
   413     07FD  3461               	retlw	97
   414                           
   415                           	psect	idataBANK0
   416     0C7F                     __pidataBANK0:
   417                           
   418                           ;initializer for _los5msen15ms
   419     0C7F  3403               	retlw	3
   420     0C80  3400               	retlw	0
   421                           
   422                           ;initializer for _numLedes
   423     0C81  340A               	retlw	10
   424     0C82  3400               	retlw	0
   425                           
   426                           ;initializer for _leoADCHumedadTemp
   427     0C83  3402               	retlw	2
   428     0C84  3400               	retlw	0
   429                           
   430                           ;initializer for _anI
   431     0C85  3401               	retlw	1
   432     0C86  3400               	retlw	0
   433                           
   434                           ;initializer for _deboContinuar
   435     0C87  3401               	retlw	1
   436     0C88  3400               	retlw	0
   437                           
   438                           ;initializer for _elPR2
   439     0C89  34A7               	retlw	167
   440                           
   441                           ;initializer for _porcentajeC
   442     0C8A  34A7               	retlw	167
   443                           
   444                           ;initializer for _porcentajeSubenBaja
   445     0C8B  3401               	retlw	1
   446                           
   447                           ;initializer for _porcentajeMax
   448     0C8C  34A7               	retlw	167
   449                           
   450                           ;initializer for _direccionLED
   451     0C8D  3402               	retlw	2
   452                           
   453                           ;initializer for _direccionPWM
   454     0C8E  3401               	retlw	1
   455                           
   456                           ;initializer for _eltimer1L
   457     0C8F  34A9               	retlw	169
   458                           
   459                           ;initializer for _miLED
   460     0C90  34FF               	retlw	255
   461     0C91  34FF               	retlw	255
   462     0C92  34FF               	retlw	255
   463     0C93  341F               	retlw	31
   464                           
   465                           	psect	idataBANK1
   466     0C45                     __pidataBANK1:
   467                           
   468                           ;initializer for _emitoSensores
   469     0C45  34FF               	retlw	255
   470     0C46  34FF               	retlw	255
   471     0C47  34FF               	retlw	255
   472     0C48  34FF               	retlw	255
   473     0C49  34FF               	retlw	255
   474     0C4A  34FF               	retlw	255
   475     0C4B  34FF               	retlw	255
   476     0C4C  34FF               	retlw	255
   477     0C4D  34FF               	retlw	255
   478     0C4E  34FF               	retlw	255
   479                           
   480                           ;initializer for _los5msen1sT0
   481     0C4F  3464               	retlw	100
   482     0C50  3400               	retlw	0
   483                           
   484                           ;initializer for _ruidoMedio
   485     0C51  3484               	retlw	132
   486     0C52  3403               	retlw	3
   487                           
   488                           ;initializer for _ruidoBajo
   489     0C53  3490               	retlw	144
   490     0C54  3401               	retlw	1
   491                           
   492                           ;initializer for _contado1
   493     0C55  34A8               	retlw	168
   494     0C56  3461               	retlw	97
   495                           
   496                           	psect	strings
   497     033D                     __pstrings:
   498     033D                     stringtab:
   499     033D                     __stringtab:
   500     033D                     stringcode:	
   501                           ;	String table - string pointers are 1 byte each
   502                           
   503     033D                     stringdir:
   504     033D  3003               	movlw	high stringdir
   505     033E  008A               	movwf	10
   506     033F  0804               	movf	4,w
   507     0340  0A84               	incf	4,f
   508     0341  0782               	addwf	2,f
   509     0342                     __stringbase:
   510     0342  3400               	retlw	0
   511     0343                     __end_of__stringtab:
   512     0343                     _dpowers:
   513     0343  3401               	retlw	1
   514     0344  3400               	retlw	0
   515     0345  340A               	retlw	10
   516     0346  3400               	retlw	0
   517     0347  3464               	retlw	100
   518     0348  3400               	retlw	0
   519     0349  34E8               	retlw	232
   520     034A  3403               	retlw	3
   521     034B  3410               	retlw	16
   522     034C  3427               	retlw	39
   523     034D                     __end_of_dpowers:
   524     0005                     _PORTAbits	set	5
   525     0007                     _PORTCbits	set	7
   526     0013                     _SSPBUF	set	19
   527     001A                     _RCREG	set	26
   528     001E                     _ADRESH	set	30
   529     0019                     _TXREG	set	25
   530     000D                     _PIR2bits	set	13
   531     001F                     _ADCON0bits	set	31
   532     0014                     _SSPCONbits	set	20
   533     0018                     _RCSTAbits	set	24
   534     0015                     _CCPR1L	set	21
   535     0017                     _CCP1CONbits	set	23
   536     000C                     _PIR1bits	set	12
   537     0012                     _T2CONbits	set	18
   538     0010                     _T1CONbits	set	16
   539     000E                     _TMR1L	set	14
   540     000F                     _TMR1H	set	15
   541     000B                     _INTCONbits	set	11
   542     0001                     _TMR0	set	1
   543     0064                     _TXIF	set	100
   544     0091                     _SSPCON2bits	set	145
   545     009E                     _ADRESL	set	158
   546     0087                     _TRISC	set	135
   547     0086                     _TRISB	set	134
   548     008F                     _OSCCON	set	143
   549     008D                     _PIE2bits	set	141
   550     009F                     _ADCON1bits	set	159
   551     0085                     _TRISA	set	133
   552     0093                     _SSPADD	set	147
   553     0099                     _SPBRG	set	153
   554     009A                     _SPBRGH	set	154
   555     0098                     _TXSTAbits	set	152
   556     0087                     _TRISCbits	set	135
   557     0092                     _PR2	set	146
   558     008C                     _PIE1bits	set	140
   559     0081                     _OPTION_REGbits	set	129
   560     010C                     _EEDAT	set	268
   561     010D                     _EEADR	set	269
   562     010F                     _EEADRH	set	271
   563     010E                     _EEDATH	set	270
   564     018D                     _EECON2	set	397
   565     018C                     _EECON1bits	set	396
   566     0188                     _ANSELbits	set	392
   567     0187                     _BAUDCTLbits	set	391
   568     0188                     _ANSEL	set	392
   569     034D                     STR_5:
   570     034D  3452               	retlw	82	;'R'
   571     034E  3475               	retlw	117	;'u'
   572     034F  3469               	retlw	105	;'i'
   573     0350  3464               	retlw	100	;'d'
   574     0351  346F               	retlw	111	;'o'
   575     0352  3420               	retlw	32	;' '
   576     0353  343D               	retlw	61	;'='
   577     0354  3420               	retlw	32	;' '
   578     0355  3463               	retlw	99	;'c'
   579     0356  3461               	retlw	97	;'a'
   580     0357  3474               	retlw	116	;'t'
   581     0358  3465               	retlw	101	;'e'
   582     0359  3467               	retlw	103	;'g'
   583     035A  346F               	retlw	111	;'o'
   584     035B  3472               	retlw	114	;'r'
   585     035C  3469               	retlw	105	;'i'
   586     035D  3461               	retlw	97	;'a'
   587     035E  3420               	retlw	32	;' '
   588     035F  3425               	retlw	37	;'%'
   589     0360  3464               	retlw	100	;'d'
   590     0361  342C               	retlw	44	;','
   591     0362  3420               	retlw	32	;' '
   592     0363  3468               	retlw	104	;'h'
   593     0364  3475               	retlw	117	;'u'
   594     0365  346D               	retlw	109	;'m'
   595     0366  3465               	retlw	101	;'e'
   596     0367  3464               	retlw	100	;'d'
   597     0368  3461               	retlw	97	;'a'
   598     0369  3464               	retlw	100	;'d'
   599     036A  3420               	retlw	32	;' '
   600     036B  343D               	retlw	61	;'='
   601     036C  3420               	retlw	32	;' '
   602     036D  3425               	retlw	37	;'%'
   603     036E  3464               	retlw	100	;'d'
   604     036F  3420               	retlw	32	;' '
   605     0370  3425               	retlw	37	;'%'
   606     0371  3425               	retlw	37	;'%'
   607     0372  342C               	retlw	44	;','
   608     0373  3420               	retlw	32	;' '
   609     0374  3474               	retlw	116	;'t'
   610     0375  3465               	retlw	101	;'e'
   611     0376  346D               	retlw	109	;'m'
   612     0377  3470               	retlw	112	;'p'
   613     0378  3465               	retlw	101	;'e'
   614     0379  3472               	retlw	114	;'r'
   615     037A  3461               	retlw	97	;'a'
   616     037B  3474               	retlw	116	;'t'
   617     037C  3475               	retlw	117	;'u'
   618     037D  3472               	retlw	114	;'r'
   619     037E  3461               	retlw	97	;'a'
   620     037F  3420               	retlw	32	;' '
   621     0380  343D               	retlw	61	;'='
   622     0381  3420               	retlw	32	;' '
   623     0382  3425               	retlw	37	;'%'
   624     0383  3464               	retlw	100	;'d'
   625     0384  3420               	retlw	32	;' '
   626     0385  3425               	retlw	37	;'%'
   627     0386  3463               	retlw	99	;'c'
   628     0387  3420               	retlw	32	;' '
   629     0388  3443               	retlw	67	;'C'
   630     0389  342C               	retlw	44	;','
   631     038A  3420               	retlw	32	;' '
   632     038B  3443               	retlw	67	;'C'
   633     038C  344F               	retlw	79	;'O'
   634     038D  3432               	retlw	50	;'2'
   635     038E  3420               	retlw	32	;' '
   636     038F  343D               	retlw	61	;'='
   637     0390  3420               	retlw	32	;' '
   638     0391  3425               	retlw	37	;'%'
   639     0392  3464               	retlw	100	;'d'
   640     0393  3420               	retlw	32	;' '
   641     0394  3470               	retlw	112	;'p'
   642     0395  3470               	retlw	112	;'p'
   643     0396  346D               	retlw	109	;'m'
   644     0397  342C               	retlw	44	;','
   645     0398  3420               	retlw	32	;' '
   646     0399  344C               	retlw	76	;'L'
   647     039A  3475               	retlw	117	;'u'
   648     039B  346D               	retlw	109	;'m'
   649     039C  3469               	retlw	105	;'i'
   650     039D  346E               	retlw	110	;'n'
   651     039E  346F               	retlw	111	;'o'
   652     039F  3473               	retlw	115	;'s'
   653     03A0  3469               	retlw	105	;'i'
   654     03A1  3464               	retlw	100	;'d'
   655     03A2  3461               	retlw	97	;'a'
   656     03A3  3464               	retlw	100	;'d'
   657     03A4  3420               	retlw	32	;' '
   658     03A5  343D               	retlw	61	;'='
   659     03A6  3420               	retlw	32	;' '
   660     03A7  3425               	retlw	37	;'%'
   661     03A8  3464               	retlw	100	;'d'
   662     03A9  3420               	retlw	32	;' '
   663     03AA  346C               	retlw	108	;'l'
   664     03AB  3478               	retlw	120	;'x'
   665     03AC  340D               	retlw	13
   666     03AD  340A               	retlw	10
   667     03AE  3400               	retlw	0
   668     03AF                     STR_4:
   669     03AF  3449               	retlw	73	;'I'
   670     03B0  346E               	retlw	110	;'n'
   671     03B1  3469               	retlw	105	;'i'
   672     03B2  3463               	retlw	99	;'c'
   673     03B3  3469               	retlw	105	;'i'
   674     03B4  346F               	retlw	111	;'o'
   675     03B5  3420               	retlw	32	;' '
   676     03B6  3474               	retlw	116	;'t'
   677     03B7  3465               	retlw	101	;'e'
   678     03B8  3472               	retlw	114	;'r'
   679     03B9  346D               	retlw	109	;'m'
   680     03BA  3469               	retlw	105	;'i'
   681     03BB  346E               	retlw	110	;'n'
   682     03BC  3461               	retlw	97	;'a'
   683     03BD  3464               	retlw	100	;'d'
   684     03BE  346F               	retlw	111	;'o'
   685     03BF  340D               	retlw	13
   686     03C0  340A               	retlw	10
   687     03C1  3400               	retlw	0
   688     03C2                     STR_1:
   689     03C2  3450               	retlw	80	;'P'
   690     03C3  3472               	retlw	114	;'r'
   691     03C4  3475               	retlw	117	;'u'
   692     03C5  3465               	retlw	101	;'e'
   693     03C6  3462               	retlw	98	;'b'
   694     03C7  346F               	retlw	111	;'o'
   695     03C8  3420               	retlw	32	;' '
   696     03C9  346D               	retlw	109	;'m'
   697     03CA  3465               	retlw	101	;'e'
   698     03CB  346D               	retlw	109	;'m'
   699     03CC  346F               	retlw	111	;'o'
   700     03CD  3472               	retlw	114	;'r'
   701     03CE  3469               	retlw	105	;'i'
   702     03CF  3461               	retlw	97	;'a'
   703     03D0  3400               	retlw	0
   704     03D1                     STR_2:
   705     03D1  3444               	retlw	68	;'D'
   706     03D2  3465               	retlw	101	;'e'
   707     03D3  3466               	retlw	102	;'f'
   708     03D4  3461               	retlw	97	;'a'
   709     03D5  3475               	retlw	117	;'u'
   710     03D6  346C               	retlw	108	;'l'
   711     03D7  3474               	retlw	116	;'t'
   712     03D8  3400               	retlw	0
   713     03D9                     STR_3:
   714     03D9  3443               	retlw	67	;'C'
   715     03DA  3475               	retlw	117	;'u'
   716     03DB  3473               	retlw	115	;'s'
   717     03DC  3474               	retlw	116	;'t'
   718     03DD  346F               	retlw	111	;'o'
   719     03DE  346D               	retlw	109	;'m'
   720     03DF  3400               	retlw	0
   721                           
   722                           	psect	cinit
   723     0015                     start_initialization:	
   724                           ; #config settings
   725                           
   726     0015                     __initialization:
   727                           
   728                           ; Initialize objects allocated to BANK1
   729     0015  1383               	bcf	3,7	;select IRP bank0
   730     0016  30CC               	movlw	low (__pdataBANK1+18)
   731     0017  00FD               	movwf	btemp+-1
   732     0018  300C               	movlw	high __pidataBANK1
   733     0019  00FE               	movwf	btemp
   734     001A  3045               	movlw	low __pidataBANK1
   735     001B  00FF               	movwf	btemp+1
   736     001C  30BA               	movlw	low __pdataBANK1
   737     001D  0084               	movwf	4
   738     001E  120A  158A  245B  120A  118A  	fcall	init_ram0
   739                           
   740                           ; Initialize objects allocated to BANK0
   741     0023  305D               	movlw	low (__pdataBANK0+21)
   742     0024  00FD               	movwf	btemp+-1
   743     0025  300C               	movlw	high __pidataBANK0
   744     0026  00FE               	movwf	btemp
   745     0027  307F               	movlw	low __pidataBANK0
   746     0028  00FF               	movwf	btemp+1
   747     0029  3048               	movlw	low __pdataBANK0
   748     002A  0084               	movwf	4
   749     002B  120A  158A  245B  120A  118A  	fcall	init_ram0
   750                           
   751                           ; Initialize objects allocated to COMMON
   752     0030  120A  118A  27FD  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   753     0035  00FD               	movwf	__pdataCOMMON& (0+127)
   754                           
   755                           ; Clear objects allocated to BANK1
   756     0036  30A0               	movlw	low __pbssBANK1
   757     0037  0084               	movwf	4
   758     0038  30BA               	movlw	low (__pbssBANK1+26)
   759     0039  120A  158A  23A7  120A  118A  	fcall	clear_ram0
   760                           
   761                           ; Clear objects allocated to BANK0
   762     003E  305D               	movlw	low __pbssBANK0
   763     003F  0084               	movwf	4
   764     0040  3068               	movlw	low (__pbssBANK0+11)
   765     0041  120A  158A  23A7  120A  118A  	fcall	clear_ram0
   766     0046                     end_of_initialization:	
   767                           ;End of C runtime variable initialization code
   768                           
   769     0046                     __end_of__initialization:
   770     0046  0183               	clrf	3
   771     0047  120A  118A  2BE0   	ljmp	_main	;jump to C main() function
   772                           
   773                           	psect	dataCOMMON
   774     007D                     __pdataCOMMON:
   775     007D                     _eltimer1H:
   776     007D                     	ds	1
   777                           
   778                           	psect	bssBANK0
   779     005D                     __pbssBANK0:
   780     005D                     _copias1:
   781     005D                     	ds	2
   782     005F                     _ruidoMasAlto:
   783     005F                     	ds	2
   784     0061                     _reciboLED:
   785     0061                     	ds	2
   786     0063                     _x:
   787     0063                     	ds	1
   788     0064                     _porcentaje:
   789     0064                     	ds	1
   790     0065                     _porcentajeMin:
   791     0065                     	ds	1
   792     0066                     _pPWM:
   793     0066                     	ds	1
   794     0067                     _direccionInicial:
   795     0067                     	ds	1
   796                           
   797                           	psect	dataBANK0
   798     0048                     __pdataBANK0:
   799     0048                     _los5msen15ms:
   800     0048                     	ds	2
   801     004A                     _numLedes:
   802     004A                     	ds	2
   803     004C                     _leoADCHumedadTemp:
   804     004C                     	ds	2
   805     004E                     _anI:
   806     004E                     	ds	2
   807     0050                     _deboContinuar:
   808     0050                     	ds	2
   809     0052                     _elPR2:
   810     0052                     	ds	1
   811     0053                     _porcentajeC:
   812     0053                     	ds	1
   813     0054                     _porcentajeSubenBaja:
   814     0054                     	ds	1
   815     0055                     _porcentajeMax:
   816     0055                     	ds	1
   817     0056                     _direccionLED:
   818     0056                     	ds	1
   819     0057                     _direccionPWM:
   820     0057                     	ds	1
   821     0058                     _eltimer1L:
   822     0058                     	ds	1
   823     0059                     _miLED:
   824     0059                     	ds	4
   825                           
   826                           	psect	bssBANK1
   827     00A0                     __pbssBANK1:
   828     00A0                     _valor:
   829     00A0                     	ds	6
   830     00A6                     _valorI2C:
   831     00A6                     	ds	4
   832     00AA                     _copias5s:
   833     00AA                     	ds	2
   834     00AC                     _copias:
   835     00AC                     	ds	2
   836     00AE                     _actualizoLecturas:
   837     00AE                     	ds	2
   838     00B0                     _anINext:
   839     00B0                     	ds	2
   840     00B2                     _emitirMisSensores:
   841     00B2                     	ds	2
   842     00B4                     _reciboPWM:
   843     00B4                     	ds	2
   844     00B6                     _continuoEscribiendo:
   845     00B6                     	ds	2
   846     00B8                     _continuar:
   847     00B8                     	ds	2
   848                           
   849                           	psect	dataBANK1
   850     00BA                     __pdataBANK1:
   851     00BA                     _emitoSensores:
   852     00BA                     	ds	10
   853     00C4                     _los5msen1sT0:
   854     00C4                     	ds	2
   855     00C6                     _ruidoMedio:
   856     00C6                     	ds	2
   857     00C8                     _ruidoBajo:
   858     00C8                     	ds	2
   859     00CA                     _contado1:
   860     00CA                     	ds	2
   861                           
   862                           	psect	inittext
   863     0C57                     init_fetch0:	
   864                           ;	Called with low address in FSR and high address in W
   865                           
   866     0C57  087E               	movf	btemp,w
   867     0C58  008A               	movwf	10
   868     0C59  087F               	movf	btemp+1,w
   869     0C5A  0082               	movwf	2
   870     0C5B                     init_ram0:	
   871                           ;Called with:
   872                           ;	high address of idata address in btemp 
   873                           ;	low address of idata address in btemp+1 
   874                           ;	low address of data in FSR
   875                           ;	high address + 1 of data in btemp-1
   876                           
   877     0C5B  120A  158A  2457  120A  158A  	fcall	init_fetch0
   878     0C60  0080               	movwf	0
   879     0C61  0A84               	incf	4,f
   880     0C62  0804               	movf	4,w
   881     0C63  067D               	xorwf	btemp+-1,w
   882     0C64  1903               	btfsc	3,2
   883     0C65  3400               	retlw	0
   884     0C66  0AFF               	incf	btemp+1,f
   885     0C67  1903               	btfsc	3,2
   886     0C68  0AFE               	incf	btemp,f
   887     0C69  2C5B               	goto	init_ram0
   888                           
   889                           	psect	clrtext
   890     0BA7                     clear_ram0:	
   891                           ;	Called with FSR containing the base address, and
   892                           ;	W with the last address+1
   893                           
   894     0BA7  0064               	clrwdt	;clear the watchdog before getting into this loop
   895     0BA8                     clrloop0:
   896     0BA8  0180               	clrf	0	;clear RAM location pointed to by FSR
   897     0BA9  0A84               	incf	4,f	;increment pointer
   898     0BAA  0604               	xorwf	4,w	;XOR with final address
   899     0BAB  1903               	btfsc	3,2	;have we reached the end yet?
   900     0BAC  3400               	retlw	0	;all done for this memory range, return
   901     0BAD  0604               	xorwf	4,w	;XOR again to restore value
   902     0BAE  2BA8               	goto	clrloop0	;do the next byte
   903                           
   904                           	psect	cstackBANK1
   905     00CC                     __pcstackBANK1:
   906     00CC                     printf@flag:
   907                           
   908                           ; 1 bytes @ 0x0
   909     00CC                     	ds	1
   910     00CD                     printf@prec:
   911                           
   912                           ; 1 bytes @ 0x1
   913     00CD                     	ds	1
   914     00CE                     printf@ap:
   915                           
   916                           ; 1 bytes @ 0x2
   917     00CE                     	ds	1
   918     00CF                     printf@f:
   919                           
   920                           ; 1 bytes @ 0x3
   921     00CF                     	ds	1
   922     00D0                     printf@val:
   923                           
   924                           ; 2 bytes @ 0x4
   925     00D0                     	ds	2
   926     00D2                     printf@c:
   927                           
   928                           ; 1 bytes @ 0x6
   929     00D2                     	ds	1
   930                           
   931                           	psect	cstackCOMMON
   932     0070                     __pcstackCOMMON:
   933     0070                     ?_i2c_rstart:
   934     0070                     ?_i2c_write:	
   935                           ; 1 bytes @ 0x0
   936                           
   937     0070                     ?_i2c_read:	
   938                           ; 1 bytes @ 0x0
   939                           
   940     0070                     ?_spi_write_read:	
   941                           ; 1 bytes @ 0x0
   942                           
   943     0070                     ?_i2c_stop:	
   944                           ; 1 bytes @ 0x0
   945                           
   946     0070                     ?_init_TMR0:	
   947                           ; 1 bytes @ 0x0
   948                           
   949     0070                     ?_init_TMR1:	
   950                           ; 1 bytes @ 0x0
   951                           
   952     0070                     ?_init_TMR2:	
   953                           ; 1 bytes @ 0x0
   954                           
   955     0070                     ?_init_CCP1_PWM:	
   956                           ; 1 bytes @ 0x0
   957                           
   958     0070                     ?_init_uart:	
   959                           ; 1 bytes @ 0x0
   960                           
   961     0070                     ?_init_I2C:	
   962                           ; 1 bytes @ 0x0
   963                           
   964     0070                     ?_init_SPI:	
   965                           ; 1 bytes @ 0x0
   966                           
   967     0070                     ?_init_ADC:	
   968                           ; 1 bytes @ 0x0
   969                           
   970     0070                     ?_init_memoria:	
   971                           ; 1 bytes @ 0x0
   972                           
   973     0070                     ?_putch:	
   974                           ; 1 bytes @ 0x0
   975                           
   976     0070                     ?_setLumen:	
   977                           ; 1 bytes @ 0x0
   978                           
   979     0070                     ?_setCO2:	
   980                           ; 1 bytes @ 0x0
   981                           
   982     0070                     ?_leerMemoria:	
   983                           ; 1 bytes @ 0x0
   984                           
   985     0070                     ?_initYo:	
   986                           ; 1 bytes @ 0x0
   987                           
   988     0070                     ?_setPWM:	
   989                           ; 1 bytes @ 0x0
   990                           
   991     0070                     ?_analisisRuido:	
   992                           ; 1 bytes @ 0x0
   993                           
   994     0070                     ?_analisisResto:	
   995                           ; 1 bytes @ 0x0
   996                           
   997     0070                     ?_initActuadoresSegunMemoria:	
   998                           ; 1 bytes @ 0x0
   999                           
  1000     0070                     ?_TRAT_INT:	
  1001                           ; 1 bytes @ 0x0
  1002                           
  1003     0070                     ?_main:	
  1004                           ; 1 bytes @ 0x0
  1005                           
  1006     0070                     ?_wait_MSSP:	
  1007                           ; 1 bytes @ 0x0
  1008                           
  1009     0070                     ?i1_leerMemoria:	
  1010                           ; 1 bytes @ 0x0
  1011                           
  1012     0070                     ??i1_leerMemoria:	
  1013                           ; 1 bytes @ 0x0
  1014                           
  1015     0070                     ?i1_setPWM:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018     0070                     ?i1_spi_write_read:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021     0070                     ??i1_spi_write_read:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024     0070                     ?i1___bmul:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027     0070                     ?i1___awdiv:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030     0070                     cosasSPI@roj:	
  1031                           ; 2 bytes @ 0x0
  1032                           
  1033     0070                     i1leerMemoria@direccion:	
  1034                           ; 1 bytes @ 0x0
  1035                           
  1036     0070                     i1___bmul@multiplicand:	
  1037                           ; 1 bytes @ 0x0
  1038                           
  1039     0070                     i1___awdiv@divisor:	
  1040                           ; 1 bytes @ 0x0
  1041                           
  1042                           
  1043                           ; 2 bytes @ 0x0
  1044     0070                     	ds	1
  1045     0071                     ??i1___bmul:
  1046     0071                     ?i1_escribirMemoria:	
  1047                           ; 1 bytes @ 0x1
  1048                           
  1049     0071                     i1escribirMemoria@dato:	
  1050                           ; 2 bytes @ 0x1
  1051                           
  1052                           
  1053                           ; 1 bytes @ 0x1
  1054     0071                     	ds	1
  1055     0072                     ??i1_escribirMemoria:
  1056     0072                     i1spi_write_read@one_byte:	
  1057                           ; 1 bytes @ 0x2
  1058                           
  1059     0072                     i1___bmul@product:	
  1060                           ; 1 bytes @ 0x2
  1061                           
  1062     0072                     i1escribirMemoria@confirmado:	
  1063                           ; 1 bytes @ 0x2
  1064                           
  1065     0072                     i1___awdiv@dividend:	
  1066                           ; 2 bytes @ 0x2
  1067                           
  1068                           
  1069                           ; 2 bytes @ 0x2
  1070     0072                     	ds	1
  1071     0073                     i1spi_write_read@answer:
  1072     0073                     i1___bmul@multiplier:	
  1073                           ; 1 bytes @ 0x3
  1074                           
  1075                           
  1076                           ; 1 bytes @ 0x3
  1077     0073                     	ds	1
  1078     0074                     ??i1___awdiv:
  1079     0074                     i1escribirMemoria@direccion:	
  1080                           ; 1 bytes @ 0x4
  1081                           
  1082     0074                     i1spi_write_read@x:	
  1083                           ; 1 bytes @ 0x4
  1084                           
  1085                           
  1086                           ; 1 bytes @ 0x4
  1087     0074                     	ds	1
  1088     0075                     ?i1_cosasSPI:
  1089     0075                     i1cosasSPI@verd:	
  1090                           ; 1 bytes @ 0x5
  1091                           
  1092     0075                     i1___awdiv@counter:	
  1093                           ; 1 bytes @ 0x5
  1094                           
  1095     0075                     i1escribirMemoria@contador:	
  1096                           ; 1 bytes @ 0x5
  1097                           
  1098                           
  1099                           ; 2 bytes @ 0x5
  1100     0075                     	ds	1
  1101     0076                     i1cosasSPI@azu:
  1102     0076                     i1___awdiv@sign:	
  1103                           ; 1 bytes @ 0x6
  1104                           
  1105                           
  1106                           ; 1 bytes @ 0x6
  1107     0076                     	ds	1
  1108     0077                     i1cosasSPI@lumi:
  1109     0077                     i1___awdiv@quotient:	
  1110                           ; 1 bytes @ 0x7
  1111                           
  1112                           
  1113                           ; 2 bytes @ 0x7
  1114     0077                     	ds	1
  1115     0078                     ??i1_cosasSPI:
  1116     0078                     i1cosasSPI@i:	
  1117                           ; 1 bytes @ 0x8
  1118                           
  1119                           
  1120                           ; 2 bytes @ 0x8
  1121     0078                     	ds	1
  1122     0079                     ??i1_setPWM:
  1123                           
  1124                           ; 1 bytes @ 0x9
  1125     0079                     	ds	1
  1126     007A                     ?i1_setLED:
  1127     007A                     i1setLED@green:	
  1128                           ; 1 bytes @ 0xA
  1129                           
  1130                           
  1131                           ; 1 bytes @ 0xA
  1132     007A                     	ds	1
  1133     007B                     i1setPWM@direccion:
  1134     007B                     i1setLED@blue:	
  1135                           ; 1 bytes @ 0xB
  1136                           
  1137                           
  1138                           ; 1 bytes @ 0xB
  1139     007B                     	ds	1
  1140     007C                     i1setPWM@porcent:
  1141     007C                     i1setLED@luminosidad:	
  1142                           ; 1 bytes @ 0xC
  1143                           
  1144                           
  1145                           ; 1 bytes @ 0xC
  1146     007C                     	ds	1
  1147     007D                     ??i1_setLED:
  1148                           
  1149                           	psect	cstackBANK0
  1150     0020                     __pcstackBANK0:	
  1151                           ; 1 bytes @ 0xD
  1152                           
  1153     0020                     i1setLED@direccion:
  1154                           
  1155                           ; 1 bytes @ 0x0
  1156     0020                     	ds	1
  1157     0021                     i1setLED@red:
  1158                           
  1159                           ; 1 bytes @ 0x1
  1160     0021                     	ds	1
  1161     0022                     ??_TRAT_INT:
  1162                           
  1163                           ; 1 bytes @ 0x2
  1164     0022                     	ds	6
  1165     0028                     ??_i2c_rstart:
  1166     0028                     ??_i2c_write:	
  1167                           ; 1 bytes @ 0x8
  1168                           
  1169     0028                     ??_i2c_read:	
  1170                           ; 1 bytes @ 0x8
  1171                           
  1172     0028                     ??_spi_write_read:	
  1173                           ; 1 bytes @ 0x8
  1174                           
  1175     0028                     ??_i2c_stop:	
  1176                           ; 1 bytes @ 0x8
  1177                           
  1178     0028                     ??_init_TMR0:	
  1179                           ; 1 bytes @ 0x8
  1180                           
  1181     0028                     ??_init_TMR1:	
  1182                           ; 1 bytes @ 0x8
  1183                           
  1184     0028                     ??_init_TMR2:	
  1185                           ; 1 bytes @ 0x8
  1186                           
  1187     0028                     ??_init_CCP1_PWM:	
  1188                           ; 1 bytes @ 0x8
  1189                           
  1190     0028                     ??_init_uart:	
  1191                           ; 1 bytes @ 0x8
  1192                           
  1193     0028                     ??_init_I2C:	
  1194                           ; 1 bytes @ 0x8
  1195                           
  1196     0028                     ??_init_SPI:	
  1197                           ; 1 bytes @ 0x8
  1198                           
  1199     0028                     ??_init_ADC:	
  1200                           ; 1 bytes @ 0x8
  1201                           
  1202     0028                     ??_init_memoria:	
  1203                           ; 1 bytes @ 0x8
  1204                           
  1205     0028                     ??_putch:	
  1206                           ; 1 bytes @ 0x8
  1207                           
  1208     0028                     ??_leerMemoria:	
  1209                           ; 1 bytes @ 0x8
  1210                           
  1211     0028                     ??_initYo:	
  1212                           ; 1 bytes @ 0x8
  1213                           
  1214     0028                     ??_analisisRuido:	
  1215                           ; 1 bytes @ 0x8
  1216                           
  1217     0028                     ??_wait_MSSP:	
  1218                           ; 1 bytes @ 0x8
  1219                           
  1220     0028                     ?___bmul:	
  1221                           ; 1 bytes @ 0x8
  1222                           
  1223     0028                     ?_getLumen:	
  1224                           ; 1 bytes @ 0x8
  1225                           
  1226     0028                     ?_getCO2:	
  1227                           ; 2 bytes @ 0x8
  1228                           
  1229     0028                     ?___awdiv:	
  1230                           ; 2 bytes @ 0x8
  1231                           
  1232     0028                     ?___lwdiv:	
  1233                           ; 2 bytes @ 0x8
  1234                           
  1235     0028                     putch@c:	
  1236                           ; 2 bytes @ 0x8
  1237                           
  1238     0028                     leerMemoria@direccion:	
  1239                           ; 1 bytes @ 0x8
  1240                           
  1241     0028                     i2c_write@I2C_data:	
  1242                           ; 1 bytes @ 0x8
  1243                           
  1244     0028                     i2c_read@master_ack:	
  1245                           ; 1 bytes @ 0x8
  1246                           
  1247     0028                     ___bmul@multiplicand:	
  1248                           ; 1 bytes @ 0x8
  1249                           
  1250     0028                     ___awdiv@divisor:	
  1251                           ; 1 bytes @ 0x8
  1252                           
  1253     0028                     ___lwdiv@divisor:	
  1254                           ; 2 bytes @ 0x8
  1255                           
  1256                           
  1257                           ; 2 bytes @ 0x8
  1258     0028                     	ds	1
  1259     0029                     ??___bmul:
  1260     0029                     ?_escribirMemoria:	
  1261                           ; 1 bytes @ 0x9
  1262                           
  1263     0029                     ?_getnoPrimerArranque:	
  1264                           ; 2 bytes @ 0x9
  1265                           
  1266     0029                     escribirMemoria@dato:	
  1267                           ; 2 bytes @ 0x9
  1268                           
  1269     0029                     i2c_read@I2C_data:	
  1270                           ; 1 bytes @ 0x9
  1271                           
  1272                           
  1273                           ; 1 bytes @ 0x9
  1274     0029                     	ds	1
  1275     002A                     ??_setLumen:
  1276     002A                     ??_getLumen:	
  1277                           ; 1 bytes @ 0xA
  1278                           
  1279     002A                     ??_setCO2:	
  1280                           ; 1 bytes @ 0xA
  1281                           
  1282     002A                     ??_getCO2:	
  1283                           ; 1 bytes @ 0xA
  1284                           
  1285     002A                     ??_escribirMemoria:	
  1286                           ; 1 bytes @ 0xA
  1287                           
  1288     002A                     analisisRuido@temp:	
  1289                           ; 1 bytes @ 0xA
  1290                           
  1291     002A                     spi_write_read@one_byte:	
  1292                           ; 1 bytes @ 0xA
  1293                           
  1294     002A                     ___bmul@product:	
  1295                           ; 1 bytes @ 0xA
  1296                           
  1297     002A                     escribirMemoria@confirmado:	
  1298                           ; 1 bytes @ 0xA
  1299                           
  1300     002A                     ___awdiv@dividend:	
  1301                           ; 2 bytes @ 0xA
  1302                           
  1303     002A                     ___lwdiv@dividend:	
  1304                           ; 2 bytes @ 0xA
  1305                           
  1306                           
  1307                           ; 2 bytes @ 0xA
  1308     002A                     	ds	1
  1309     002B                     ??_getnoPrimerArranque:
  1310     002B                     getnoPrimerArranque@direccion:	
  1311                           ; 1 bytes @ 0xB
  1312                           
  1313     002B                     spi_write_read@answer:	
  1314                           ; 1 bytes @ 0xB
  1315                           
  1316     002B                     ___bmul@multiplier:	
  1317                           ; 1 bytes @ 0xB
  1318                           
  1319                           
  1320                           ; 1 bytes @ 0xB
  1321     002B                     	ds	1
  1322     002C                     ??_analisisResto:
  1323     002C                     ??___awdiv:	
  1324                           ; 1 bytes @ 0xC
  1325                           
  1326     002C                     ??___lwdiv:	
  1327                           ; 1 bytes @ 0xC
  1328                           
  1329     002C                     escribirMemoria@direccion:	
  1330                           ; 1 bytes @ 0xC
  1331                           
  1332     002C                     getnoPrimerArranque@aux:	
  1333                           ; 1 bytes @ 0xC
  1334                           
  1335     002C                     spi_write_read@x:	
  1336                           ; 1 bytes @ 0xC
  1337                           
  1338                           
  1339                           ; 1 bytes @ 0xC
  1340     002C                     	ds	1
  1341     002D                     ?_cosasSPI:
  1342     002D                     cosasSPI@verd:	
  1343                           ; 1 bytes @ 0xD
  1344                           
  1345     002D                     ___awdiv@counter:	
  1346                           ; 1 bytes @ 0xD
  1347                           
  1348     002D                     ___lwdiv@counter:	
  1349                           ; 1 bytes @ 0xD
  1350                           
  1351     002D                     escribirMemoria@contador:	
  1352                           ; 1 bytes @ 0xD
  1353                           
  1354                           
  1355                           ; 2 bytes @ 0xD
  1356     002D                     	ds	1
  1357     002E                     cosasSPI@azu:
  1358     002E                     ___awdiv@sign:	
  1359                           ; 1 bytes @ 0xE
  1360                           
  1361     002E                     ___lwdiv@quotient:	
  1362                           ; 1 bytes @ 0xE
  1363                           
  1364                           
  1365                           ; 2 bytes @ 0xE
  1366     002E                     	ds	1
  1367     002F                     cosasSPI@lumi:
  1368     002F                     ___awdiv@quotient:	
  1369                           ; 1 bytes @ 0xF
  1370                           
  1371                           
  1372                           ; 2 bytes @ 0xF
  1373     002F                     	ds	1
  1374     0030                     ??_cosasSPI:
  1375     0030                     ?___lwmod:	
  1376                           ; 1 bytes @ 0x10
  1377                           
  1378     0030                     cosasSPI@i:	
  1379                           ; 2 bytes @ 0x10
  1380                           
  1381     0030                     ___lwmod@divisor:	
  1382                           ; 2 bytes @ 0x10
  1383                           
  1384                           
  1385                           ; 2 bytes @ 0x10
  1386     0030                     	ds	1
  1387     0031                     ??_setPWM:
  1388                           
  1389                           ; 1 bytes @ 0x11
  1390     0031                     	ds	1
  1391     0032                     ?_setLED:
  1392     0032                     setLED@green:	
  1393                           ; 1 bytes @ 0x12
  1394                           
  1395     0032                     ___lwmod@dividend:	
  1396                           ; 1 bytes @ 0x12
  1397                           
  1398                           
  1399                           ; 2 bytes @ 0x12
  1400     0032                     	ds	1
  1401     0033                     setPWM@direccion:
  1402     0033                     setLED@blue:	
  1403                           ; 1 bytes @ 0x13
  1404                           
  1405                           
  1406                           ; 1 bytes @ 0x13
  1407     0033                     	ds	1
  1408     0034                     ??___lwmod:
  1409     0034                     setPWM@porcent:	
  1410                           ; 1 bytes @ 0x14
  1411                           
  1412     0034                     setLED@luminosidad:	
  1413                           ; 1 bytes @ 0x14
  1414                           
  1415                           
  1416                           ; 1 bytes @ 0x14
  1417     0034                     	ds	1
  1418     0035                     ??_setLED:
  1419     0035                     setLED@direccion:	
  1420                           ; 1 bytes @ 0x15
  1421                           
  1422     0035                     ___lwmod@counter:	
  1423                           ; 1 bytes @ 0x15
  1424                           
  1425                           
  1426                           ; 1 bytes @ 0x15
  1427     0035                     	ds	1
  1428     0036                     ?_printf:
  1429     0036                     setLED@red:	
  1430                           ; 2 bytes @ 0x16
  1431                           
  1432                           
  1433                           ; 1 bytes @ 0x16
  1434     0036                     	ds	12
  1435     0042                     ??_printf:
  1436                           
  1437                           ; 1 bytes @ 0x22
  1438     0042                     	ds	3
  1439     0045                     ??_initActuadoresSegunMemoria:
  1440     0045                     ??_main:	
  1441                           ; 1 bytes @ 0x25
  1442                           
  1443                           
  1444                           ; 1 bytes @ 0x25
  1445     0045                     	ds	2
  1446     0047                     main@ruidoAux:
  1447                           
  1448                           ; 1 bytes @ 0x27
  1449     0047                     	ds	1
  1450                           
  1451                           	psect	maintext
  1452     03E0                     __pmaintext:	
  1453 ;;
  1454 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1455 ;;
  1456 ;; *************** function _main *****************
  1457 ;; Defined at:
  1458 ;;		line 619 in file "main.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;		None
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;  ruidoAux        1   39[BANK0 ] unsigned char 
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      void 
  1465 ;; Registers used:
  1466 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1467 ;; Tracked objects:
  1468 ;;		On entry : B00/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1472 ;;      Params:         0       0       0       0       0
  1473 ;;      Locals:         0       1       0       0       0
  1474 ;;      Temps:          0       2       0       0       0
  1475 ;;      Totals:         0       3       0       0       0
  1476 ;;Total ram usage:        3 bytes
  1477 ;; Hardware stack levels required when called: 8
  1478 ;; This function calls:
  1479 ;;		_analisisResto
  1480 ;;		_analisisRuido
  1481 ;;		_i2c_stop
  1482 ;;		_initActuadoresSegunMemoria
  1483 ;;		_initYo
  1484 ;;		_printf
  1485 ;; This function is called by:
  1486 ;;		Startup code after reset
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490     03E0                     _main:	
  1491                           ;psect for function _main
  1492                           
  1493     03E0                     l3066:	
  1494                           ;incstack = 0
  1495                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1496                           
  1497                           
  1498                           ;main.c: 620:     initYo();
  1499     03E0  120A  158A  258B  120A  118A  	fcall	_initYo
  1500     03E5                     l3068:
  1501                           
  1502                           ;main.c: 621:     initActuadoresSegunMemoria();
  1503     03E5  120A  158A  276C  120A  118A  	fcall	_initActuadoresSegunMemoria
  1504     03EA                     l3070:
  1505                           
  1506                           ;main.c: 622:     printf("Inicio terminado\r\n");
  1507     03EA  306D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1508     03EB  120A  118A  2222  120A  118A  	fcall	_printf
  1509                           
  1510                           ;main.c: 624:     while (deboContinuar) {
  1511     03F0  2C6B               	goto	l3092
  1512     03F1                     l3072:
  1513                           
  1514                           ;main.c: 625:         if (emitirMisSensores) {
  1515     03F1  1683               	bsf	3,5	;RP0=1, select bank1
  1516     03F2  1303               	bcf	3,6	;RP1=0, select bank1
  1517     03F3  0832               	movf	_emitirMisSensores^(0+128),w
  1518     03F4  0433               	iorwf	(_emitirMisSensores+1)^(0+128),w
  1519     03F5  1903               	btfsc	3,2
  1520     03F6  2BF8               	goto	u2361
  1521     03F7  2BF9               	goto	u2360
  1522     03F8                     u2361:
  1523     03F8  2C61               	goto	l3088
  1524     03F9                     u2360:
  1525     03F9                     l3074:
  1526                           
  1527                           ;main.c: 626:             char ruidoAux = 'E';
  1528     03F9  3045               	movlw	69
  1529     03FA  1283               	bcf	3,5	;RP0=0, select bank0
  1530     03FB  1303               	bcf	3,6	;RP1=0, select bank0
  1531     03FC  00C7               	movwf	main@ruidoAux
  1532                           
  1533                           ;main.c: 627:             switch (emitoSensores[0]) {
  1534     03FD  2C0D               	goto	l3084
  1535     03FE                     l3076:
  1536                           
  1537                           ;main.c: 629:                     ruidoAux = 'b';
  1538     03FE  3062               	movlw	98
  1539     03FF  1283               	bcf	3,5	;RP0=0, select bank0
  1540     0400  1303               	bcf	3,6	;RP1=0, select bank0
  1541     0401  00C7               	movwf	main@ruidoAux
  1542                           
  1543                           ;main.c: 630:                     break;
  1544     0402  2C1F               	goto	l3086
  1545     0403                     l3078:
  1546                           
  1547                           ;main.c: 632:                     ruidoAux = 'm';
  1548     0403  306D               	movlw	109
  1549     0404  1283               	bcf	3,5	;RP0=0, select bank0
  1550     0405  1303               	bcf	3,6	;RP1=0, select bank0
  1551     0406  00C7               	movwf	main@ruidoAux
  1552                           
  1553                           ;main.c: 633:                     break;
  1554     0407  2C1F               	goto	l3086
  1555     0408                     l3080:
  1556                           
  1557                           ;main.c: 635:                     ruidoAux = 'a';
  1558     0408  3061               	movlw	97
  1559     0409  1283               	bcf	3,5	;RP0=0, select bank0
  1560     040A  1303               	bcf	3,6	;RP1=0, select bank0
  1561     040B  00C7               	movwf	main@ruidoAux
  1562                           
  1563                           ;main.c: 636:                     break;
  1564     040C  2C1F               	goto	l3086
  1565     040D                     l3084:
  1566                           
  1567                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1568                           ; Switch size 1, requested type "simple"
  1569                           ; Number of cases is 1, Range of values is 0 to 0
  1570                           ; switch strategies available:
  1571                           ; Name         Instructions Cycles
  1572                           ; simple_byte            4     3 (average)
  1573                           ; direct_byte           11     8 (fixed)
  1574                           ; jumptable            260     6 (fixed)
  1575                           ;	Chosen strategy is simple_byte
  1576     040D  1683               	bsf	3,5	;RP0=1, select bank1
  1577     040E  1303               	bcf	3,6	;RP1=0, select bank1
  1578     040F  083B               	movf	(_emitoSensores+1)^(0+128),w
  1579     0410  3A00               	xorlw	0	; case 0
  1580     0411  1903               	skipnz
  1581     0412  2C14               	goto	l3170
  1582     0413  2C1F               	goto	l3086
  1583     0414                     l3170:
  1584                           
  1585                           ; Switch size 1, requested type "simple"
  1586                           ; Number of cases is 3, Range of values is 1 to 3
  1587                           ; switch strategies available:
  1588                           ; Name         Instructions Cycles
  1589                           ; simple_byte           10     6 (average)
  1590                           ; direct_byte           20    11 (fixed)
  1591                           ; jumptable            263     9 (fixed)
  1592                           ;	Chosen strategy is simple_byte
  1593     0414  083A               	movf	_emitoSensores^(0+128),w
  1594     0415  3A01               	xorlw	1	; case 1
  1595     0416  1903               	skipnz
  1596     0417  2BFE               	goto	l3076
  1597     0418  3A03               	xorlw	3	; case 2
  1598     0419  1903               	skipnz
  1599     041A  2C03               	goto	l3078
  1600     041B  3A01               	xorlw	1	; case 3
  1601     041C  1903               	skipnz
  1602     041D  2C08               	goto	l3080
  1603     041E  2C1F               	goto	l3086
  1604     041F                     l3086:
  1605                           
  1606                           ;main.c: 640:             printf("Ruido = categoria %d, humedad = %d %%, temperatura = %
      +                          d %c C, CO2 = %d ppm, Luminosidad = %d lx\r\n", ruidoAux, emitoSensores[1], emitoSensore
      +                          s[2], 167, emitoSensores[3], emitoSensores[4]);
  1607     041F  1283               	bcf	3,5	;RP0=0, select bank0
  1608     0420  0847               	movf	main@ruidoAux,w
  1609     0421  00C5               	movwf	??_main
  1610     0422  01C6               	clrf	??_main+1
  1611     0423  0845               	movf	??_main,w
  1612     0424  00B6               	movwf	?_printf
  1613     0425  0846               	movf	??_main+1,w
  1614     0426  00B7               	movwf	?_printf+1
  1615     0427  1683               	bsf	3,5	;RP0=1, select bank1
  1616     0428  1303               	bcf	3,6	;RP1=0, select bank1
  1617     0429  083D               	movf	((_emitoSensores+1)^(0+128)+2),w
  1618     042A  1283               	bcf	3,5	;RP0=0, select bank0
  1619     042B  1303               	bcf	3,6	;RP1=0, select bank0
  1620     042C  00B9               	movwf	?_printf+3
  1621     042D  1683               	bsf	3,5	;RP0=1, select bank1
  1622     042E  1303               	bcf	3,6	;RP1=0, select bank1
  1623     042F  083C               	movf	(_emitoSensores^(0+128)+2),w
  1624     0430  1283               	bcf	3,5	;RP0=0, select bank0
  1625     0431  1303               	bcf	3,6	;RP1=0, select bank0
  1626     0432  00B8               	movwf	?_printf+2
  1627     0433  1683               	bsf	3,5	;RP0=1, select bank1
  1628     0434  1303               	bcf	3,6	;RP1=0, select bank1
  1629     0435  083F               	movf	((_emitoSensores+1)^(0+128)+4),w
  1630     0436  1283               	bcf	3,5	;RP0=0, select bank0
  1631     0437  1303               	bcf	3,6	;RP1=0, select bank0
  1632     0438  00BB               	movwf	?_printf+5
  1633     0439  1683               	bsf	3,5	;RP0=1, select bank1
  1634     043A  1303               	bcf	3,6	;RP1=0, select bank1
  1635     043B  083E               	movf	(_emitoSensores^(0+128)+4),w
  1636     043C  1283               	bcf	3,5	;RP0=0, select bank0
  1637     043D  1303               	bcf	3,6	;RP1=0, select bank0
  1638     043E  00BA               	movwf	?_printf+4
  1639     043F  30A7               	movlw	167
  1640     0440  00BC               	movwf	?_printf+6
  1641     0441  3000               	movlw	0
  1642     0442  00BD               	movwf	?_printf+7
  1643     0443  1683               	bsf	3,5	;RP0=1, select bank1
  1644     0444  1303               	bcf	3,6	;RP1=0, select bank1
  1645     0445  0841               	movf	((_emitoSensores+1)^(0+128)+6),w
  1646     0446  1283               	bcf	3,5	;RP0=0, select bank0
  1647     0447  1303               	bcf	3,6	;RP1=0, select bank0
  1648     0448  00BF               	movwf	?_printf+9
  1649     0449  1683               	bsf	3,5	;RP0=1, select bank1
  1650     044A  1303               	bcf	3,6	;RP1=0, select bank1
  1651     044B  0840               	movf	(_emitoSensores^(0+128)+6),w
  1652     044C  1283               	bcf	3,5	;RP0=0, select bank0
  1653     044D  1303               	bcf	3,6	;RP1=0, select bank0
  1654     044E  00BE               	movwf	?_printf+8
  1655     044F  1683               	bsf	3,5	;RP0=1, select bank1
  1656     0450  1303               	bcf	3,6	;RP1=0, select bank1
  1657     0451  0843               	movf	((_emitoSensores+1)^(0+128)+8),w
  1658     0452  1283               	bcf	3,5	;RP0=0, select bank0
  1659     0453  1303               	bcf	3,6	;RP1=0, select bank0
  1660     0454  00C1               	movwf	?_printf+11
  1661     0455  1683               	bsf	3,5	;RP0=1, select bank1
  1662     0456  1303               	bcf	3,6	;RP1=0, select bank1
  1663     0457  0842               	movf	(_emitoSensores^(0+128)+8),w
  1664     0458  1283               	bcf	3,5	;RP0=0, select bank0
  1665     0459  1303               	bcf	3,6	;RP1=0, select bank0
  1666     045A  00C0               	movwf	?_printf+10
  1667     045B  300B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1668     045C  120A  118A  2222  120A  118A  	fcall	_printf
  1669     0461                     l3088:
  1670                           
  1671                           ;main.c: 643:         analisisRuido();
  1672     0461  120A  158A  26E3  120A  118A  	fcall	_analisisRuido
  1673     0466                     l3090:
  1674                           
  1675                           ;main.c: 644:         analisisResto();
  1676     0466  120A  158A  26A4  120A  118A  	fcall	_analisisResto
  1677     046B                     l3092:
  1678                           
  1679                           ;main.c: 624:     while (deboContinuar) {
  1680     046B  1283               	bcf	3,5	;RP0=0, select bank0
  1681     046C  1303               	bcf	3,6	;RP1=0, select bank0
  1682     046D  0850               	movf	_deboContinuar,w
  1683     046E  0451               	iorwf	_deboContinuar+1,w
  1684     046F  1D03               	btfss	3,2
  1685     0470  2C72               	goto	u2371
  1686     0471  2C73               	goto	u2370
  1687     0472                     u2371:
  1688     0472  2BF1               	goto	l3072
  1689     0473                     u2370:
  1690     0473                     l3094:
  1691                           
  1692                           ;main.c: 651:     i2c_stop();
  1693     0473  120A  158A  23B8  120A  118A  	fcall	_i2c_stop
  1694     0478                     l344:
  1695     0478  120A  118A  2812   	ljmp	start
  1696     047B                     __end_of_main:
  1697                           
  1698                           	psect	text1
  1699     0D8B                     __ptext1:	
  1700 ;; *************** function _initYo *****************
  1701 ;; Defined at:
  1702 ;;		line 321 in file "main.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;		None
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;		None
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, status,2, status,0, pclath, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1716 ;;      Params:         0       0       0       0       0
  1717 ;;      Locals:         0       0       0       0       0
  1718 ;;      Temps:          0       0       0       0       0
  1719 ;;      Totals:         0       0       0       0       0
  1720 ;;Total ram usage:        0 bytes
  1721 ;; Hardware stack levels used: 1
  1722 ;; Hardware stack levels required when called: 5
  1723 ;; This function calls:
  1724 ;;		_init_ADC
  1725 ;;		_init_CCP1_PWM
  1726 ;;		_init_I2C
  1727 ;;		_init_SPI
  1728 ;;		_init_TMR0
  1729 ;;		_init_TMR1
  1730 ;;		_init_TMR2
  1731 ;;		_init_memoria
  1732 ;;		_init_uart
  1733 ;; This function is called by:
  1734 ;;		_main
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738     0D8B                     _initYo:	
  1739                           ;psect for function _initYo
  1740                           
  1741     0D8B                     l2614:	
  1742                           ;incstack = 0
  1743                           ; Regs used in _initYo: [wreg+status,2+status,0+pclath+cstack]
  1744                           
  1745                           
  1746                           ;main.c: 322:     OSCCON = 0b00001000;
  1747     0D8B  3008               	movlw	8
  1748     0D8C  1683               	bsf	3,5	;RP0=1, select bank1
  1749     0D8D  1303               	bcf	3,6	;RP1=0, select bank1
  1750     0D8E  008F               	movwf	15	;volatile
  1751     0D8F                     l2616:
  1752                           
  1753                           ;main.c: 324:     init_uart();
  1754     0D8F  120A  118A  27DD  120A  158A  	fcall	_init_uart
  1755     0D94                     l2618:
  1756                           
  1757                           ;main.c: 325:     init_ADC();
  1758     0D94  120A  158A  24D9  120A  158A  	fcall	_init_ADC
  1759     0D99                     l2620:
  1760                           
  1761                           ;main.c: 326:     init_TMR0();
  1762     0D99  120A  158A  23CB  120A  158A  	fcall	_init_TMR0
  1763     0D9E                     l2622:
  1764                           
  1765                           ;main.c: 327:     init_TMR1();
  1766     0D9E  120A  158A  2410  120A  158A  	fcall	_init_TMR1
  1767     0DA3                     l2624:
  1768                           
  1769                           ;main.c: 328:     init_TMR2();
  1770     0DA3  120A  158A  2433  120A  158A  	fcall	_init_TMR2
  1771     0DA8                     l2626:
  1772                           
  1773                           ;main.c: 330:     init_CCP1_PWM();
  1774     0DA8  120A  158A  23FF  120A  158A  	fcall	_init_CCP1_PWM
  1775     0DAD                     l2628:
  1776                           
  1777                           ;main.c: 332:     init_I2C();
  1778     0DAD  120A  158A  24C1  120A  158A  	fcall	_init_I2C
  1779                           
  1780                           ;main.c: 333:     init_SPI();
  1781     0DB2  120A  118A  27F9  120A  158A  	fcall	_init_SPI
  1782                           
  1783                           ;main.c: 336:     init_memoria();
  1784     0DB7  120A  158A  23C1  120A  158A  	fcall	_init_memoria
  1785     0DBC                     l2630:
  1786                           
  1787                           ;main.c: 338:     TRISB = 0;
  1788     0DBC  1683               	bsf	3,5	;RP0=1, select bank1
  1789     0DBD  1303               	bcf	3,6	;RP1=0, select bank1
  1790     0DBE  0186               	clrf	6	;volatile
  1791     0DBF                     l240:
  1792     0DBF  0008               	return
  1793     0DC0                     __end_of_initYo:
  1794                           
  1795                           	psect	text2
  1796     07DD                     __ptext2:	
  1797 ;; *************** function _init_uart *****************
  1798 ;; Defined at:
  1799 ;;		line 130 in file "main.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;		None
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;		None
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      void 
  1806 ;; Registers used:
  1807 ;;		wreg, status,2
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1813 ;;      Params:         0       0       0       0       0
  1814 ;;      Locals:         0       0       0       0       0
  1815 ;;      Temps:          0       0       0       0       0
  1816 ;;      Totals:         0       0       0       0       0
  1817 ;;Total ram usage:        0 bytes
  1818 ;; Hardware stack levels used: 1
  1819 ;; Hardware stack levels required when called: 4
  1820 ;; This function calls:
  1821 ;;		Nothing
  1822 ;; This function is called by:
  1823 ;;		_initYo
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827     07DD                     _init_uart:	
  1828                           ;psect for function _init_uart
  1829                           
  1830     07DD                     l2292:	
  1831                           ;incstack = 0
  1832                           ; Regs used in _init_uart: [wreg+status,2]
  1833                           
  1834                           
  1835                           ;main.c: 131:     TXSTAbits.BRGH = 0;
  1836     07DD  1683               	bsf	3,5	;RP0=1, select bank1
  1837     07DE  1303               	bcf	3,6	;RP1=0, select bank1
  1838     07DF  1118               	bcf	24,2	;volatile
  1839                           
  1840                           ;main.c: 132:     BAUDCTLbits.BRG16 = 0;
  1841     07E0  1683               	bsf	3,5	;RP0=1, select bank3
  1842     07E1  1703               	bsf	3,6	;RP1=1, select bank3
  1843     07E2  1187               	bcf	7,3	;volatile
  1844     07E3                     l2294:
  1845                           
  1846                           ;main.c: 135:     SPBRGH = 0;
  1847     07E3  1683               	bsf	3,5	;RP0=1, select bank1
  1848     07E4  1303               	bcf	3,6	;RP1=0, select bank1
  1849     07E5  019A               	clrf	26	;volatile
  1850     07E6                     l2296:
  1851                           
  1852                           ;main.c: 136:     SPBRG = 32;
  1853     07E6  3020               	movlw	32
  1854     07E7  0099               	movwf	25	;volatile
  1855     07E8                     l2298:
  1856                           
  1857                           ;main.c: 138:     TXSTAbits.SYNC = 0;
  1858     07E8  1218               	bcf	24,4	;volatile
  1859     07E9                     l2300:
  1860                           
  1861                           ;main.c: 139:     TXSTAbits.TX9 = 0;
  1862     07E9  1318               	bcf	24,6	;volatile
  1863     07EA                     l2302:
  1864                           
  1865                           ;main.c: 140:     RCSTAbits.RX9 = 0;
  1866     07EA  1283               	bcf	3,5	;RP0=0, select bank0
  1867     07EB  1303               	bcf	3,6	;RP1=0, select bank0
  1868     07EC  1318               	bcf	24,6	;volatile
  1869     07ED                     l2304:
  1870                           
  1871                           ;main.c: 142:     PIE1bits.TXIE = 1;
  1872     07ED  1683               	bsf	3,5	;RP0=1, select bank1
  1873     07EE  1303               	bcf	3,6	;RP1=0, select bank1
  1874     07EF  160C               	bsf	12,4	;volatile
  1875     07F0                     l2306:
  1876                           
  1877                           ;main.c: 143:     PIE1bits.RCIE = 1;
  1878     07F0  168C               	bsf	12,5	;volatile
  1879     07F1                     l2308:
  1880                           
  1881                           ;main.c: 145:     RCSTAbits.SPEN = 1;
  1882     07F1  1283               	bcf	3,5	;RP0=0, select bank0
  1883     07F2  1303               	bcf	3,6	;RP1=0, select bank0
  1884     07F3  1798               	bsf	24,7	;volatile
  1885     07F4                     l2310:
  1886                           
  1887                           ;main.c: 147:     TXSTAbits.TXEN = 0;
  1888     07F4  1683               	bsf	3,5	;RP0=1, select bank1
  1889     07F5  1303               	bcf	3,6	;RP1=0, select bank1
  1890     07F6  1298               	bcf	24,5	;volatile
  1891     07F7                     l2312:
  1892                           
  1893                           ;main.c: 148:     TXSTAbits.TXEN = 1;
  1894     07F7  1698               	bsf	24,5	;volatile
  1895     07F8                     l183:
  1896     07F8  0008               	return
  1897     07F9                     __end_of_init_uart:
  1898                           
  1899                           	psect	text3
  1900     0BC1                     __ptext3:	
  1901 ;; *************** function _init_memoria *****************
  1902 ;; Defined at:
  1903 ;;		line 227 in file "main.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		None
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1917 ;;      Params:         0       0       0       0       0
  1918 ;;      Locals:         0       0       0       0       0
  1919 ;;      Temps:          0       0       0       0       0
  1920 ;;      Totals:         0       0       0       0       0
  1921 ;;Total ram usage:        0 bytes
  1922 ;; Hardware stack levels used: 1
  1923 ;; Hardware stack levels required when called: 4
  1924 ;; This function calls:
  1925 ;;		Nothing
  1926 ;; This function is called by:
  1927 ;;		_initYo
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931     0BC1                     _init_memoria:	
  1932                           ;psect for function _init_memoria
  1933                           
  1934     0BC1                     l2350:	
  1935                           ;incstack = 0
  1936                           ; Regs used in _init_memoria: []
  1937                           
  1938                           
  1939                           ;main.c: 228:     EECON1bits.EEPGD = 0;
  1940     0BC1  1683               	bsf	3,5	;RP0=1, select bank3
  1941     0BC2  1703               	bsf	3,6	;RP1=1, select bank3
  1942     0BC3  138C               	bcf	12,7	;volsfr
  1943                           
  1944                           ;main.c: 229:     PIR2bits.EEIF = 0;
  1945     0BC4  1283               	bcf	3,5	;RP0=0, select bank0
  1946     0BC5  1303               	bcf	3,6	;RP1=0, select bank0
  1947     0BC6  120D               	bcf	13,4	;volatile
  1948                           
  1949                           ;main.c: 230:     PIE2bits.EEIE = 1;
  1950     0BC7  1683               	bsf	3,5	;RP0=1, select bank1
  1951     0BC8  1303               	bcf	3,6	;RP1=0, select bank1
  1952     0BC9  160D               	bsf	13,4	;volatile
  1953     0BCA                     l195:
  1954     0BCA  0008               	return
  1955     0BCB                     __end_of_init_memoria:
  1956                           
  1957                           	psect	text4
  1958     0C33                     __ptext4:	
  1959 ;; *************** function _init_TMR2 *****************
  1960 ;; Defined at:
  1961 ;;		line 93 in file "main.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;		None
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;		None
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2, status,0
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1975 ;;      Params:         0       0       0       0       0
  1976 ;;      Locals:         0       0       0       0       0
  1977 ;;      Temps:          0       0       0       0       0
  1978 ;;      Totals:         0       0       0       0       0
  1979 ;;Total ram usage:        0 bytes
  1980 ;; Hardware stack levels used: 1
  1981 ;; Hardware stack levels required when called: 4
  1982 ;; This function calls:
  1983 ;;		Nothing
  1984 ;; This function is called by:
  1985 ;;		_initYo
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989     0C33                     _init_TMR2:	
  1990                           ;psect for function _init_TMR2
  1991                           
  1992     0C33                     l2270:	
  1993                           ;incstack = 0
  1994                           ; Regs used in _init_TMR2: [wreg+status,2+status,0]
  1995                           
  1996                           
  1997                           ;main.c: 94:     PR2 = 167;
  1998     0C33  30A7               	movlw	167
  1999     0C34  1683               	bsf	3,5	;RP0=1, select bank1
  2000     0C35  1303               	bcf	3,6	;RP1=0, select bank1
  2001     0C36  0092               	movwf	18	;volatile
  2002     0C37                     l2272:
  2003                           
  2004                           ;main.c: 96:     T2CONbits.T2CKPS = 0b00;
  2005     0C37  30FC               	movlw	-4
  2006     0C38  1283               	bcf	3,5	;RP0=0, select bank0
  2007     0C39  1303               	bcf	3,6	;RP1=0, select bank0
  2008     0C3A  0592               	andwf	18,f	;volatile
  2009     0C3B                     l2274:
  2010                           
  2011                           ;main.c: 97:     T2CONbits.TOUTPS = 0b0000;
  2012     0C3B  3087               	movlw	-121
  2013     0C3C  0592               	andwf	18,f	;volatile
  2014     0C3D                     l2276:
  2015                           
  2016                           ;main.c: 98:     PIE1bits.TMR2IE = 1;
  2017     0C3D  1683               	bsf	3,5	;RP0=1, select bank1
  2018     0C3E  1303               	bcf	3,6	;RP1=0, select bank1
  2019     0C3F  148C               	bsf	12,1	;volatile
  2020     0C40                     l2278:
  2021                           
  2022                           ;main.c: 99:     PIR1bits.TMR2IF = 0;
  2023     0C40  1283               	bcf	3,5	;RP0=0, select bank0
  2024     0C41  1303               	bcf	3,6	;RP1=0, select bank0
  2025     0C42  108C               	bcf	12,1	;volatile
  2026     0C43                     l2280:
  2027                           
  2028                           ;main.c: 100:     T2CONbits.TMR2ON = 1;
  2029     0C43  1512               	bsf	18,2	;volatile
  2030     0C44                     l177:
  2031     0C44  0008               	return
  2032     0C45                     __end_of_init_TMR2:
  2033                           
  2034                           	psect	text5
  2035     0C10                     __ptext5:	
  2036 ;; *************** function _init_TMR1 *****************
  2037 ;; Defined at:
  2038 ;;		line 82 in file "main.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;		None
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;		None
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  1    wreg      void 
  2045 ;; Registers used:
  2046 ;;		wreg, status,2, status,0
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2052 ;;      Params:         0       0       0       0       0
  2053 ;;      Locals:         0       0       0       0       0
  2054 ;;      Temps:          0       0       0       0       0
  2055 ;;      Totals:         0       0       0       0       0
  2056 ;;Total ram usage:        0 bytes
  2057 ;; Hardware stack levels used: 1
  2058 ;; Hardware stack levels required when called: 4
  2059 ;; This function calls:
  2060 ;;		Nothing
  2061 ;; This function is called by:
  2062 ;;		_initYo
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066     0C10                     _init_TMR1:	
  2067                           ;psect for function _init_TMR1
  2068                           
  2069     0C10                     l2258:	
  2070                           ;incstack = 0
  2071                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
  2072                           
  2073                           
  2074                           ;main.c: 83:     TMR1H = eltimer1H;
  2075     0C10  087D               	movf	_eltimer1H,w
  2076     0C11  1283               	bcf	3,5	;RP0=0, select bank0
  2077     0C12  1303               	bcf	3,6	;RP1=0, select bank0
  2078     0C13  008F               	movwf	15	;volatile
  2079                           
  2080                           ;main.c: 84:     TMR1L = eltimer1L;
  2081     0C14  0858               	movf	_eltimer1L,w
  2082     0C15  008E               	movwf	14	;volatile
  2083     0C16                     l2260:
  2084                           
  2085                           ;main.c: 85:     T1CONbits.TMR1CS = 0;
  2086     0C16  1090               	bcf	16,1	;volatile
  2087     0C17                     l2262:
  2088                           
  2089                           ;main.c: 87:     T1CONbits.T1CKPS = 0b00;
  2090     0C17  30CF               	movlw	-49
  2091     0C18  0590               	andwf	16,f	;volatile
  2092     0C19                     l2264:
  2093                           
  2094                           ;main.c: 88:     T1CONbits.TMR1GE = 0;
  2095     0C19  1310               	bcf	16,6	;volatile
  2096     0C1A                     l2266:
  2097                           
  2098                           ;main.c: 89:     PIE1bits.TMR1IE = 1;
  2099     0C1A  1683               	bsf	3,5	;RP0=1, select bank1
  2100     0C1B  1303               	bcf	3,6	;RP1=0, select bank1
  2101     0C1C  140C               	bsf	12,0	;volatile
  2102     0C1D                     l2268:
  2103                           
  2104                           ;main.c: 90:     T1CONbits.TMR1ON = 1;
  2105     0C1D  1283               	bcf	3,5	;RP0=0, select bank0
  2106     0C1E  1303               	bcf	3,6	;RP1=0, select bank0
  2107     0C1F  1410               	bsf	16,0	;volatile
  2108     0C20                     l174:
  2109     0C20  0008               	return
  2110     0C21                     __end_of_init_TMR1:
  2111                           
  2112                           	psect	text6
  2113     0BCB                     __ptext6:	
  2114 ;; *************** function _init_TMR0 *****************
  2115 ;; Defined at:
  2116 ;;		line 72 in file "main.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, status,2, status,0
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2130 ;;      Params:         0       0       0       0       0
  2131 ;;      Locals:         0       0       0       0       0
  2132 ;;      Temps:          0       0       0       0       0
  2133 ;;      Totals:         0       0       0       0       0
  2134 ;;Total ram usage:        0 bytes
  2135 ;; Hardware stack levels used: 1
  2136 ;; Hardware stack levels required when called: 4
  2137 ;; This function calls:
  2138 ;;		Nothing
  2139 ;; This function is called by:
  2140 ;;		_initYo
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144     0BCB                     _init_TMR0:	
  2145                           ;psect for function _init_TMR0
  2146                           
  2147     0BCB                     l2248:	
  2148                           ;incstack = 0
  2149                           ; Regs used in _init_TMR0: [wreg+status,2+status,0]
  2150                           
  2151                           
  2152                           ;main.c: 73:     TMR0 = 61;
  2153     0BCB  303D               	movlw	61
  2154     0BCC  1283               	bcf	3,5	;RP0=0, select bank0
  2155     0BCD  1303               	bcf	3,6	;RP1=0, select bank0
  2156     0BCE  0081               	movwf	1	;volatile
  2157     0BCF                     l2250:
  2158                           
  2159                           ;main.c: 76:     OPTION_REGbits.T0CS = 0;
  2160     0BCF  1683               	bsf	3,5	;RP0=1, select bank1
  2161     0BD0  1303               	bcf	3,6	;RP1=0, select bank1
  2162     0BD1  1281               	bcf	1,5	;volatile
  2163     0BD2                     l2252:
  2164                           
  2165                           ;main.c: 77:     OPTION_REGbits.PSA = 0;
  2166     0BD2  1181               	bcf	1,3	;volatile
  2167     0BD3                     l2254:
  2168                           
  2169                           ;main.c: 78:     OPTION_REGbits.PS = 0b111;
  2170     0BD3  3007               	movlw	7
  2171     0BD4  0481               	iorwf	1,f	;volatile
  2172     0BD5                     l2256:
  2173                           
  2174                           ;main.c: 79:     INTCONbits.T0IE = 1;
  2175     0BD5  168B               	bsf	11,5	;volatile
  2176     0BD6                     l171:
  2177     0BD6  0008               	return
  2178     0BD7                     __end_of_init_TMR0:
  2179                           
  2180                           	psect	text7
  2181     07F9                     __ptext7:	
  2182 ;; *************** function _init_SPI *****************
  2183 ;; Defined at:
  2184 ;;		line 202 in file "main.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;		None
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;		None
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		None
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2198 ;;      Params:         0       0       0       0       0
  2199 ;;      Locals:         0       0       0       0       0
  2200 ;;      Temps:          0       0       0       0       0
  2201 ;;      Totals:         0       0       0       0       0
  2202 ;;Total ram usage:        0 bytes
  2203 ;; Hardware stack levels used: 1
  2204 ;; Hardware stack levels required when called: 4
  2205 ;; This function calls:
  2206 ;;		Nothing
  2207 ;; This function is called by:
  2208 ;;		_initYo
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212     07F9                     _init_SPI:	
  2213                           ;psect for function _init_SPI
  2214                           
  2215     07F9                     l2326:	
  2216                           ;incstack = 0
  2217                           ; Regs used in _init_SPI: []
  2218                           
  2219                           
  2220                           ;main.c: 208:     TRISCbits.TRISC5 = 0;
  2221     07F9  1683               	bsf	3,5	;RP0=1, select bank1
  2222     07FA  1303               	bcf	3,6	;RP1=0, select bank1
  2223     07FB  1287               	bcf	7,5	;volatile
  2224     07FC                     l189:
  2225     07FC  0008               	return
  2226     07FD                     __end_of_init_SPI:
  2227                           
  2228                           	psect	text8
  2229     0CC1                     __ptext8:	
  2230 ;; *************** function _init_I2C *****************
  2231 ;; Defined at:
  2232 ;;		line 151 in file "main.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;		None
  2235 ;; Auto vars:     Size  Location     Type
  2236 ;;		None
  2237 ;; Return value:  Size  Location     Type
  2238 ;;                  1    wreg      void 
  2239 ;; Registers used:
  2240 ;;		wreg, status,2, status,0
  2241 ;; Tracked objects:
  2242 ;;		On entry : 0/0
  2243 ;;		On exit  : 0/0
  2244 ;;		Unchanged: 0/0
  2245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2246 ;;      Params:         0       0       0       0       0
  2247 ;;      Locals:         0       0       0       0       0
  2248 ;;      Temps:          0       0       0       0       0
  2249 ;;      Totals:         0       0       0       0       0
  2250 ;;Total ram usage:        0 bytes
  2251 ;; Hardware stack levels used: 1
  2252 ;; Hardware stack levels required when called: 4
  2253 ;; This function calls:
  2254 ;;		Nothing
  2255 ;; This function is called by:
  2256 ;;		_initYo
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260     0CC1                     _init_I2C:	
  2261                           ;psect for function _init_I2C
  2262                           
  2263     0CC1                     l2314:	
  2264                           ;incstack = 0
  2265                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
  2266                           
  2267                           
  2268                           ;main.c: 154:     TRISCbits.TRISC3 = 1;
  2269     0CC1  1683               	bsf	3,5	;RP0=1, select bank1
  2270     0CC2  1303               	bcf	3,6	;RP1=0, select bank1
  2271     0CC3  1587               	bsf	7,3	;volatile
  2272                           
  2273                           ;main.c: 155:     TRISCbits.TRISC4 = 1;
  2274     0CC4  1607               	bsf	7,4	;volatile
  2275     0CC5                     l2316:
  2276                           
  2277                           ;main.c: 158:     SSPCONbits.SSPM = 0;
  2278     0CC5  30F0               	movlw	-16
  2279     0CC6  1283               	bcf	3,5	;RP0=0, select bank0
  2280     0CC7  1303               	bcf	3,6	;RP1=0, select bank0
  2281     0CC8  0594               	andwf	20,f	;volatile
  2282                           
  2283                           ;main.c: 159:     SSPCONbits.SSPM = 0;
  2284     0CC9  30F0               	movlw	-16
  2285     0CCA  0594               	andwf	20,f	;volatile
  2286     0CCB                     l2318:
  2287                           
  2288                           ;main.c: 161:     ANSEL = 0;
  2289     0CCB  1683               	bsf	3,5	;RP0=1, select bank3
  2290     0CCC  1703               	bsf	3,6	;RP1=1, select bank3
  2291     0CCD  0188               	clrf	8	;volatile
  2292     0CCE                     l2320:
  2293                           
  2294                           ;main.c: 177:     SSPADD = (20000000 / 4) - 1;
  2295     0CCE  303F               	movlw	63
  2296     0CCF  1683               	bsf	3,5	;RP0=1, select bank1
  2297     0CD0  1303               	bcf	3,6	;RP1=0, select bank1
  2298     0CD1  0093               	movwf	19	;volatile
  2299     0CD2                     l2322:
  2300                           
  2301                           ;main.c: 179:     PIR1bits.SSPIF = 0;
  2302     0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  2303     0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  2304     0CD4  118C               	bcf	12,3	;volatile
  2305     0CD5                     l2324:
  2306                           
  2307                           ;main.c: 180:     PIE1bits.SSPIE = 1;
  2308     0CD5  1683               	bsf	3,5	;RP0=1, select bank1
  2309     0CD6  1303               	bcf	3,6	;RP1=0, select bank1
  2310     0CD7  158C               	bsf	12,3	;volatile
  2311     0CD8                     l186:
  2312     0CD8  0008               	return
  2313     0CD9                     __end_of_init_I2C:
  2314                           
  2315                           	psect	text9
  2316     0BFF                     __ptext9:	
  2317 ;; *************** function _init_CCP1_PWM *****************
  2318 ;; Defined at:
  2319 ;;		line 103 in file "main.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;		None
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;		None
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  1    wreg      void 
  2326 ;; Registers used:
  2327 ;;		wreg, status,2, status,0
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2333 ;;      Params:         0       0       0       0       0
  2334 ;;      Locals:         0       0       0       0       0
  2335 ;;      Temps:          0       0       0       0       0
  2336 ;;      Totals:         0       0       0       0       0
  2337 ;;Total ram usage:        0 bytes
  2338 ;; Hardware stack levels used: 1
  2339 ;; Hardware stack levels required when called: 4
  2340 ;; This function calls:
  2341 ;;		Nothing
  2342 ;; This function is called by:
  2343 ;;		_initYo
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347     0BFF                     _init_CCP1_PWM:	
  2348                           ;psect for function _init_CCP1_PWM
  2349                           
  2350     0BFF                     l2282:	
  2351                           ;incstack = 0
  2352                           ; Regs used in _init_CCP1_PWM: [wreg+status,2+status,0]
  2353                           
  2354                           
  2355                           ;main.c: 105:     TRISCbits.TRISC2 = 0;
  2356     0BFF  1683               	bsf	3,5	;RP0=1, select bank1
  2357     0C00  1303               	bcf	3,6	;RP1=0, select bank1
  2358     0C01  1107               	bcf	7,2	;volatile
  2359     0C02                     l2284:
  2360                           
  2361                           ;main.c: 106:     ANSEL = 0;
  2362     0C02  1683               	bsf	3,5	;RP0=1, select bank3
  2363     0C03  1703               	bsf	3,6	;RP1=1, select bank3
  2364     0C04  0188               	clrf	8	;volatile
  2365     0C05                     l2286:
  2366                           
  2367                           ;main.c: 107:     CCP1CONbits.CCP1M = 0b1100;
  2368     0C05  1283               	bcf	3,5	;RP0=0, select bank0
  2369     0C06  1303               	bcf	3,6	;RP1=0, select bank0
  2370     0C07  0817               	movf	23,w	;volatile
  2371     0C08  39F0               	andlw	-16
  2372     0C09  380C               	iorlw	12
  2373     0C0A  0097               	movwf	23	;volatile
  2374     0C0B                     l2288:
  2375                           
  2376                           ;main.c: 108:     CCP1CONbits.P1M = 0b00;
  2377     0C0B  303F               	movlw	-193
  2378     0C0C  0597               	andwf	23,f	;volatile
  2379     0C0D                     l2290:
  2380                           
  2381                           ;main.c: 110:     CCPR1L = porcentaje;
  2382     0C0D  0864               	movf	_porcentaje,w
  2383     0C0E  0095               	movwf	21	;volatile
  2384     0C0F                     l180:
  2385     0C0F  0008               	return
  2386     0C10                     __end_of_init_CCP1_PWM:
  2387                           
  2388                           	psect	text10
  2389     0CD9                     __ptext10:	
  2390 ;; *************** function _init_ADC *****************
  2391 ;; Defined at:
  2392 ;;		line 211 in file "main.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;		None
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;		None
  2397 ;; Return value:  Size  Location     Type
  2398 ;;                  1    wreg      void 
  2399 ;; Registers used:
  2400 ;;		wreg, status,2, status,0
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2406 ;;      Params:         0       0       0       0       0
  2407 ;;      Locals:         0       0       0       0       0
  2408 ;;      Temps:          0       0       0       0       0
  2409 ;;      Totals:         0       0       0       0       0
  2410 ;;Total ram usage:        0 bytes
  2411 ;; Hardware stack levels used: 1
  2412 ;; Hardware stack levels required when called: 4
  2413 ;; This function calls:
  2414 ;;		Nothing
  2415 ;; This function is called by:
  2416 ;;		_initYo
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420     0CD9                     _init_ADC:	
  2421                           ;psect for function _init_ADC
  2422                           
  2423     0CD9                     l2328:	
  2424                           ;incstack = 0
  2425                           ; Regs used in _init_ADC: [wreg+status,2+status,0]
  2426                           
  2427                           
  2428                           ;main.c: 212:     TRISA = 1;
  2429     0CD9  3001               	movlw	1
  2430     0CDA  1683               	bsf	3,5	;RP0=1, select bank1
  2431     0CDB  1303               	bcf	3,6	;RP1=0, select bank1
  2432     0CDC  0085               	movwf	5	;volatile
  2433     0CDD                     l2330:
  2434                           
  2435                           ;main.c: 213:     ANSELbits.ANS0 = 1;
  2436     0CDD  1683               	bsf	3,5	;RP0=1, select bank3
  2437     0CDE  1703               	bsf	3,6	;RP1=1, select bank3
  2438     0CDF  1408               	bsf	8,0	;volatile
  2439     0CE0                     l2332:
  2440                           
  2441                           ;main.c: 214:     ANSELbits.ANS1 = 1;
  2442     0CE0  1488               	bsf	8,1	;volatile
  2443     0CE1                     l2334:
  2444                           
  2445                           ;main.c: 215:     ANSELbits.ANS2 = 1;
  2446     0CE1  1508               	bsf	8,2	;volatile
  2447     0CE2                     l2336:
  2448                           
  2449                           ;main.c: 216:     ADCON0bits.ADCS = 0b10;
  2450     0CE2  1283               	bcf	3,5	;RP0=0, select bank0
  2451     0CE3  1303               	bcf	3,6	;RP1=0, select bank0
  2452     0CE4  081F               	movf	31,w	;volatile
  2453     0CE5  393F               	andlw	-193
  2454     0CE6  3880               	iorlw	128
  2455     0CE7  009F               	movwf	31	;volatile
  2456     0CE8                     l2338:
  2457                           
  2458                           ;main.c: 217:     ADCON0bits.CHS = 0b0000;
  2459     0CE8  30C3               	movlw	-61
  2460     0CE9  059F               	andwf	31,f	;volatile
  2461     0CEA                     l2340:
  2462                           
  2463                           ;main.c: 218:     ADCON0bits.ADON = 1;
  2464     0CEA  141F               	bsf	31,0	;volatile
  2465     0CEB                     l2342:
  2466                           
  2467                           ;main.c: 219:     ADCON1bits.ADFM = 1;
  2468     0CEB  1683               	bsf	3,5	;RP0=1, select bank1
  2469     0CEC  1303               	bcf	3,6	;RP1=0, select bank1
  2470     0CED  179F               	bsf	31,7	;volatile
  2471     0CEE                     l2344:
  2472                           
  2473                           ;main.c: 221:     ADCON1bits.VCFG1 = 0;
  2474     0CEE  129F               	bcf	31,5	;volatile
  2475     0CEF                     l2346:
  2476                           
  2477                           ;main.c: 222:     ADCON1bits.VCFG0 = 0;
  2478     0CEF  121F               	bcf	31,4	;volatile
  2479     0CF0                     l2348:
  2480                           
  2481                           ;main.c: 224:     PIE1bits.ADIE = 1;
  2482     0CF0  170C               	bsf	12,6	;volatile
  2483     0CF1                     l192:
  2484     0CF1  0008               	return
  2485     0CF2                     __end_of_init_ADC:
  2486                           
  2487                           	psect	text11
  2488     0F6C                     __ptext11:	
  2489 ;; *************** function _initActuadoresSegunMemoria *****************
  2490 ;; Defined at:
  2491 ;;		line 453 in file "main.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;		None
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;		None
  2496 ;; Return value:  Size  Location     Type
  2497 ;;                  1    wreg      void 
  2498 ;; Registers used:
  2499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2505 ;;      Params:         0       0       0       0       0
  2506 ;;      Locals:         0       0       0       0       0
  2507 ;;      Temps:          0       0       0       0       0
  2508 ;;      Totals:         0       0       0       0       0
  2509 ;;Total ram usage:        0 bytes
  2510 ;; Hardware stack levels used: 1
  2511 ;; Hardware stack levels required when called: 7
  2512 ;; This function calls:
  2513 ;;		_getnoPrimerArranque
  2514 ;;		_printf
  2515 ;;		_setLED
  2516 ;;		_setPWM
  2517 ;; This function is called by:
  2518 ;;		_main
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522     0F6C                     _initActuadoresSegunMemoria:	
  2523                           ;psect for function _initActuadoresSegunMemoria
  2524                           
  2525     0F6C                     l3050:	
  2526                           ;incstack = 0
  2527                           ; Regs used in _initActuadoresSegunMemoria: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
  2528                           
  2529                           
  2530                           ;main.c: 454:     printf("Pruebo memoria");
  2531     0F6C  3080               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2532     0F6D  120A  118A  2222  120A  158A  	fcall	_printf
  2533     0F72                     l3052:
  2534                           
  2535                           ;main.c: 455:     if (getnoPrimerArranque() == TRUE) {
  2536     0F72  120A  158A  250E  120A  158A  	fcall	_getnoPrimerArranque
  2537     0F77  1283               	bcf	3,5	;RP0=0, select bank0
  2538     0F78  1303               	bcf	3,6	;RP1=0, select bank0
  2539     0F79  0329               	decf	?_getnoPrimerArranque,w
  2540     0F7A  042A               	iorwf	?_getnoPrimerArranque+1,w
  2541     0F7B  1D03               	btfss	3,2
  2542     0F7C  2F7E               	goto	u2351
  2543     0F7D  2F7F               	goto	u2350
  2544     0F7E                     u2351:
  2545     0F7E  2F9A               	goto	l3060
  2546     0F7F                     u2350:
  2547     0F7F                     l3054:
  2548                           
  2549                           ;main.c: 456:         printf("Default");
  2550     0F7F  308F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2551     0F80  120A  118A  2222  120A  158A  	fcall	_printf
  2552     0F85                     l3056:
  2553                           
  2554                           ;main.c: 457:         setPWM(0);
  2555     0F85  3000               	movlw	0
  2556     0F86  120A  158A  262E  120A  158A  	fcall	_setPWM
  2557     0F8B                     l3058:
  2558                           
  2559                           ;main.c: 458:         setLED(255, 255, 255, 31);
  2560     0F8B  30FF               	movlw	255
  2561     0F8C  1283               	bcf	3,5	;RP0=0, select bank0
  2562     0F8D  1303               	bcf	3,6	;RP1=0, select bank0
  2563     0F8E  00B2               	movwf	setLED@green
  2564     0F8F  30FF               	movlw	255
  2565     0F90  00B3               	movwf	setLED@blue
  2566     0F91  301F               	movlw	31
  2567     0F92  00B4               	movwf	setLED@luminosidad
  2568     0F93  30FF               	movlw	255
  2569     0F94  120A  118A  2741  120A  158A  	fcall	_setLED
  2570                           
  2571                           ;main.c: 459:     } else {
  2572     0F99  2FB4               	goto	l281
  2573     0F9A                     l3060:
  2574                           
  2575                           ;main.c: 460:         printf("Custom");
  2576     0F9A  3097               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2577     0F9B  120A  118A  2222  120A  158A  	fcall	_printf
  2578     0FA0                     l3062:
  2579                           
  2580                           ;main.c: 462:         setPWM(0);
  2581     0FA0  3000               	movlw	0
  2582     0FA1  120A  158A  262E  120A  158A  	fcall	_setPWM
  2583     0FA6                     l3064:
  2584                           
  2585                           ;main.c: 463:         setLED(255, 255, 255, 31);
  2586     0FA6  30FF               	movlw	255
  2587     0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  2588     0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  2589     0FA9  00B2               	movwf	setLED@green
  2590     0FAA  30FF               	movlw	255
  2591     0FAB  00B3               	movwf	setLED@blue
  2592     0FAC  301F               	movlw	31
  2593     0FAD  00B4               	movwf	setLED@luminosidad
  2594     0FAE  30FF               	movlw	255
  2595     0FAF  120A  118A  2741  120A  158A  	fcall	_setLED
  2596     0FB4                     l281:
  2597     0FB4  0008               	return
  2598     0FB5                     __end_of_initActuadoresSegunMemoria:
  2599                           
  2600                           	psect	text12
  2601     0E2E                     __ptext12:	
  2602 ;; *************** function _setPWM *****************
  2603 ;; Defined at:
  2604 ;;		line 357 in file "main.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  porcent         1    wreg     unsigned char 
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;  porcent         1   20[BANK0 ] unsigned char 
  2609 ;;  direccion       1   19[BANK0 ] unsigned char 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2619 ;;      Params:         0       0       0       0       0
  2620 ;;      Locals:         0       2       0       0       0
  2621 ;;      Temps:          0       2       0       0       0
  2622 ;;      Totals:         0       4       0       0       0
  2623 ;;Total ram usage:        4 bytes
  2624 ;; Hardware stack levels used: 1
  2625 ;; Hardware stack levels required when called: 6
  2626 ;; This function calls:
  2627 ;;		___awdiv
  2628 ;;		___bmul
  2629 ;;		_escribirMemoria
  2630 ;; This function is called by:
  2631 ;;		_initActuadoresSegunMemoria
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635     0E2E                     _setPWM:	
  2636                           ;psect for function _setPWM
  2637                           
  2638                           
  2639                           ;incstack = 0
  2640                           ; Regs used in _setPWM: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2641                           ;setPWM@porcent stored from wreg
  2642     0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  2643     0E2F  1303               	bcf	3,6	;RP1=0, select bank0
  2644     0E30  00B4               	movwf	setPWM@porcent
  2645     0E31                     l2400:
  2646                           
  2647                           ;main.c: 358:     porcentaje = (char) (porcent / 100);
  2648     0E31  3064               	movlw	100
  2649     0E32  00A8               	movwf	___awdiv@divisor
  2650     0E33  3000               	movlw	0
  2651     0E34  00A9               	movwf	___awdiv@divisor+1
  2652     0E35  0834               	movf	setPWM@porcent,w
  2653     0E36  00B1               	movwf	??_setPWM
  2654     0E37  01B2               	clrf	??_setPWM+1
  2655     0E38  0831               	movf	??_setPWM,w
  2656     0E39  00AA               	movwf	___awdiv@dividend
  2657     0E3A  0832               	movf	??_setPWM+1,w
  2658     0E3B  00AB               	movwf	___awdiv@dividend+1
  2659     0E3C  120A  118A  24F1  120A  158A  	fcall	___awdiv
  2660     0E41  1283               	bcf	3,5	;RP0=0, select bank0
  2661     0E42  1303               	bcf	3,6	;RP1=0, select bank0
  2662     0E43  0828               	movf	?___awdiv,w
  2663     0E44  00E4               	movwf	_porcentaje
  2664                           
  2665                           ;main.c: 360:     CCPR1L = porcentaje * porcentajeMax;
  2666     0E45  0855               	movf	_porcentajeMax,w
  2667     0E46  00A8               	movwf	___bmul@multiplicand
  2668     0E47  0864               	movf	_porcentaje,w
  2669     0E48  120A  158A  24AA  120A  158A  	fcall	___bmul
  2670     0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  2671     0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  2672     0E4F  0095               	movwf	21	;volatile
  2673     0E50                     l2402:
  2674                           
  2675                           ;main.c: 362:     escribirMemoria(direccionPWM, porcent);
  2676     0E50  0834               	movf	setPWM@porcent,w
  2677     0E51  00A9               	movwf	escribirMemoria@dato
  2678     0E52  0857               	movf	_direccionPWM,w
  2679     0E53  120A  118A  247B  120A  158A  	fcall	_escribirMemoria
  2680     0E58                     l2404:
  2681                           
  2682                           ;main.c: 364:     char direccion = direccionInicial;
  2683     0E58  1283               	bcf	3,5	;RP0=0, select bank0
  2684     0E59  1303               	bcf	3,6	;RP1=0, select bank0
  2685     0E5A  0867               	movf	_direccionInicial,w
  2686     0E5B  00B3               	movwf	setPWM@direccion
  2687     0E5C                     l2406:
  2688                           
  2689                           ;main.c: 365:     escribirMemoria(direccion, 0b00000000);
  2690     0E5C  01A9               	clrf	escribirMemoria@dato
  2691     0E5D  0833               	movf	setPWM@direccion,w
  2692     0E5E  120A  118A  247B  120A  158A  	fcall	_escribirMemoria
  2693     0E63                     l2408:
  2694                           
  2695                           ;main.c: 366:     pPWM = porcent;
  2696     0E63  1283               	bcf	3,5	;RP0=0, select bank0
  2697     0E64  1303               	bcf	3,6	;RP1=0, select bank0
  2698     0E65  0834               	movf	setPWM@porcent,w
  2699     0E66  00E6               	movwf	_pPWM
  2700     0E67                     l250:
  2701     0E67  0008               	return
  2702     0E68                     __end_of_setPWM:
  2703                           
  2704                           	psect	text13
  2705     0CAA                     __ptext13:	
  2706 ;; *************** function ___bmul *****************
  2707 ;; Defined at:
  2708 ;;		line 4 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/Umul8.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;  multiplier      1    wreg     unsigned char 
  2711 ;;  multiplicand    1    8[BANK0 ] unsigned char 
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;  multiplier      1   11[BANK0 ] unsigned char 
  2714 ;;  product         1   10[BANK0 ] unsigned char 
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      unsigned char 
  2717 ;; Registers used:
  2718 ;;		wreg, status,2, status,0
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2724 ;;      Params:         0       1       0       0       0
  2725 ;;      Locals:         0       2       0       0       0
  2726 ;;      Temps:          0       1       0       0       0
  2727 ;;      Totals:         0       4       0       0       0
  2728 ;;Total ram usage:        4 bytes
  2729 ;; Hardware stack levels used: 1
  2730 ;; Hardware stack levels required when called: 4
  2731 ;; This function calls:
  2732 ;;		Nothing
  2733 ;; This function is called by:
  2734 ;;		_setPWM
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738     0CAA                     ___bmul:	
  2739                           ;psect for function ___bmul
  2740                           
  2741                           
  2742                           ;incstack = 0
  2743                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2744                           ;___bmul@multiplier stored from wreg
  2745     0CAA  1283               	bcf	3,5	;RP0=0, select bank0
  2746     0CAB  1303               	bcf	3,6	;RP1=0, select bank0
  2747     0CAC  00AB               	movwf	___bmul@multiplier
  2748     0CAD                     l2110:
  2749     0CAD  01AA               	clrf	___bmul@product
  2750     0CAE                     l2112:
  2751     0CAE  1C2B               	btfss	___bmul@multiplier,0
  2752     0CAF  2CB1               	goto	u1241
  2753     0CB0  2CB2               	goto	u1240
  2754     0CB1                     u1241:
  2755     0CB1  2CB6               	goto	l2116
  2756     0CB2                     u1240:
  2757     0CB2                     l2114:
  2758     0CB2  0828               	movf	___bmul@multiplicand,w
  2759     0CB3  00A9               	movwf	??___bmul
  2760     0CB4  0829               	movf	??___bmul,w
  2761     0CB5  07AA               	addwf	___bmul@product,f
  2762     0CB6                     l2116:
  2763     0CB6  1003               	clrc
  2764     0CB7  0DA8               	rlf	___bmul@multiplicand,f
  2765     0CB8                     l2118:
  2766     0CB8  1003               	clrc
  2767     0CB9  0CAB               	rrf	___bmul@multiplier,f
  2768     0CBA  082B               	movf	___bmul@multiplier,w
  2769     0CBB  1D03               	btfss	3,2
  2770     0CBC  2CBE               	goto	u1251
  2771     0CBD  2CBF               	goto	u1250
  2772     0CBE                     u1251:
  2773     0CBE  2CAE               	goto	l2112
  2774     0CBF                     u1250:
  2775     0CBF                     l2120:
  2776     0CBF  082A               	movf	___bmul@product,w
  2777     0CC0                     l526:
  2778     0CC0  0008               	return
  2779     0CC1                     __end_of___bmul:
  2780                           
  2781                           	psect	text14
  2782     04F1                     __ptext14:	
  2783 ;; *************** function ___awdiv *****************
  2784 ;; Defined at:
  2785 ;;		line 5 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/awdiv.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;  divisor         2    8[BANK0 ] int 
  2788 ;;  dividend        2   10[BANK0 ] int 
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;  quotient        2   15[BANK0 ] int 
  2791 ;;  sign            1   14[BANK0 ] unsigned char 
  2792 ;;  counter         1   13[BANK0 ] unsigned char 
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  2    8[BANK0 ] int 
  2795 ;; Registers used:
  2796 ;;		wreg, status,2, status,0
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2802 ;;      Params:         0       4       0       0       0
  2803 ;;      Locals:         0       4       0       0       0
  2804 ;;      Temps:          0       1       0       0       0
  2805 ;;      Totals:         0       9       0       0       0
  2806 ;;Total ram usage:        9 bytes
  2807 ;; Hardware stack levels used: 1
  2808 ;; Hardware stack levels required when called: 4
  2809 ;; This function calls:
  2810 ;;		Nothing
  2811 ;; This function is called by:
  2812 ;;		_setPWM
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816     04F1                     ___awdiv:	
  2817                           ;psect for function ___awdiv
  2818                           
  2819     04F1                     l2124:	
  2820                           ;incstack = 0
  2821                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2822                           
  2823     04F1  1283               	bcf	3,5	;RP0=0, select bank0
  2824     04F2  1303               	bcf	3,6	;RP1=0, select bank0
  2825     04F3  01AE               	clrf	___awdiv@sign
  2826     04F4                     l2126:
  2827     04F4  1FA9               	btfss	___awdiv@divisor+1,7
  2828     04F5  2CF7               	goto	u1261
  2829     04F6  2CF8               	goto	u1260
  2830     04F7                     u1261:
  2831     04F7  2CFF               	goto	l2132
  2832     04F8                     u1260:
  2833     04F8                     l2128:
  2834     04F8  09A8               	comf	___awdiv@divisor,f
  2835     04F9  09A9               	comf	___awdiv@divisor+1,f
  2836     04FA  0AA8               	incf	___awdiv@divisor,f
  2837     04FB  1903               	skipnz
  2838     04FC  0AA9               	incf	___awdiv@divisor+1,f
  2839     04FD                     l2130:
  2840     04FD  01AE               	clrf	___awdiv@sign
  2841     04FE  0AAE               	incf	___awdiv@sign,f
  2842     04FF                     l2132:
  2843     04FF  1FAB               	btfss	___awdiv@dividend+1,7
  2844     0500  2D02               	goto	u1271
  2845     0501  2D03               	goto	u1270
  2846     0502                     u1271:
  2847     0502  2D0C               	goto	l2138
  2848     0503                     u1270:
  2849     0503                     l2134:
  2850     0503  09AA               	comf	___awdiv@dividend,f
  2851     0504  09AB               	comf	___awdiv@dividend+1,f
  2852     0505  0AAA               	incf	___awdiv@dividend,f
  2853     0506  1903               	skipnz
  2854     0507  0AAB               	incf	___awdiv@dividend+1,f
  2855     0508                     l2136:
  2856     0508  3001               	movlw	1
  2857     0509  00AC               	movwf	??___awdiv
  2858     050A  082C               	movf	??___awdiv,w
  2859     050B  06AE               	xorwf	___awdiv@sign,f
  2860     050C                     l2138:
  2861     050C  01AF               	clrf	___awdiv@quotient
  2862     050D  01B0               	clrf	___awdiv@quotient+1
  2863     050E                     l2140:
  2864     050E  0828               	movf	___awdiv@divisor,w
  2865     050F  0429               	iorwf	___awdiv@divisor+1,w
  2866     0510  1903               	btfsc	3,2
  2867     0511  2D13               	goto	u1281
  2868     0512  2D14               	goto	u1280
  2869     0513                     u1281:
  2870     0513  2D4B               	goto	l2160
  2871     0514                     u1280:
  2872     0514                     l2142:
  2873     0514  01AD               	clrf	___awdiv@counter
  2874     0515  0AAD               	incf	___awdiv@counter,f
  2875     0516  2D22               	goto	l2148
  2876     0517                     l2144:
  2877     0517  3001               	movlw	1
  2878     0518                     u1295:
  2879     0518  1003               	clrc
  2880     0519  0DA8               	rlf	___awdiv@divisor,f
  2881     051A  0DA9               	rlf	___awdiv@divisor+1,f
  2882     051B  3EFF               	addlw	-1
  2883     051C  1D03               	skipz
  2884     051D  2D18               	goto	u1295
  2885     051E                     l2146:
  2886     051E  3001               	movlw	1
  2887     051F  00AC               	movwf	??___awdiv
  2888     0520  082C               	movf	??___awdiv,w
  2889     0521  07AD               	addwf	___awdiv@counter,f
  2890     0522                     l2148:
  2891     0522  1FA9               	btfss	___awdiv@divisor+1,7
  2892     0523  2D25               	goto	u1301
  2893     0524  2D26               	goto	u1300
  2894     0525                     u1301:
  2895     0525  2D17               	goto	l2144
  2896     0526                     u1300:
  2897     0526                     l2150:
  2898     0526  3001               	movlw	1
  2899     0527                     u1315:
  2900     0527  1003               	clrc
  2901     0528  0DAF               	rlf	___awdiv@quotient,f
  2902     0529  0DB0               	rlf	___awdiv@quotient+1,f
  2903     052A  3EFF               	addlw	-1
  2904     052B  1D03               	skipz
  2905     052C  2D27               	goto	u1315
  2906     052D  0829               	movf	___awdiv@divisor+1,w
  2907     052E  022B               	subwf	___awdiv@dividend+1,w
  2908     052F  1D03               	skipz
  2909     0530  2D33               	goto	u1325
  2910     0531  0828               	movf	___awdiv@divisor,w
  2911     0532  022A               	subwf	___awdiv@dividend,w
  2912     0533                     u1325:
  2913     0533  1C03               	skipc
  2914     0534  2D36               	goto	u1321
  2915     0535  2D37               	goto	u1320
  2916     0536                     u1321:
  2917     0536  2D3E               	goto	l2156
  2918     0537                     u1320:
  2919     0537                     l2152:
  2920     0537  0828               	movf	___awdiv@divisor,w
  2921     0538  02AA               	subwf	___awdiv@dividend,f
  2922     0539  0829               	movf	___awdiv@divisor+1,w
  2923     053A  1C03               	skipc
  2924     053B  03AB               	decf	___awdiv@dividend+1,f
  2925     053C  02AB               	subwf	___awdiv@dividend+1,f
  2926     053D                     l2154:
  2927     053D  142F               	bsf	___awdiv@quotient,0
  2928     053E                     l2156:
  2929     053E  3001               	movlw	1
  2930     053F                     u1335:
  2931     053F  1003               	clrc
  2932     0540  0CA9               	rrf	___awdiv@divisor+1,f
  2933     0541  0CA8               	rrf	___awdiv@divisor,f
  2934     0542  3EFF               	addlw	-1
  2935     0543  1D03               	skipz
  2936     0544  2D3F               	goto	u1335
  2937     0545                     l2158:
  2938     0545  3001               	movlw	1
  2939     0546  02AD               	subwf	___awdiv@counter,f
  2940     0547  1D03               	btfss	3,2
  2941     0548  2D4A               	goto	u1341
  2942     0549  2D4B               	goto	u1340
  2943     054A                     u1341:
  2944     054A  2D26               	goto	l2150
  2945     054B                     u1340:
  2946     054B                     l2160:
  2947     054B  082E               	movf	___awdiv@sign,w
  2948     054C  1903               	btfsc	3,2
  2949     054D  2D4F               	goto	u1351
  2950     054E  2D50               	goto	u1350
  2951     054F                     u1351:
  2952     054F  2D55               	goto	l2164
  2953     0550                     u1350:
  2954     0550                     l2162:
  2955     0550  09AF               	comf	___awdiv@quotient,f
  2956     0551  09B0               	comf	___awdiv@quotient+1,f
  2957     0552  0AAF               	incf	___awdiv@quotient,f
  2958     0553  1903               	skipnz
  2959     0554  0AB0               	incf	___awdiv@quotient+1,f
  2960     0555                     l2164:
  2961     0555  0830               	movf	___awdiv@quotient+1,w
  2962     0556  00A9               	movwf	?___awdiv+1
  2963     0557  082F               	movf	___awdiv@quotient,w
  2964     0558  00A8               	movwf	?___awdiv
  2965     0559                     l653:
  2966     0559  0008               	return
  2967     055A                     __end_of___awdiv:
  2968                           
  2969                           	psect	text15
  2970     0741                     __ptext15:	
  2971 ;; *************** function _setLED *****************
  2972 ;; Defined at:
  2973 ;;		line 400 in file "main.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  red             1    wreg     unsigned char 
  2976 ;;  green           1   18[BANK0 ] unsigned char 
  2977 ;;  blue            1   19[BANK0 ] unsigned char 
  2978 ;;  luminosidad     1   20[BANK0 ] unsigned char 
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;  red             1   22[BANK0 ] unsigned char 
  2981 ;;  direccion       1   21[BANK0 ] unsigned char 
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1    wreg      void 
  2984 ;; Registers used:
  2985 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2991 ;;      Params:         0       3       0       0       0
  2992 ;;      Locals:         0       2       0       0       0
  2993 ;;      Temps:          0       0       0       0       0
  2994 ;;      Totals:         0       5       0       0       0
  2995 ;;Total ram usage:        5 bytes
  2996 ;; Hardware stack levels used: 1
  2997 ;; Hardware stack levels required when called: 6
  2998 ;; This function calls:
  2999 ;;		_cosasSPI
  3000 ;;		_escribirMemoria
  3001 ;; This function is called by:
  3002 ;;		_initActuadoresSegunMemoria
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006     0741                     _setLED:	
  3007                           ;psect for function _setLED
  3008                           
  3009                           
  3010                           ;incstack = 0
  3011                           ; Regs used in _setLED: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3012                           ;setLED@red stored from wreg
  3013     0741  1283               	bcf	3,5	;RP0=0, select bank0
  3014     0742  1303               	bcf	3,6	;RP1=0, select bank0
  3015     0743  00B6               	movwf	setLED@red
  3016     0744                     l2410:
  3017                           
  3018                           ;main.c: 402:     cosasSPI(red, green, blue, luminosidad);
  3019     0744  0832               	movf	setLED@green,w
  3020     0745  00AD               	movwf	cosasSPI@verd
  3021     0746  0833               	movf	setLED@blue,w
  3022     0747  00AE               	movwf	cosasSPI@azu
  3023     0748  0834               	movf	setLED@luminosidad,w
  3024     0749  00AF               	movwf	cosasSPI@lumi
  3025     074A  0836               	movf	setLED@red,w
  3026     074B  120A  118A  25C1  120A  118A  	fcall	_cosasSPI
  3027     0750                     l2412:
  3028                           
  3029                           ;main.c: 404:     miLED[0] = red;
  3030     0750  1283               	bcf	3,5	;RP0=0, select bank0
  3031     0751  1303               	bcf	3,6	;RP1=0, select bank0
  3032     0752  0836               	movf	setLED@red,w
  3033     0753  00D9               	movwf	_miLED
  3034     0754                     l2414:
  3035                           
  3036                           ;main.c: 405:     miLED[1] = green;
  3037     0754  0832               	movf	setLED@green,w
  3038     0755  00DA               	movwf	_miLED+1
  3039     0756                     l2416:
  3040                           
  3041                           ;main.c: 406:     miLED[2] = blue;
  3042     0756  0833               	movf	setLED@blue,w
  3043     0757  00DB               	movwf	_miLED+2
  3044     0758                     l2418:
  3045                           
  3046                           ;main.c: 407:     miLED[3] = luminosidad;
  3047     0758  0834               	movf	setLED@luminosidad,w
  3048     0759  00DC               	movwf	_miLED+3
  3049     075A                     l2420:
  3050                           
  3051                           ;main.c: 409:     char direccion = direccionInicial;
  3052     075A  0867               	movf	_direccionInicial,w
  3053     075B  00B5               	movwf	setLED@direccion
  3054     075C                     l2422:
  3055                           
  3056                           ;main.c: 410:     escribirMemoria(direccion, 0b00000000);
  3057     075C  01A9               	clrf	escribirMemoria@dato
  3058     075D  0835               	movf	setLED@direccion,w
  3059     075E  120A  118A  247B  120A  118A  	fcall	_escribirMemoria
  3060     0763                     l2424:
  3061                           
  3062                           ;main.c: 411:     escribirMemoria(direccionLED, miLED[0]);
  3063     0763  1283               	bcf	3,5	;RP0=0, select bank0
  3064     0764  1303               	bcf	3,6	;RP1=0, select bank0
  3065     0765  0859               	movf	_miLED,w
  3066     0766  00A9               	movwf	escribirMemoria@dato
  3067     0767  0856               	movf	_direccionLED,w
  3068     0768  120A  118A  247B  120A  118A  	fcall	_escribirMemoria
  3069     076D                     l2426:
  3070                           
  3071                           ;main.c: 412:     escribirMemoria(direccionLED + 1 * sizeof (char), miLED[1]);
  3072     076D  1283               	bcf	3,5	;RP0=0, select bank0
  3073     076E  1303               	bcf	3,6	;RP1=0, select bank0
  3074     076F  085A               	movf	_miLED+1,w
  3075     0770  00A9               	movwf	escribirMemoria@dato
  3076     0771  0856               	movf	_direccionLED,w
  3077     0772  3E01               	addlw	1
  3078     0773  120A  118A  247B  120A  118A  	fcall	_escribirMemoria
  3079     0778                     l2428:
  3080                           
  3081                           ;main.c: 413:     escribirMemoria(direccionLED + 2 * sizeof (char), miLED[2]);
  3082     0778  1283               	bcf	3,5	;RP0=0, select bank0
  3083     0779  1303               	bcf	3,6	;RP1=0, select bank0
  3084     077A  085B               	movf	_miLED+2,w
  3085     077B  00A9               	movwf	escribirMemoria@dato
  3086     077C  0856               	movf	_direccionLED,w
  3087     077D  3E02               	addlw	2
  3088     077E  120A  118A  247B  120A  118A  	fcall	_escribirMemoria
  3089     0783                     l2430:
  3090                           
  3091                           ;main.c: 414:     escribirMemoria(direccionLED + 3 * sizeof (char), miLED[3]);
  3092     0783  1283               	bcf	3,5	;RP0=0, select bank0
  3093     0784  1303               	bcf	3,6	;RP1=0, select bank0
  3094     0785  085C               	movf	_miLED+3,w
  3095     0786  00A9               	movwf	escribirMemoria@dato
  3096     0787  0856               	movf	_direccionLED,w
  3097     0788  3E03               	addlw	3
  3098     0789  120A  118A  247B  120A  118A  	fcall	_escribirMemoria
  3099     078E                     l261:
  3100     078E  0008               	return
  3101     078F                     __end_of_setLED:
  3102                           
  3103                           	psect	text16
  3104     047B                     __ptext16:	
  3105 ;; *************** function _escribirMemoria *****************
  3106 ;; Defined at:
  3107 ;;		line 289 in file "main.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;  direccion       1    wreg     unsigned char 
  3110 ;;  dato            1    9[BANK0 ] unsigned char 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  direccion       1   12[BANK0 ] unsigned char 
  3113 ;;  contador        2   13[BANK0 ] int 
  3114 ;;  confirmado      2   10[BANK0 ] int 
  3115 ;;  valorSal        2    0        int 
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  2    9[BANK0 ] int 
  3118 ;; Registers used:
  3119 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3125 ;;      Params:         0       1       0       0       0
  3126 ;;      Locals:         0       5       0       0       0
  3127 ;;      Temps:          0       0       0       0       0
  3128 ;;      Totals:         0       6       0       0       0
  3129 ;;Total ram usage:        6 bytes
  3130 ;; Hardware stack levels used: 1
  3131 ;; Hardware stack levels required when called: 5
  3132 ;; This function calls:
  3133 ;;		_leerMemoria
  3134 ;; This function is called by:
  3135 ;;		_setPWM
  3136 ;;		_setLED
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140     047B                     _escribirMemoria:	
  3141                           ;psect for function _escribirMemoria
  3142                           
  3143                           
  3144                           ;incstack = 0
  3145                           ; Regs used in _escribirMemoria: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3146                           ;escribirMemoria@direccion stored from wreg
  3147     047B  1283               	bcf	3,5	;RP0=0, select bank0
  3148     047C  1303               	bcf	3,6	;RP1=0, select bank0
  3149     047D  00AC               	movwf	escribirMemoria@direccion
  3150     047E                     l2044:
  3151                           
  3152                           ;main.c: 290:     int valorSal;;main.c: 291:     EECON1bits.EEPGD = 0;
  3153     047E  1683               	bsf	3,5	;RP0=1, select bank3
  3154     047F  1703               	bsf	3,6	;RP1=1, select bank3
  3155     0480  138C               	bcf	12,7	;volsfr
  3156                           
  3157                           ;main.c: 293:     EECON1bits.WREN = 1;
  3158     0481  150C               	bsf	12,2	;volsfr
  3159     0482                     l2046:
  3160                           
  3161                           ;main.c: 294:     EEADRH = 0;
  3162     0482  1283               	bcf	3,5	;RP0=0, select bank2
  3163     0483  1703               	bsf	3,6	;RP1=1, select bank2
  3164     0484  018F               	clrf	15	;volatile
  3165     0485                     l2048:
  3166                           
  3167                           ;main.c: 295:     EEADR = direccion;
  3168     0485  1283               	bcf	3,5	;RP0=0, select bank0
  3169     0486  1303               	bcf	3,6	;RP1=0, select bank0
  3170     0487  082C               	movf	escribirMemoria@direccion,w
  3171     0488  1283               	bcf	3,5	;RP0=0, select bank2
  3172     0489  1703               	bsf	3,6	;RP1=1, select bank2
  3173     048A  008D               	movwf	13	;volatile
  3174     048B                     l2050:
  3175                           
  3176                           ;main.c: 296:     if (EECON1bits.RD == 0) {
  3177     048B  1683               	bsf	3,5	;RP0=1, select bank3
  3178     048C  1703               	bsf	3,6	;RP1=1, select bank3
  3179     048D  180C               	btfsc	12,0	;volsfr
  3180     048E  2C90               	goto	u1171
  3181     048F  2C91               	goto	u1170
  3182     0490                     u1171:
  3183     0490  2CED               	goto	l2078
  3184     0491                     u1170:
  3185     0491                     l2052:
  3186                           
  3187                           ;main.c: 297:         int contador = 0;
  3188     0491  1283               	bcf	3,5	;RP0=0, select bank0
  3189     0492  1303               	bcf	3,6	;RP1=0, select bank0
  3190     0493  01AD               	clrf	escribirMemoria@contador
  3191     0494  01AE               	clrf	escribirMemoria@contador+1
  3192                           
  3193                           ;main.c: 298:         int confirmado = 0;
  3194     0495  01AA               	clrf	escribirMemoria@confirmado
  3195     0496  01AB               	clrf	escribirMemoria@confirmado+1
  3196                           
  3197                           ;main.c: 299:         while (contador < 10 && confirmado == 0) {
  3198     0497  2CC7               	goto	l2068
  3199     0498                     l225:
  3200                           
  3201                           ;main.c: 300:             INTCONbits.GIE = 0;
  3202     0498  138B               	bcf	11,7	;volatile
  3203     0499                     l2054:
  3204                           
  3205                           ;main.c: 301:             EEDAT = dato;
  3206     0499  0829               	movf	escribirMemoria@dato,w
  3207     049A  1283               	bcf	3,5	;RP0=0, select bank2
  3208     049B  1703               	bsf	3,6	;RP1=1, select bank2
  3209     049C  008C               	movwf	12	;volatile
  3210                           
  3211                           ;main.c: 302:             EECON2 = 0x55;
  3212     049D  3055               	movlw	85
  3213     049E  1683               	bsf	3,5	;RP0=1, select bank3
  3214     049F  1703               	bsf	3,6	;RP1=1, select bank3
  3215     04A0  008D               	movwf	13	;volsfr
  3216                           
  3217                           ;main.c: 303:             EECON2 = 0xAA;
  3218     04A1  30AA               	movlw	170
  3219     04A2  008D               	movwf	13	;volsfr
  3220     04A3                     l2056:
  3221                           
  3222                           ;main.c: 304:             EECON1bits.WR = 1;
  3223     04A3  148C               	bsf	12,1	;volsfr
  3224     04A4                     l2058:
  3225                           
  3226                           ;main.c: 305:             INTCONbits.GIE = 1;
  3227     04A4  178B               	bsf	11,7	;volatile
  3228     04A5                     l226:	
  3229                           ;main.c: 306:             while (EECON1bits.WR == 1);
  3230                           
  3231     04A5  188C               	btfsc	12,1	;volsfr
  3232     04A6  2CA8               	goto	u1181
  3233     04A7  2CA9               	goto	u1180
  3234     04A8                     u1181:
  3235     04A8  2CA5               	goto	l226
  3236     04A9                     u1180:
  3237     04A9                     l2060:
  3238                           
  3239                           ;main.c: 307:             continuoEscribiendo = 0;
  3240     04A9  1683               	bsf	3,5	;RP0=1, select bank1
  3241     04AA  1303               	bcf	3,6	;RP1=0, select bank1
  3242     04AB  01B6               	clrf	_continuoEscribiendo^(0+128)
  3243     04AC  01B7               	clrf	(_continuoEscribiendo+1)^(0+128)
  3244     04AD                     l2062:
  3245                           
  3246                           ;main.c: 308:             if (leerMemoria(direccion) == dato)
  3247     04AD  1283               	bcf	3,5	;RP0=0, select bank0
  3248     04AE  1303               	bcf	3,6	;RP1=0, select bank0
  3249     04AF  082C               	movf	escribirMemoria@direccion,w
  3250     04B0  120A  158A  24F2  120A  118A  	fcall	_leerMemoria
  3251     04B5  1283               	bcf	3,5	;RP0=0, select bank0
  3252     04B6  1303               	bcf	3,6	;RP1=0, select bank0
  3253     04B7  0629               	xorwf	escribirMemoria@dato,w
  3254     04B8  1D03               	skipz
  3255     04B9  2CBB               	goto	u1191
  3256     04BA  2CBC               	goto	u1190
  3257     04BB                     u1191:
  3258     04BB  2CC1               	goto	l2066
  3259     04BC                     u1190:
  3260     04BC                     l2064:
  3261                           
  3262                           ;main.c: 309:                 confirmado = 1;
  3263     04BC  3001               	movlw	1
  3264     04BD  00AA               	movwf	escribirMemoria@confirmado
  3265     04BE  3000               	movlw	0
  3266     04BF  00AB               	movwf	escribirMemoria@confirmado+1
  3267     04C0  2CC7               	goto	l2068
  3268     04C1                     l2066:
  3269                           
  3270                           ;main.c: 311:                 contador++;
  3271     04C1  3001               	movlw	1
  3272     04C2  07AD               	addwf	escribirMemoria@contador,f
  3273     04C3  1803               	skipnc
  3274     04C4  0AAE               	incf	escribirMemoria@contador+1,f
  3275     04C5  3000               	movlw	0
  3276     04C6  07AE               	addwf	escribirMemoria@contador+1,f
  3277     04C7                     l2068:
  3278                           
  3279                           ;main.c: 299:         while (contador < 10 && confirmado == 0) {
  3280     04C7  082E               	movf	escribirMemoria@contador+1,w
  3281     04C8  3A80               	xorlw	128
  3282     04C9  00FF               	movwf	btemp+1
  3283     04CA  3080               	movlw	128
  3284     04CB  027F               	subwf	btemp+1,w
  3285     04CC  1D03               	skipz
  3286     04CD  2CD0               	goto	u1205
  3287     04CE  300A               	movlw	10
  3288     04CF  022D               	subwf	escribirMemoria@contador,w
  3289     04D0                     u1205:
  3290     04D0  1803               	skipnc
  3291     04D1  2CD3               	goto	u1201
  3292     04D2  2CD4               	goto	u1200
  3293     04D3                     u1201:
  3294     04D3  2CDC               	goto	l2072
  3295     04D4                     u1200:
  3296     04D4                     l2070:
  3297     04D4  1283               	bcf	3,5	;RP0=0, select bank0
  3298     04D5  1303               	bcf	3,6	;RP1=0, select bank0
  3299     04D6  082A               	movf	escribirMemoria@confirmado,w
  3300     04D7  042B               	iorwf	escribirMemoria@confirmado+1,w
  3301     04D8  1903               	btfsc	3,2
  3302     04D9  2CDB               	goto	u1211
  3303     04DA  2CDC               	goto	u1210
  3304     04DB                     u1211:
  3305     04DB  2C98               	goto	l225
  3306     04DC                     u1210:
  3307     04DC                     l2072:
  3308                           
  3309                           ;main.c: 313:         if (contador >= 10) valorSal = 1;
  3310     04DC  1283               	bcf	3,5	;RP0=0, select bank0
  3311     04DD  1303               	bcf	3,6	;RP1=0, select bank0
  3312     04DE  082E               	movf	escribirMemoria@contador+1,w
  3313     04DF  3A80               	xorlw	128
  3314     04E0  00FF               	movwf	btemp+1
  3315     04E1  3080               	movlw	128
  3316     04E2  027F               	subwf	btemp+1,w
  3317     04E3  1D03               	skipz
  3318     04E4  2CE7               	goto	u1225
  3319     04E5  300A               	movlw	10
  3320     04E6  022D               	subwf	escribirMemoria@contador,w
  3321     04E7                     u1225:
  3322     04E7  1C03               	skipc
  3323     04E8  2CEA               	goto	u1221
  3324     04E9  2CEB               	goto	u1220
  3325     04EA                     u1221:
  3326     04EA  2CEC               	goto	l2076
  3327     04EB                     u1220:
  3328     04EB                     l2074:
  3329     04EB  2CED               	goto	l2080
  3330     04EC                     l2076:
  3331     04EC  2CED               	goto	l2080
  3332     04ED                     l2078:
  3333     04ED                     l2080:
  3334                           
  3335                           ;main.c: 316:     EECON1bits.WREN = 0;
  3336     04ED  1683               	bsf	3,5	;RP0=1, select bank3
  3337     04EE  1703               	bsf	3,6	;RP1=1, select bank3
  3338     04EF  110C               	bcf	12,2	;volsfr
  3339     04F0                     l237:
  3340     04F0  0008               	return
  3341     04F1                     __end_of_escribirMemoria:
  3342                           
  3343                           	psect	text17
  3344     05C1                     __ptext17:	
  3345 ;; *************** function _cosasSPI *****************
  3346 ;; Defined at:
  3347 ;;		line 376 in file "main.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;  roj             1    wreg     unsigned char 
  3350 ;;  verd            1   13[BANK0 ] unsigned char 
  3351 ;;  azu             1   14[BANK0 ] unsigned char 
  3352 ;;  lumi            1   15[BANK0 ] unsigned char 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  roj             1    0[COMMON] unsigned char 
  3355 ;;  i               2   16[BANK0 ] int 
  3356 ;;  lumo            1    0        unsigned char 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      void 
  3359 ;; Registers used:
  3360 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3366 ;;      Params:         0       3       0       0       0
  3367 ;;      Locals:         0       2       0       0       0
  3368 ;;      Temps:          0       0       0       0       0
  3369 ;;      Totals:         0       5       0       0       0
  3370 ;;Total ram usage:        5 bytes
  3371 ;; Hardware stack levels used: 1
  3372 ;; Hardware stack levels required when called: 5
  3373 ;; This function calls:
  3374 ;;		_spi_write_read
  3375 ;; This function is called by:
  3376 ;;		_setLED
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380     05C1                     _cosasSPI:	
  3381                           ;psect for function _cosasSPI
  3382                           
  3383     05C1                     l2084:	
  3384                           ;incstack = 0
  3385                           ; Regs used in _cosasSPI: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3386                           
  3387     05C1                     l2086:
  3388     05C1                     l2088:
  3389                           
  3390                           ;main.c: 379:     spi_write_read(0x00);
  3391     05C1  3000               	movlw	0
  3392     05C2  120A  158A  25C0  120A  118A  	fcall	_spi_write_read
  3393     05C7                     l2090:
  3394                           
  3395                           ;main.c: 380:     spi_write_read(0x00);
  3396     05C7  3000               	movlw	0
  3397     05C8  120A  158A  25C0  120A  118A  	fcall	_spi_write_read
  3398     05CD                     l2092:
  3399                           
  3400                           ;main.c: 381:     spi_write_read(0x00);
  3401     05CD  3000               	movlw	0
  3402     05CE  120A  158A  25C0  120A  118A  	fcall	_spi_write_read
  3403     05D3                     l2094:
  3404                           
  3405                           ;main.c: 382:     spi_write_read(0x00);
  3406     05D3  3000               	movlw	0
  3407     05D4  120A  158A  25C0  120A  118A  	fcall	_spi_write_read
  3408     05D9                     l2096:
  3409                           
  3410                           ;main.c: 383:     for (i = numLedes; i > 0; i--) {
  3411     05D9  1283               	bcf	3,5	;RP0=0, select bank0
  3412     05DA  1303               	bcf	3,6	;RP1=0, select bank0
  3413     05DB  084B               	movf	_numLedes+1,w
  3414     05DC  00B1               	movwf	cosasSPI@i+1
  3415     05DD  084A               	movf	_numLedes,w
  3416     05DE  00B0               	movwf	cosasSPI@i
  3417     05DF                     l2098:
  3418     05DF  0831               	movf	cosasSPI@i+1,w
  3419     05E0  3A80               	xorlw	128
  3420     05E1  00FF               	movwf	btemp+1
  3421     05E2  3080               	movlw	128
  3422     05E3  027F               	subwf	btemp+1,w
  3423     05E4  1D03               	skipz
  3424     05E5  2DE8               	goto	u1235
  3425     05E6  3001               	movlw	1
  3426     05E7  0230               	subwf	cosasSPI@i,w
  3427     05E8                     u1235:
  3428     05E8  1803               	skipnc
  3429     05E9  2DEB               	goto	u1231
  3430     05EA  2DEC               	goto	u1230
  3431     05EB                     u1231:
  3432     05EB  2DED               	goto	l2102
  3433     05EC                     u1230:
  3434     05EC  2E0E               	goto	l2108
  3435     05ED                     l2102:
  3436                           
  3437                           ;main.c: 385:         spi_write_read(0b11101111);
  3438     05ED  30EF               	movlw	239
  3439     05EE  120A  158A  25C0  120A  118A  	fcall	_spi_write_read
  3440                           
  3441                           ;main.c: 386:         spi_write_read(0b11111111);
  3442     05F3  30FF               	movlw	255
  3443     05F4  120A  158A  25C0  120A  118A  	fcall	_spi_write_read
  3444                           
  3445                           ;main.c: 387:         spi_write_read(0b11111111);
  3446     05F9  30FF               	movlw	255
  3447     05FA  120A  158A  25C0  120A  118A  	fcall	_spi_write_read
  3448                           
  3449                           ;main.c: 388:         spi_write_read(0b11111111);
  3450     05FF  30FF               	movlw	255
  3451     0600  120A  158A  25C0  120A  118A  	fcall	_spi_write_read
  3452     0605                     l2104:
  3453                           
  3454                           ;main.c: 392:     }
  3455     0605  30FF               	movlw	255
  3456     0606  1283               	bcf	3,5	;RP0=0, select bank0
  3457     0607  1303               	bcf	3,6	;RP1=0, select bank0
  3458     0608  07B0               	addwf	cosasSPI@i,f
  3459     0609  1803               	skipnc
  3460     060A  0AB1               	incf	cosasSPI@i+1,f
  3461     060B  30FF               	movlw	255
  3462     060C  07B1               	addwf	cosasSPI@i+1,f
  3463     060D  2DDF               	goto	l2098
  3464     060E                     l2108:
  3465                           
  3466                           ;main.c: 393:     spi_write_read(0xFF);
  3467     060E  30FF               	movlw	255
  3468     060F  120A  158A  25C0  120A  118A  	fcall	_spi_write_read
  3469                           
  3470                           ;main.c: 394:     spi_write_read(0xFF);
  3471     0614  30FF               	movlw	255
  3472     0615  120A  158A  25C0  120A  118A  	fcall	_spi_write_read
  3473                           
  3474                           ;main.c: 395:     spi_write_read(0xFF);
  3475     061A  30FF               	movlw	255
  3476     061B  120A  158A  25C0  120A  118A  	fcall	_spi_write_read
  3477                           
  3478                           ;main.c: 396:     spi_write_read(0xFF);
  3479     0620  30FF               	movlw	255
  3480     0621  120A  158A  25C0  120A  118A  	fcall	_spi_write_read
  3481     0626                     l258:
  3482     0626  0008               	return
  3483     0627                     __end_of_cosasSPI:
  3484                           
  3485                           	psect	text18
  3486     0DC0                     __ptext18:	
  3487 ;; *************** function _spi_write_read *****************
  3488 ;; Defined at:
  3489 ;;		line 8 in file "spi-master-v1.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;  one_byte        1    wreg     unsigned char 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  one_byte        1   10[BANK0 ] unsigned char 
  3494 ;;  x               1   12[BANK0 ] unsigned char 
  3495 ;;  answer          1   11[BANK0 ] unsigned char 
  3496 ;; Return value:  Size  Location     Type
  3497 ;;                  1    wreg      unsigned char 
  3498 ;; Registers used:
  3499 ;;		wreg, status,2, status,0
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3505 ;;      Params:         0       0       0       0       0
  3506 ;;      Locals:         0       3       0       0       0
  3507 ;;      Temps:          0       2       0       0       0
  3508 ;;      Totals:         0       5       0       0       0
  3509 ;;Total ram usage:        5 bytes
  3510 ;; Hardware stack levels used: 1
  3511 ;; Hardware stack levels required when called: 4
  3512 ;; This function calls:
  3513 ;;		Nothing
  3514 ;; This function is called by:
  3515 ;;		_cosasSPI
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519     0DC0                     _spi_write_read:	
  3520                           ;psect for function _spi_write_read
  3521                           
  3522                           
  3523                           ;incstack = 0
  3524                           ; Regs used in _spi_write_read: [wreg+status,2+status,0]
  3525                           ;spi_write_read@one_byte stored from wreg
  3526     0DC0  1283               	bcf	3,5	;RP0=0, select bank0
  3527     0DC1  1303               	bcf	3,6	;RP1=0, select bank0
  3528     0DC2  00AA               	movwf	spi_write_read@one_byte
  3529     0DC3                     l1988:
  3530                           
  3531                           ;spi-master-v1.c: 8: char spi_write_read(char one_byte);spi-master-v1.c: 9: {;spi-master
      +                          -v1.c: 11:     char answer, x;;spi-master-v1.c: 13:     answer = 0;
  3532     0DC3  01AB               	clrf	spi_write_read@answer
  3533     0DC4                     l1990:
  3534                           
  3535                           ;spi-master-v1.c: 15:     for(x = 8; x > 0; x--)
  3536     0DC4  3008               	movlw	8
  3537     0DC5  00AC               	movwf	spi_write_read@x
  3538     0DC6                     l1996:
  3539                           
  3540                           ;spi-master-v1.c: 16:     {;spi-master-v1.c: 17:         PORTCbits.RC0 = (__bit)((one_by
      +                          te >> (x - 1)) & 0b00000001);
  3541     0DC6  082A               	movf	spi_write_read@one_byte,w
  3542     0DC7  00A8               	movwf	??_spi_write_read
  3543     0DC8  082C               	movf	spi_write_read@x,w
  3544     0DC9  3EFF               	addlw	-1
  3545     0DCA  3E01               	addlw	1
  3546     0DCB  2DCE               	goto	u1084
  3547     0DCC                     u1085:
  3548     0DCC  1003               	clrc
  3549     0DCD  0CA8               	rrf	??_spi_write_read,f
  3550     0DCE                     u1084:
  3551     0DCE  3EFF               	addlw	-1
  3552     0DCF  1D03               	skipz
  3553     0DD0  2DCC               	goto	u1085
  3554     0DD1  1828               	btfsc	??_spi_write_read,0
  3555     0DD2  2DD4               	goto	u1091
  3556     0DD3  2DD8               	goto	u1090
  3557     0DD4                     u1091:
  3558     0DD4  1283               	bcf	3,5	;RP0=0, select bank0
  3559     0DD5  1303               	bcf	3,6	;RP1=0, select bank0
  3560     0DD6  1407               	bsf	7,0	;volatile
  3561     0DD7  2DDB               	goto	u1104
  3562     0DD8                     u1090:
  3563     0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  3564     0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  3565     0DDA  1007               	bcf	7,0	;volatile
  3566     0DDB                     u1104:
  3567     0DDB                     l1998:
  3568                           
  3569                           ;spi-master-v1.c: 19:         PORTCbits.RC5 = 1;
  3570     0DDB  1687               	bsf	7,5	;volatile
  3571                           
  3572                           ;spi-master-v1.c: 21:         answer |= (char)PORTAbits.RA5;
  3573     0DDC  0E05               	swapf	5,w	;volatile
  3574     0DDD  00A8               	movwf	??_spi_write_read
  3575     0DDE  0C28               	rrf	??_spi_write_read,w
  3576     0DDF  3901               	andlw	1
  3577     0DE0  00A9               	movwf	??_spi_write_read+1
  3578     0DE1  0829               	movf	??_spi_write_read+1,w
  3579     0DE2  04AB               	iorwf	spi_write_read@answer,f
  3580     0DE3                     l2000:
  3581                           
  3582                           ;spi-master-v1.c: 22:         PORTCbits.RC5 = 0;
  3583     0DE3  1287               	bcf	7,5	;volatile
  3584     0DE4                     l2002:
  3585                           
  3586                           ;spi-master-v1.c: 24:         if(x > 1)
  3587     0DE4  3002               	movlw	2
  3588     0DE5  022C               	subwf	spi_write_read@x,w
  3589     0DE6  1C03               	skipc
  3590     0DE7  2DE9               	goto	u1111
  3591     0DE8  2DEA               	goto	u1110
  3592     0DE9                     u1111:
  3593     0DE9  2DEE               	goto	l382
  3594     0DEA                     u1110:
  3595     0DEA                     l2004:
  3596                           
  3597                           ;spi-master-v1.c: 25:             answer = answer << 1;
  3598     0DEA  082B               	movf	spi_write_read@answer,w
  3599     0DEB  00A8               	movwf	??_spi_write_read
  3600     0DEC  0728               	addwf	??_spi_write_read,w
  3601     0DED  00AB               	movwf	spi_write_read@answer
  3602     0DEE                     l382:
  3603                           
  3604                           ;spi-master-v1.c: 26:     }
  3605     0DEE  3001               	movlw	1
  3606     0DEF  02AC               	subwf	spi_write_read@x,f
  3607     0DF0  082C               	movf	spi_write_read@x,w
  3608     0DF1  1D03               	btfss	3,2
  3609     0DF2  2DF4               	goto	u1121
  3610     0DF3  2DF5               	goto	u1120
  3611     0DF4                     u1121:
  3612     0DF4  2DC6               	goto	l1996
  3613     0DF5                     u1120:
  3614     0DF5                     l383:
  3615     0DF5  0008               	return
  3616     0DF6                     __end_of_spi_write_read:
  3617                           
  3618                           	psect	text19
  3619     0222                     __ptext19:	
  3620 ;; *************** function _printf *****************
  3621 ;; Defined at:
  3622 ;;		line 477 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  f               1    wreg     PTR const unsigned char 
  3625 ;;		 -> STR_5(98), STR_4(19), STR_3(7), STR_2(8), 
  3626 ;;		 -> STR_1(15), 
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;  f               1    3[BANK1 ] PTR const unsigned char 
  3629 ;;		 -> STR_5(98), STR_4(19), STR_3(7), STR_2(8), 
  3630 ;;		 -> STR_1(15), 
  3631 ;;  tmpval          4    0        struct .
  3632 ;;  val             2    4[BANK1 ] unsigned int 
  3633 ;;  cp              2    0        PTR const unsigned char 
  3634 ;;  len             2    0        unsigned int 
  3635 ;;  c               1    6[BANK1 ] unsigned char 
  3636 ;;  ap              1    2[BANK1 ] PTR void [1]
  3637 ;;		 -> ?_printf(2), 
  3638 ;;  prec            1    1[BANK1 ] char 
  3639 ;;  flag            1    0[BANK1 ] unsigned char 
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  2   22[BANK0 ] int 
  3642 ;; Registers used:
  3643 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3649 ;;      Params:         0      12       0       0       0
  3650 ;;      Locals:         0       0       7       0       0
  3651 ;;      Temps:          0       3       0       0       0
  3652 ;;      Totals:         0      15       7       0       0
  3653 ;;Total ram usage:       22 bytes
  3654 ;; Hardware stack levels used: 1
  3655 ;; Hardware stack levels required when called: 5
  3656 ;; This function calls:
  3657 ;;		___lwdiv
  3658 ;;		___lwmod
  3659 ;;		_putch
  3660 ;; This function is called by:
  3661 ;;		_initActuadoresSegunMemoria
  3662 ;;		_main
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666     0222                     _printf:	
  3667                           ;psect for function _printf
  3668                           
  3669                           
  3670                           ;incstack = 0
  3671                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3672                           ;printf@f stored from wreg
  3673     0222  1683               	bsf	3,5	;RP0=1, select bank1
  3674     0223  1303               	bcf	3,6	;RP1=0, select bank1
  3675     0224  00CF               	movwf	printf@f^(0+128)
  3676     0225                     l2992:
  3677                           
  3678                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 477: printf(const char * f, .
      +                          ..);/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 478: {;/opt/microchip/xc8/
      +                          v2.40/pic/sources/c90/common/doprnt.c: 479:  va_list ap;;/opt/microchip/xc8/v2.40/pic/so
      +                          urces/c90/common/doprnt.c: 512:  char c;;/opt/microchip/xc8/v2.40/pic/sources/c90/common
      +                          /doprnt.c: 521:  signed char prec;;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprn
      +                          t.c: 525:  unsigned char flag;;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c:
      +                           543:  } tmpval;
  3679     0225  3036               	movlw	(low (?_printf| 0))& (0+255)
  3680     0226  00CE               	movwf	printf@ap^(0+128)
  3681                           
  3682                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 553:  while((c = *f++)) {
  3683     0227  2B2A               	goto	l3044
  3684     0228                     l2994:
  3685                           
  3686                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 555:   if(c != '%')
  3687     0228  3025               	movlw	37
  3688     0229  0652               	xorwf	printf@c^(0+128),w
  3689     022A  1903               	btfsc	3,2
  3690     022B  2A2D               	goto	u2281
  3691     022C  2A2E               	goto	u2280
  3692     022D                     u2281:
  3693     022D  2A35               	goto	l2998
  3694     022E                     u2280:
  3695     022E                     l2996:
  3696                           
  3697                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 557:   {;/opt/microchip/xc8/v
      +                          2.40/pic/sources/c90/common/doprnt.c: 558:    (putch(c) );
  3698     022E  0852               	movf	printf@c^(0+128),w
  3699     022F  120A  158A  2421  120A  118A  	fcall	_putch
  3700                           
  3701                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 559:    continue;
  3702     0234  2B2A               	goto	l3044
  3703     0235                     l2998:
  3704                           
  3705                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 565:   flag = 0;
  3706     0235  01CC               	clrf	printf@flag^(0+128)
  3707                           
  3708                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 661:   switch(c = *f++) {
  3709     0236  2A4F               	goto	l3008
  3710     0237                     l3000:
  3711                           
  3712                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 825:    c = (char)(*(int *)__
      +                          va_arg((*(int **)ap), (int)0));
  3713     0237  1683               	bsf	3,5	;RP0=1, select bank1
  3714     0238  1303               	bcf	3,6	;RP1=0, select bank1
  3715     0239  084E               	movf	printf@ap^(0+128),w
  3716     023A  0084               	movwf	4
  3717     023B  1383               	bcf	3,7	;select IRP bank0
  3718     023C  0800               	movf	0,w
  3719     023D  00D2               	movwf	printf@c^(0+128)
  3720     023E                     l3002:
  3721     023E  3002               	movlw	2
  3722     023F  1283               	bcf	3,5	;RP0=0, select bank0
  3723     0240  1303               	bcf	3,6	;RP1=0, select bank0
  3724     0241  00C2               	movwf	??_printf
  3725     0242  0842               	movf	??_printf,w
  3726     0243  1683               	bsf	3,5	;RP0=1, select bank1
  3727     0244  1303               	bcf	3,6	;RP1=0, select bank1
  3728     0245  07CE               	addwf	printf@ap^(0+128),f
  3729     0246                     l3004:
  3730                           
  3731                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 835:    (putch(c) );
  3732     0246  1683               	bsf	3,5	;RP0=1, select bank1
  3733     0247  1303               	bcf	3,6	;RP1=0, select bank1
  3734     0248  0852               	movf	printf@c^(0+128),w
  3735     0249  120A  158A  2421  120A  118A  	fcall	_putch
  3736                           
  3737                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 836:    continue;
  3738     024E  2B2A               	goto	l3044
  3739     024F                     l3008:
  3740     024F  3001               	movlw	1
  3741     0250  07CF               	addwf	printf@f^(0+128),f
  3742     0251  30FF               	movlw	-1
  3743     0252  074F               	addwf	printf@f^(0+128),w
  3744     0253  0084               	movwf	4
  3745     0254  120A  118A  233D  120A  118A  	fcall	stringdir
  3746     0259  00D2               	movwf	printf@c^(0+128)
  3747     025A  1283               	bcf	3,5	;RP0=0, select bank0
  3748     025B  1303               	bcf	3,6	;RP1=0, select bank0
  3749     025C  00C2               	movwf	??_printf
  3750     025D  01C3               	clrf	??_printf+1
  3751                           
  3752                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3753                           ; Switch size 1, requested type "simple"
  3754                           ; Number of cases is 1, Range of values is 0 to 0
  3755                           ; switch strategies available:
  3756                           ; Name         Instructions Cycles
  3757                           ; simple_byte            4     3 (average)
  3758                           ; direct_byte           11     8 (fixed)
  3759                           ; jumptable            260     6 (fixed)
  3760                           ;	Chosen strategy is simple_byte
  3761     025E  0843               	movf	??_printf+1,w
  3762     025F  3A00               	xorlw	0	; case 0
  3763     0260  1903               	skipnz
  3764     0261  2A63               	goto	l3172
  3765     0262  2A46               	goto	l3004
  3766     0263                     l3172:
  3767                           
  3768                           ; Switch size 1, requested type "simple"
  3769                           ; Number of cases is 4, Range of values is 0 to 105
  3770                           ; switch strategies available:
  3771                           ; Name         Instructions Cycles
  3772                           ; simple_byte           13     7 (average)
  3773                           ; jumptable            260     6 (fixed)
  3774                           ;	Chosen strategy is simple_byte
  3775     0263  0842               	movf	??_printf,w
  3776     0264  3A00               	xorlw	0	; case 0
  3777     0265  1903               	skipnz
  3778     0266  2B3C               	goto	l496
  3779     0267  3A63               	xorlw	99	; case 99
  3780     0268  1903               	skipnz
  3781     0269  2A37               	goto	l3000
  3782     026A  3A07               	xorlw	7	; case 100
  3783     026B  1903               	skipnz
  3784     026C  2A71               	goto	l3010
  3785     026D  3A0D               	xorlw	13	; case 105
  3786     026E  1903               	skipnz
  3787     026F  2A71               	goto	l3010
  3788     0270  2A46               	goto	l3004
  3789     0271                     l3010:
  3790                           
  3791                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1279:   {;/opt/microchip/xc8/
      +                          v2.40/pic/sources/c90/common/doprnt.c: 1285:     val = (unsigned int)(*(int *)__va_arg((
      +                          *(int **)ap), (int)0));
  3792     0271  1683               	bsf	3,5	;RP0=1, select bank1
  3793     0272  1303               	bcf	3,6	;RP1=0, select bank1
  3794     0273  084E               	movf	printf@ap^(0+128),w
  3795     0274  0084               	movwf	4
  3796     0275  1383               	bcf	3,7	;select IRP bank0
  3797     0276  0800               	movf	0,w
  3798     0277  00D0               	movwf	printf@val^(0+128)
  3799     0278  0A84               	incf	4,f
  3800     0279  0800               	movf	0,w
  3801     027A  00D1               	movwf	(printf@val+1)^(0+128)
  3802     027B                     l3012:
  3803     027B  3002               	movlw	2
  3804     027C  1283               	bcf	3,5	;RP0=0, select bank0
  3805     027D  1303               	bcf	3,6	;RP1=0, select bank0
  3806     027E  00C2               	movwf	??_printf
  3807     027F  0842               	movf	??_printf,w
  3808     0280  1683               	bsf	3,5	;RP0=1, select bank1
  3809     0281  1303               	bcf	3,6	;RP1=0, select bank1
  3810     0282  07CE               	addwf	printf@ap^(0+128),f
  3811     0283                     l3014:
  3812                           
  3813                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1287:    if((int)val < 0) {
  3814     0283  1FD1               	btfss	(printf@val+1)^(0+128),7
  3815     0284  2A86               	goto	u2291
  3816     0285  2A87               	goto	u2290
  3817     0286                     u2291:
  3818     0286  2A94               	goto	l3020
  3819     0287                     u2290:
  3820     0287                     l3016:
  3821                           
  3822                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1288:     flag |= 0x03;
  3823     0287  3003               	movlw	3
  3824     0288  1283               	bcf	3,5	;RP0=0, select bank0
  3825     0289  1303               	bcf	3,6	;RP1=0, select bank0
  3826     028A  00C2               	movwf	??_printf
  3827     028B  0842               	movf	??_printf,w
  3828     028C  1683               	bsf	3,5	;RP0=1, select bank1
  3829     028D  1303               	bcf	3,6	;RP1=0, select bank1
  3830     028E  04CC               	iorwf	printf@flag^(0+128),f
  3831     028F                     l3018:
  3832                           
  3833                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1289:     val = -val;
  3834     028F  09D0               	comf	printf@val^(0+128),f
  3835     0290  09D1               	comf	(printf@val+1)^(0+128),f
  3836     0291  0AD0               	incf	printf@val^(0+128),f
  3837     0292  1903               	skipnz
  3838     0293  0AD1               	incf	(printf@val+1)^(0+128),f
  3839     0294                     l3020:
  3840                           
  3841                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1292:   };/opt/microchip/xc8/
      +                          v2.40/pic/sources/c90/common/doprnt.c: 1331:    for(c = 1 ; c != sizeof dpowers/sizeof d
      +                          powers[0] ; c++)
  3842     0294  01D2               	clrf	printf@c^(0+128)
  3843     0295  0AD2               	incf	printf@c^(0+128),f
  3844     0296                     l3026:
  3845                           
  3846                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1332:     if(val < dpowers[c]
      +                          )
  3847     0296  0852               	movf	printf@c^(0+128),w
  3848     0297  1283               	bcf	3,5	;RP0=0, select bank0
  3849     0298  1303               	bcf	3,6	;RP1=0, select bank0
  3850     0299  00C2               	movwf	??_printf
  3851     029A  0742               	addwf	??_printf,w
  3852     029B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3853     029C  0084               	movwf	4
  3854     029D  120A  118A  233D  120A  118A  	fcall	stringdir
  3855     02A2  00C3               	movwf	??_printf+1
  3856     02A3  120A  118A  233D  120A  118A  	fcall	stringdir
  3857     02A8  00C4               	movwf	??_printf+2
  3858     02A9  0844               	movf	??_printf+2,w
  3859     02AA  1683               	bsf	3,5	;RP0=1, select bank1
  3860     02AB  1303               	bcf	3,6	;RP1=0, select bank1
  3861     02AC  0251               	subwf	(printf@val+1)^(0+128),w
  3862     02AD  1D03               	skipz
  3863     02AE  2AB5               	goto	u2305
  3864     02AF  1283               	bcf	3,5	;RP0=0, select bank0
  3865     02B0  1303               	bcf	3,6	;RP1=0, select bank0
  3866     02B1  0843               	movf	??_printf+1,w
  3867     02B2  1683               	bsf	3,5	;RP0=1, select bank1
  3868     02B3  1303               	bcf	3,6	;RP1=0, select bank1
  3869     02B4  0250               	subwf	printf@val^(0+128),w
  3870     02B5                     u2305:
  3871     02B5  1803               	skipnc
  3872     02B6  2AB8               	goto	u2301
  3873     02B7  2AB9               	goto	u2300
  3874     02B8                     u2301:
  3875     02B8  2ABA               	goto	l3030
  3876     02B9                     u2300:
  3877     02B9  2AC8               	goto	l3032
  3878     02BA                     l3030:
  3879     02BA  3001               	movlw	1
  3880     02BB  1283               	bcf	3,5	;RP0=0, select bank0
  3881     02BC  1303               	bcf	3,6	;RP1=0, select bank0
  3882     02BD  00C2               	movwf	??_printf
  3883     02BE  0842               	movf	??_printf,w
  3884     02BF  1683               	bsf	3,5	;RP0=1, select bank1
  3885     02C0  1303               	bcf	3,6	;RP1=0, select bank1
  3886     02C1  07D2               	addwf	printf@c^(0+128),f
  3887     02C2  3005               	movlw	5
  3888     02C3  0652               	xorwf	printf@c^(0+128),w
  3889     02C4  1D03               	btfss	3,2
  3890     02C5  2AC7               	goto	u2311
  3891     02C6  2AC8               	goto	u2310
  3892     02C7                     u2311:
  3893     02C7  2A96               	goto	l3026
  3894     02C8                     u2310:
  3895     02C8                     l3032:
  3896                           
  3897                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1448:   {;/opt/microchip/xc8/
      +                          v2.40/pic/sources/c90/common/doprnt.c: 1464:    if(flag & 0x03)
  3898     02C8  084C               	movf	printf@flag^(0+128),w
  3899     02C9  3903               	andlw	3
  3900     02CA  1903               	btfsc	3,2
  3901     02CB  2ACD               	goto	u2321
  3902     02CC  2ACE               	goto	u2320
  3903     02CD                     u2321:
  3904     02CD  2AD4               	goto	l3036
  3905     02CE                     u2320:
  3906     02CE                     l3034:
  3907                           
  3908                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1465:     (putch('-') );
  3909     02CE  302D               	movlw	45
  3910     02CF  120A  158A  2421  120A  118A  	fcall	_putch
  3911     02D4                     l3036:
  3912                           
  3913                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1495:   };/opt/microchip/xc8/
      +                          v2.40/pic/sources/c90/common/doprnt.c: 1498:   prec = c;
  3914     02D4  1683               	bsf	3,5	;RP0=1, select bank1
  3915     02D5  1303               	bcf	3,6	;RP1=0, select bank1
  3916     02D6  0852               	movf	printf@c^(0+128),w
  3917     02D7  00CD               	movwf	printf@prec^(0+128)
  3918                           
  3919                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1500:   while(prec--) {
  3920     02D8  2B1D               	goto	l3042
  3921     02D9                     l3038:
  3922                           
  3923                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1504:    {;/opt/microchip/xc8
      +                          /v2.40/pic/sources/c90/common/doprnt.c: 1515:     c = (val / dpowers[(unsigned char)prec
      +                          ]) % 10 + '0';
  3924     02D9  300A               	movlw	10
  3925     02DA  1283               	bcf	3,5	;RP0=0, select bank0
  3926     02DB  1303               	bcf	3,6	;RP1=0, select bank0
  3927     02DC  00B0               	movwf	___lwmod@divisor
  3928     02DD  3000               	movlw	0
  3929     02DE  00B1               	movwf	___lwmod@divisor+1
  3930     02DF  1683               	bsf	3,5	;RP0=1, select bank1
  3931     02E0  1303               	bcf	3,6	;RP1=0, select bank1
  3932     02E1  084D               	movf	printf@prec^(0+128),w
  3933     02E2  1283               	bcf	3,5	;RP0=0, select bank0
  3934     02E3  1303               	bcf	3,6	;RP1=0, select bank0
  3935     02E4  00C2               	movwf	??_printf
  3936     02E5  0742               	addwf	??_printf,w
  3937     02E6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3938     02E7  0084               	movwf	4
  3939     02E8  120A  118A  233D  120A  118A  	fcall	stringdir
  3940     02ED  00A8               	movwf	___lwdiv@divisor
  3941     02EE  120A  118A  233D  120A  118A  	fcall	stringdir
  3942     02F3  00A9               	movwf	___lwdiv@divisor+1
  3943     02F4  1683               	bsf	3,5	;RP0=1, select bank1
  3944     02F5  1303               	bcf	3,6	;RP1=0, select bank1
  3945     02F6  0851               	movf	(printf@val+1)^(0+128),w
  3946     02F7  1283               	bcf	3,5	;RP0=0, select bank0
  3947     02F8  1303               	bcf	3,6	;RP1=0, select bank0
  3948     02F9  00AB               	movwf	___lwdiv@dividend+1
  3949     02FA  1683               	bsf	3,5	;RP0=1, select bank1
  3950     02FB  1303               	bcf	3,6	;RP1=0, select bank1
  3951     02FC  0850               	movf	printf@val^(0+128),w
  3952     02FD  1283               	bcf	3,5	;RP0=0, select bank0
  3953     02FE  1303               	bcf	3,6	;RP1=0, select bank0
  3954     02FF  00AA               	movwf	___lwdiv@dividend
  3955     0300  120A  158A  2726  120A  118A  	fcall	___lwdiv
  3956     0305  1283               	bcf	3,5	;RP0=0, select bank0
  3957     0306  1303               	bcf	3,6	;RP1=0, select bank0
  3958     0307  0829               	movf	?___lwdiv+1,w
  3959     0308  00B3               	movwf	___lwmod@dividend+1
  3960     0309  0828               	movf	?___lwdiv,w
  3961     030A  00B2               	movwf	___lwmod@dividend
  3962     030B  120A  158A  2668  120A  118A  	fcall	___lwmod
  3963     0310  1283               	bcf	3,5	;RP0=0, select bank0
  3964     0311  1303               	bcf	3,6	;RP1=0, select bank0
  3965     0312  0830               	movf	?___lwmod,w
  3966     0313  3E30               	addlw	48
  3967     0314  1683               	bsf	3,5	;RP0=1, select bank1
  3968     0315  1303               	bcf	3,6	;RP1=0, select bank1
  3969     0316  00D2               	movwf	printf@c^(0+128)
  3970     0317                     l3040:
  3971                           
  3972                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1549:    };/opt/microchip/xc8
      +                          /v2.40/pic/sources/c90/common/doprnt.c: 1550:    (putch(c) );
  3973     0317  0852               	movf	printf@c^(0+128),w
  3974     0318  120A  158A  2421  120A  118A  	fcall	_putch
  3975     031D                     l3042:
  3976                           
  3977                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1500:   while(prec--) {
  3978     031D  30FF               	movlw	255
  3979     031E  1283               	bcf	3,5	;RP0=0, select bank0
  3980     031F  1303               	bcf	3,6	;RP1=0, select bank0
  3981     0320  00C2               	movwf	??_printf
  3982     0321  0842               	movf	??_printf,w
  3983     0322  1683               	bsf	3,5	;RP0=1, select bank1
  3984     0323  1303               	bcf	3,6	;RP1=0, select bank1
  3985     0324  07CD               	addwf	printf@prec^(0+128),f
  3986     0325  0A4D               	incf	printf@prec^(0+128),w
  3987     0326  1D03               	btfss	3,2
  3988     0327  2B29               	goto	u2331
  3989     0328  2B2A               	goto	u2330
  3990     0329                     u2331:
  3991     0329  2AD9               	goto	l3038
  3992     032A                     u2330:
  3993     032A                     l3044:
  3994                           
  3995                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 553:  while((c = *f++)) {
  3996     032A  3001               	movlw	1
  3997     032B  1683               	bsf	3,5	;RP0=1, select bank1
  3998     032C  1303               	bcf	3,6	;RP1=0, select bank1
  3999     032D  07CF               	addwf	printf@f^(0+128),f
  4000     032E  30FF               	movlw	-1
  4001     032F  074F               	addwf	printf@f^(0+128),w
  4002     0330  0084               	movwf	4
  4003     0331  120A  118A  233D  120A  118A  	fcall	stringdir
  4004     0336  00D2               	movwf	printf@c^(0+128)
  4005     0337  0852               	movf	printf@c^(0+128),w
  4006     0338  1D03               	btfss	3,2
  4007     0339  2B3B               	goto	u2341
  4008     033A  2B3C               	goto	u2340
  4009     033B                     u2341:
  4010     033B  2A28               	goto	l2994
  4011     033C                     u2340:
  4012     033C                     l496:
  4013     033C  0008               	return
  4014     033D                     __end_of_printf:
  4015                           
  4016                           	psect	text20
  4017     0C21                     __ptext20:	
  4018 ;; *************** function _putch *****************
  4019 ;; Defined at:
  4020 ;;		line 234 in file "main.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;  c               1    wreg     unsigned char 
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;  c               1    8[BANK0 ] unsigned char 
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    wreg      void 
  4027 ;; Registers used:
  4028 ;;		wreg
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4034 ;;      Params:         0       0       0       0       0
  4035 ;;      Locals:         0       1       0       0       0
  4036 ;;      Temps:          0       0       0       0       0
  4037 ;;      Totals:         0       1       0       0       0
  4038 ;;Total ram usage:        1 bytes
  4039 ;; Hardware stack levels used: 1
  4040 ;; Hardware stack levels required when called: 4
  4041 ;; This function calls:
  4042 ;;		Nothing
  4043 ;; This function is called by:
  4044 ;;		_printf
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048     0C21                     _putch:	
  4049                           ;psect for function _putch
  4050                           
  4051                           
  4052                           ;incstack = 0
  4053                           ; Regs used in _putch: [wreg]
  4054                           ;putch@c stored from wreg
  4055     0C21  1283               	bcf	3,5	;RP0=0, select bank0
  4056     0C22  1303               	bcf	3,6	;RP1=0, select bank0
  4057     0C23  00A8               	movwf	putch@c
  4058     0C24                     l2938:
  4059     0C24                     l198:	
  4060                           ;main.c: 238:     }
  4061                           
  4062                           
  4063                           ;main.c: 235:     while (!TXIF && !TXSTAbits.TRMT) {
  4064     0C24  1283               	bcf	3,5	;RP0=0, select bank0
  4065     0C25  1A0C               	btfsc	12,4	;volatile
  4066     0C26  2C28               	goto	u2131
  4067     0C27  2C29               	goto	u2130
  4068     0C28                     u2131:
  4069     0C28  2C2F               	goto	l2942
  4070     0C29                     u2130:
  4071     0C29                     l2940:
  4072     0C29  1683               	bsf	3,5	;RP0=1, select bank1
  4073     0C2A  1303               	bcf	3,6	;RP1=0, select bank1
  4074     0C2B  1C98               	btfss	24,1	;volatile
  4075     0C2C  2C2E               	goto	u2141
  4076     0C2D  2C2F               	goto	u2140
  4077     0C2E                     u2141:
  4078     0C2E  2C24               	goto	l198
  4079     0C2F                     u2140:
  4080     0C2F                     l2942:
  4081                           
  4082                           ;main.c: 239:     TXREG = c;
  4083     0C2F  1283               	bcf	3,5	;RP0=0, select bank0
  4084     0C30  0828               	movf	putch@c,w
  4085     0C31  0099               	movwf	25	;volatile
  4086     0C32                     l203:
  4087     0C32  0008               	return
  4088     0C33                     __end_of_putch:
  4089                           
  4090                           	psect	text21
  4091     0E68                     __ptext21:	
  4092 ;; *************** function ___lwmod *****************
  4093 ;; Defined at:
  4094 ;;		line 5 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/lwmod.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;  divisor         2   16[BANK0 ] unsigned int 
  4097 ;;  dividend        2   18[BANK0 ] unsigned int 
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;  counter         1   21[BANK0 ] unsigned char 
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  2   16[BANK0 ] unsigned int 
  4102 ;; Registers used:
  4103 ;;		wreg, status,2, status,0
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4109 ;;      Params:         0       4       0       0       0
  4110 ;;      Locals:         0       1       0       0       0
  4111 ;;      Temps:          0       1       0       0       0
  4112 ;;      Totals:         0       6       0       0       0
  4113 ;;Total ram usage:        6 bytes
  4114 ;; Hardware stack levels used: 1
  4115 ;; Hardware stack levels required when called: 4
  4116 ;; This function calls:
  4117 ;;		Nothing
  4118 ;; This function is called by:
  4119 ;;		_printf
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123     0E68                     ___lwmod:	
  4124                           ;psect for function ___lwmod
  4125                           
  4126     0E68                     l2970:	
  4127                           ;incstack = 0
  4128                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4129                           
  4130     0E68  1283               	bcf	3,5	;RP0=0, select bank0
  4131     0E69  1303               	bcf	3,6	;RP1=0, select bank0
  4132     0E6A  0830               	movf	___lwmod@divisor,w
  4133     0E6B  0431               	iorwf	___lwmod@divisor+1,w
  4134     0E6C  1903               	btfsc	3,2
  4135     0E6D  2E6F               	goto	u2221
  4136     0E6E  2E70               	goto	u2220
  4137     0E6F                     u2221:
  4138     0E6F  2E9F               	goto	l2988
  4139     0E70                     u2220:
  4140     0E70                     l2972:
  4141     0E70  01B5               	clrf	___lwmod@counter
  4142     0E71  0AB5               	incf	___lwmod@counter,f
  4143     0E72  2E7E               	goto	l2978
  4144     0E73                     l2974:
  4145     0E73  3001               	movlw	1
  4146     0E74                     u2235:
  4147     0E74  1003               	clrc
  4148     0E75  0DB0               	rlf	___lwmod@divisor,f
  4149     0E76  0DB1               	rlf	___lwmod@divisor+1,f
  4150     0E77  3EFF               	addlw	-1
  4151     0E78  1D03               	skipz
  4152     0E79  2E74               	goto	u2235
  4153     0E7A                     l2976:
  4154     0E7A  3001               	movlw	1
  4155     0E7B  00B4               	movwf	??___lwmod
  4156     0E7C  0834               	movf	??___lwmod,w
  4157     0E7D  07B5               	addwf	___lwmod@counter,f
  4158     0E7E                     l2978:
  4159     0E7E  1FB1               	btfss	___lwmod@divisor+1,7
  4160     0E7F  2E81               	goto	u2241
  4161     0E80  2E82               	goto	u2240
  4162     0E81                     u2241:
  4163     0E81  2E73               	goto	l2974
  4164     0E82                     u2240:
  4165     0E82                     l2980:
  4166     0E82  0831               	movf	___lwmod@divisor+1,w
  4167     0E83  0233               	subwf	___lwmod@dividend+1,w
  4168     0E84  1D03               	skipz
  4169     0E85  2E88               	goto	u2255
  4170     0E86  0830               	movf	___lwmod@divisor,w
  4171     0E87  0232               	subwf	___lwmod@dividend,w
  4172     0E88                     u2255:
  4173     0E88  1C03               	skipc
  4174     0E89  2E8B               	goto	u2251
  4175     0E8A  2E8C               	goto	u2250
  4176     0E8B                     u2251:
  4177     0E8B  2E92               	goto	l2984
  4178     0E8C                     u2250:
  4179     0E8C                     l2982:
  4180     0E8C  0830               	movf	___lwmod@divisor,w
  4181     0E8D  02B2               	subwf	___lwmod@dividend,f
  4182     0E8E  0831               	movf	___lwmod@divisor+1,w
  4183     0E8F  1C03               	skipc
  4184     0E90  03B3               	decf	___lwmod@dividend+1,f
  4185     0E91  02B3               	subwf	___lwmod@dividend+1,f
  4186     0E92                     l2984:
  4187     0E92  3001               	movlw	1
  4188     0E93                     u2265:
  4189     0E93  1003               	clrc
  4190     0E94  0CB1               	rrf	___lwmod@divisor+1,f
  4191     0E95  0CB0               	rrf	___lwmod@divisor,f
  4192     0E96  3EFF               	addlw	-1
  4193     0E97  1D03               	skipz
  4194     0E98  2E93               	goto	u2265
  4195     0E99                     l2986:
  4196     0E99  3001               	movlw	1
  4197     0E9A  02B5               	subwf	___lwmod@counter,f
  4198     0E9B  1D03               	btfss	3,2
  4199     0E9C  2E9E               	goto	u2271
  4200     0E9D  2E9F               	goto	u2270
  4201     0E9E                     u2271:
  4202     0E9E  2E82               	goto	l2980
  4203     0E9F                     u2270:
  4204     0E9F                     l2988:
  4205     0E9F  0833               	movf	___lwmod@dividend+1,w
  4206     0EA0  00B1               	movwf	?___lwmod+1
  4207     0EA1  0832               	movf	___lwmod@dividend,w
  4208     0EA2  00B0               	movwf	?___lwmod
  4209     0EA3                     l782:
  4210     0EA3  0008               	return
  4211     0EA4                     __end_of___lwmod:
  4212                           
  4213                           	psect	text22
  4214     0F26                     __ptext22:	
  4215 ;; *************** function ___lwdiv *****************
  4216 ;; Defined at:
  4217 ;;		line 5 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/lwdiv.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;  divisor         2    8[BANK0 ] unsigned int 
  4220 ;;  dividend        2   10[BANK0 ] unsigned int 
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;  quotient        2   14[BANK0 ] unsigned int 
  4223 ;;  counter         1   13[BANK0 ] unsigned char 
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  2    8[BANK0 ] unsigned int 
  4226 ;; Registers used:
  4227 ;;		wreg, status,2, status,0
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4233 ;;      Params:         0       4       0       0       0
  4234 ;;      Locals:         0       3       0       0       0
  4235 ;;      Temps:          0       1       0       0       0
  4236 ;;      Totals:         0       8       0       0       0
  4237 ;;Total ram usage:        8 bytes
  4238 ;; Hardware stack levels used: 1
  4239 ;; Hardware stack levels required when called: 4
  4240 ;; This function calls:
  4241 ;;		Nothing
  4242 ;; This function is called by:
  4243 ;;		_printf
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247     0F26                     ___lwdiv:	
  4248                           ;psect for function ___lwdiv
  4249                           
  4250     0F26                     l2944:	
  4251                           ;incstack = 0
  4252                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4253                           
  4254     0F26  1283               	bcf	3,5	;RP0=0, select bank0
  4255     0F27  1303               	bcf	3,6	;RP1=0, select bank0
  4256     0F28  01AE               	clrf	___lwdiv@quotient
  4257     0F29  01AF               	clrf	___lwdiv@quotient+1
  4258     0F2A                     l2946:
  4259     0F2A  0828               	movf	___lwdiv@divisor,w
  4260     0F2B  0429               	iorwf	___lwdiv@divisor+1,w
  4261     0F2C  1903               	btfsc	3,2
  4262     0F2D  2F2F               	goto	u2151
  4263     0F2E  2F30               	goto	u2150
  4264     0F2F                     u2151:
  4265     0F2F  2F67               	goto	l2966
  4266     0F30                     u2150:
  4267     0F30                     l2948:
  4268     0F30  01AD               	clrf	___lwdiv@counter
  4269     0F31  0AAD               	incf	___lwdiv@counter,f
  4270     0F32  2F3E               	goto	l2954
  4271     0F33                     l2950:
  4272     0F33  3001               	movlw	1
  4273     0F34                     u2165:
  4274     0F34  1003               	clrc
  4275     0F35  0DA8               	rlf	___lwdiv@divisor,f
  4276     0F36  0DA9               	rlf	___lwdiv@divisor+1,f
  4277     0F37  3EFF               	addlw	-1
  4278     0F38  1D03               	skipz
  4279     0F39  2F34               	goto	u2165
  4280     0F3A                     l2952:
  4281     0F3A  3001               	movlw	1
  4282     0F3B  00AC               	movwf	??___lwdiv
  4283     0F3C  082C               	movf	??___lwdiv,w
  4284     0F3D  07AD               	addwf	___lwdiv@counter,f
  4285     0F3E                     l2954:
  4286     0F3E  1FA9               	btfss	___lwdiv@divisor+1,7
  4287     0F3F  2F41               	goto	u2171
  4288     0F40  2F42               	goto	u2170
  4289     0F41                     u2171:
  4290     0F41  2F33               	goto	l2950
  4291     0F42                     u2170:
  4292     0F42                     l2956:
  4293     0F42  3001               	movlw	1
  4294     0F43                     u2185:
  4295     0F43  1003               	clrc
  4296     0F44  0DAE               	rlf	___lwdiv@quotient,f
  4297     0F45  0DAF               	rlf	___lwdiv@quotient+1,f
  4298     0F46  3EFF               	addlw	-1
  4299     0F47  1D03               	skipz
  4300     0F48  2F43               	goto	u2185
  4301     0F49  0829               	movf	___lwdiv@divisor+1,w
  4302     0F4A  022B               	subwf	___lwdiv@dividend+1,w
  4303     0F4B  1D03               	skipz
  4304     0F4C  2F4F               	goto	u2195
  4305     0F4D  0828               	movf	___lwdiv@divisor,w
  4306     0F4E  022A               	subwf	___lwdiv@dividend,w
  4307     0F4F                     u2195:
  4308     0F4F  1C03               	skipc
  4309     0F50  2F52               	goto	u2191
  4310     0F51  2F53               	goto	u2190
  4311     0F52                     u2191:
  4312     0F52  2F5A               	goto	l2962
  4313     0F53                     u2190:
  4314     0F53                     l2958:
  4315     0F53  0828               	movf	___lwdiv@divisor,w
  4316     0F54  02AA               	subwf	___lwdiv@dividend,f
  4317     0F55  0829               	movf	___lwdiv@divisor+1,w
  4318     0F56  1C03               	skipc
  4319     0F57  03AB               	decf	___lwdiv@dividend+1,f
  4320     0F58  02AB               	subwf	___lwdiv@dividend+1,f
  4321     0F59                     l2960:
  4322     0F59  142E               	bsf	___lwdiv@quotient,0
  4323     0F5A                     l2962:
  4324     0F5A  3001               	movlw	1
  4325     0F5B                     u2205:
  4326     0F5B  1003               	clrc
  4327     0F5C  0CA9               	rrf	___lwdiv@divisor+1,f
  4328     0F5D  0CA8               	rrf	___lwdiv@divisor,f
  4329     0F5E  3EFF               	addlw	-1
  4330     0F5F  1D03               	skipz
  4331     0F60  2F5B               	goto	u2205
  4332     0F61                     l2964:
  4333     0F61  3001               	movlw	1
  4334     0F62  02AD               	subwf	___lwdiv@counter,f
  4335     0F63  1D03               	btfss	3,2
  4336     0F64  2F66               	goto	u2211
  4337     0F65  2F67               	goto	u2210
  4338     0F66                     u2211:
  4339     0F66  2F42               	goto	l2956
  4340     0F67                     u2210:
  4341     0F67                     l2966:
  4342     0F67  082F               	movf	___lwdiv@quotient+1,w
  4343     0F68  00A9               	movwf	?___lwdiv+1
  4344     0F69  082E               	movf	___lwdiv@quotient,w
  4345     0F6A  00A8               	movwf	?___lwdiv
  4346     0F6B                     l772:
  4347     0F6B  0008               	return
  4348     0F6C                     __end_of___lwdiv:
  4349                           
  4350                           	psect	text23
  4351     0D0E                     __ptext23:	
  4352 ;; *************** function _getnoPrimerArranque *****************
  4353 ;; Defined at:
  4354 ;;		line 346 in file "main.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;		None
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;  aux             1   12[BANK0 ] unsigned char 
  4359 ;;  direccion       1   11[BANK0 ] unsigned char 
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  2    9[BANK0 ] int 
  4362 ;; Registers used:
  4363 ;;		wreg, status,2, status,0, pclath, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4369 ;;      Params:         0       2       0       0       0
  4370 ;;      Locals:         0       2       0       0       0
  4371 ;;      Temps:          0       0       0       0       0
  4372 ;;      Totals:         0       4       0       0       0
  4373 ;;Total ram usage:        4 bytes
  4374 ;; Hardware stack levels used: 1
  4375 ;; Hardware stack levels required when called: 5
  4376 ;; This function calls:
  4377 ;;		_leerMemoria
  4378 ;; This function is called by:
  4379 ;;		_initActuadoresSegunMemoria
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383     0D0E                     _getnoPrimerArranque:	
  4384                           ;psect for function _getnoPrimerArranque
  4385                           
  4386     0D0E                     l2384:	
  4387                           ;incstack = 0
  4388                           ; Regs used in _getnoPrimerArranque: [wreg+status,2+status,0+pclath+cstack]
  4389                           
  4390                           
  4391                           ;main.c: 347:     char direccion = direccionInicial;
  4392     0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  4393     0D0F  1303               	bcf	3,6	;RP1=0, select bank0
  4394     0D10  0867               	movf	_direccionInicial,w
  4395     0D11  00AB               	movwf	getnoPrimerArranque@direccion
  4396     0D12                     l2386:
  4397                           
  4398                           ;main.c: 348:     char aux = leerMemoria(direccion);
  4399     0D12  082B               	movf	getnoPrimerArranque@direccion,w
  4400     0D13  120A  158A  24F2  120A  158A  	fcall	_leerMemoria
  4401     0D18  1283               	bcf	3,5	;RP0=0, select bank0
  4402     0D19  1303               	bcf	3,6	;RP1=0, select bank0
  4403     0D1A  00AC               	movwf	getnoPrimerArranque@aux
  4404     0D1B                     l2388:
  4405                           
  4406                           ;main.c: 351:     if (aux == (0) || aux == 0 || aux == (char) 0b00000000) return FALSE;
  4407     0D1B  082C               	movf	getnoPrimerArranque@aux,w
  4408     0D1C  1903               	btfsc	3,2
  4409     0D1D  2D1F               	goto	u1561
  4410     0D1E  2D20               	goto	u1560
  4411     0D1F                     u1561:
  4412     0D1F  2D2A               	goto	l2394
  4413     0D20                     u1560:
  4414     0D20                     l2390:
  4415     0D20  082C               	movf	getnoPrimerArranque@aux,w
  4416     0D21  1903               	btfsc	3,2
  4417     0D22  2D24               	goto	u1571
  4418     0D23  2D25               	goto	u1570
  4419     0D24                     u1571:
  4420     0D24  2D2A               	goto	l2394
  4421     0D25                     u1570:
  4422     0D25                     l2392:
  4423     0D25  082C               	movf	getnoPrimerArranque@aux,w
  4424     0D26  1D03               	btfss	3,2
  4425     0D27  2D29               	goto	u1581
  4426     0D28  2D2A               	goto	u1580
  4427     0D29                     u1581:
  4428     0D29  2D2D               	goto	l243
  4429     0D2A                     u1580:
  4430     0D2A                     l2394:
  4431     0D2A  01A9               	clrf	?_getnoPrimerArranque
  4432     0D2B  01AA               	clrf	?_getnoPrimerArranque+1
  4433     0D2C  2D31               	goto	l246
  4434     0D2D                     l243:	
  4435                           ;main.c: 352:     else return TRUE;
  4436                           
  4437     0D2D  3000               	movlw	0
  4438     0D2E  00AA               	movwf	?_getnoPrimerArranque+1
  4439     0D2F  3001               	movlw	1
  4440     0D30  00A9               	movwf	?_getnoPrimerArranque
  4441     0D31                     l246:
  4442     0D31  0008               	return
  4443     0D32                     __end_of_getnoPrimerArranque:
  4444                           
  4445                           	psect	text24
  4446     0CF2                     __ptext24:	
  4447 ;; *************** function _leerMemoria *****************
  4448 ;; Defined at:
  4449 ;;		line 276 in file "main.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  direccion       1    wreg     unsigned char 
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;  direccion       1    8[BANK0 ] unsigned char 
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  1    wreg      unsigned char 
  4456 ;; Registers used:
  4457 ;;		wreg, status,2
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4463 ;;      Params:         0       0       0       0       0
  4464 ;;      Locals:         0       1       0       0       0
  4465 ;;      Temps:          0       0       0       0       0
  4466 ;;      Totals:         0       1       0       0       0
  4467 ;;Total ram usage:        1 bytes
  4468 ;; Hardware stack levels used: 1
  4469 ;; Hardware stack levels required when called: 4
  4470 ;; This function calls:
  4471 ;;		Nothing
  4472 ;; This function is called by:
  4473 ;;		_escribirMemoria
  4474 ;;		_getnoPrimerArranque
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478     0CF2                     _leerMemoria:	
  4479                           ;psect for function _leerMemoria
  4480                           
  4481                           
  4482                           ;incstack = 0
  4483                           ; Regs used in _leerMemoria: [wreg+status,2]
  4484                           ;leerMemoria@direccion stored from wreg
  4485     0CF2  1283               	bcf	3,5	;RP0=0, select bank0
  4486     0CF3  1303               	bcf	3,6	;RP1=0, select bank0
  4487     0CF4  00A8               	movwf	leerMemoria@direccion
  4488     0CF5                     l1974:
  4489                           
  4490                           ;main.c: 277:     EECON1bits.EEPGD = 0;
  4491     0CF5  1683               	bsf	3,5	;RP0=1, select bank3
  4492     0CF6  1703               	bsf	3,6	;RP1=1, select bank3
  4493     0CF7  138C               	bcf	12,7	;volsfr
  4494                           
  4495                           ;main.c: 279:     EECON1bits.WREN = 0;
  4496     0CF8  110C               	bcf	12,2	;volsfr
  4497     0CF9                     l1976:
  4498                           
  4499                           ;main.c: 280:     EEDATH = 0;
  4500     0CF9  1283               	bcf	3,5	;RP0=0, select bank2
  4501     0CFA  1703               	bsf	3,6	;RP1=1, select bank2
  4502     0CFB  018E               	clrf	14	;volatile
  4503                           
  4504                           ;main.c: 281:     EEADRH = 0;
  4505     0CFC  018F               	clrf	15	;volatile
  4506     0CFD                     l1978:
  4507                           
  4508                           ;main.c: 282:     EEADR = direccion;
  4509     0CFD  1283               	bcf	3,5	;RP0=0, select bank0
  4510     0CFE  1303               	bcf	3,6	;RP1=0, select bank0
  4511     0CFF  0828               	movf	leerMemoria@direccion,w
  4512     0D00  1283               	bcf	3,5	;RP0=0, select bank2
  4513     0D01  1703               	bsf	3,6	;RP1=1, select bank2
  4514     0D02  008D               	movwf	13	;volatile
  4515     0D03                     l1980:
  4516                           
  4517                           ;main.c: 283:     if (EECON1bits.WR == 0)
  4518     0D03  1683               	bsf	3,5	;RP0=1, select bank3
  4519     0D04  1703               	bsf	3,6	;RP1=1, select bank3
  4520     0D05  188C               	btfsc	12,1	;volsfr
  4521     0D06  2D08               	goto	u1071
  4522     0D07  2D09               	goto	u1070
  4523     0D08                     u1071:
  4524     0D08  2D0A               	goto	l1984
  4525     0D09                     u1070:
  4526     0D09                     l1982:
  4527                           
  4528                           ;main.c: 284:         EECON1bits.RD = 1;
  4529     0D09  140C               	bsf	12,0	;volsfr
  4530     0D0A                     l1984:
  4531                           
  4532                           ;main.c: 286:     return EEDAT;
  4533     0D0A  1283               	bcf	3,5	;RP0=0, select bank2
  4534     0D0B  1703               	bsf	3,6	;RP1=1, select bank2
  4535     0D0C  080C               	movf	12,w	;volatile
  4536     0D0D                     l220:
  4537     0D0D  0008               	return
  4538     0D0E                     __end_of_leerMemoria:
  4539                           
  4540                           	psect	text25
  4541     0BB8                     __ptext25:	
  4542 ;; *************** function _i2c_stop *****************
  4543 ;; Defined at:
  4544 ;;		line 23 in file "i2c-v2.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;		None
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;		None
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      void 
  4551 ;; Registers used:
  4552 ;;		status,2, status,0, pclath, cstack
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4558 ;;      Params:         0       0       0       0       0
  4559 ;;      Locals:         0       0       0       0       0
  4560 ;;      Temps:          0       0       0       0       0
  4561 ;;      Totals:         0       0       0       0       0
  4562 ;;Total ram usage:        0 bytes
  4563 ;; Hardware stack levels used: 1
  4564 ;; Hardware stack levels required when called: 5
  4565 ;; This function calls:
  4566 ;;		_wait_MSSP
  4567 ;; This function is called by:
  4568 ;;		_main
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572     0BB8                     _i2c_stop:	
  4573                           ;psect for function _i2c_stop
  4574                           
  4575     0BB8                     l2678:	
  4576                           ;incstack = 0
  4577                           ; Regs used in _i2c_stop: [status,2+status,0+pclath+cstack]
  4578                           
  4579                           
  4580                           ;i2c-v2.c: 25:     SSPCON2bits.PEN = 1;
  4581     0BB8  1683               	bsf	3,5	;RP0=1, select bank1
  4582     0BB9  1303               	bcf	3,6	;RP1=0, select bank1
  4583     0BBA  1511               	bsf	17,2	;volatile
  4584     0BBB                     l2680:
  4585                           
  4586                           ;i2c-v2.c: 26:     wait_MSSP();
  4587     0BBB  120A  158A  239F  120A  158A  	fcall	_wait_MSSP
  4588     0BC0                     l362:
  4589     0BC0  0008               	return
  4590     0BC1                     __end_of_i2c_stop:
  4591                           
  4592                           	psect	text26
  4593     0EE3                     __ptext26:	
  4594 ;; *************** function _analisisRuido *****************
  4595 ;; Defined at:
  4596 ;;		line 423 in file "main.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;		None
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;  temp            1   10[BANK0 ] unsigned char 
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  1    wreg      void 
  4603 ;; Registers used:
  4604 ;;		wreg, status,2, btemp+1
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4610 ;;      Params:         0       0       0       0       0
  4611 ;;      Locals:         0       1       0       0       0
  4612 ;;      Temps:          0       2       0       0       0
  4613 ;;      Totals:         0       3       0       0       0
  4614 ;;Total ram usage:        3 bytes
  4615 ;; Hardware stack levels used: 1
  4616 ;; Hardware stack levels required when called: 4
  4617 ;; This function calls:
  4618 ;;		Nothing
  4619 ;; This function is called by:
  4620 ;;		_main
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624     0EE3                     _analisisRuido:	
  4625                           ;psect for function _analisisRuido
  4626                           
  4627     0EE3                     l2632:	
  4628                           ;incstack = 0
  4629                           ; Regs used in _analisisRuido: [wreg+status,2+btemp+1]
  4630                           
  4631     0EE3                     l2634:
  4632                           
  4633                           ;main.c: 428:     if (valor[0] < ruidoBajo) temp = 1;
  4634     0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  4635     0EE4  1303               	bcf	3,6	;RP1=0, select bank1
  4636     0EE5  0821               	movf	(_valor+1)^(0+128),w
  4637     0EE6  3A80               	xorlw	128
  4638     0EE7  00FF               	movwf	btemp+1
  4639     0EE8  3081               	movlw	129
  4640     0EE9  027F               	subwf	btemp+1,w
  4641     0EEA  1D03               	skipz
  4642     0EEB  2EEE               	goto	u1855
  4643     0EEC  3090               	movlw	144
  4644     0EED  0220               	subwf	_valor^(0+128),w
  4645     0EEE                     u1855:
  4646     0EEE  1803               	skipnc
  4647     0EEF  2EF1               	goto	u1851
  4648     0EF0  2EF2               	goto	u1850
  4649     0EF1                     u1851:
  4650     0EF1  2EF7               	goto	l2638
  4651     0EF2                     u1850:
  4652     0EF2                     l2636:
  4653     0EF2  1283               	bcf	3,5	;RP0=0, select bank0
  4654     0EF3  1303               	bcf	3,6	;RP1=0, select bank0
  4655     0EF4  01AA               	clrf	analisisRuido@temp
  4656     0EF5  0AAA               	incf	analisisRuido@temp,f
  4657     0EF6  2F0F               	goto	l268
  4658     0EF7                     l2638:
  4659     0EF7  1683               	bsf	3,5	;RP0=1, select bank1
  4660     0EF8  1303               	bcf	3,6	;RP1=0, select bank1
  4661     0EF9  0821               	movf	(_valor+1)^(0+128),w
  4662     0EFA  3A80               	xorlw	128
  4663     0EFB  00FF               	movwf	btemp+1
  4664     0EFC  3083               	movlw	131
  4665     0EFD  027F               	subwf	btemp+1,w
  4666     0EFE  1D03               	skipz
  4667     0EFF  2F02               	goto	u1865
  4668     0F00  3084               	movlw	132
  4669     0F01  0220               	subwf	_valor^(0+128),w
  4670     0F02                     u1865:
  4671     0F02  1803               	skipnc
  4672     0F03  2F05               	goto	u1861
  4673     0F04  2F06               	goto	u1860
  4674     0F05                     u1861:
  4675     0F05  2F0B               	goto	l2642
  4676     0F06                     u1860:
  4677     0F06                     l2640:
  4678     0F06  3002               	movlw	2
  4679     0F07  1283               	bcf	3,5	;RP0=0, select bank0
  4680     0F08  1303               	bcf	3,6	;RP1=0, select bank0
  4681     0F09  00AA               	movwf	analisisRuido@temp
  4682     0F0A  2F0F               	goto	l268
  4683     0F0B                     l2642:
  4684     0F0B  3003               	movlw	3
  4685     0F0C  1283               	bcf	3,5	;RP0=0, select bank0
  4686     0F0D  1303               	bcf	3,6	;RP1=0, select bank0
  4687     0F0E  00AA               	movwf	analisisRuido@temp
  4688     0F0F                     l268:
  4689                           
  4690                           ;main.c: 432:     if (temp > ruidoMasAlto) ruidoMasAlto = temp;
  4691     0F0F  0860               	movf	_ruidoMasAlto+1,w
  4692     0F10  3A80               	xorlw	128
  4693     0F11  00A8               	movwf	??_analisisRuido
  4694     0F12  3080               	movlw	128
  4695     0F13  0228               	subwf	??_analisisRuido,w
  4696     0F14  1D03               	skipz
  4697     0F15  2F18               	goto	u1875
  4698     0F16  082A               	movf	analisisRuido@temp,w
  4699     0F17  025F               	subwf	_ruidoMasAlto,w
  4700     0F18                     u1875:
  4701     0F18  1803               	skipnc
  4702     0F19  2F1B               	goto	u1871
  4703     0F1A  2F1C               	goto	u1870
  4704     0F1B                     u1871:
  4705     0F1B  2F25               	goto	l272
  4706     0F1C                     u1870:
  4707     0F1C                     l2644:
  4708     0F1C  1283               	bcf	3,5	;RP0=0, select bank0
  4709     0F1D  1303               	bcf	3,6	;RP1=0, select bank0
  4710     0F1E  082A               	movf	analisisRuido@temp,w
  4711     0F1F  00A8               	movwf	??_analisisRuido
  4712     0F20  01A9               	clrf	??_analisisRuido+1
  4713     0F21  0828               	movf	??_analisisRuido,w
  4714     0F22  00DF               	movwf	_ruidoMasAlto
  4715     0F23  0829               	movf	??_analisisRuido+1,w
  4716     0F24  00E0               	movwf	_ruidoMasAlto+1
  4717     0F25                     l272:
  4718     0F25  0008               	return
  4719     0F26                     __end_of_analisisRuido:
  4720                           
  4721                           	psect	text27
  4722     0EA4                     __ptext27:	
  4723 ;; *************** function _analisisResto *****************
  4724 ;; Defined at:
  4725 ;;		line 437 in file "main.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;		None
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;		None
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      void 
  4732 ;; Registers used:
  4733 ;;		wreg, status,2, status,0, pclath, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4739 ;;      Params:         0       0       0       0       0
  4740 ;;      Locals:         0       0       0       0       0
  4741 ;;      Temps:          0       0       0       0       0
  4742 ;;      Totals:         0       0       0       0       0
  4743 ;;Total ram usage:        0 bytes
  4744 ;; Hardware stack levels used: 1
  4745 ;; Hardware stack levels required when called: 7
  4746 ;; This function calls:
  4747 ;;		_getCO2
  4748 ;;		_getLumen
  4749 ;;		_setCO2
  4750 ;;		_setLumen
  4751 ;; This function is called by:
  4752 ;;		_main
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756     0EA4                     _analisisResto:	
  4757                           ;psect for function _analisisResto
  4758                           
  4759     0EA4                     l2646:	
  4760                           ;incstack = 0
  4761                           ; Regs used in _analisisResto: [wreg+status,2+status,0+pclath+cstack]
  4762                           
  4763                           
  4764                           ;main.c: 439:     if (actualizoLecturas)
  4765     0EA4  1683               	bsf	3,5	;RP0=1, select bank1
  4766     0EA5  1303               	bcf	3,6	;RP1=0, select bank1
  4767     0EA6  082E               	movf	_actualizoLecturas^(0+128),w
  4768     0EA7  042F               	iorwf	(_actualizoLecturas+1)^(0+128),w
  4769     0EA8  1903               	btfsc	3,2
  4770     0EA9  2EAB               	goto	u1881
  4771     0EAA  2EAC               	goto	u1880
  4772     0EAB                     u1881:
  4773     0EAB  2EE2               	goto	l276
  4774     0EAC                     u1880:
  4775     0EAC                     l2648:
  4776                           
  4777                           ;main.c: 440:     {;main.c: 441:         actualizoLecturas = 0;
  4778     0EAC  01AE               	clrf	_actualizoLecturas^(0+128)
  4779     0EAD  01AF               	clrf	(_actualizoLecturas+1)^(0+128)
  4780     0EAE                     l2650:
  4781                           
  4782                           ;main.c: 443:         emitoSensores[1] = valor[1];
  4783     0EAE  0823               	movf	((_valor+1)^(0+128)+2),w
  4784     0EAF  00BD               	movwf	((_emitoSensores+1)^(0+128)+2)
  4785     0EB0  0822               	movf	(_valor^(0+128)+2),w
  4786     0EB1  00BC               	movwf	(_emitoSensores^(0+128)+2)
  4787     0EB2                     l2652:
  4788                           
  4789                           ;main.c: 444:         emitoSensores[2] = valor[2];
  4790     0EB2  0825               	movf	((_valor+1)^(0+128)+4),w
  4791     0EB3  00BF               	movwf	((_emitoSensores+1)^(0+128)+4)
  4792     0EB4  0824               	movf	(_valor^(0+128)+4),w
  4793     0EB5  00BE               	movwf	(_emitoSensores^(0+128)+4)
  4794     0EB6                     l2654:
  4795                           
  4796                           ;main.c: 445:         emitoSensores[3] = getCO2();
  4797     0EB6  120A  158A  23D7  120A  158A  	fcall	_getCO2
  4798     0EBB  1283               	bcf	3,5	;RP0=0, select bank0
  4799     0EBC  1303               	bcf	3,6	;RP1=0, select bank0
  4800     0EBD  0829               	movf	?_getCO2+1,w
  4801     0EBE  1683               	bsf	3,5	;RP0=1, select bank1
  4802     0EBF  1303               	bcf	3,6	;RP1=0, select bank1
  4803     0EC0  00C1               	movwf	((_emitoSensores+1)^(0+128)+6)
  4804     0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  4805     0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  4806     0EC3  0828               	movf	?_getCO2,w
  4807     0EC4  1683               	bsf	3,5	;RP0=1, select bank1
  4808     0EC5  1303               	bcf	3,6	;RP1=0, select bank1
  4809     0EC6  00C0               	movwf	(_emitoSensores^(0+128)+6)
  4810     0EC7                     l2656:
  4811                           
  4812                           ;main.c: 446:         emitoSensores[4] = getLumen();
  4813     0EC7  120A  158A  23E4  120A  158A  	fcall	_getLumen
  4814     0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  4815     0ECD  1303               	bcf	3,6	;RP1=0, select bank0
  4816     0ECE  0829               	movf	?_getLumen+1,w
  4817     0ECF  1683               	bsf	3,5	;RP0=1, select bank1
  4818     0ED0  1303               	bcf	3,6	;RP1=0, select bank1
  4819     0ED1  00C3               	movwf	((_emitoSensores+1)^(0+128)+8)
  4820     0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  4821     0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  4822     0ED4  0828               	movf	?_getLumen,w
  4823     0ED5  1683               	bsf	3,5	;RP0=1, select bank1
  4824     0ED6  1303               	bcf	3,6	;RP1=0, select bank1
  4825     0ED7  00C2               	movwf	(_emitoSensores^(0+128)+8)
  4826     0ED8                     l2658:
  4827                           
  4828                           ;main.c: 447:         setCO2();
  4829     0ED8  120A  118A  26F1  120A  158A  	fcall	_setCO2
  4830     0EDD                     l2660:
  4831                           
  4832                           ;main.c: 448:         setLumen();
  4833     0EDD  120A  158A  27B5  120A  158A  	fcall	_setLumen
  4834     0EE2                     l276:
  4835     0EE2  0008               	return
  4836     0EE3                     __end_of_analisisResto:
  4837                           
  4838                           	psect	text28
  4839     0FB5                     __ptext28:	
  4840 ;; *************** function _setLumen *****************
  4841 ;; Defined at:
  4842 ;;		line 243 in file "main.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;		None
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;		None
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  1    wreg      void 
  4849 ;; Registers used:
  4850 ;;		wreg, status,2, status,0, pclath, cstack
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4856 ;;      Params:         0       0       0       0       0
  4857 ;;      Locals:         0       0       0       0       0
  4858 ;;      Temps:          0       2       0       0       0
  4859 ;;      Totals:         0       2       0       0       0
  4860 ;;Total ram usage:        2 bytes
  4861 ;; Hardware stack levels used: 1
  4862 ;; Hardware stack levels required when called: 6
  4863 ;; This function calls:
  4864 ;;		_i2c_read
  4865 ;;		_i2c_rstart
  4866 ;;		_i2c_write
  4867 ;; This function is called by:
  4868 ;;		_analisisResto
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872     0FB5                     _setLumen:	
  4873                           ;psect for function _setLumen
  4874                           
  4875     0FB5                     l2352:	
  4876                           ;incstack = 0
  4877                           ; Regs used in _setLumen: [wreg+status,2+status,0+pclath+cstack]
  4878                           
  4879                           
  4880                           ;main.c: 245:     i2c_rstart();
  4881     0FB5  120A  158A  23AF  120A  158A  	fcall	_i2c_rstart
  4882     0FBA                     l2354:
  4883                           
  4884                           ;main.c: 247:     i2c_write(0x20);
  4885     0FBA  3020               	movlw	32
  4886     0FBB  120A  158A  23F1  120A  158A  	fcall	_i2c_write
  4887     0FC0                     l2356:
  4888                           
  4889                           ;main.c: 248:     i2c_write(0x04);
  4890     0FC0  3004               	movlw	4
  4891     0FC1  120A  158A  23F1  120A  158A  	fcall	_i2c_write
  4892     0FC6                     l2358:
  4893                           
  4894                           ;main.c: 249:     i2c_write(0x21);
  4895     0FC6  3021               	movlw	33
  4896     0FC7  120A  158A  23F1  120A  158A  	fcall	_i2c_write
  4897     0FCC                     l2360:
  4898                           
  4899                           ;main.c: 250:     valorI2C[1] = i2c_read(1);
  4900     0FCC  3001               	movlw	1
  4901     0FCD  120A  158A  2532  120A  158A  	fcall	_i2c_read
  4902     0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  4903     0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  4904     0FD4  00AA               	movwf	??_setLumen
  4905     0FD5  01AB               	clrf	??_setLumen+1
  4906     0FD6  082A               	movf	??_setLumen,w
  4907     0FD7  1683               	bsf	3,5	;RP0=1, select bank1
  4908     0FD8  1303               	bcf	3,6	;RP1=0, select bank1
  4909     0FD9  00A8               	movwf	(_valorI2C^(0+128)+2)
  4910     0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  4911     0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  4912     0FDC  082B               	movf	??_setLumen+1,w
  4913     0FDD  1683               	bsf	3,5	;RP0=1, select bank1
  4914     0FDE  1303               	bcf	3,6	;RP1=0, select bank1
  4915     0FDF  00A9               	movwf	((_valorI2C+1)^(0+128)+2)
  4916     0FE0                     l2362:
  4917                           
  4918                           ;main.c: 251:     valorI2C[1] += (i2c_read(0) * 0x10);
  4919     0FE0  3000               	movlw	0
  4920     0FE1  120A  158A  2532  120A  158A  	fcall	_i2c_read
  4921     0FE6  1283               	bcf	3,5	;RP0=0, select bank0
  4922     0FE7  1303               	bcf	3,6	;RP1=0, select bank0
  4923     0FE8  00AA               	movwf	??_setLumen
  4924     0FE9  01AB               	clrf	??_setLumen+1
  4925     0FEA  0EAA               	swapf	??_setLumen,f
  4926     0FEB  0EAB               	swapf	??_setLumen+1,f
  4927     0FEC  30F0               	movlw	240
  4928     0FED  05AB               	andwf	??_setLumen+1,f
  4929     0FEE  082A               	movf	??_setLumen,w
  4930     0FEF  390F               	andlw	15
  4931     0FF0  04AB               	iorwf	??_setLumen+1,f
  4932     0FF1  30F0               	movlw	240
  4933     0FF2  05AA               	andwf	??_setLumen,f
  4934     0FF3  082A               	movf	??_setLumen,w
  4935     0FF4  1683               	bsf	3,5	;RP0=1, select bank1
  4936     0FF5  1303               	bcf	3,6	;RP1=0, select bank1
  4937     0FF6  07A8               	addwf	(_valorI2C^(0+128)+2),f
  4938     0FF7  1803               	skipnc
  4939     0FF8  0AA9               	incf	((_valorI2C+1)^(0+128)+2),f
  4940     0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  4941     0FFA  1303               	bcf	3,6	;RP1=0, select bank0
  4942     0FFB  082B               	movf	??_setLumen+1,w
  4943     0FFC  1683               	bsf	3,5	;RP0=1, select bank1
  4944     0FFD  1303               	bcf	3,6	;RP1=0, select bank1
  4945     0FFE  07A9               	addwf	((_valorI2C+1)^(0+128)+2),f
  4946     0FFF                     l206:
  4947     0FFF  0008               	return
  4948     1000                     __end_of_setLumen:
  4949                           
  4950                           	psect	text29
  4951     06F1                     __ptext29:	
  4952 ;; *************** function _setCO2 *****************
  4953 ;; Defined at:
  4954 ;;		line 260 in file "main.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;		None
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;		None
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  1    wreg      void 
  4961 ;; Registers used:
  4962 ;;		wreg, status,2, status,0, pclath, cstack
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4968 ;;      Params:         0       0       0       0       0
  4969 ;;      Locals:         0       0       0       0       0
  4970 ;;      Temps:          0       2       0       0       0
  4971 ;;      Totals:         0       2       0       0       0
  4972 ;;Total ram usage:        2 bytes
  4973 ;; Hardware stack levels used: 1
  4974 ;; Hardware stack levels required when called: 6
  4975 ;; This function calls:
  4976 ;;		_i2c_read
  4977 ;;		_i2c_rstart
  4978 ;;		_i2c_write
  4979 ;; This function is called by:
  4980 ;;		_analisisResto
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984     06F1                     _setCO2:	
  4985                           ;psect for function _setCO2
  4986                           
  4987     06F1                     l2368:	
  4988                           ;incstack = 0
  4989                           ; Regs used in _setCO2: [wreg+status,2+status,0+pclath+cstack]
  4990                           
  4991                           
  4992                           ;main.c: 262:     i2c_rstart();
  4993     06F1  120A  158A  23AF  120A  118A  	fcall	_i2c_rstart
  4994     06F6                     l2370:
  4995                           
  4996                           ;main.c: 264:     i2c_write(0xB5);
  4997     06F6  30B5               	movlw	181
  4998     06F7  120A  158A  23F1  120A  118A  	fcall	_i2c_write
  4999     06FC                     l2372:
  5000                           
  5001                           ;main.c: 265:     valorI2C[0] = i2c_read(1);
  5002     06FC  3001               	movlw	1
  5003     06FD  120A  158A  2532  120A  118A  	fcall	_i2c_read
  5004     0702  1283               	bcf	3,5	;RP0=0, select bank0
  5005     0703  1303               	bcf	3,6	;RP1=0, select bank0
  5006     0704  00AA               	movwf	??_setCO2
  5007     0705  01AB               	clrf	??_setCO2+1
  5008     0706  082A               	movf	??_setCO2,w
  5009     0707  1683               	bsf	3,5	;RP0=1, select bank1
  5010     0708  1303               	bcf	3,6	;RP1=0, select bank1
  5011     0709  00A6               	movwf	_valorI2C^(0+128)
  5012     070A  1283               	bcf	3,5	;RP0=0, select bank0
  5013     070B  1303               	bcf	3,6	;RP1=0, select bank0
  5014     070C  082B               	movf	??_setCO2+1,w
  5015     070D  1683               	bsf	3,5	;RP0=1, select bank1
  5016     070E  1303               	bcf	3,6	;RP1=0, select bank1
  5017     070F  00A7               	movwf	(_valorI2C+1)^(0+128)
  5018     0710                     l2374:
  5019                           
  5020                           ;main.c: 267:     valorI2C[0] += (i2c_read(1) * 0x10);
  5021     0710  3001               	movlw	1
  5022     0711  120A  158A  2532  120A  118A  	fcall	_i2c_read
  5023     0716  1283               	bcf	3,5	;RP0=0, select bank0
  5024     0717  1303               	bcf	3,6	;RP1=0, select bank0
  5025     0718  00AA               	movwf	??_setCO2
  5026     0719  01AB               	clrf	??_setCO2+1
  5027     071A  0EAA               	swapf	??_setCO2,f
  5028     071B  0EAB               	swapf	??_setCO2+1,f
  5029     071C  30F0               	movlw	240
  5030     071D  05AB               	andwf	??_setCO2+1,f
  5031     071E  082A               	movf	??_setCO2,w
  5032     071F  390F               	andlw	15
  5033     0720  04AB               	iorwf	??_setCO2+1,f
  5034     0721  30F0               	movlw	240
  5035     0722  05AA               	andwf	??_setCO2,f
  5036     0723  082A               	movf	??_setCO2,w
  5037     0724  1683               	bsf	3,5	;RP0=1, select bank1
  5038     0725  1303               	bcf	3,6	;RP1=0, select bank1
  5039     0726  07A6               	addwf	_valorI2C^(0+128),f
  5040     0727  1803               	skipnc
  5041     0728  0AA7               	incf	(_valorI2C+1)^(0+128),f
  5042     0729  1283               	bcf	3,5	;RP0=0, select bank0
  5043     072A  1303               	bcf	3,6	;RP1=0, select bank0
  5044     072B  082B               	movf	??_setCO2+1,w
  5045     072C  1683               	bsf	3,5	;RP0=1, select bank1
  5046     072D  1303               	bcf	3,6	;RP1=0, select bank1
  5047     072E  07A7               	addwf	(_valorI2C+1)^(0+128),f
  5048     072F                     l2376:
  5049                           
  5050                           ;main.c: 268:     if (i2c_read(0) == 0x10) valorI2C[0] = -1;
  5051     072F  3000               	movlw	0
  5052     0730  120A  158A  2532  120A  118A  	fcall	_i2c_read
  5053     0735  3A10               	xorlw	16
  5054     0736  1D03               	skipz
  5055     0737  2F39               	goto	u1551
  5056     0738  2F3A               	goto	u1550
  5057     0739                     u1551:
  5058     0739  2F40               	goto	l213
  5059     073A                     u1550:
  5060     073A                     l2378:
  5061     073A  30FF               	movlw	255
  5062     073B  1683               	bsf	3,5	;RP0=1, select bank1
  5063     073C  1303               	bcf	3,6	;RP1=0, select bank1
  5064     073D  00A6               	movwf	_valorI2C^(0+128)
  5065     073E  30FF               	movlw	255
  5066     073F  00A7               	movwf	(_valorI2C^(0+128)+1)
  5067     0740                     l213:
  5068     0740  0008               	return
  5069     0741                     __end_of_setCO2:
  5070                           
  5071                           	psect	text30
  5072     0BF1                     __ptext30:	
  5073 ;; *************** function _i2c_write *****************
  5074 ;; Defined at:
  5075 ;;		line 37 in file "i2c-v2.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;  I2C_data        1    wreg     unsigned char 
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;  I2C_data        1    8[BANK0 ] unsigned char 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      unsigned char 
  5082 ;; Registers used:
  5083 ;;		wreg, status,2, status,0, pclath, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5089 ;;      Params:         0       0       0       0       0
  5090 ;;      Locals:         0       1       0       0       0
  5091 ;;      Temps:          0       0       0       0       0
  5092 ;;      Totals:         0       1       0       0       0
  5093 ;;Total ram usage:        1 bytes
  5094 ;; Hardware stack levels used: 1
  5095 ;; Hardware stack levels required when called: 5
  5096 ;; This function calls:
  5097 ;;		_wait_MSSP
  5098 ;; This function is called by:
  5099 ;;		_setLumen
  5100 ;;		_setCO2
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104     0BF1                     _i2c_write:	
  5105                           ;psect for function _i2c_write
  5106                           
  5107                           
  5108                           ;incstack = 0
  5109                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  5110                           ;i2c_write@I2C_data stored from wreg
  5111     0BF1  1283               	bcf	3,5	;RP0=0, select bank0
  5112     0BF2  1303               	bcf	3,6	;RP1=0, select bank0
  5113     0BF3  00A8               	movwf	i2c_write@I2C_data
  5114     0BF4                     l2020:
  5115                           
  5116                           ;i2c-v2.c: 37: unsigned char i2c_write(unsigned char I2C_data);i2c-v2.c: 38: {;i2c-v2.c:
      +                           39:     SSPBUF = I2C_data;
  5117     0BF4  0828               	movf	i2c_write@I2C_data,w
  5118     0BF5  0093               	movwf	19	;volatile
  5119     0BF6                     l2022:
  5120                           
  5121                           ;i2c-v2.c: 40:     wait_MSSP();
  5122     0BF6  120A  158A  239F  120A  158A  	fcall	_wait_MSSP
  5123     0BFB                     l2024:
  5124                           
  5125                           ;i2c-v2.c: 41:     return((unsigned char)!SSPCON2bits.ACKSTAT);;	Return value of _i2c_wr
      +                          ite is never used
  5126     0BFB  1683               	bsf	3,5	;RP0=1, select bank1
  5127     0BFC  1303               	bcf	3,6	;RP1=0, select bank1
  5128     0BFD  0811               	movf	17,w	;volatile
  5129     0BFE                     l368:
  5130     0BFE  0008               	return
  5131     0BFF                     __end_of_i2c_write:
  5132                           
  5133                           	psect	text31
  5134     0BAF                     __ptext31:	
  5135 ;; *************** function _i2c_rstart *****************
  5136 ;; Defined at:
  5137 ;;		line 30 in file "i2c-v2.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;		None
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;		None
  5142 ;; Return value:  Size  Location     Type
  5143 ;;                  1    wreg      void 
  5144 ;; Registers used:
  5145 ;;		status,2, status,0, pclath, cstack
  5146 ;; Tracked objects:
  5147 ;;		On entry : 0/0
  5148 ;;		On exit  : 0/0
  5149 ;;		Unchanged: 0/0
  5150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5151 ;;      Params:         0       0       0       0       0
  5152 ;;      Locals:         0       0       0       0       0
  5153 ;;      Temps:          0       0       0       0       0
  5154 ;;      Totals:         0       0       0       0       0
  5155 ;;Total ram usage:        0 bytes
  5156 ;; Hardware stack levels used: 1
  5157 ;; Hardware stack levels required when called: 5
  5158 ;; This function calls:
  5159 ;;		_wait_MSSP
  5160 ;; This function is called by:
  5161 ;;		_setLumen
  5162 ;;		_setCO2
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166     0BAF                     _i2c_rstart:	
  5167                           ;psect for function _i2c_rstart
  5168                           
  5169     0BAF                     l2014:	
  5170                           ;incstack = 0
  5171                           ; Regs used in _i2c_rstart: [status,2+status,0+pclath+cstack]
  5172                           
  5173                           
  5174                           ;i2c-v2.c: 32:     SSPCON2bits.RSEN = 1;
  5175     0BAF  1683               	bsf	3,5	;RP0=1, select bank1
  5176     0BB0  1303               	bcf	3,6	;RP1=0, select bank1
  5177     0BB1  1491               	bsf	17,1	;volatile
  5178     0BB2                     l2016:
  5179                           
  5180                           ;i2c-v2.c: 33:     wait_MSSP();
  5181     0BB2  120A  158A  239F  120A  158A  	fcall	_wait_MSSP
  5182     0BB7                     l365:
  5183     0BB7  0008               	return
  5184     0BB8                     __end_of_i2c_rstart:
  5185                           
  5186                           	psect	text32
  5187     0D32                     __ptext32:	
  5188 ;; *************** function _i2c_read *****************
  5189 ;; Defined at:
  5190 ;;		line 47 in file "i2c-v2.c"
  5191 ;; Parameters:    Size  Location     Type
  5192 ;;  master_ack      1    wreg     unsigned char 
  5193 ;; Auto vars:     Size  Location     Type
  5194 ;;  master_ack      1    8[BANK0 ] unsigned char 
  5195 ;;  I2C_data        1    9[BANK0 ] unsigned char 
  5196 ;; Return value:  Size  Location     Type
  5197 ;;                  1    wreg      unsigned char 
  5198 ;; Registers used:
  5199 ;;		wreg, status,2, status,0, pclath, cstack
  5200 ;; Tracked objects:
  5201 ;;		On entry : 0/0
  5202 ;;		On exit  : 0/0
  5203 ;;		Unchanged: 0/0
  5204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5205 ;;      Params:         0       0       0       0       0
  5206 ;;      Locals:         0       2       0       0       0
  5207 ;;      Temps:          0       0       0       0       0
  5208 ;;      Totals:         0       2       0       0       0
  5209 ;;Total ram usage:        2 bytes
  5210 ;; Hardware stack levels used: 1
  5211 ;; Hardware stack levels required when called: 5
  5212 ;; This function calls:
  5213 ;;		_wait_MSSP
  5214 ;; This function is called by:
  5215 ;;		_setLumen
  5216 ;;		_setCO2
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220     0D32                     _i2c_read:	
  5221                           ;psect for function _i2c_read
  5222                           
  5223                           
  5224                           ;incstack = 0
  5225                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  5226                           ;i2c_read@master_ack stored from wreg
  5227     0D32  1283               	bcf	3,5	;RP0=0, select bank0
  5228     0D33  1303               	bcf	3,6	;RP1=0, select bank0
  5229     0D34  00A8               	movwf	i2c_read@master_ack
  5230     0D35                     l2028:
  5231                           
  5232                           ;i2c-v2.c: 47: unsigned char i2c_read(char master_ack);i2c-v2.c: 48: {;i2c-v2.c: 49:    
      +                           unsigned char I2C_data;;i2c-v2.c: 51:     SSPCON2bits.RCEN = 1;
  5233     0D35  1683               	bsf	3,5	;RP0=1, select bank1
  5234     0D36  1303               	bcf	3,6	;RP1=0, select bank1
  5235     0D37  1591               	bsf	17,3	;volatile
  5236     0D38                     l2030:
  5237                           
  5238                           ;i2c-v2.c: 52:     wait_MSSP();
  5239     0D38  120A  158A  239F  120A  158A  	fcall	_wait_MSSP
  5240     0D3D                     l2032:
  5241                           
  5242                           ;i2c-v2.c: 54:     I2C_data = SSPBUF;
  5243     0D3D  1283               	bcf	3,5	;RP0=0, select bank0
  5244     0D3E  1303               	bcf	3,6	;RP1=0, select bank0
  5245     0D3F  0813               	movf	19,w	;volatile
  5246     0D40  00A9               	movwf	i2c_read@I2C_data
  5247     0D41                     l2034:
  5248                           
  5249                           ;i2c-v2.c: 56:     if(master_ack)
  5250     0D41  0828               	movf	i2c_read@master_ack,w
  5251     0D42  1903               	btfsc	3,2
  5252     0D43  2D45               	goto	u1161
  5253     0D44  2D46               	goto	u1160
  5254     0D45                     u1161:
  5255     0D45  2D4A               	goto	l371
  5256     0D46                     u1160:
  5257     0D46                     l2036:
  5258                           
  5259                           ;i2c-v2.c: 57:         SSPCON2bits.ACKDT = 0;
  5260     0D46  1683               	bsf	3,5	;RP0=1, select bank1
  5261     0D47  1303               	bcf	3,6	;RP1=0, select bank1
  5262     0D48  1291               	bcf	17,5	;volatile
  5263     0D49  2D4D               	goto	l372
  5264     0D4A                     l371:	
  5265                           ;i2c-v2.c: 58:     else
  5266                           
  5267                           
  5268                           ;i2c-v2.c: 59:         SSPCON2bits.ACKDT = 1;
  5269     0D4A  1683               	bsf	3,5	;RP0=1, select bank1
  5270     0D4B  1303               	bcf	3,6	;RP1=0, select bank1
  5271     0D4C  1691               	bsf	17,5	;volatile
  5272     0D4D                     l372:
  5273                           
  5274                           ;i2c-v2.c: 61:     SSPCON2bits.ACKEN = 1;
  5275     0D4D  1611               	bsf	17,4	;volatile
  5276     0D4E                     l2038:
  5277                           
  5278                           ;i2c-v2.c: 62:     wait_MSSP();
  5279     0D4E  120A  158A  239F  120A  158A  	fcall	_wait_MSSP
  5280     0D53                     l2040:
  5281                           
  5282                           ;i2c-v2.c: 63:     return(I2C_data);
  5283     0D53  1283               	bcf	3,5	;RP0=0, select bank0
  5284     0D54  1303               	bcf	3,6	;RP1=0, select bank0
  5285     0D55  0829               	movf	i2c_read@I2C_data,w
  5286     0D56                     l373:
  5287     0D56  0008               	return
  5288     0D57                     __end_of_i2c_read:
  5289                           
  5290                           	psect	text33
  5291     0B9F                     __ptext33:	
  5292 ;; *************** function _wait_MSSP *****************
  5293 ;; Defined at:
  5294 ;;		line 8 in file "i2c-v2.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;		None
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;		None
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  1    wreg      void 
  5301 ;; Registers used:
  5302 ;;		None
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5308 ;;      Params:         0       0       0       0       0
  5309 ;;      Locals:         0       0       0       0       0
  5310 ;;      Temps:          0       0       0       0       0
  5311 ;;      Totals:         0       0       0       0       0
  5312 ;;Total ram usage:        0 bytes
  5313 ;; Hardware stack levels used: 1
  5314 ;; Hardware stack levels required when called: 4
  5315 ;; This function calls:
  5316 ;;		Nothing
  5317 ;; This function is called by:
  5318 ;;		_i2c_stop
  5319 ;;		_i2c_rstart
  5320 ;;		_i2c_write
  5321 ;;		_i2c_read
  5322 ;;		_i2c_start
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326     0B9F                     _wait_MSSP:	
  5327                           ;psect for function _wait_MSSP
  5328                           
  5329     0B9F                     l2006:	
  5330                           ;incstack = 0
  5331                           ; Regs used in _wait_MSSP: []
  5332                           
  5333     0B9F                     l353:	
  5334                           ;i2c-v2.c: 10:     while(!PIR1bits.SSPIF);
  5335                           
  5336     0B9F  1283               	bcf	3,5	;RP0=0, select bank0
  5337     0BA0  1303               	bcf	3,6	;RP1=0, select bank0
  5338     0BA1  1D8C               	btfss	12,3	;volatile
  5339     0BA2  2BA4               	goto	u1131
  5340     0BA3  2BA5               	goto	u1130
  5341     0BA4                     u1131:
  5342     0BA4  2B9F               	goto	l353
  5343     0BA5                     u1130:
  5344     0BA5                     l355:
  5345                           
  5346                           ;i2c-v2.c: 12:     PIR1bits.SSPIF = 0;
  5347     0BA5  118C               	bcf	12,3	;volatile
  5348     0BA6                     l356:	
  5349                           ;i2c-v2.c: 13:     return;
  5350                           
  5351     0BA6  0008               	return
  5352     0BA7                     __end_of_wait_MSSP:
  5353                           
  5354                           	psect	text34
  5355     0BE4                     __ptext34:	
  5356 ;; *************** function _getLumen *****************
  5357 ;; Defined at:
  5358 ;;		line 255 in file "main.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;		None
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;		None
  5363 ;; Return value:  Size  Location     Type
  5364 ;;                  2    8[BANK0 ] int 
  5365 ;; Registers used:
  5366 ;;		wreg
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5372 ;;      Params:         0       2       0       0       0
  5373 ;;      Locals:         0       0       0       0       0
  5374 ;;      Temps:          0       0       0       0       0
  5375 ;;      Totals:         0       2       0       0       0
  5376 ;;Total ram usage:        2 bytes
  5377 ;; Hardware stack levels used: 1
  5378 ;; Hardware stack levels required when called: 4
  5379 ;; This function calls:
  5380 ;;		Nothing
  5381 ;; This function is called by:
  5382 ;;		_analisisResto
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386     0BE4                     _getLumen:	
  5387                           ;psect for function _getLumen
  5388                           
  5389     0BE4                     l2364:	
  5390                           ;incstack = 0
  5391                           ; Regs used in _getLumen: [wreg]
  5392                           
  5393                           
  5394                           ;main.c: 256:     return valorI2C[1];
  5395     0BE4  1683               	bsf	3,5	;RP0=1, select bank1
  5396     0BE5  1303               	bcf	3,6	;RP1=0, select bank1
  5397     0BE6  0829               	movf	((_valorI2C+1)^(0+128)+2),w
  5398     0BE7  1283               	bcf	3,5	;RP0=0, select bank0
  5399     0BE8  1303               	bcf	3,6	;RP1=0, select bank0
  5400     0BE9  00A9               	movwf	?_getLumen+1
  5401     0BEA  1683               	bsf	3,5	;RP0=1, select bank1
  5402     0BEB  1303               	bcf	3,6	;RP1=0, select bank1
  5403     0BEC  0828               	movf	(_valorI2C^(0+128)+2),w
  5404     0BED  1283               	bcf	3,5	;RP0=0, select bank0
  5405     0BEE  1303               	bcf	3,6	;RP1=0, select bank0
  5406     0BEF  00A8               	movwf	?_getLumen
  5407     0BF0                     l209:
  5408     0BF0  0008               	return
  5409     0BF1                     __end_of_getLumen:
  5410                           
  5411                           	psect	text35
  5412     0BD7                     __ptext35:	
  5413 ;; *************** function _getCO2 *****************
  5414 ;; Defined at:
  5415 ;;		line 271 in file "main.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;		None
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;		None
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  2    8[BANK0 ] int 
  5422 ;; Registers used:
  5423 ;;		wreg
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5429 ;;      Params:         0       2       0       0       0
  5430 ;;      Locals:         0       0       0       0       0
  5431 ;;      Temps:          0       0       0       0       0
  5432 ;;      Totals:         0       2       0       0       0
  5433 ;;Total ram usage:        2 bytes
  5434 ;; Hardware stack levels used: 1
  5435 ;; Hardware stack levels required when called: 4
  5436 ;; This function calls:
  5437 ;;		Nothing
  5438 ;; This function is called by:
  5439 ;;		_analisisResto
  5440 ;; This function uses a non-reentrant model
  5441 ;;
  5442                           
  5443     0BD7                     _getCO2:	
  5444                           ;psect for function _getCO2
  5445                           
  5446     0BD7                     l2380:	
  5447                           ;incstack = 0
  5448                           ; Regs used in _getCO2: [wreg]
  5449                           
  5450                           
  5451                           ;main.c: 272:     return valorI2C[0];
  5452     0BD7  1683               	bsf	3,5	;RP0=1, select bank1
  5453     0BD8  1303               	bcf	3,6	;RP1=0, select bank1
  5454     0BD9  0827               	movf	(_valorI2C+1)^(0+128),w
  5455     0BDA  1283               	bcf	3,5	;RP0=0, select bank0
  5456     0BDB  1303               	bcf	3,6	;RP1=0, select bank0
  5457     0BDC  00A9               	movwf	?_getCO2+1
  5458     0BDD  1683               	bsf	3,5	;RP0=1, select bank1
  5459     0BDE  1303               	bcf	3,6	;RP1=0, select bank1
  5460     0BDF  0826               	movf	_valorI2C^(0+128),w
  5461     0BE0  1283               	bcf	3,5	;RP0=0, select bank0
  5462     0BE1  1303               	bcf	3,6	;RP1=0, select bank0
  5463     0BE2  00A8               	movwf	?_getCO2
  5464     0BE3                     l216:
  5465     0BE3  0008               	return
  5466     0BE4                     __end_of_getCO2:
  5467                           
  5468                           	psect	text36
  5469     004A                     __ptext36:	
  5470 ;; *************** function _TRAT_INT *****************
  5471 ;; Defined at:
  5472 ;;		line 470 in file "main.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;		None
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;		None
  5477 ;; Return value:  Size  Location     Type
  5478 ;;                  1    wreg      void 
  5479 ;; Registers used:
  5480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5481 ;; Tracked objects:
  5482 ;;		On entry : 0/0
  5483 ;;		On exit  : 0/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5486 ;;      Params:         0       0       0       0       0
  5487 ;;      Locals:         0       0       0       0       0
  5488 ;;      Temps:          0       6       0       0       0
  5489 ;;      Totals:         0       6       0       0       0
  5490 ;;Total ram usage:        6 bytes
  5491 ;; Hardware stack levels used: 1
  5492 ;; Hardware stack levels required when called: 3
  5493 ;; This function calls:
  5494 ;;		i1_setLED
  5495 ;;		i1_setPWM
  5496 ;; This function is called by:
  5497 ;;		Interrupt level 1
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501     004A                     _TRAT_INT:	
  5502                           ;psect for function _TRAT_INT
  5503                           
  5504     004A                     i1l2716:
  5505                           
  5506                           ;main.c: 471:     if (INTCONbits.TMR0IF)
  5507     004A  1D0B               	btfss	11,2	;volatile
  5508     004B  284D               	goto	u190_21
  5509     004C  284E               	goto	u190_20
  5510     004D                     u190_21:
  5511     004D  28AC               	goto	i1l286
  5512     004E                     u190_20:
  5513     004E                     i1l2718:
  5514                           
  5515                           ;main.c: 472:     {;main.c: 474:         TMR0 = 61;
  5516     004E  303D               	movlw	61
  5517     004F  0081               	movwf	1	;volatile
  5518                           
  5519                           ;main.c: 475:         if (copias >= los5msen1sT0) {
  5520     0050  1683               	bsf	3,5	;RP0=1, select bank1
  5521     0051  1303               	bcf	3,6	;RP1=0, select bank1
  5522     0052  082D               	movf	(_copias+1)^(0+128),w
  5523     0053  3A80               	xorlw	128
  5524     0054  1283               	bcf	3,5	;RP0=0, select bank0
  5525     0055  1303               	bcf	3,6	;RP1=0, select bank0
  5526     0056  00A2               	movwf	??_TRAT_INT
  5527     0057  1683               	bsf	3,5	;RP0=1, select bank1
  5528     0058  1303               	bcf	3,6	;RP1=0, select bank1
  5529     0059  0845               	movf	(_los5msen1sT0+1)^(0+128),w
  5530     005A  3A80               	xorlw	128
  5531     005B  1283               	bcf	3,5	;RP0=0, select bank0
  5532     005C  1303               	bcf	3,6	;RP1=0, select bank0
  5533     005D  0222               	subwf	??_TRAT_INT,w
  5534     005E  1D03               	skipz
  5535     005F  2864               	goto	u191_25
  5536     0060  1683               	bsf	3,5	;RP0=1, select bank1
  5537     0061  1303               	bcf	3,6	;RP1=0, select bank1
  5538     0062  0844               	movf	_los5msen1sT0^(0+128),w
  5539     0063  022C               	subwf	_copias^(0+128),w
  5540     0064                     u191_25:
  5541     0064  1C03               	skipc
  5542     0065  2867               	goto	u191_21
  5543     0066  2868               	goto	u191_20
  5544     0067                     u191_21:
  5545     0067  28A2               	goto	i1l2732
  5546     0068                     u191_20:
  5547     0068                     i1l2720:
  5548                           
  5549                           ;main.c: 477:             copias = 0;
  5550     0068  1683               	bsf	3,5	;RP0=1, select bank1
  5551     0069  1303               	bcf	3,6	;RP1=0, select bank1
  5552     006A  01AC               	clrf	_copias^(0+128)
  5553     006B  01AD               	clrf	(_copias+1)^(0+128)
  5554     006C                     i1l2722:
  5555                           
  5556                           ;main.c: 478:             copias5s++;
  5557     006C  3001               	movlw	1
  5558     006D  07AA               	addwf	_copias5s^(0+128),f
  5559     006E  1803               	skipnc
  5560     006F  0AAB               	incf	(_copias5s+1)^(0+128),f
  5561     0070  3000               	movlw	0
  5562     0071  07AB               	addwf	(_copias5s+1)^(0+128),f
  5563     0072                     i1l2724:
  5564                           
  5565                           ;main.c: 480:             emitoSensores[0] = ruidoMasAlto;
  5566     0072  1283               	bcf	3,5	;RP0=0, select bank0
  5567     0073  1303               	bcf	3,6	;RP1=0, select bank0
  5568     0074  0860               	movf	_ruidoMasAlto+1,w
  5569     0075  1683               	bsf	3,5	;RP0=1, select bank1
  5570     0076  1303               	bcf	3,6	;RP1=0, select bank1
  5571     0077  00BB               	movwf	(_emitoSensores+1)^(0+128)
  5572     0078  1283               	bcf	3,5	;RP0=0, select bank0
  5573     0079  1303               	bcf	3,6	;RP1=0, select bank0
  5574     007A  085F               	movf	_ruidoMasAlto,w
  5575     007B  1683               	bsf	3,5	;RP0=1, select bank1
  5576     007C  1303               	bcf	3,6	;RP1=0, select bank1
  5577     007D  00BA               	movwf	_emitoSensores^(0+128)
  5578                           
  5579                           ;main.c: 481:             ruidoMasAlto = 0;
  5580     007E  1283               	bcf	3,5	;RP0=0, select bank0
  5581     007F  1303               	bcf	3,6	;RP1=0, select bank0
  5582     0080  01DF               	clrf	_ruidoMasAlto
  5583     0081  01E0               	clrf	_ruidoMasAlto+1
  5584     0082                     i1l2726:
  5585                           
  5586                           ;main.c: 485:             if (copias5s >= 5)
  5587     0082  1683               	bsf	3,5	;RP0=1, select bank1
  5588     0083  1303               	bcf	3,6	;RP1=0, select bank1
  5589     0084  082B               	movf	(_copias5s+1)^(0+128),w
  5590     0085  3A80               	xorlw	128
  5591     0086  00FF               	movwf	btemp+1
  5592     0087  3080               	movlw	128
  5593     0088  027F               	subwf	btemp+1,w
  5594     0089  1D03               	skipz
  5595     008A  288D               	goto	u192_25
  5596     008B  3005               	movlw	5
  5597     008C  022A               	subwf	_copias5s^(0+128),w
  5598     008D                     u192_25:
  5599     008D  1C03               	skipc
  5600     008E  2890               	goto	u192_21
  5601     008F  2891               	goto	u192_20
  5602     0090                     u192_21:
  5603     0090  28AA               	goto	i1l2734
  5604     0091                     u192_20:
  5605     0091                     i1l2728:
  5606                           
  5607                           ;main.c: 486:             {;main.c: 487:                 actualizoLecturas = 1;
  5608     0091  3001               	movlw	1
  5609     0092  1683               	bsf	3,5	;RP0=1, select bank1
  5610     0093  1303               	bcf	3,6	;RP1=0, select bank1
  5611     0094  00AE               	movwf	_actualizoLecturas^(0+128)
  5612     0095  3000               	movlw	0
  5613     0096  00AF               	movwf	(_actualizoLecturas^(0+128)+1)
  5614                           
  5615                           ;main.c: 488:                 leoADCHumedadTemp = 2;
  5616     0097  3002               	movlw	2
  5617     0098  1283               	bcf	3,5	;RP0=0, select bank0
  5618     0099  1303               	bcf	3,6	;RP1=0, select bank0
  5619     009A  00CC               	movwf	_leoADCHumedadTemp
  5620     009B  3000               	movlw	0
  5621     009C  00CD               	movwf	_leoADCHumedadTemp+1
  5622     009D                     i1l2730:
  5623                           
  5624                           ;main.c: 489:                 copias5s = 0;
  5625     009D  1683               	bsf	3,5	;RP0=1, select bank1
  5626     009E  1303               	bcf	3,6	;RP1=0, select bank1
  5627     009F  01AA               	clrf	_copias5s^(0+128)
  5628     00A0  01AB               	clrf	(_copias5s+1)^(0+128)
  5629     00A1  28AA               	goto	i1l2734
  5630     00A2                     i1l2732:
  5631                           
  5632                           ;main.c: 493:             copias += 1;
  5633     00A2  3001               	movlw	1
  5634     00A3  1683               	bsf	3,5	;RP0=1, select bank1
  5635     00A4  1303               	bcf	3,6	;RP1=0, select bank1
  5636     00A5  07AC               	addwf	_copias^(0+128),f
  5637     00A6  1803               	skipnc
  5638     00A7  0AAD               	incf	(_copias+1)^(0+128),f
  5639     00A8  3000               	movlw	0
  5640     00A9  07AD               	addwf	(_copias+1)^(0+128),f
  5641     00AA                     i1l2734:
  5642                           
  5643                           ;main.c: 495:         INTCONbits.T0IF = 0;
  5644     00AA  110B               	bcf	11,2	;volatile
  5645                           
  5646                           ;main.c: 497:     } else {
  5647     00AB  2A15               	goto	i1l329
  5648     00AC                     i1l286:
  5649                           
  5650                           ;main.c: 498:         if (PIR1bits.TMR1IF == 1)
  5651     00AC  1C0C               	btfss	12,0	;volatile
  5652     00AD  28AF               	goto	u193_21
  5653     00AE  28B0               	goto	u193_20
  5654     00AF                     u193_21:
  5655     00AF  2918               	goto	i1l291
  5656     00B0                     u193_20:
  5657     00B0                     i1l2736:
  5658                           
  5659                           ;main.c: 499:         {;main.c: 501:             if (copias1 >= los5msen15ms) {
  5660     00B0  085E               	movf	_copias1+1,w
  5661     00B1  3A80               	xorlw	128
  5662     00B2  00A2               	movwf	??_TRAT_INT
  5663     00B3  0849               	movf	_los5msen15ms+1,w
  5664     00B4  3A80               	xorlw	128
  5665     00B5  0222               	subwf	??_TRAT_INT,w
  5666     00B6  1D03               	skipz
  5667     00B7  28BA               	goto	u194_25
  5668     00B8  0848               	movf	_los5msen15ms,w
  5669     00B9  025D               	subwf	_copias1,w
  5670     00BA                     u194_25:
  5671     00BA  1C03               	skipc
  5672     00BB  28BD               	goto	u194_21
  5673     00BC  28BE               	goto	u194_20
  5674     00BD                     u194_21:
  5675     00BD  28D3               	goto	i1l2744
  5676     00BE                     u194_20:
  5677     00BE                     i1l2738:
  5678                           
  5679                           ;main.c: 502:                 copias1 = 0;
  5680     00BE  1283               	bcf	3,5	;RP0=0, select bank0
  5681     00BF  1303               	bcf	3,6	;RP1=0, select bank0
  5682     00C0  01DD               	clrf	_copias1
  5683     00C1  01DE               	clrf	_copias1+1
  5684     00C2                     i1l2740:
  5685                           
  5686                           ;main.c: 505:                 if (leoADCHumedadTemp > 0) ADCON0bits.GO_DONE = 1;
  5687     00C2  084D               	movf	_leoADCHumedadTemp+1,w
  5688     00C3  3A80               	xorlw	128
  5689     00C4  00FF               	movwf	btemp+1
  5690     00C5  3080               	movlw	128
  5691     00C6  027F               	subwf	btemp+1,w
  5692     00C7  1D03               	skipz
  5693     00C8  28CB               	goto	u195_25
  5694     00C9  3001               	movlw	1
  5695     00CA  024C               	subwf	_leoADCHumedadTemp,w
  5696     00CB                     u195_25:
  5697     00CB  1C03               	skipc
  5698     00CC  28CE               	goto	u195_21
  5699     00CD  28CF               	goto	u195_20
  5700     00CE                     u195_21:
  5701     00CE  290F               	goto	i1l294
  5702     00CF                     u195_20:
  5703     00CF                     i1l2742:
  5704     00CF  1283               	bcf	3,5	;RP0=0, select bank0
  5705     00D0  1303               	bcf	3,6	;RP1=0, select bank0
  5706     00D1  149F               	bsf	31,1	;volatile
  5707     00D2  290F               	goto	i1l294
  5708     00D3                     i1l2744:
  5709                           
  5710                           ;main.c: 507:                 copias1 += 1;
  5711     00D3  3001               	movlw	1
  5712     00D4  1283               	bcf	3,5	;RP0=0, select bank0
  5713     00D5  1303               	bcf	3,6	;RP1=0, select bank0
  5714     00D6  07DD               	addwf	_copias1,f
  5715     00D7  1803               	skipnc
  5716     00D8  0ADE               	incf	_copias1+1,f
  5717     00D9  3000               	movlw	0
  5718     00DA  07DE               	addwf	_copias1+1,f
  5719     00DB                     i1l2746:
  5720                           
  5721                           ;main.c: 508:                 if (copias1 == los5msen15ms - 1 || (leoADCHumedadTemp > 0 
      +                          && copias1 == los5msen15ms - 2))
  5722     00DB  0848               	movf	_los5msen15ms,w
  5723     00DC  3EFF               	addlw	255
  5724     00DD  00A2               	movwf	??_TRAT_INT
  5725     00DE  0849               	movf	_los5msen15ms+1,w
  5726     00DF  1803               	skipnc
  5727     00E0  3E01               	addlw	1
  5728     00E1  3EFF               	addlw	255
  5729     00E2  00A3               	movwf	??_TRAT_INT+1
  5730     00E3  085E               	movf	_copias1+1,w
  5731     00E4  0623               	xorwf	??_TRAT_INT+1,w
  5732     00E5  1D03               	skipz
  5733     00E6  28E9               	goto	u196_25
  5734     00E7  085D               	movf	_copias1,w
  5735     00E8  0622               	xorwf	??_TRAT_INT,w
  5736     00E9                     u196_25:
  5737     00E9  1903               	skipnz
  5738     00EA  28EC               	goto	u196_21
  5739     00EB  28ED               	goto	u196_20
  5740     00EC                     u196_21:
  5741     00EC  290E               	goto	i1l297
  5742     00ED                     u196_20:
  5743     00ED                     i1l2748:
  5744     00ED  084D               	movf	_leoADCHumedadTemp+1,w
  5745     00EE  3A80               	xorlw	128
  5746     00EF  00FF               	movwf	btemp+1
  5747     00F0  3080               	movlw	128
  5748     00F1  027F               	subwf	btemp+1,w
  5749     00F2  1D03               	skipz
  5750     00F3  28F6               	goto	u197_25
  5751     00F4  3001               	movlw	1
  5752     00F5  024C               	subwf	_leoADCHumedadTemp,w
  5753     00F6                     u197_25:
  5754     00F6  1C03               	skipc
  5755     00F7  28F9               	goto	u197_21
  5756     00F8  28FA               	goto	u197_20
  5757     00F9                     u197_21:
  5758     00F9  290F               	goto	i1l294
  5759     00FA                     u197_20:
  5760     00FA                     i1l2750:
  5761     00FA  1283               	bcf	3,5	;RP0=0, select bank0
  5762     00FB  1303               	bcf	3,6	;RP1=0, select bank0
  5763     00FC  0848               	movf	_los5msen15ms,w
  5764     00FD  3EFE               	addlw	254
  5765     00FE  00A2               	movwf	??_TRAT_INT
  5766     00FF  0849               	movf	_los5msen15ms+1,w
  5767     0100  1803               	skipnc
  5768     0101  3E01               	addlw	1
  5769     0102  3EFF               	addlw	255
  5770     0103  00A3               	movwf	??_TRAT_INT+1
  5771     0104  085E               	movf	_copias1+1,w
  5772     0105  0623               	xorwf	??_TRAT_INT+1,w
  5773     0106  1D03               	skipz
  5774     0107  290A               	goto	u198_25
  5775     0108  085D               	movf	_copias1,w
  5776     0109  0622               	xorwf	??_TRAT_INT,w
  5777     010A                     u198_25:
  5778     010A  1D03               	skipz
  5779     010B  290D               	goto	u198_21
  5780     010C  290E               	goto	u198_20
  5781     010D                     u198_21:
  5782     010D  290F               	goto	i1l294
  5783     010E                     u198_20:
  5784     010E                     i1l297:
  5785                           
  5786                           ;main.c: 509:                     ADCON0bits.GO_DONE = 1;
  5787     010E  149F               	bsf	31,1	;volatile
  5788     010F                     i1l294:	
  5789                           ;main.c: 512:             }
  5790                           
  5791                           
  5792                           ;main.c: 513:             ADCON0bits.GO_DONE = 1;
  5793     010F  1283               	bcf	3,5	;RP0=0, select bank0
  5794     0110  1303               	bcf	3,6	;RP1=0, select bank0
  5795     0111  149F               	bsf	31,1	;volatile
  5796     0112                     i1l2752:
  5797                           
  5798                           ;main.c: 514:             TMR1H = eltimer1H;
  5799     0112  087D               	movf	_eltimer1H,w
  5800     0113  008F               	movwf	15	;volatile
  5801                           
  5802                           ;main.c: 515:             TMR1L = eltimer1L;
  5803     0114  0858               	movf	_eltimer1L,w
  5804     0115  008E               	movwf	14	;volatile
  5805     0116                     i1l2754:
  5806                           
  5807                           ;main.c: 516:             PIR1bits.TMR1IF = 0;
  5808     0116  100C               	bcf	12,0	;volatile
  5809                           
  5810                           ;main.c: 517:         } else {
  5811     0117  2A15               	goto	i1l329
  5812     0118                     i1l291:
  5813                           
  5814                           ;main.c: 518:             if (PIR1bits.TMR2IF)
  5815     0118  1C8C               	btfss	12,1	;volatile
  5816     0119  291B               	goto	u199_21
  5817     011A  291C               	goto	u199_20
  5818     011B                     u199_21:
  5819     011B  2923               	goto	i1l299
  5820     011C                     u199_20:
  5821     011C                     i1l2756:
  5822                           
  5823                           ;main.c: 519:             {;main.c: 521:                 TRISC = 0;
  5824     011C  1683               	bsf	3,5	;RP0=1, select bank1
  5825     011D  1303               	bcf	3,6	;RP1=0, select bank1
  5826     011E  0187               	clrf	7	;volatile
  5827     011F                     i1l2758:
  5828                           
  5829                           ;main.c: 522:                 PIR1bits.TMR2IF = 0;
  5830     011F  1283               	bcf	3,5	;RP0=0, select bank0
  5831     0120  1303               	bcf	3,6	;RP1=0, select bank0
  5832     0121  108C               	bcf	12,1	;volatile
  5833                           
  5834                           ;main.c: 523:             } else {
  5835     0122  2A15               	goto	i1l329
  5836     0123                     i1l299:
  5837                           
  5838                           ;main.c: 524:                 if (PIR1bits.ADIF) {
  5839     0123  1F0C               	btfss	12,6	;volatile
  5840     0124  2926               	goto	u200_21
  5841     0125  2927               	goto	u200_20
  5842     0126                     u200_21:
  5843     0126  2977               	goto	i1l301
  5844     0127                     u200_20:
  5845     0127                     i1l2760:
  5846                           
  5847                           ;main.c: 526:                     PIR1bits.ADIF = 0;
  5848     0127  130C               	bcf	12,6	;volatile
  5849     0128                     i1l2762:
  5850                           
  5851                           ;main.c: 527:                     valor[anI] = (int) ADRESH * 0x100 + ADRESL;
  5852     0128  084E               	movf	_anI,w
  5853     0129  00A2               	movwf	??_TRAT_INT
  5854     012A  0722               	addwf	??_TRAT_INT,w
  5855     012B  3EA0               	addlw	(low (_valor| 0))& (0+255)
  5856     012C  0084               	movwf	4
  5857     012D  1683               	bsf	3,5	;RP0=1, select bank1
  5858     012E  1303               	bcf	3,6	;RP1=0, select bank1
  5859     012F  081E               	movf	30,w	;volatile
  5860     0130  1383               	bcf	3,7	;select IRP bank1
  5861     0131  0080               	movwf	0
  5862     0132  0A84               	incf	4,f
  5863     0133  1283               	bcf	3,5	;RP0=0, select bank0
  5864     0134  1303               	bcf	3,6	;RP1=0, select bank0
  5865     0135  081E               	movf	30,w	;volatile
  5866     0136  0080               	movwf	0
  5867     0137                     i1l2764:
  5868                           
  5869                           ;main.c: 546:                     if (leoADCHumedadTemp > 0)
  5870     0137  084D               	movf	_leoADCHumedadTemp+1,w
  5871     0138  3A80               	xorlw	128
  5872     0139  00FF               	movwf	btemp+1
  5873     013A  3080               	movlw	128
  5874     013B  027F               	subwf	btemp+1,w
  5875     013C  1D03               	skipz
  5876     013D  2940               	goto	u201_25
  5877     013E  3001               	movlw	1
  5878     013F  024C               	subwf	_leoADCHumedadTemp,w
  5879     0140                     u201_25:
  5880     0140  1C03               	skipc
  5881     0141  2943               	goto	u201_21
  5882     0142  2944               	goto	u201_20
  5883     0143                     u201_21:
  5884     0143  2969               	goto	i1l2774
  5885     0144                     u201_20:
  5886     0144                     i1l2766:
  5887                           
  5888                           ;main.c: 547:                     {;main.c: 548:                         if (copias1 == 
      +                          0)
  5889     0144  1283               	bcf	3,5	;RP0=0, select bank0
  5890     0145  1303               	bcf	3,6	;RP1=0, select bank0
  5891     0146  085D               	movf	_copias1,w
  5892     0147  045E               	iorwf	_copias1+1,w
  5893     0148  1D03               	btfss	3,2
  5894     0149  294B               	goto	u202_21
  5895     014A  294C               	goto	u202_20
  5896     014B                     u202_21:
  5897     014B  2957               	goto	i1l2770
  5898     014C                     u202_20:
  5899     014C                     i1l2768:
  5900                           
  5901                           ;main.c: 549:                         {;main.c: 550:                             leoADCH
      +                          umedadTemp--;
  5902     014C  30FF               	movlw	255
  5903     014D  07CC               	addwf	_leoADCHumedadTemp,f
  5904     014E  1803               	skipnc
  5905     014F  0ACD               	incf	_leoADCHumedadTemp+1,f
  5906     0150  30FF               	movlw	255
  5907     0151  07CD               	addwf	_leoADCHumedadTemp+1,f
  5908                           
  5909                           ;main.c: 551:                             anI = 1;
  5910     0152  3001               	movlw	1
  5911     0153  00CE               	movwf	_anI
  5912     0154  3000               	movlw	0
  5913     0155  00CF               	movwf	_anI+1
  5914                           
  5915                           ;main.c: 552:                         } else if (copias1 == 2)
  5916     0156  296D               	goto	i1l2778
  5917     0157                     i1l2770:
  5918     0157  3002               	movlw	2
  5919     0158  065D               	xorwf	_copias1,w
  5920     0159  045E               	iorwf	_copias1+1,w
  5921     015A  1D03               	btfss	3,2
  5922     015B  295D               	goto	u203_21
  5923     015C  295E               	goto	u203_20
  5924     015D                     u203_21:
  5925     015D  2969               	goto	i1l2774
  5926     015E                     u203_20:
  5927     015E                     i1l2772:
  5928                           
  5929                           ;main.c: 553:                         {;main.c: 554:                             leoADCH
      +                          umedadTemp--;
  5930     015E  30FF               	movlw	255
  5931     015F  07CC               	addwf	_leoADCHumedadTemp,f
  5932     0160  1803               	skipnc
  5933     0161  0ACD               	incf	_leoADCHumedadTemp+1,f
  5934     0162  30FF               	movlw	255
  5935     0163  07CD               	addwf	_leoADCHumedadTemp+1,f
  5936                           
  5937                           ;main.c: 555:                             anI = 2;
  5938     0164  3002               	movlw	2
  5939     0165  00CE               	movwf	_anI
  5940     0166  3000               	movlw	0
  5941     0167  00CF               	movwf	_anI+1
  5942                           
  5943                           ;main.c: 556:                         } else anI = 0;
  5944     0168  296D               	goto	i1l2778
  5945     0169                     i1l2774:
  5946     0169  1283               	bcf	3,5	;RP0=0, select bank0
  5947     016A  1303               	bcf	3,6	;RP1=0, select bank0
  5948     016B  01CE               	clrf	_anI
  5949     016C  01CF               	clrf	_anI+1
  5950     016D                     i1l2778:
  5951                           
  5952                           ;main.c: 559:                     ADCON0bits.CHS = (char) anI;
  5953     016D  084E               	movf	_anI,w
  5954     016E  00A2               	movwf	??_TRAT_INT
  5955     016F  0DA2               	rlf	??_TRAT_INT,f
  5956     0170  0DA2               	rlf	??_TRAT_INT,f
  5957     0171  081F               	movf	31,w	;volatile
  5958     0172  0622               	xorwf	??_TRAT_INT,w
  5959     0173  39C3               	andlw	-61
  5960     0174  0622               	xorwf	??_TRAT_INT,w
  5961     0175  009F               	movwf	31	;volatile
  5962                           
  5963                           ;main.c: 562:                 } else if (PIR2bits.EEIF) {
  5964     0176  2A15               	goto	i1l329
  5965     0177                     i1l301:
  5966     0177  1E0D               	btfss	13,4	;volatile
  5967     0178  297A               	goto	u204_21
  5968     0179  297B               	goto	u204_20
  5969     017A                     u204_21:
  5970     017A  2983               	goto	i1l309
  5971     017B                     u204_20:
  5972     017B                     i1l2780:
  5973                           
  5974                           ;main.c: 563:                     PIR2bits.EEIF = 0;
  5975     017B  120D               	bcf	13,4	;volatile
  5976     017C                     i1l2782:
  5977                           
  5978                           ;main.c: 564:                     continuoEscribiendo = 1;
  5979     017C  3001               	movlw	1
  5980     017D  1683               	bsf	3,5	;RP0=1, select bank1
  5981     017E  1303               	bcf	3,6	;RP1=0, select bank1
  5982     017F  00B6               	movwf	_continuoEscribiendo^(0+128)
  5983     0180  3000               	movlw	0
  5984     0181  00B7               	movwf	(_continuoEscribiendo^(0+128)+1)
  5985                           
  5986                           ;main.c: 567:                 } else if (PIR1bits.TXIF) {
  5987     0182  2A15               	goto	i1l329
  5988     0183                     i1l309:
  5989     0183  1E0C               	btfss	12,4	;volatile
  5990     0184  2986               	goto	u205_21
  5991     0185  2987               	goto	u205_20
  5992     0186                     u205_21:
  5993     0186  2989               	goto	i1l311
  5994     0187                     u205_20:
  5995     0187                     i1l2784:
  5996                           
  5997                           ;main.c: 568:                     PIR1bits.TXIF = 0;
  5998     0187  120C               	bcf	12,4	;volatile
  5999                           
  6000                           ;main.c: 572:                 } else if (PIR1bits.RCIF) {
  6001     0188  2A15               	goto	i1l329
  6002     0189                     i1l311:
  6003     0189  1E8C               	btfss	12,5	;volatile
  6004     018A  298C               	goto	u206_21
  6005     018B  298D               	goto	u206_20
  6006     018C                     u206_21:
  6007     018C  2A0F               	goto	i1l313
  6008     018D                     u206_20:
  6009     018D                     i1l2786:
  6010                           
  6011                           ;main.c: 573:                     PIR1bits.RCIF = 0;
  6012     018D  128C               	bcf	12,5	;volatile
  6013     018E                     i1l2788:
  6014                           
  6015                           ;main.c: 575:                     if (reciboLED > 0) {
  6016     018E  0862               	movf	_reciboLED+1,w
  6017     018F  3A80               	xorlw	128
  6018     0190  00FF               	movwf	btemp+1
  6019     0191  3080               	movlw	128
  6020     0192  027F               	subwf	btemp+1,w
  6021     0193  1D03               	skipz
  6022     0194  2997               	goto	u207_25
  6023     0195  3001               	movlw	1
  6024     0196  0261               	subwf	_reciboLED,w
  6025     0197                     u207_25:
  6026     0197  1C03               	skipc
  6027     0198  299A               	goto	u207_21
  6028     0199  299B               	goto	u207_20
  6029     019A                     u207_21:
  6030     019A  29BC               	goto	i1l2798
  6031     019B                     u207_20:
  6032     019B                     i1l2790:
  6033                           
  6034                           ;main.c: 576:                         reciboLED--;
  6035     019B  30FF               	movlw	255
  6036     019C  1283               	bcf	3,5	;RP0=0, select bank0
  6037     019D  1303               	bcf	3,6	;RP1=0, select bank0
  6038     019E  07E1               	addwf	_reciboLED,f
  6039     019F  1803               	skipnc
  6040     01A0  0AE2               	incf	_reciboLED+1,f
  6041     01A1  30FF               	movlw	255
  6042     01A2  07E2               	addwf	_reciboLED+1,f
  6043     01A3                     i1l2792:
  6044                           
  6045                           ;main.c: 577:                         miLED[reciboLED] = RCREG;
  6046     01A3  0861               	movf	_reciboLED,w
  6047     01A4  3E59               	addlw	(low (_miLED| 0))& (0+255)
  6048     01A5  0084               	movwf	4
  6049     01A6  081A               	movf	26,w	;volatile
  6050     01A7  1383               	bcf	3,7	;select IRP bank0
  6051     01A8  0080               	movwf	0
  6052     01A9                     i1l2794:
  6053                           
  6054                           ;main.c: 578:                         if (reciboLED == 0) setLED(miLED[3], miLED[2], miL
      +                          ED[1], miLED[0]);
  6055     01A9  0861               	movf	_reciboLED,w
  6056     01AA  0462               	iorwf	_reciboLED+1,w
  6057     01AB  1D03               	btfss	3,2
  6058     01AC  29AE               	goto	u208_21
  6059     01AD  29AF               	goto	u208_20
  6060     01AE                     u208_21:
  6061     01AE  2A15               	goto	i1l310
  6062     01AF                     u208_20:
  6063     01AF                     i1l2796:
  6064     01AF  085B               	movf	_miLED+2,w
  6065     01B0  00FA               	movwf	i1setLED@green
  6066     01B1  085A               	movf	_miLED+1,w
  6067     01B2  00FB               	movwf	i1setLED@blue
  6068     01B3  0859               	movf	_miLED,w
  6069     01B4  00FC               	movwf	i1setLED@luminosidad
  6070     01B5  085C               	movf	_miLED+3,w
  6071     01B6  120A  118A  278F  120A  118A  	fcall	i1_setLED
  6072     01BB  2A15               	goto	i1l329
  6073     01BC                     i1l2798:
  6074     01BC  1683               	bsf	3,5	;RP0=1, select bank1
  6075     01BD  1303               	bcf	3,6	;RP1=0, select bank1
  6076     01BE  0835               	movf	(_reciboPWM+1)^(0+128),w
  6077     01BF  3A80               	xorlw	128
  6078     01C0  00FF               	movwf	btemp+1
  6079     01C1  3080               	movlw	128
  6080     01C2  027F               	subwf	btemp+1,w
  6081     01C3  1D03               	skipz
  6082     01C4  29C7               	goto	u209_25
  6083     01C5  3001               	movlw	1
  6084     01C6  0234               	subwf	_reciboPWM^(0+128),w
  6085     01C7                     u209_25:
  6086     01C7  1C03               	skipc
  6087     01C8  29CA               	goto	u209_21
  6088     01C9  29CB               	goto	u209_20
  6089     01CA                     u209_21:
  6090     01CA  29F4               	goto	i1l2818
  6091     01CB                     u209_20:
  6092     01CB                     i1l2800:
  6093                           
  6094                           ;main.c: 580:                         reciboPWM = 0;
  6095     01CB  1683               	bsf	3,5	;RP0=1, select bank1
  6096     01CC  1303               	bcf	3,6	;RP1=0, select bank1
  6097     01CD  01B4               	clrf	_reciboPWM^(0+128)
  6098     01CE  01B5               	clrf	(_reciboPWM+1)^(0+128)
  6099     01CF                     i1l2802:
  6100                           
  6101                           ;main.c: 581:                         setPWM(RCREG);
  6102     01CF  1283               	bcf	3,5	;RP0=0, select bank0
  6103     01D0  1303               	bcf	3,6	;RP1=0, select bank0
  6104     01D1  081A               	movf	26,w	;volatile
  6105     01D2  120A  158A  25F6  120A  118A  	fcall	i1_setPWM
  6106                           
  6107                           ;main.c: 582:                     } else {
  6108     01D7  2A15               	goto	i1l329
  6109     01D8                     i1l2804:
  6110                           
  6111                           ;main.c: 585:                                 emitirMisSensores = 1;
  6112     01D8  3001               	movlw	1
  6113     01D9  1683               	bsf	3,5	;RP0=1, select bank1
  6114     01DA  1303               	bcf	3,6	;RP1=0, select bank1
  6115     01DB  00B2               	movwf	_emitirMisSensores^(0+128)
  6116     01DC  3000               	movlw	0
  6117     01DD  00B3               	movwf	(_emitirMisSensores^(0+128)+1)
  6118                           
  6119                           ;main.c: 586:                                 break;
  6120     01DE  2A15               	goto	i1l329
  6121     01DF                     i1l2806:
  6122                           
  6123                           ;main.c: 588:                                 TXREG = 'B';
  6124     01DF  3042               	movlw	66
  6125     01E0  0099               	movwf	25	;volatile
  6126                           
  6127                           ;main.c: 589:                                 break;
  6128     01E1  2A15               	goto	i1l329
  6129     01E2                     i1l2808:
  6130                           
  6131                           ;main.c: 591:                                 reciboPWM = 1;
  6132     01E2  3001               	movlw	1
  6133     01E3  1683               	bsf	3,5	;RP0=1, select bank1
  6134     01E4  1303               	bcf	3,6	;RP1=0, select bank1
  6135     01E5  00B4               	movwf	_reciboPWM^(0+128)
  6136     01E6  3000               	movlw	0
  6137     01E7  00B5               	movwf	(_reciboPWM^(0+128)+1)
  6138                           
  6139                           ;main.c: 592:                                 break;
  6140     01E8  2A15               	goto	i1l329
  6141     01E9                     i1l2810:
  6142                           
  6143                           ;main.c: 595:                                 reciboLED = 4;
  6144     01E9  3004               	movlw	4
  6145     01EA  00E1               	movwf	_reciboLED
  6146     01EB  3000               	movlw	0
  6147     01EC  00E2               	movwf	_reciboLED+1
  6148                           
  6149                           ;main.c: 596:                                 break;
  6150     01ED  2A15               	goto	i1l329
  6151     01EE                     i1l2812:
  6152                           
  6153                           ;main.c: 599:                                 deboContinuar = 0;
  6154     01EE  01D0               	clrf	_deboContinuar
  6155     01EF  01D1               	clrf	_deboContinuar+1
  6156                           
  6157                           ;main.c: 600:                                 break;
  6158     01F0  2A15               	goto	i1l329
  6159     01F1                     i1l2814:
  6160                           
  6161                           ;main.c: 602:                                 TXREG = 'E';
  6162     01F1  3045               	movlw	69
  6163     01F2  0099               	movwf	25	;volatile
  6164                           
  6165                           ;main.c: 603:                                 break;
  6166     01F3  2A15               	goto	i1l329
  6167     01F4                     i1l2818:
  6168     01F4  1283               	bcf	3,5	;RP0=0, select bank0
  6169     01F5  1303               	bcf	3,6	;RP1=0, select bank0
  6170     01F6  081A               	movf	26,w	;volatile
  6171     01F7  00A2               	movwf	??_TRAT_INT
  6172     01F8  01A3               	clrf	??_TRAT_INT+1
  6173                           
  6174                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6175                           ; Switch size 1, requested type "simple"
  6176                           ; Number of cases is 1, Range of values is 0 to 0
  6177                           ; switch strategies available:
  6178                           ; Name         Instructions Cycles
  6179                           ; simple_byte            4     3 (average)
  6180                           ; direct_byte           11     8 (fixed)
  6181                           ; jumptable            260     6 (fixed)
  6182                           ;	Chosen strategy is simple_byte
  6183     01F9  0823               	movf	??_TRAT_INT+1,w
  6184     01FA  3A00               	xorlw	0	; case 0
  6185     01FB  1903               	skipnz
  6186     01FC  29FE               	goto	i1l3174
  6187     01FD  29F1               	goto	i1l2814
  6188     01FE                     i1l3174:
  6189                           
  6190                           ; Switch size 1, requested type "simple"
  6191                           ; Number of cases is 5, Range of values is 97 to 101
  6192                           ; switch strategies available:
  6193                           ; Name         Instructions Cycles
  6194                           ; simple_byte           16     9 (average)
  6195                           ; direct_byte           26    11 (fixed)
  6196                           ; jumptable            263     9 (fixed)
  6197                           ;	Chosen strategy is simple_byte
  6198     01FE  0822               	movf	??_TRAT_INT,w
  6199     01FF  3A61               	xorlw	97	; case 97
  6200     0200  1903               	skipnz
  6201     0201  29D8               	goto	i1l2804
  6202     0202  3A03               	xorlw	3	; case 98
  6203     0203  1903               	skipnz
  6204     0204  29DF               	goto	i1l2806
  6205     0205  3A01               	xorlw	1	; case 99
  6206     0206  1903               	skipnz
  6207     0207  29E2               	goto	i1l2808
  6208     0208  3A07               	xorlw	7	; case 100
  6209     0209  1903               	skipnz
  6210     020A  29E9               	goto	i1l2810
  6211     020B  3A01               	xorlw	1	; case 101
  6212     020C  1903               	skipnz
  6213     020D  29EE               	goto	i1l2812
  6214     020E  29F1               	goto	i1l2814
  6215     020F                     i1l313:
  6216     020F  1D8C               	btfss	12,3	;volatile
  6217     0210  2A12               	goto	u210_21
  6218     0211  2A13               	goto	u210_20
  6219     0212                     u210_21:
  6220     0212  2A15               	goto	i1l310
  6221     0213                     u210_20:
  6222     0213                     i1l2820:
  6223                           
  6224                           ;main.c: 607:                     PIR1bits.SSPIF = 0;
  6225     0213  118C               	bcf	12,3	;volatile
  6226     0214  2A15               	goto	i1l329
  6227     0215                     i1l310:
  6228     0215                     i1l329:
  6229     0215  1283               	bcf	3,5	;RP0=0, select bank0
  6230     0216  1303               	bcf	3,6	;RP1=0, select bank0
  6231     0217  0827               	movf	??_TRAT_INT+5,w
  6232     0218  00FF               	movwf	btemp+1
  6233     0219  0826               	movf	??_TRAT_INT+4,w
  6234     021A  008A               	movwf	10
  6235     021B  0825               	movf	??_TRAT_INT+3,w
  6236     021C  0084               	movwf	4
  6237     021D  0E24               	swapf	??_TRAT_INT+2,w
  6238     021E  0083               	movwf	3
  6239     021F  0EFE               	swapf	btemp,f
  6240     0220  0E7E               	swapf	btemp,w
  6241     0221  0009               	retfie
  6242     0222                     __end_of_TRAT_INT:
  6243                           
  6244                           	psect	intentry
  6245     0004                     __pintentry:	
  6246                           ;incstack = 0
  6247                           ; Regs used in _TRAT_INT: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6248                           
  6249     0004                     interrupt_function:
  6250     007E                     saved_w	set	btemp
  6251     0004  00FE               	movwf	btemp
  6252     0005  0E03               	swapf	3,w
  6253     0006  1283               	bcf	3,5	;RP0=0, select bank0
  6254     0007  1303               	bcf	3,6	;RP1=0, select bank0
  6255     0008  00A4               	movwf	??_TRAT_INT+2
  6256     0009  0804               	movf	4,w
  6257     000A  00A5               	movwf	??_TRAT_INT+3
  6258     000B  080A               	movf	10,w
  6259     000C  00A6               	movwf	??_TRAT_INT+4
  6260     000D  087F               	movf	btemp+1,w
  6261     000E  00A7               	movwf	??_TRAT_INT+5
  6262     000F  120A  118A  284A   	ljmp	_TRAT_INT
  6263                           
  6264                           	psect	text37
  6265     0DF6                     __ptext37:	
  6266 ;; *************** function i1_setPWM *****************
  6267 ;; Defined at:
  6268 ;;		line 357 in file "main.c"
  6269 ;; Parameters:    Size  Location     Type
  6270 ;;  porcent         1    wreg     unsigned char 
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;  porcent         1   12[COMMON] unsigned char 
  6273 ;;  direccion       1   11[COMMON] unsigned char 
  6274 ;; Return value:  Size  Location     Type
  6275 ;;                  1    wreg      void 
  6276 ;; Registers used:
  6277 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6278 ;; Tracked objects:
  6279 ;;		On entry : 0/0
  6280 ;;		On exit  : 0/0
  6281 ;;		Unchanged: 0/0
  6282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6283 ;;      Params:         0       0       0       0       0
  6284 ;;      Locals:         2       0       0       0       0
  6285 ;;      Temps:          2       0       0       0       0
  6286 ;;      Totals:         4       0       0       0       0
  6287 ;;Total ram usage:        4 bytes
  6288 ;; Hardware stack levels used: 1
  6289 ;; Hardware stack levels required when called: 2
  6290 ;; This function calls:
  6291 ;;		i1___awdiv
  6292 ;;		i1___bmul
  6293 ;;		i1_escribirMemoria
  6294 ;; This function is called by:
  6295 ;;		_TRAT_INT
  6296 ;; This function uses a non-reentrant model
  6297 ;;
  6298                           
  6299     0DF6                     i1_setPWM:	
  6300                           ;psect for function i1_setPWM
  6301                           
  6302                           
  6303                           ;incstack = 0
  6304                           ; Regs used in i1_setPWM: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6305                           ;i1setPWM@porcent stored from wreg
  6306     0DF6  00FC               	movwf	i1setPWM@porcent
  6307     0DF7                     i1l2684:
  6308                           
  6309                           ;main.c: 358:     porcentaje = (char) (porcent / 100);
  6310     0DF7  3064               	movlw	100
  6311     0DF8  00F0               	movwf	i1___awdiv@divisor
  6312     0DF9  3000               	movlw	0
  6313     0DFA  00F1               	movwf	i1___awdiv@divisor+1
  6314     0DFB  087C               	movf	i1setPWM@porcent,w
  6315     0DFC  00F9               	movwf	??i1_setPWM
  6316     0DFD  01FA               	clrf	??i1_setPWM+1
  6317     0DFE  0879               	movf	??i1_setPWM,w
  6318     0DFF  00F2               	movwf	i1___awdiv@dividend
  6319     0E00  087A               	movf	??i1_setPWM+1,w
  6320     0E01  00F3               	movwf	i1___awdiv@dividend+1
  6321     0E02  120A  118A  255A  120A  158A  	fcall	i1___awdiv
  6322     0E07  0870               	movf	?i1___awdiv,w
  6323     0E08  1283               	bcf	3,5	;RP0=0, select bank0
  6324     0E09  1303               	bcf	3,6	;RP1=0, select bank0
  6325     0E0A  00E4               	movwf	_porcentaje
  6326                           
  6327                           ;main.c: 360:     CCPR1L = porcentaje * porcentajeMax;
  6328     0E0B  0855               	movf	_porcentajeMax,w
  6329     0E0C  00F0               	movwf	i1___bmul@multiplicand
  6330     0E0D  0864               	movf	_porcentaje,w
  6331     0E0E  120A  158A  246A  120A  158A  	fcall	i1___bmul
  6332     0E13  1283               	bcf	3,5	;RP0=0, select bank0
  6333     0E14  1303               	bcf	3,6	;RP1=0, select bank0
  6334     0E15  0095               	movwf	21	;volatile
  6335     0E16                     i1l2686:
  6336                           
  6337                           ;main.c: 362:     escribirMemoria(direccionPWM, porcent);
  6338     0E16  087C               	movf	i1setPWM@porcent,w
  6339     0E17  00F1               	movwf	i1escribirMemoria@dato
  6340     0E18  0857               	movf	_direccionPWM,w
  6341     0E19  120A  118A  2627  120A  158A  	fcall	i1_escribirMemoria
  6342     0E1E                     i1l2688:
  6343                           
  6344                           ;main.c: 364:     char direccion = direccionInicial;
  6345     0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  6346     0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  6347     0E20  0867               	movf	_direccionInicial,w
  6348     0E21  00FB               	movwf	i1setPWM@direccion
  6349     0E22                     i1l2690:
  6350                           
  6351                           ;main.c: 365:     escribirMemoria(direccion, 0b00000000);
  6352     0E22  01F1               	clrf	i1escribirMemoria@dato
  6353     0E23  087B               	movf	i1setPWM@direccion,w
  6354     0E24  120A  118A  2627  120A  158A  	fcall	i1_escribirMemoria
  6355     0E29                     i1l2692:
  6356                           
  6357                           ;main.c: 366:     pPWM = porcent;
  6358     0E29  087C               	movf	i1setPWM@porcent,w
  6359     0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  6360     0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  6361     0E2C  00E6               	movwf	_pPWM
  6362     0E2D                     i1l250:
  6363     0E2D  0008               	return
  6364     0E2E                     __end_ofi1_setPWM:
  6365                           
  6366                           	psect	text38
  6367     0C6A                     __ptext38:	
  6368 ;; *************** function i1___bmul *****************
  6369 ;; Defined at:
  6370 ;;		line 4 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/Umul8.c"
  6371 ;; Parameters:    Size  Location     Type
  6372 ;;  multiplier      1    wreg     unsigned char 
  6373 ;;  multiplicand    1    0[COMMON] unsigned char 
  6374 ;; Auto vars:     Size  Location     Type
  6375 ;;  multiplier      1    3[COMMON] unsigned char 
  6376 ;;  product         1    2[COMMON] unsigned char 
  6377 ;; Return value:  Size  Location     Type
  6378 ;;                  1    wreg      unsigned char 
  6379 ;; Registers used:
  6380 ;;		wreg, status,2, status,0
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6386 ;;      Params:         1       0       0       0       0
  6387 ;;      Locals:         2       0       0       0       0
  6388 ;;      Temps:          1       0       0       0       0
  6389 ;;      Totals:         4       0       0       0       0
  6390 ;;Total ram usage:        4 bytes
  6391 ;; Hardware stack levels used: 1
  6392 ;; This function calls:
  6393 ;;		Nothing
  6394 ;; This function is called by:
  6395 ;;		i1_setPWM
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399     0C6A                     i1___bmul:	
  6400                           ;psect for function i1___bmul
  6401                           
  6402                           
  6403                           ;incstack = 0
  6404                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  6405                           ;i1___bmul@multiplier stored from wreg
  6406     0C6A  00F3               	movwf	i1___bmul@multiplier
  6407     0C6B                     i1l2556:
  6408     0C6B  01F2               	clrf	i1___bmul@product
  6409     0C6C                     i1l2558:
  6410     0C6C  1C73               	btfss	i1___bmul@multiplier,0
  6411     0C6D  2C6F               	goto	u173_21
  6412     0C6E  2C70               	goto	u173_20
  6413     0C6F                     u173_21:
  6414     0C6F  2C74               	goto	i1l2562
  6415     0C70                     u173_20:
  6416     0C70                     i1l2560:
  6417     0C70  0870               	movf	i1___bmul@multiplicand,w
  6418     0C71  00F1               	movwf	??i1___bmul
  6419     0C72  0871               	movf	??i1___bmul,w
  6420     0C73  07F2               	addwf	i1___bmul@product,f
  6421     0C74                     i1l2562:
  6422     0C74  1003               	clrc
  6423     0C75  0DF0               	rlf	i1___bmul@multiplicand,f
  6424     0C76                     i1l2564:
  6425     0C76  1003               	clrc
  6426     0C77  0CF3               	rrf	i1___bmul@multiplier,f
  6427     0C78  0873               	movf	i1___bmul@multiplier,w
  6428     0C79  1D03               	btfss	3,2
  6429     0C7A  2C7C               	goto	u174_21
  6430     0C7B  2C7D               	goto	u174_20
  6431     0C7C                     u174_21:
  6432     0C7C  2C6C               	goto	i1l2558
  6433     0C7D                     u174_20:
  6434     0C7D                     i1l2566:
  6435     0C7D  0872               	movf	i1___bmul@product,w
  6436     0C7E                     i1l526:
  6437     0C7E  0008               	return
  6438     0C7F                     __end_ofi1___bmul:
  6439                           
  6440                           	psect	text39
  6441     055A                     __ptext39:	
  6442 ;; *************** function i1___awdiv *****************
  6443 ;; Defined at:
  6444 ;;		line 5 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/awdiv.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;  divisor         2    0[COMMON] int 
  6447 ;;  dividend        2    2[COMMON] int 
  6448 ;; Auto vars:     Size  Location     Type
  6449 ;;  quotient        2    7[COMMON] int 
  6450 ;;  sign            1    6[COMMON] unsigned char 
  6451 ;;  counter         1    5[COMMON] unsigned char 
  6452 ;; Return value:  Size  Location     Type
  6453 ;;                  2    0[COMMON] int 
  6454 ;; Registers used:
  6455 ;;		wreg, status,2, status,0
  6456 ;; Tracked objects:
  6457 ;;		On entry : 0/0
  6458 ;;		On exit  : 0/0
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6461 ;;      Params:         4       0       0       0       0
  6462 ;;      Locals:         4       0       0       0       0
  6463 ;;      Temps:          1       0       0       0       0
  6464 ;;      Totals:         9       0       0       0       0
  6465 ;;Total ram usage:        9 bytes
  6466 ;; Hardware stack levels used: 1
  6467 ;; This function calls:
  6468 ;;		Nothing
  6469 ;; This function is called by:
  6470 ;;		i1_setPWM
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474     055A                     i1___awdiv:	
  6475                           ;psect for function i1___awdiv
  6476                           
  6477     055A                     i1l2570:	
  6478                           ;incstack = 0
  6479                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  6480                           
  6481     055A  01F6               	clrf	i1___awdiv@sign
  6482     055B                     i1l2572:
  6483     055B  1FF1               	btfss	i1___awdiv@divisor+1,7
  6484     055C  2D5E               	goto	u175_21
  6485     055D  2D5F               	goto	u175_20
  6486     055E                     u175_21:
  6487     055E  2D66               	goto	i1l2578
  6488     055F                     u175_20:
  6489     055F                     i1l2574:
  6490     055F  09F0               	comf	i1___awdiv@divisor,f
  6491     0560  09F1               	comf	i1___awdiv@divisor+1,f
  6492     0561  0AF0               	incf	i1___awdiv@divisor,f
  6493     0562  1903               	skipnz
  6494     0563  0AF1               	incf	i1___awdiv@divisor+1,f
  6495     0564                     i1l2576:
  6496     0564  01F6               	clrf	i1___awdiv@sign
  6497     0565  0AF6               	incf	i1___awdiv@sign,f
  6498     0566                     i1l2578:
  6499     0566  1FF3               	btfss	i1___awdiv@dividend+1,7
  6500     0567  2D69               	goto	u176_21
  6501     0568  2D6A               	goto	u176_20
  6502     0569                     u176_21:
  6503     0569  2D73               	goto	i1l2584
  6504     056A                     u176_20:
  6505     056A                     i1l2580:
  6506     056A  09F2               	comf	i1___awdiv@dividend,f
  6507     056B  09F3               	comf	i1___awdiv@dividend+1,f
  6508     056C  0AF2               	incf	i1___awdiv@dividend,f
  6509     056D  1903               	skipnz
  6510     056E  0AF3               	incf	i1___awdiv@dividend+1,f
  6511     056F                     i1l2582:
  6512     056F  3001               	movlw	1
  6513     0570  00F4               	movwf	??i1___awdiv
  6514     0571  0874               	movf	??i1___awdiv,w
  6515     0572  06F6               	xorwf	i1___awdiv@sign,f
  6516     0573                     i1l2584:
  6517     0573  01F7               	clrf	i1___awdiv@quotient
  6518     0574  01F8               	clrf	i1___awdiv@quotient+1
  6519     0575                     i1l2586:
  6520     0575  0870               	movf	i1___awdiv@divisor,w
  6521     0576  0471               	iorwf	i1___awdiv@divisor+1,w
  6522     0577  1903               	btfsc	3,2
  6523     0578  2D7A               	goto	u177_21
  6524     0579  2D7B               	goto	u177_20
  6525     057A                     u177_21:
  6526     057A  2DB2               	goto	i1l2606
  6527     057B                     u177_20:
  6528     057B                     i1l2588:
  6529     057B  01F5               	clrf	i1___awdiv@counter
  6530     057C  0AF5               	incf	i1___awdiv@counter,f
  6531     057D  2D89               	goto	i1l2594
  6532     057E                     i1l2590:
  6533     057E  3001               	movlw	1
  6534     057F                     u178_25:
  6535     057F  1003               	clrc
  6536     0580  0DF0               	rlf	i1___awdiv@divisor,f
  6537     0581  0DF1               	rlf	i1___awdiv@divisor+1,f
  6538     0582  3EFF               	addlw	-1
  6539     0583  1D03               	skipz
  6540     0584  2D7F               	goto	u178_25
  6541     0585                     i1l2592:
  6542     0585  3001               	movlw	1
  6543     0586  00F4               	movwf	??i1___awdiv
  6544     0587  0874               	movf	??i1___awdiv,w
  6545     0588  07F5               	addwf	i1___awdiv@counter,f
  6546     0589                     i1l2594:
  6547     0589  1FF1               	btfss	i1___awdiv@divisor+1,7
  6548     058A  2D8C               	goto	u179_21
  6549     058B  2D8D               	goto	u179_20
  6550     058C                     u179_21:
  6551     058C  2D7E               	goto	i1l2590
  6552     058D                     u179_20:
  6553     058D                     i1l2596:
  6554     058D  3001               	movlw	1
  6555     058E                     u180_25:
  6556     058E  1003               	clrc
  6557     058F  0DF7               	rlf	i1___awdiv@quotient,f
  6558     0590  0DF8               	rlf	i1___awdiv@quotient+1,f
  6559     0591  3EFF               	addlw	-1
  6560     0592  1D03               	skipz
  6561     0593  2D8E               	goto	u180_25
  6562     0594  0871               	movf	i1___awdiv@divisor+1,w
  6563     0595  0273               	subwf	i1___awdiv@dividend+1,w
  6564     0596  1D03               	skipz
  6565     0597  2D9A               	goto	u181_25
  6566     0598  0870               	movf	i1___awdiv@divisor,w
  6567     0599  0272               	subwf	i1___awdiv@dividend,w
  6568     059A                     u181_25:
  6569     059A  1C03               	skipc
  6570     059B  2D9D               	goto	u181_21
  6571     059C  2D9E               	goto	u181_20
  6572     059D                     u181_21:
  6573     059D  2DA5               	goto	i1l2602
  6574     059E                     u181_20:
  6575     059E                     i1l2598:
  6576     059E  0870               	movf	i1___awdiv@divisor,w
  6577     059F  02F2               	subwf	i1___awdiv@dividend,f
  6578     05A0  0871               	movf	i1___awdiv@divisor+1,w
  6579     05A1  1C03               	skipc
  6580     05A2  03F3               	decf	i1___awdiv@dividend+1,f
  6581     05A3  02F3               	subwf	i1___awdiv@dividend+1,f
  6582     05A4                     i1l2600:
  6583     05A4  1477               	bsf	i1___awdiv@quotient,0
  6584     05A5                     i1l2602:
  6585     05A5  3001               	movlw	1
  6586     05A6                     u182_25:
  6587     05A6  1003               	clrc
  6588     05A7  0CF1               	rrf	i1___awdiv@divisor+1,f
  6589     05A8  0CF0               	rrf	i1___awdiv@divisor,f
  6590     05A9  3EFF               	addlw	-1
  6591     05AA  1D03               	skipz
  6592     05AB  2DA6               	goto	u182_25
  6593     05AC                     i1l2604:
  6594     05AC  3001               	movlw	1
  6595     05AD  02F5               	subwf	i1___awdiv@counter,f
  6596     05AE  1D03               	btfss	3,2
  6597     05AF  2DB1               	goto	u183_21
  6598     05B0  2DB2               	goto	u183_20
  6599     05B1                     u183_21:
  6600     05B1  2D8D               	goto	i1l2596
  6601     05B2                     u183_20:
  6602     05B2                     i1l2606:
  6603     05B2  0876               	movf	i1___awdiv@sign,w
  6604     05B3  1903               	btfsc	3,2
  6605     05B4  2DB6               	goto	u184_21
  6606     05B5  2DB7               	goto	u184_20
  6607     05B6                     u184_21:
  6608     05B6  2DBC               	goto	i1l2610
  6609     05B7                     u184_20:
  6610     05B7                     i1l2608:
  6611     05B7  09F7               	comf	i1___awdiv@quotient,f
  6612     05B8  09F8               	comf	i1___awdiv@quotient+1,f
  6613     05B9  0AF7               	incf	i1___awdiv@quotient,f
  6614     05BA  1903               	skipnz
  6615     05BB  0AF8               	incf	i1___awdiv@quotient+1,f
  6616     05BC                     i1l2610:
  6617     05BC  0878               	movf	i1___awdiv@quotient+1,w
  6618     05BD  00F1               	movwf	?i1___awdiv+1
  6619     05BE  0877               	movf	i1___awdiv@quotient,w
  6620     05BF  00F0               	movwf	?i1___awdiv
  6621     05C0                     i1l653:
  6622     05C0  0008               	return
  6623     05C1                     __end_ofi1___awdiv:
  6624                           
  6625                           	psect	text40
  6626     078F                     __ptext40:	
  6627 ;; *************** function i1_setLED *****************
  6628 ;; Defined at:
  6629 ;;		line 400 in file "main.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;  red             1    wreg     unsigned char 
  6632 ;;  green           1   10[COMMON] unsigned char 
  6633 ;;  blue            1   11[COMMON] unsigned char 
  6634 ;;  luminosidad     1   12[COMMON] unsigned char 
  6635 ;; Auto vars:     Size  Location     Type
  6636 ;;  red             1    1[BANK0 ] unsigned char 
  6637 ;;  direccion       1    0[BANK0 ] unsigned char 
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  1    wreg      void 
  6640 ;; Registers used:
  6641 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6647 ;;      Params:         3       0       0       0       0
  6648 ;;      Locals:         0       2       0       0       0
  6649 ;;      Temps:          0       0       0       0       0
  6650 ;;      Totals:         3       2       0       0       0
  6651 ;;Total ram usage:        5 bytes
  6652 ;; Hardware stack levels used: 1
  6653 ;; Hardware stack levels required when called: 2
  6654 ;; This function calls:
  6655 ;;		i1_cosasSPI
  6656 ;;		i1_escribirMemoria
  6657 ;; This function is called by:
  6658 ;;		_TRAT_INT
  6659 ;; This function uses a non-reentrant model
  6660 ;;
  6661                           
  6662     078F                     i1_setLED:	
  6663                           ;psect for function i1_setLED
  6664                           
  6665                           
  6666                           ;incstack = 0
  6667                           ; Regs used in i1_setLED: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6668                           ;i1setLED@red stored from wreg
  6669     078F  1283               	bcf	3,5	;RP0=0, select bank0
  6670     0790  1303               	bcf	3,6	;RP1=0, select bank0
  6671     0791  00A1               	movwf	i1setLED@red
  6672     0792                     i1l2694:
  6673                           
  6674                           ;main.c: 402:     cosasSPI(red, green, blue, luminosidad);
  6675     0792  087A               	movf	i1setLED@green,w
  6676     0793  00F5               	movwf	i1cosasSPI@verd
  6677     0794  087B               	movf	i1setLED@blue,w
  6678     0795  00F6               	movwf	i1cosasSPI@azu
  6679     0796  087C               	movf	i1setLED@luminosidad,w
  6680     0797  00F7               	movwf	i1cosasSPI@lumi
  6681     0798  0821               	movf	i1setLED@red,w
  6682     0799  120A  118A  268D  120A  118A  	fcall	i1_cosasSPI
  6683     079E                     i1l2696:
  6684                           
  6685                           ;main.c: 404:     miLED[0] = red;
  6686     079E  1283               	bcf	3,5	;RP0=0, select bank0
  6687     079F  1303               	bcf	3,6	;RP1=0, select bank0
  6688     07A0  0821               	movf	i1setLED@red,w
  6689     07A1  00D9               	movwf	_miLED
  6690     07A2                     i1l2698:
  6691                           
  6692                           ;main.c: 405:     miLED[1] = green;
  6693     07A2  087A               	movf	i1setLED@green,w
  6694     07A3  00DA               	movwf	_miLED+1
  6695     07A4                     i1l2700:
  6696                           
  6697                           ;main.c: 406:     miLED[2] = blue;
  6698     07A4  087B               	movf	i1setLED@blue,w
  6699     07A5  00DB               	movwf	_miLED+2
  6700     07A6                     i1l2702:
  6701                           
  6702                           ;main.c: 407:     miLED[3] = luminosidad;
  6703     07A6  087C               	movf	i1setLED@luminosidad,w
  6704     07A7  00DC               	movwf	_miLED+3
  6705     07A8                     i1l2704:
  6706                           
  6707                           ;main.c: 409:     char direccion = direccionInicial;
  6708     07A8  0867               	movf	_direccionInicial,w
  6709     07A9  00A0               	movwf	i1setLED@direccion
  6710     07AA                     i1l2706:
  6711                           
  6712                           ;main.c: 410:     escribirMemoria(direccion, 0b00000000);
  6713     07AA  01F1               	clrf	i1escribirMemoria@dato
  6714     07AB  0820               	movf	i1setLED@direccion,w
  6715     07AC  120A  118A  2627  120A  118A  	fcall	i1_escribirMemoria
  6716     07B1                     i1l2708:
  6717                           
  6718                           ;main.c: 411:     escribirMemoria(direccionLED, miLED[0]);
  6719     07B1  1283               	bcf	3,5	;RP0=0, select bank0
  6720     07B2  1303               	bcf	3,6	;RP1=0, select bank0
  6721     07B3  0859               	movf	_miLED,w
  6722     07B4  00F1               	movwf	i1escribirMemoria@dato
  6723     07B5  0856               	movf	_direccionLED,w
  6724     07B6  120A  118A  2627  120A  118A  	fcall	i1_escribirMemoria
  6725     07BB                     i1l2710:
  6726                           
  6727                           ;main.c: 412:     escribirMemoria(direccionLED + 1 * sizeof (char), miLED[1]);
  6728     07BB  1283               	bcf	3,5	;RP0=0, select bank0
  6729     07BC  1303               	bcf	3,6	;RP1=0, select bank0
  6730     07BD  085A               	movf	_miLED+1,w
  6731     07BE  00F1               	movwf	i1escribirMemoria@dato
  6732     07BF  0856               	movf	_direccionLED,w
  6733     07C0  3E01               	addlw	1
  6734     07C1  120A  118A  2627  120A  118A  	fcall	i1_escribirMemoria
  6735     07C6                     i1l2712:
  6736                           
  6737                           ;main.c: 413:     escribirMemoria(direccionLED + 2 * sizeof (char), miLED[2]);
  6738     07C6  1283               	bcf	3,5	;RP0=0, select bank0
  6739     07C7  1303               	bcf	3,6	;RP1=0, select bank0
  6740     07C8  085B               	movf	_miLED+2,w
  6741     07C9  00F1               	movwf	i1escribirMemoria@dato
  6742     07CA  0856               	movf	_direccionLED,w
  6743     07CB  3E02               	addlw	2
  6744     07CC  120A  118A  2627  120A  118A  	fcall	i1_escribirMemoria
  6745     07D1                     i1l2714:
  6746                           
  6747                           ;main.c: 414:     escribirMemoria(direccionLED + 3 * sizeof (char), miLED[3]);
  6748     07D1  1283               	bcf	3,5	;RP0=0, select bank0
  6749     07D2  1303               	bcf	3,6	;RP1=0, select bank0
  6750     07D3  085C               	movf	_miLED+3,w
  6751     07D4  00F1               	movwf	i1escribirMemoria@dato
  6752     07D5  0856               	movf	_direccionLED,w
  6753     07D6  3E03               	addlw	3
  6754     07D7  120A  118A  2627  120A  118A  	fcall	i1_escribirMemoria
  6755     07DC                     i1l261:
  6756     07DC  0008               	return
  6757     07DD                     __end_ofi1_setLED:
  6758                           
  6759                           	psect	text41
  6760     0627                     __ptext41:	
  6761 ;; *************** function i1_escribirMemoria *****************
  6762 ;; Defined at:
  6763 ;;		line 289 in file "main.c"
  6764 ;; Parameters:    Size  Location     Type
  6765 ;;  direccion       1    wreg     unsigned char 
  6766 ;;  dato            1    1[COMMON] unsigned char 
  6767 ;; Auto vars:     Size  Location     Type
  6768 ;;  direccion       1    4[COMMON] unsigned char 
  6769 ;;  contador        2    5[COMMON] int 
  6770 ;;  confirmado      2    2[COMMON] int 
  6771 ;;  valorSal        2    0        int 
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  2    1[COMMON] int 
  6774 ;; Registers used:
  6775 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6781 ;;      Params:         1       0       0       0       0
  6782 ;;      Locals:         5       0       0       0       0
  6783 ;;      Temps:          0       0       0       0       0
  6784 ;;      Totals:         6       0       0       0       0
  6785 ;;Total ram usage:        6 bytes
  6786 ;; Hardware stack levels used: 1
  6787 ;; Hardware stack levels required when called: 1
  6788 ;; This function calls:
  6789 ;;		i1_leerMemoria
  6790 ;; This function is called by:
  6791 ;;		i1_setPWM
  6792 ;;		i1_setLED
  6793 ;; This function uses a non-reentrant model
  6794 ;;
  6795                           
  6796     0627                     i1_escribirMemoria:	
  6797                           ;psect for function i1_escribirMemoria
  6798                           
  6799                           
  6800                           ;incstack = 0
  6801                           ; Regs used in i1_escribirMemoria: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6802                           ;i1escribirMemoria@direccion stored from wreg
  6803     0627  00F4               	movwf	i1escribirMemoria@direccion
  6804     0628                     i1l2490:
  6805                           
  6806                           ;main.c: 290:     int valorSal;;main.c: 291:     EECON1bits.EEPGD = 0;
  6807     0628  1683               	bsf	3,5	;RP0=1, select bank3
  6808     0629  1703               	bsf	3,6	;RP1=1, select bank3
  6809     062A  138C               	bcf	12,7	;volsfr
  6810                           
  6811                           ;main.c: 293:     EECON1bits.WREN = 1;
  6812     062B  150C               	bsf	12,2	;volsfr
  6813     062C                     i1l2492:
  6814                           
  6815                           ;main.c: 294:     EEADRH = 0;
  6816     062C  1283               	bcf	3,5	;RP0=0, select bank2
  6817     062D  1703               	bsf	3,6	;RP1=1, select bank2
  6818     062E  018F               	clrf	15	;volatile
  6819     062F                     i1l2494:
  6820                           
  6821                           ;main.c: 295:     EEADR = direccion;
  6822     062F  0874               	movf	i1escribirMemoria@direccion,w
  6823     0630  008D               	movwf	13	;volatile
  6824     0631                     i1l2496:
  6825                           
  6826                           ;main.c: 296:     if (EECON1bits.RD == 0) {
  6827     0631  1683               	bsf	3,5	;RP0=1, select bank3
  6828     0632  1703               	bsf	3,6	;RP1=1, select bank3
  6829     0633  180C               	btfsc	12,0	;volsfr
  6830     0634  2E36               	goto	u166_21
  6831     0635  2E37               	goto	u166_20
  6832     0636                     u166_21:
  6833     0636  2E89               	goto	i1l2524
  6834     0637                     u166_20:
  6835     0637                     i1l2498:
  6836                           
  6837                           ;main.c: 297:         int contador = 0;
  6838     0637  01F5               	clrf	i1escribirMemoria@contador
  6839     0638  01F6               	clrf	i1escribirMemoria@contador+1
  6840                           
  6841                           ;main.c: 298:         int confirmado = 0;
  6842     0639  01F2               	clrf	i1escribirMemoria@confirmado
  6843     063A  01F3               	clrf	i1escribirMemoria@confirmado+1
  6844                           
  6845                           ;main.c: 299:         while (contador < 10 && confirmado == 0) {
  6846     063B  2E67               	goto	i1l2514
  6847     063C                     i1l225:
  6848                           
  6849                           ;main.c: 300:             INTCONbits.GIE = 0;
  6850     063C  138B               	bcf	11,7	;volatile
  6851     063D                     i1l2500:
  6852                           
  6853                           ;main.c: 301:             EEDAT = dato;
  6854     063D  0871               	movf	i1escribirMemoria@dato,w
  6855     063E  1283               	bcf	3,5	;RP0=0, select bank2
  6856     063F  1703               	bsf	3,6	;RP1=1, select bank2
  6857     0640  008C               	movwf	12	;volatile
  6858                           
  6859                           ;main.c: 302:             EECON2 = 0x55;
  6860     0641  3055               	movlw	85
  6861     0642  1683               	bsf	3,5	;RP0=1, select bank3
  6862     0643  1703               	bsf	3,6	;RP1=1, select bank3
  6863     0644  008D               	movwf	13	;volsfr
  6864                           
  6865                           ;main.c: 303:             EECON2 = 0xAA;
  6866     0645  30AA               	movlw	170
  6867     0646  008D               	movwf	13	;volsfr
  6868     0647                     i1l2502:
  6869                           
  6870                           ;main.c: 304:             EECON1bits.WR = 1;
  6871     0647  148C               	bsf	12,1	;volsfr
  6872     0648                     i1l2504:
  6873                           
  6874                           ;main.c: 305:             INTCONbits.GIE = 1;
  6875     0648  178B               	bsf	11,7	;volatile
  6876     0649                     i1l226:	
  6877                           ;main.c: 306:             while (EECON1bits.WR == 1);
  6878                           
  6879     0649  188C               	btfsc	12,1	;volsfr
  6880     064A  2E4C               	goto	u167_21
  6881     064B  2E4D               	goto	u167_20
  6882     064C                     u167_21:
  6883     064C  2E49               	goto	i1l226
  6884     064D                     u167_20:
  6885     064D                     i1l2506:
  6886                           
  6887                           ;main.c: 307:             continuoEscribiendo = 0;
  6888     064D  1683               	bsf	3,5	;RP0=1, select bank1
  6889     064E  1303               	bcf	3,6	;RP1=0, select bank1
  6890     064F  01B6               	clrf	_continuoEscribiendo^(0+128)
  6891     0650  01B7               	clrf	(_continuoEscribiendo+1)^(0+128)
  6892     0651                     i1l2508:
  6893                           
  6894                           ;main.c: 308:             if (leerMemoria(direccion) == dato)
  6895     0651  0874               	movf	i1escribirMemoria@direccion,w
  6896     0652  120A  158A  2494  120A  118A  	fcall	i1_leerMemoria
  6897     0657  0671               	xorwf	i1escribirMemoria@dato,w
  6898     0658  1D03               	skipz
  6899     0659  2E5B               	goto	u168_21
  6900     065A  2E5C               	goto	u168_20
  6901     065B                     u168_21:
  6902     065B  2E61               	goto	i1l2512
  6903     065C                     u168_20:
  6904     065C                     i1l2510:
  6905                           
  6906                           ;main.c: 309:                 confirmado = 1;
  6907     065C  3001               	movlw	1
  6908     065D  00F2               	movwf	i1escribirMemoria@confirmado
  6909     065E  3000               	movlw	0
  6910     065F  00F3               	movwf	i1escribirMemoria@confirmado+1
  6911     0660  2E67               	goto	i1l2514
  6912     0661                     i1l2512:
  6913                           
  6914                           ;main.c: 311:                 contador++;
  6915     0661  3001               	movlw	1
  6916     0662  07F5               	addwf	i1escribirMemoria@contador,f
  6917     0663  1803               	skipnc
  6918     0664  0AF6               	incf	i1escribirMemoria@contador+1,f
  6919     0665  3000               	movlw	0
  6920     0666  07F6               	addwf	i1escribirMemoria@contador+1,f
  6921     0667                     i1l2514:
  6922                           
  6923                           ;main.c: 299:         while (contador < 10 && confirmado == 0) {
  6924     0667  0876               	movf	i1escribirMemoria@contador+1,w
  6925     0668  3A80               	xorlw	128
  6926     0669  00FF               	movwf	btemp+1
  6927     066A  3080               	movlw	128
  6928     066B  027F               	subwf	btemp+1,w
  6929     066C  1D03               	skipz
  6930     066D  2E70               	goto	u169_25
  6931     066E  300A               	movlw	10
  6932     066F  0275               	subwf	i1escribirMemoria@contador,w
  6933     0670                     u169_25:
  6934     0670  1803               	skipnc
  6935     0671  2E73               	goto	u169_21
  6936     0672  2E74               	goto	u169_20
  6937     0673                     u169_21:
  6938     0673  2E7A               	goto	i1l2518
  6939     0674                     u169_20:
  6940     0674                     i1l2516:
  6941     0674  0872               	movf	i1escribirMemoria@confirmado,w
  6942     0675  0473               	iorwf	i1escribirMemoria@confirmado+1,w
  6943     0676  1903               	btfsc	3,2
  6944     0677  2E79               	goto	u170_21
  6945     0678  2E7A               	goto	u170_20
  6946     0679                     u170_21:
  6947     0679  2E3C               	goto	i1l225
  6948     067A                     u170_20:
  6949     067A                     i1l2518:
  6950                           
  6951                           ;main.c: 313:         if (contador >= 10) valorSal = 1;
  6952     067A  0876               	movf	i1escribirMemoria@contador+1,w
  6953     067B  3A80               	xorlw	128
  6954     067C  00FF               	movwf	btemp+1
  6955     067D  3080               	movlw	128
  6956     067E  027F               	subwf	btemp+1,w
  6957     067F  1D03               	skipz
  6958     0680  2E83               	goto	u171_25
  6959     0681  300A               	movlw	10
  6960     0682  0275               	subwf	i1escribirMemoria@contador,w
  6961     0683                     u171_25:
  6962     0683  1C03               	skipc
  6963     0684  2E86               	goto	u171_21
  6964     0685  2E87               	goto	u171_20
  6965     0686                     u171_21:
  6966     0686  2E88               	goto	i1l2522
  6967     0687                     u171_20:
  6968     0687                     i1l2520:
  6969     0687  2E89               	goto	i1l2526
  6970     0688                     i1l2522:
  6971     0688  2E89               	goto	i1l2526
  6972     0689                     i1l2524:
  6973     0689                     i1l2526:
  6974                           
  6975                           ;main.c: 316:     EECON1bits.WREN = 0;
  6976     0689  1683               	bsf	3,5	;RP0=1, select bank3
  6977     068A  1703               	bsf	3,6	;RP1=1, select bank3
  6978     068B  110C               	bcf	12,2	;volsfr
  6979     068C                     i1l237:
  6980     068C  0008               	return
  6981     068D                     __end_ofi1_escribirMemoria:
  6982                           
  6983                           	psect	text42
  6984     0C94                     __ptext42:	
  6985 ;; *************** function i1_leerMemoria *****************
  6986 ;; Defined at:
  6987 ;;		line 276 in file "main.c"
  6988 ;; Parameters:    Size  Location     Type
  6989 ;;  direccion       1    wreg     unsigned char 
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;  direccion       1    0[COMMON] unsigned char 
  6992 ;; Return value:  Size  Location     Type
  6993 ;;                  1    wreg      unsigned char 
  6994 ;; Registers used:
  6995 ;;		wreg, status,2
  6996 ;; Tracked objects:
  6997 ;;		On entry : 0/0
  6998 ;;		On exit  : 0/0
  6999 ;;		Unchanged: 0/0
  7000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7001 ;;      Params:         0       0       0       0       0
  7002 ;;      Locals:         1       0       0       0       0
  7003 ;;      Temps:          0       0       0       0       0
  7004 ;;      Totals:         1       0       0       0       0
  7005 ;;Total ram usage:        1 bytes
  7006 ;; Hardware stack levels used: 1
  7007 ;; This function calls:
  7008 ;;		Nothing
  7009 ;; This function is called by:
  7010 ;;		i1_escribirMemoria
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014     0C94                     i1_leerMemoria:	
  7015                           ;psect for function i1_leerMemoria
  7016                           
  7017                           
  7018                           ;incstack = 0
  7019                           ; Regs used in i1_leerMemoria: [wreg+status,2]
  7020                           ;i1leerMemoria@direccion stored from wreg
  7021     0C94  00F0               	movwf	i1leerMemoria@direccion
  7022     0C95                     i1l2216:
  7023                           
  7024                           ;main.c: 277:     EECON1bits.EEPGD = 0;
  7025     0C95  1683               	bsf	3,5	;RP0=1, select bank3
  7026     0C96  1703               	bsf	3,6	;RP1=1, select bank3
  7027     0C97  138C               	bcf	12,7	;volsfr
  7028                           
  7029                           ;main.c: 279:     EECON1bits.WREN = 0;
  7030     0C98  110C               	bcf	12,2	;volsfr
  7031     0C99                     i1l2218:
  7032                           
  7033                           ;main.c: 280:     EEDATH = 0;
  7034     0C99  1283               	bcf	3,5	;RP0=0, select bank2
  7035     0C9A  1703               	bsf	3,6	;RP1=1, select bank2
  7036     0C9B  018E               	clrf	14	;volatile
  7037                           
  7038                           ;main.c: 281:     EEADRH = 0;
  7039     0C9C  018F               	clrf	15	;volatile
  7040     0C9D                     i1l2220:
  7041                           
  7042                           ;main.c: 282:     EEADR = direccion;
  7043     0C9D  0870               	movf	i1leerMemoria@direccion,w
  7044     0C9E  008D               	movwf	13	;volatile
  7045     0C9F                     i1l2222:
  7046                           
  7047                           ;main.c: 283:     if (EECON1bits.WR == 0)
  7048     0C9F  1683               	bsf	3,5	;RP0=1, select bank3
  7049     0CA0  1703               	bsf	3,6	;RP1=1, select bank3
  7050     0CA1  188C               	btfsc	12,1	;volsfr
  7051     0CA2  2CA4               	goto	u149_21
  7052     0CA3  2CA5               	goto	u149_20
  7053     0CA4                     u149_21:
  7054     0CA4  2CA6               	goto	i1l2226
  7055     0CA5                     u149_20:
  7056     0CA5                     i1l2224:
  7057                           
  7058                           ;main.c: 284:         EECON1bits.RD = 1;
  7059     0CA5  140C               	bsf	12,0	;volsfr
  7060     0CA6                     i1l2226:
  7061                           
  7062                           ;main.c: 286:     return EEDAT;
  7063     0CA6  1283               	bcf	3,5	;RP0=0, select bank2
  7064     0CA7  1703               	bsf	3,6	;RP1=1, select bank2
  7065     0CA8  080C               	movf	12,w	;volatile
  7066     0CA9                     i1l220:
  7067     0CA9  0008               	return
  7068     0CAA                     __end_ofi1_leerMemoria:
  7069                           
  7070                           	psect	text43
  7071     068D                     __ptext43:	
  7072 ;; *************** function i1_cosasSPI *****************
  7073 ;; Defined at:
  7074 ;;		line 376 in file "main.c"
  7075 ;; Parameters:    Size  Location     Type
  7076 ;;  roj             1    wreg     unsigned char 
  7077 ;;  verd            1    5[COMMON] unsigned char 
  7078 ;;  azu             1    6[COMMON] unsigned char 
  7079 ;;  lumi            1    7[COMMON] unsigned char 
  7080 ;; Auto vars:     Size  Location     Type
  7081 ;;  roj             1  (no storage) unsigned char 
  7082 ;;  i               2    8[COMMON] int 
  7083 ;;  lumo            1    0        unsigned char 
  7084 ;; Return value:  Size  Location     Type
  7085 ;;                  1    wreg      void 
  7086 ;; Registers used:
  7087 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7088 ;; Tracked objects:
  7089 ;;		On entry : 0/0
  7090 ;;		On exit  : 0/0
  7091 ;;		Unchanged: 0/0
  7092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7093 ;;      Params:         3       0       0       0       0
  7094 ;;      Locals:         2       0       0       0       0
  7095 ;;      Temps:          0       0       0       0       0
  7096 ;;      Totals:         5       0       0       0       0
  7097 ;;Total ram usage:        5 bytes
  7098 ;; Hardware stack levels used: 1
  7099 ;; Hardware stack levels required when called: 1
  7100 ;; This function calls:
  7101 ;;		i1_spi_write_read
  7102 ;; This function is called by:
  7103 ;;		i1_setLED
  7104 ;; This function uses a non-reentrant model
  7105 ;;
  7106                           
  7107     068D                     i1_cosasSPI:	
  7108                           ;psect for function i1_cosasSPI
  7109                           
  7110     068D                     i1l2530:	
  7111                           ;incstack = 0
  7112                           ; Regs used in i1_cosasSPI: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7113                           
  7114     068D                     i1l2532:
  7115     068D                     i1l2534:
  7116                           
  7117                           ;main.c: 379:     spi_write_read(0x00);
  7118     068D  3000               	movlw	0
  7119     068E  120A  158A  2557  120A  118A  	fcall	i1_spi_write_read
  7120     0693                     i1l2536:
  7121                           
  7122                           ;main.c: 380:     spi_write_read(0x00);
  7123     0693  3000               	movlw	0
  7124     0694  120A  158A  2557  120A  118A  	fcall	i1_spi_write_read
  7125     0699                     i1l2538:
  7126                           
  7127                           ;main.c: 381:     spi_write_read(0x00);
  7128     0699  3000               	movlw	0
  7129     069A  120A  158A  2557  120A  118A  	fcall	i1_spi_write_read
  7130     069F                     i1l2540:
  7131                           
  7132                           ;main.c: 382:     spi_write_read(0x00);
  7133     069F  3000               	movlw	0
  7134     06A0  120A  158A  2557  120A  118A  	fcall	i1_spi_write_read
  7135     06A5                     i1l2542:
  7136                           
  7137                           ;main.c: 383:     for (i = numLedes; i > 0; i--) {
  7138     06A5  1283               	bcf	3,5	;RP0=0, select bank0
  7139     06A6  1303               	bcf	3,6	;RP1=0, select bank0
  7140     06A7  084B               	movf	_numLedes+1,w
  7141     06A8  00F9               	movwf	i1cosasSPI@i+1
  7142     06A9  084A               	movf	_numLedes,w
  7143     06AA  00F8               	movwf	i1cosasSPI@i
  7144     06AB                     i1l2544:
  7145     06AB  0879               	movf	i1cosasSPI@i+1,w
  7146     06AC  3A80               	xorlw	128
  7147     06AD  00FF               	movwf	btemp+1
  7148     06AE  3080               	movlw	128
  7149     06AF  027F               	subwf	btemp+1,w
  7150     06B0  1D03               	skipz
  7151     06B1  2EB4               	goto	u172_25
  7152     06B2  3001               	movlw	1
  7153     06B3  0278               	subwf	i1cosasSPI@i,w
  7154     06B4                     u172_25:
  7155     06B4  1803               	skipnc
  7156     06B5  2EB7               	goto	u172_21
  7157     06B6  2EB8               	goto	u172_20
  7158     06B7                     u172_21:
  7159     06B7  2EB9               	goto	i1l2548
  7160     06B8                     u172_20:
  7161     06B8  2ED8               	goto	i1l2554
  7162     06B9                     i1l2548:
  7163                           
  7164                           ;main.c: 385:         spi_write_read(0b11101111);
  7165     06B9  30EF               	movlw	239
  7166     06BA  120A  158A  2557  120A  118A  	fcall	i1_spi_write_read
  7167                           
  7168                           ;main.c: 386:         spi_write_read(0b11111111);
  7169     06BF  30FF               	movlw	255
  7170     06C0  120A  158A  2557  120A  118A  	fcall	i1_spi_write_read
  7171                           
  7172                           ;main.c: 387:         spi_write_read(0b11111111);
  7173     06C5  30FF               	movlw	255
  7174     06C6  120A  158A  2557  120A  118A  	fcall	i1_spi_write_read
  7175                           
  7176                           ;main.c: 388:         spi_write_read(0b11111111);
  7177     06CB  30FF               	movlw	255
  7178     06CC  120A  158A  2557  120A  118A  	fcall	i1_spi_write_read
  7179     06D1                     i1l2550:
  7180                           
  7181                           ;main.c: 392:     }
  7182     06D1  30FF               	movlw	255
  7183     06D2  07F8               	addwf	i1cosasSPI@i,f
  7184     06D3  1803               	skipnc
  7185     06D4  0AF9               	incf	i1cosasSPI@i+1,f
  7186     06D5  30FF               	movlw	255
  7187     06D6  07F9               	addwf	i1cosasSPI@i+1,f
  7188     06D7  2EAB               	goto	i1l2544
  7189     06D8                     i1l2554:
  7190                           
  7191                           ;main.c: 393:     spi_write_read(0xFF);
  7192     06D8  30FF               	movlw	255
  7193     06D9  120A  158A  2557  120A  118A  	fcall	i1_spi_write_read
  7194                           
  7195                           ;main.c: 394:     spi_write_read(0xFF);
  7196     06DE  30FF               	movlw	255
  7197     06DF  120A  158A  2557  120A  118A  	fcall	i1_spi_write_read
  7198                           
  7199                           ;main.c: 395:     spi_write_read(0xFF);
  7200     06E4  30FF               	movlw	255
  7201     06E5  120A  158A  2557  120A  118A  	fcall	i1_spi_write_read
  7202                           
  7203                           ;main.c: 396:     spi_write_read(0xFF);
  7204     06EA  30FF               	movlw	255
  7205     06EB  120A  158A  2557  120A  118A  	fcall	i1_spi_write_read
  7206     06F0                     i1l258:
  7207     06F0  0008               	return
  7208     06F1                     __end_ofi1_cosasSPI:
  7209                           
  7210                           	psect	text44
  7211     0D57                     __ptext44:	
  7212 ;; *************** function i1_spi_write_read *****************
  7213 ;; Defined at:
  7214 ;;		line 8 in file "spi-master-v1.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;  one_byte        1    wreg     unsigned char 
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;  one_byte        1    2[COMMON] unsigned char 
  7219 ;;  x               1    4[COMMON] unsigned char 
  7220 ;;  answer          1    3[COMMON] unsigned char 
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  1    wreg      unsigned char 
  7223 ;; Registers used:
  7224 ;;		wreg, status,2, status,0
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7230 ;;      Params:         0       0       0       0       0
  7231 ;;      Locals:         3       0       0       0       0
  7232 ;;      Temps:          2       0       0       0       0
  7233 ;;      Totals:         5       0       0       0       0
  7234 ;;Total ram usage:        5 bytes
  7235 ;; Hardware stack levels used: 1
  7236 ;; This function calls:
  7237 ;;		Nothing
  7238 ;; This function is called by:
  7239 ;;		i1_cosasSPI
  7240 ;; This function uses a non-reentrant model
  7241 ;;
  7242                           
  7243     0D57                     i1_spi_write_read:	
  7244                           ;psect for function i1_spi_write_read
  7245                           
  7246                           
  7247                           ;incstack = 0
  7248                           ; Regs used in i1_spi_write_read: [wreg+status,2+status,0]
  7249                           ;i1spi_write_read@one_byte stored from wreg
  7250     0D57  00F2               	movwf	i1spi_write_read@one_byte
  7251     0D58                     i1l2230:
  7252                           
  7253                           ;spi-master-v1.c: 8: char spi_write_read(char one_byte);spi-master-v1.c: 9: {;spi-master
      +                          -v1.c: 11:     char answer, x;;spi-master-v1.c: 13:     answer = 0;
  7254     0D58  01F3               	clrf	i1spi_write_read@answer
  7255     0D59                     i1l2232:
  7256                           
  7257                           ;spi-master-v1.c: 15:     for(x = 8; x > 0; x--)
  7258     0D59  3008               	movlw	8
  7259     0D5A  00F4               	movwf	i1spi_write_read@x
  7260     0D5B                     i1l2238:
  7261                           
  7262                           ;spi-master-v1.c: 16:     {;spi-master-v1.c: 17:         PORTCbits.RC0 = (__bit)((one_by
      +                          te >> (x - 1)) & 0b00000001);
  7263     0D5B  0872               	movf	i1spi_write_read@one_byte,w
  7264     0D5C  00F0               	movwf	??i1_spi_write_read
  7265     0D5D  0874               	movf	i1spi_write_read@x,w
  7266     0D5E  3EFF               	addlw	-1
  7267     0D5F  3E01               	addlw	1
  7268     0D60  2D63               	goto	u150_24
  7269     0D61                     u150_25:
  7270     0D61  1003               	clrc
  7271     0D62  0CF0               	rrf	??i1_spi_write_read,f
  7272     0D63                     u150_24:
  7273     0D63  3EFF               	addlw	-1
  7274     0D64  1D03               	skipz
  7275     0D65  2D61               	goto	u150_25
  7276     0D66  1870               	btfsc	??i1_spi_write_read,0
  7277     0D67  2D69               	goto	u151_21
  7278     0D68  2D6D               	goto	u151_20
  7279     0D69                     u151_21:
  7280     0D69  1283               	bcf	3,5	;RP0=0, select bank0
  7281     0D6A  1303               	bcf	3,6	;RP1=0, select bank0
  7282     0D6B  1407               	bsf	7,0	;volatile
  7283     0D6C  2D70               	goto	u152_24
  7284     0D6D                     u151_20:
  7285     0D6D  1283               	bcf	3,5	;RP0=0, select bank0
  7286     0D6E  1303               	bcf	3,6	;RP1=0, select bank0
  7287     0D6F  1007               	bcf	7,0	;volatile
  7288     0D70                     u152_24:
  7289     0D70                     i1l2240:
  7290                           
  7291                           ;spi-master-v1.c: 19:         PORTCbits.RC5 = 1;
  7292     0D70  1687               	bsf	7,5	;volatile
  7293                           
  7294                           ;spi-master-v1.c: 21:         answer |= (char)PORTAbits.RA5;
  7295     0D71  0E05               	swapf	5,w	;volatile
  7296     0D72  00F0               	movwf	??i1_spi_write_read
  7297     0D73  0C70               	rrf	??i1_spi_write_read,w
  7298     0D74  3901               	andlw	1
  7299     0D75  00F1               	movwf	??i1_spi_write_read+1
  7300     0D76  0871               	movf	??i1_spi_write_read+1,w
  7301     0D77  04F3               	iorwf	i1spi_write_read@answer,f
  7302     0D78                     i1l2242:
  7303                           
  7304                           ;spi-master-v1.c: 22:         PORTCbits.RC5 = 0;
  7305     0D78  1287               	bcf	7,5	;volatile
  7306     0D79                     i1l2244:
  7307                           
  7308                           ;spi-master-v1.c: 24:         if(x > 1)
  7309     0D79  3002               	movlw	2
  7310     0D7A  0274               	subwf	i1spi_write_read@x,w
  7311     0D7B  1C03               	skipc
  7312     0D7C  2D7E               	goto	u153_21
  7313     0D7D  2D7F               	goto	u153_20
  7314     0D7E                     u153_21:
  7315     0D7E  2D83               	goto	i1l382
  7316     0D7F                     u153_20:
  7317     0D7F                     i1l2246:
  7318                           
  7319                           ;spi-master-v1.c: 25:             answer = answer << 1;
  7320     0D7F  0873               	movf	i1spi_write_read@answer,w
  7321     0D80  00F0               	movwf	??i1_spi_write_read
  7322     0D81  0770               	addwf	??i1_spi_write_read,w
  7323     0D82  00F3               	movwf	i1spi_write_read@answer
  7324     0D83                     i1l382:
  7325                           
  7326                           ;spi-master-v1.c: 26:     }
  7327     0D83  3001               	movlw	1
  7328     0D84  02F4               	subwf	i1spi_write_read@x,f
  7329     0D85  0874               	movf	i1spi_write_read@x,w
  7330     0D86  1D03               	btfss	3,2
  7331     0D87  2D89               	goto	u154_21
  7332     0D88  2D8A               	goto	u154_20
  7333     0D89                     u154_21:
  7334     0D89  2D5B               	goto	i1l2238
  7335     0D8A                     u154_20:
  7336     0D8A                     i1l383:
  7337     0D8A  0008               	return
  7338     0D8B                     __end_ofi1_spi_write_read:
  7339     007E                     btemp	set	126	;btemp
  7340     007E                     wtemp0	set	126
  7341                           
  7342                           	psect	idloc
  7343                           
  7344                           ;Config register IDLOC0 @ 0x2000
  7345                           ;	unspecified, using default values
  7346     2000                     	org	8192
  7347     2000  3FFF               	dw	16383
  7348                           
  7349                           ;Config register IDLOC1 @ 0x2001
  7350                           ;	unspecified, using default values
  7351     2001                     	org	8193
  7352     2001  3FFF               	dw	16383
  7353                           
  7354                           ;Config register IDLOC2 @ 0x2002
  7355                           ;	unspecified, using default values
  7356     2002                     	org	8194
  7357     2002  3FFF               	dw	16383
  7358                           
  7359                           ;Config register IDLOC3 @ 0x2003
  7360                           ;	unspecified, using default values
  7361     2003                     	org	8195
  7362     2003  3FFF               	dw	16383
  7363                           
  7364                           	psect	config
  7365                           
  7366                           ;Config register CONFIG1 @ 0x2007
  7367                           ;	Oscillator Selection bits
  7368                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  7369                           ;	Watchdog Timer Enable bit
  7370                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  7371                           ;	Power-up Timer Enable bit
  7372                           ;	PWRTE = ON, PWRT enabled
  7373                           ;	RE3/MCLR pin function select bit
  7374                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  7375                           ;	Code Protection bit
  7376                           ;	CP = OFF, Program memory code protection is disabled
  7377                           ;	Data Code Protection bit
  7378                           ;	CPD = OFF, Data memory code protection is disabled
  7379                           ;	Brown Out Reset Selection bits
  7380                           ;	BOREN = OFF, BOR disabled
  7381                           ;	Internal External Switchover bit
  7382                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  7383                           ;	Fail-Safe Clock Monitor Enabled bit
  7384                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  7385                           ;	Low Voltage Programming Enable bit
  7386                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  7387                           ;	In-Circuit Debugger Mode bit
  7388                           ;	DEBUG = OFF, In-Circuit Debugger disabled, RB6/ICSPCLK and RB7/ICSPDAT are general pur
      +                          pose I/O pins
  7389     2007                     	org	8199
  7390     2007  20E2               	dw	8418
  7391                           
  7392                           ;Config register CONFIG2 @ 0x2008
  7393                           ;	Brown-out Reset Selection bit
  7394                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  7395                           ;	Flash Program Memory Self Write Enable bits
  7396                           ;	WRT = OFF, Write protection off
  7397     2008                     	org	8200
  7398     2008  3EFF               	dw	16127

Data Sizes:
    Strings     147
    Constant    10
    Data        40
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     40      72
    BANK1            80      7      51
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 98
		 -> STR_5(CODE[98]), STR_4(CODE[19]), STR_3(CODE[7]), STR_2(CODE[8]), 
		 -> STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    sp__getLED	PTR unsigned char  size(1) Largest target is 4
		 -> miLED(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _TRAT_INT in COMMON

    _TRAT_INT->i1_setLED
    _TRAT_INT->i1_setPWM
    i1_setPWM->i1___awdiv
    i1_setLED->i1_cosasSPI
    i1_escribirMemoria->i1_leerMemoria
    i1_cosasSPI->i1_spi_write_read

Critical Paths under _main in BANK0

    _main->_printf
    _initActuadoresSegunMemoria->_printf
    _setPWM->___awdiv
    _setLED->_cosasSPI
    _escribirMemoria->_leerMemoria
    _cosasSPI->_spi_write_read
    _printf->___lwmod
    ___lwmod->___lwdiv
    _getnoPrimerArranque->_leerMemoria
    _analisisResto->_setCO2
    _analisisResto->_setLumen
    _setLumen->_i2c_read
    _setCO2->_i2c_read

Critical Paths under _TRAT_INT in BANK0

    _TRAT_INT->i1_setLED

Critical Paths under _main in BANK1

    _main->_printf
    _initActuadoresSegunMemoria->_printf

Critical Paths under _TRAT_INT in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TRAT_INT in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TRAT_INT in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7084
                                             37 BANK0      3     3      0
                      _analisisResto
                      _analisisRuido
                           _i2c_stop
         _initActuadoresSegunMemoria
                             _initYo
                             _printf
 ---------------------------------------------------------------------------------
 (1) _initYo                                               0     0      0       0
                           _init_ADC
                      _init_CCP1_PWM
                           _init_I2C
                           _init_SPI
                          _init_TMR0
                          _init_TMR1
                          _init_TMR2
                       _init_memoria
                          _init_uart
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_memoria                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_TMR2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_TMR0                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_SPI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_I2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_CCP1_PWM                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initActuadoresSegunMemoria                           0     0      0    5184
                _getnoPrimerArranque
                             _printf
                             _setLED
                             _setPWM
 ---------------------------------------------------------------------------------
 (2) _setPWM                                               4     4      0    1430
                                             17 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                    _escribirMemoria
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              8 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              8 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _setLED                                               5     2      3    1967
                                             18 BANK0      5     2      3
                           _cosasSPI
                    _escribirMemoria
 ---------------------------------------------------------------------------------
 (3) _escribirMemoria                                      8     7      1     721
                                              9 BANK0      6     5      1
                        _leerMemoria
 ---------------------------------------------------------------------------------
 (3) _cosasSPI                                             7     4      3     441
                                             13 BANK0      5     2      3
                     _spi_write_read
 ---------------------------------------------------------------------------------
 (4) _spi_write_read                                       5     5      0     143
                                              8 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _printf                                              30    18     12    1675
                                             22 BANK0     15     3     12
                                              0 BANK1      7     7      0
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      31
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                             16 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              8 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _getnoPrimerArranque                                  4     2      2     112
                                              9 BANK0      4     2      2
                        _leerMemoria
 ---------------------------------------------------------------------------------
 (4) _leerMemoria                                          1     1      0      22
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c_stop                                             0     0      0       0
                          _wait_MSSP
 ---------------------------------------------------------------------------------
 (1) _analisisRuido                                        3     3      0      48
                                              8 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _analisisResto                                        0     0      0     134
                             _getCO2
                           _getLumen
                             _setCO2
                           _setLumen
 ---------------------------------------------------------------------------------
 (2) _setLumen                                             2     2      0      67
                                             10 BANK0      2     2      0
                           _i2c_read
                         _i2c_rstart
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _setCO2                                               2     2      0      67
                                             10 BANK0      2     2      0
                           _i2c_read
                         _i2c_rstart
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      22
                                              8 BANK0      1     1      0
                          _wait_MSSP
 ---------------------------------------------------------------------------------
 (3) _i2c_rstart                                           0     0      0       0
                          _wait_MSSP
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             2     2      0      45
                                              8 BANK0      2     2      0
                          _wait_MSSP
 ---------------------------------------------------------------------------------
 (2) _wait_MSSP                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getLumen                                             2     0      2       0
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _getCO2                                               2     0      2       0
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _TRAT_INT                                             6     6      0    1869
                                              2 BANK0      6     6      0
                           i1_setLED
                           i1_setPWM
 ---------------------------------------------------------------------------------
 (6) i1_setPWM                                             4     4      0     930
                                              9 COMMON     4     4      0
                          i1___awdiv
                           i1___bmul
                  i1_escribirMemoria
 ---------------------------------------------------------------------------------
 (7) i1___bmul                                             4     3      1     118
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (7) i1___awdiv                                            9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (6) i1_setLED                                             5     2      3     939
                                             10 COMMON     3     0      3
                                              0 BANK0      2     2      0
                         i1_cosasSPI
                  i1_escribirMemoria
 ---------------------------------------------------------------------------------
 (7) i1_escribirMemoria                                    8     7      1     371
                                              1 COMMON     6     5      1
                      i1_leerMemoria
 ---------------------------------------------------------------------------------
 (8) i1_leerMemoria                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_cosasSPI                                           7     4      3     291
                                              5 COMMON     5     2      3
                   i1_spi_write_read
 ---------------------------------------------------------------------------------
 (8) i1_spi_write_read                                     5     5      0     143
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _analisisResto
     _getCO2
     _getLumen
     _setCO2
       _i2c_read
         _wait_MSSP
       _i2c_rstart
         _wait_MSSP
       _i2c_write
         _wait_MSSP
     _setLumen
       _i2c_read
       _i2c_rstart
       _i2c_write
   _analisisRuido
   _i2c_stop
     _wait_MSSP
   _initActuadoresSegunMemoria
     _getnoPrimerArranque
       _leerMemoria
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
     _setLED
       _cosasSPI
         _spi_write_read
       _escribirMemoria
         _leerMemoria
     _setPWM
       ___awdiv
       ___bmul
       _escribirMemoria
   _initYo
     _init_ADC
     _init_CCP1_PWM
     _init_I2C
     _init_SPI
     _init_TMR0
     _init_TMR1
     _init_TMR2
     _init_memoria
     _init_uart
   _printf

 _TRAT_INT (ROOT)
   i1_setLED
     i1_cosasSPI
       i1_spi_write_read
     i1_escribirMemoria
       i1_leerMemoria
   i1_setPWM
     i1___awdiv
     i1___bmul
     i1_escribirMemoria

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      7      33       7       63.7%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     28      48       5       90.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      89      12        0.0%
ABS                  0      0      89       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 22 14:52:18 2022

                      _ruidoMasAlto 005F                                   _x 0063  
                                 pc 0002                      ___bmul@product 002A  
                      ___awdiv@sign 002E                                  fsr 0004  
                               l203 0C32                                 l220 0D0D  
                               l213 0740                                 l206 0FFF  
                               l216 0BE3                                 l240 0DBF  
                               l209 0BF0                                 l225 0498  
                               l226 04A5                                 l250 0E67  
                               l243 0D2D                                 l171 0BD6  
                               l180 0C0F                                 l237 04F0  
                               l261 078E                                 l246 0D31  
                               l174 0C20                                 l183 07F8  
                               l272 0F25                                 l192 0CF1  
                               l344 0478                                 l353 0B9F  
                               l281 0FB4                                 l177 0C44  
                               l362 0BC0                                 l258 0626  
                               l186 0CD8                                 l355 0BA5  
                               l371 0D4A                                 l195 0BCA  
                               l356 0BA6                                 l372 0D4D  
                               l276 0EE2                                 l268 0F0F  
                               l373 0D56                                 l365 0BB7  
                               l189 07FC                                 l198 0C24  
                               l382 0DEE                                 l526 0CC0  
                               l383 0DF5                                 l368 0BFE  
                               l653 0559                                 l496 033C  
                               l772 0F6B                                 l782 0EA3  
                               _PR2 0092                       _emitoSensores 00BA  
                               _anI 004E                        ?_leerMemoria 0070  
                               fsr0 0004                   i1_escribirMemoria 0627  
                               indf 0000                   i1setPWM@direccion 007B  
                       cosasSPI@azu 002E        ??_initActuadoresSegunMemoria 0045  
                       cosasSPI@roj 0070                          i1_cosasSPI 068D  
                ?i1_escribirMemoria 0071              i1leerMemoria@direccion 0070  
                              l2000 0DE3                                l2002 0DE4  
                              l2020 0BF4                                l2004 0DEA  
                              l2006 0B9F                                l2030 0D38  
                              l2014 0BAF                                l2022 0BF6  
                              l2102 05ED                                l2110 0CAD  
                              l2040 0D53                                l2032 0D3D  
                              l2016 0BB2                                l2024 0BFB  
                              l3000 0237                                l2104 0605  
                              l2120 0CBF                                l2112 0CAE  
                              l2034 0D41                                l3010 0271  
                              l3002 023E                                l2050 048B  
                              l2130 04FD                                l2114 0CB2  
                              l2036 0D46                                l2028 0D35  
                              l3020 0294                                l3012 027B  
                              l3004 0246                                l2108 060E  
                              l2060 04A9                                l2052 0491  
                              l2044 047E                                l2140 050E  
                              l2132 04FF                                l2124 04F1  
                              l2116 0CB6                                l2300 07E9  
                              l2038 0D4E                                l3030 02BA  
                              l3014 0283                                l2070 04D4  
                              l2062 04AD                                l2054 0499  
                              l2046 0482                                l2150 0526  
                              l2142 0514                                l2134 0503  
                              l2126 04F4                                l2118 0CB8  
                              l2310 07F4                                l2302 07EA  
                              l3040 0317                                l3032 02C8  
                              l3016 0287                                l3008 024F  
                              l2080 04ED                                l2072 04DC  
                              l2064 04BC                                l2056 04A3  
                              l2048 0485                                l2152 0537  
                              l2144 0517                                l2160 054B  
                              l2136 0508                                l2128 04F8  
                              l2400 0E31                                l2320 0CCE  
                              l2312 07F7                                l2304 07ED  
                              l3042 031D                                l3034 02CE  
                              l3026 0296                                l3018 028F  
                              l2090 05C7                                l2074 04EB  
                              l2066 04C1                                l2058 04A4  
                              l2410 0744                                l2162 0550  
                              l2154 053D                                l2146 051E  
                              l2138 050C                                l2402 0E50  
                              l3050 0F6C                                l2330 0CDD  
                              l2322 0CD2                                l2314 0CC1  
                              l2250 0BCF                                l2306 07F0  
                              l3036 02D4                                l3044 032A  
                              l2092 05CD                                l2084 05C1  
                              l2076 04EC                                l2068 04C7  
                              l2420 075A                                l2412 0750  
                              l2164 0555                                l2156 053E  
                              l2148 0522                                l2404 0E58  
                              l3060 0F9A                                l3052 0F72  
                              l2340 0CEA                                l2332 0CE0  
                              l2324 0CD5                                l2316 0CC5  
                              l2252 0BD2                                l2260 0C16  
                              l2308 07F1                                l3038 02D9  
                              l2094 05D3                                l2086 05C1  
                              l2078 04ED                                l2430 0783  
                              l2422 075C                                l2414 0754  
                              l2158 0545                                l2406 0E5C  
                              l3062 0FA0                                l3054 0F7F  
                              l2342 0CEB                                l2334 0CE1  
                              l2318 0CCB                                l2326 07F9  
                              l2254 0BD3                                l2262 0C17  
                              l2270 0C33                                l2350 0BC1  
                              l3070 03EA                                l2360 0FCC  
                              l2352 0FB5                                l2096 05D9  
                              l2088 05C1                                l2424 0763  
                              l2416 0756                                l2408 0E63  
                              l3064 0FA6                                l3056 0F85  
                              l2344 0CEE                                l2336 0CE2  
                              l2328 0CD9                                l2256 0BD5  
                              l2248 0BCB                                l2264 0C19  
                              l2280 0C43                                l2272 0C37  
                              l3080 0408                                l3072 03F1  
                              l2370 06F6                                l2362 0FE0  
                              l2354 0FBA                                l2098 05DF  
                              l2426 076D                                l2418 0758  
                              l3058 0F8B                                l2346 0CEF  
                              l2338 0CE8                                l2290 0C0D  
                              l2282 0BFF                                l2266 0C1A  
                              l2258 0C10                                l2274 0C3B  
                              l3090 0466                                l3170 0414  
                              l3074 03F9                                l3066 03E0  
                              l2380 0BD7                                l2364 0BE4  
                              l2372 06FC                                l2356 0FC0  
                              l3172 0263                                l2428 0778  
                              l2348 0CF0                                l2284 0C02  
                              l2268 0C1D                                l2276 0C3D  
                              l2292 07DD                                l2620 0D99  
                              l3076 03FE                                l3084 040D  
                              l3092 046B                                l3068 03E5  
                              l2374 0710                                l2358 0FC6  
                              l2390 0D20                                l2286 0C05  
                              l2278 0C40                                l2294 07E3  
                              l2630 0DBC                                l2622 0D9E  
                              l2614 0D8B                                l3094 0473  
                              l3078 0403                                l3086 041F  
                              l2376 072F                                l2368 06F1  
                              l2640 0F06                                l2632 0EE3  
                              l2392 0D25                                l2384 0D0E  
                              l2288 0C0B                                l2296 07E6  
                              l2624 0DA3                                l2616 0D8F  
                              l3088 0461                                l2378 073A  
                              l2650 0EAE                                l2642 0F0B  
                              l2634 0EE3                                l2394 0D2A  
                              l2386 0D12                                l2298 07E8  
                              l2626 0DA8                                l2618 0D94  
                              l2660 0EDD                                l2652 0EB2  
                              l2644 0F1C                                l2636 0EF2  
                              l2388 0D1B                                l2628 0DAD  
                              l2654 0EB6                                l2646 0EA4  
                              l2638 0EF7                                l2656 0EC7  
                              l2648 0EAC                                l2680 0BBB  
                              l2658 0ED8                                l1980 0D03  
                              l2940 0C29                                l2678 0BB8  
                              l1982 0D09                                l1974 0CF5  
                              l2950 0F33                                l2942 0C2F  
                              l1990 0DC4                                l1984 0D0A  
                              l1976 0CF9                                l2960 0F59  
                              l2952 0F3A                                l2944 0F26  
                              l1978 0CFD                                l2962 0F5A  
                              l2954 0F3E                                l2946 0F2A  
                              l2970 0E68                                l2938 0C24  
                              l2964 0F61                                l2956 0F42  
                              l2948 0F30                                l2980 0E82  
                              l2972 0E70                                l1996 0DC6  
                              l1988 0DC3                                l2958 0F53  
                              l2966 0F67                                l2982 0E8C  
                              l2974 0E73                                l1998 0DDB  
                              l2984 0E92                                l2976 0E7A  
                              l2992 0225                                l2986 0E99  
                              l2978 0E7E                                l2994 0228  
                              l2988 0E9F                                l2996 022E  
                              l2998 0235                     spi_write_read@x 002C  
                              STR_1 03C2                                STR_2 03D1  
                              STR_3 03D9                                STR_4 03AF  
                              STR_5 034D                                u1110 0DEA  
                              u1111 0DE9                                u1120 0DF5  
                              u1104 0DDB                                u1200 04D4  
                              u1121 0DF4                                u1201 04D3  
                              u1130 0BA5                                u1210 04DC  
                              u1131 0BA4                                u1211 04DB  
                              u1220 04EB                                u1300 0526  
                              u1221 04EA                                u1205 04D0  
                              u1301 0525                                u1070 0D09  
                              u1230 05EC                                u1071 0D08  
                              u1231 05EB                                u1160 0D46  
                              u1320 0537                                u1240 0CB2  
                              u1161 0D45                                u1225 04E7  
                              u1321 0536                                u1241 0CB1  
                              u2210 0F67                                u2130 0C29  
                              u1090 0DD8                                u1170 0491  
                              u1250 0CBF                                u2211 0F66  
                              u2131 0C28                                u1091 0DD4  
                              u1235 05E8                                u1171 0490  
                              u1315 0527                                u1251 0CBE  
                              u2220 0E70                                u2140 0C2F  
                              u2300 02B9                                u1084 0DCE  
                              u1180 04A9                                u1340 054B  
                              u1260 04F8                                u2205 0F5B  
                              u2221 0E6F                                u2141 0C2E  
                              u2301 02B8                                u1085 0DCC  
                              u1181 04A8                                u1341 054A  
                              u1325 0533                                u1261 04F7  
                              u2150 0F30                                u2310 02C8  
                              u1190 04BC                                u1350 0550  
                              u1270 0503                                u2151 0F2F  
                              u2311 02C7                                u1191 04BB  
                              u1351 054F                                u1335 053F  
                              u1271 0502                                u2240 0E82  
                              u2320 02CE                                u1280 0514  
                              u2241 0E81                                u2321 02CD  
                              u2305 02B5                                u1281 0513  
                              u2170 0F42                                u2250 0E8C  
                              u2330 032A                                u2171 0F41  
                              u2251 0E8B                                u2235 0E74  
                              u2331 0329                                u2340 033C  
                              u2165 0F34                                u2341 033B  
                              u1550 073A                                u2190 0F53  
                              u2270 0E9F                                u2350 0F7F  
                              u1551 0739                                u2191 0F52  
                              u2271 0E9E                                u2255 0E88  
                              u1295 0518                                u2351 0F7E  
                              u1560 0D20                                u2280 022E  
                              u2360 03F9                                u1561 0D1F  
                              u2185 0F43                                u2265 0E93  
                              u2281 022D                                u2361 03F8  
                              u1570 0D25                                u2290 0287  
                              u2370 0473                                u1571 0D24  
                              u2195 0F4F                                u2291 0286  
                              u2371 0472                                u1580 0D2A  
                              u1581 0D29                                u1850 0EF2  
                              u1851 0EF1                                u1860 0F06  
                              u1861 0F05                                u1870 0F1C  
                              u1871 0F1B                                u1855 0EEE  
                              u1880 0EAC                                u1881 0EAB  
                              u1865 0F02                                u1875 0F18  
                              _TMR0 0001                                _TXIF 0064  
            __end_of_spi_write_read 0DF6                                _pPWM 0066  
               ??i1_escribirMemoria 0072                                _main 03E0  
                              btemp 007E                                start 0012  
                      cosasSPI@lumi 002F                        cosasSPI@verd 002D  
                 ___bmul@multiplier 002B           __end_ofi1_escribirMemoria 068D  
                             ?_main 0070                      i1___awdiv@sign 0076  
                   __end_of___awdiv 055A                               _EEADR 010D  
                             _EEDAT 010C                               _ANSEL 0188  
                   ___awdiv@divisor 0028                     __end_of___lwdiv 0F6C  
                             i1l220 0CA9                               i1l301 0177  
                             i1l310 0215                               i1l311 0189  
                             i1l225 063C                               i1l313 020F  
                             i1l226 0649                               i1l250 0E2D  
                             i1l237 068C                               i1l261 07DC  
                             i1l309 0183                               i1l329 0215  
                   __end_of___lwmod 0EA4                               i1l258 06F0  
                             i1l291 0118                               i1l382 0D83  
                             i1l526 0C7E                               i1l294 010F  
                             i1l286 00AC                               i1l383 0D8A  
                             i1l297 010E                               i1l299 0123  
                             i1l653 05C0                     ___awdiv@counter 002D  
                             _RCREG 001A                               _TMR1H 000F  
                             _TMR1L 000E                               _SPBRG 0099  
                             _TRISA 0085                               _TRISB 0086  
                             _TRISC 0087                               _TXREG 0019  
                             _elPR2 0052                               _miLED 0059  
                   __end_of_dpowers 034D                    __end_of_TRAT_INT 0222  
                             _valor 00A0                               _putch 0C21  
                  __end_ofi1___bmul 0C7F                leerMemoria@direccion 0028  
                             pclath 000A                        main@ruidoAux 0047  
                   ?_spi_write_read 0070                               status 0003  
                             wtemp0 007E                    __end_ofi1_setLED 07DD  
                  __end_ofi1_setPWM 0E2E                       setPWM@porcent 0034  
                   __initialization 0015                      i1cosasSPI@lumi 0077  
                    i1cosasSPI@verd 0075                        __end_of_main 047B  
                        _i2c_rstart 0BAF                         i1cosasSPI@i 0078  
                  __end_of_i2c_read 0D57                    __end_of_i2c_stop 0BC1  
                     _init_CCP1_PWM 0BFF               __end_of_analisisResto 0EE3  
             __end_of_analisisRuido 0F26                              ??_main 0045  
                       ?i1_cosasSPI 0075                              _ADRESH 001E  
                            _EEADRH 010F                              _ADRESL 009E  
                            _EEDATH 010E                              _CCPR1L 0015  
                            _EECON2 018D                    ___awdiv@dividend 002A  
                            ?_putch 0070                              i1l2220 0C9D  
                            i1l2230 0D58                              i1l2222 0C9F  
                            i1l2240 0D70                              i1l2232 0D59  
                            i1l2224 0CA5                              i1l2216 0C95  
                            u200_20 0127                              u200_21 0126  
                            i1l2242 0D78                              i1l2226 0CA6  
                            i1l2218 0C99                              i1l2244 0D79  
                            i1l2500 063D                              i1l2246 0D7F  
                            i1l2238 0D5B                              i1l2510 065C  
                            i1l2502 0647                              i1l2520 0687  
                            i1l2512 0661                              i1l2504 0648  
                            i1l2600 05A4                              u201_20 0144  
                            u201_21 0143                              i1l2530 068D  
                            i1l2522 0688                              i1l2506 064D  
                            i1l2514 0667                              i1l2610 05BC  
                            i1l2602 05A5                              i1l2540 069F  
                            i1l2532 068D                              i1l2516 0674  
                            i1l2508 0651                              i1l2524 0689  
                            i1l2700 07A4                              i1l2604 05AC  
                            u201_25 0140                              i1l2550 06D1  
                            i1l2542 06A5                              i1l2534 068D  
                            i1l2526 0689                              i1l2518 067A  
                            i1l2710 07BB                              i1l2702 07A6  
                            i1l2606 05B2                              i1l3174 01FE  
                            i1l2544 06AB                              i1l2536 0693  
                            i1l2712 07C6                              i1l2704 07A8  
                            i1l2608 05B7                              i1l2560 0C70  
                            u210_20 0213                              i1l2800 01CB  
                            u202_20 014C                              i1l2720 0068  
                            u210_21 0212                              u202_21 014B  
                            i1l2554 06D8                              i1l2538 0699  
                            i1l2490 0628                              i1l2714 07D1  
                            i1l2706 07AA                              i1l2570 055A  
                            i1l2562 0C74                              i1l2810 01E9  
                            i1l2802 01CF                              i1l2730 009D  
                            i1l2722 006C                              i1l2548 06B9  
                            i1l2492 062C                              i1l2708 07B1  
                            i1l2580 056A                              i1l2572 055B  
                            i1l2564 0C76                              i1l2556 0C6B  
                            i1l2820 0213                              i1l2812 01EE  
                            i1l2804 01D8                              i1l2740 00C2  
                            i1l2724 0072                              i1l2732 00A2  
                            i1l2716 004A                              i1l2494 062F  
                            i1l2590 057E                              i1l2582 056F  
                            i1l2574 055F                              i1l2566 0C7D  
                            i1l2558 0C6C                              i1l2814 01F1  
                            i1l2806 01DF                              i1l2750 00FA  
                            i1l2742 00CF                              i1l2734 00AA  
                            i1l2726 0082                              i1l2718 004E  
                            i1l2496 0631                              i1l2592 0585  
                            i1l2584 0573                              i1l2576 0564  
                            i1l2808 01E2                              u203_20 015E  
                            i1l2760 0127                              i1l2752 0112  
                            i1l2744 00D3                              i1l2736 00B0  
                            i1l2728 0091                              u203_21 015D  
                            i1l2498 0637                              i1l2594 0589  
                            i1l2586 0575                              i1l2578 0566  
                            i1l2690 0E22                              i1l2818 01F4  
                            i1l2770 0157                              i1l2762 0128  
                            i1l2754 0116                              i1l2746 00DB  
                            i1l2738 00BE                              i1l2596 058D  
                            i1l2588 057B                              i1l2692 0E29  
                            i1l2684 0DF7                              i1l2780 017B  
                            i1l2772 015E                              i1l2764 0137  
                            i1l2756 011C                              i1l2748 00ED  
                            i1l2694 0792                              i1l2598 059E  
                            i1l2686 0E16                              i1l2790 019B  
                            i1l2782 017C                              i1l2766 0144  
                            i1l2774 0169                              i1l2758 011F  
                            i1l2696 079E                              i1l2688 0E1E  
                            i1l2792 01A3                              i1l2784 0187  
                            u204_20 017B                              i1l2768 014C  
                            u204_21 017A                              i1l2698 07A2  
                            i1l2794 01A9                              i1l2786 018D  
                            i1l2778 016D                              i1l2796 01AF  
                            i1l2788 018E                              i1l2798 01BC  
                            u205_20 0187                              u205_21 0186  
                            u206_20 018D                              u206_21 018C  
                            u150_24 0D63                              u150_25 0D61  
                            u151_20 0D6D                              u207_20 019B  
                            u151_21 0D69                              u207_21 019A  
                            u207_25 0197                              u208_20 01AF  
                            u208_21 01AE                              u152_24 0D70  
                            u153_20 0D7F                              u209_20 01CB  
                            u153_21 0D7E                              u209_21 01CA  
                            u209_25 01C7                              u154_20 0D8A  
                            u170_20 067A                              u154_21 0D89  
                            u170_21 0679                              u171_20 0687  
                            u171_21 0686                              u171_25 0683  
                            u172_20 06B8                              u172_21 06B7  
                            u172_25 06B4                              u180_25 058E  
                            u149_20 0CA5                              u181_20 059E  
                            u173_20 0C70                              u149_21 0CA4  
                            u181_21 059D                              u173_21 0C6F  
                            u181_25 059A                              u166_20 0637  
                            u174_20 0C7D                              u190_20 004E  
                            u166_21 0636                              u174_21 0C7C  
                            u190_21 004D                              u182_25 05A6  
                            u167_20 064D                              u183_20 05B2  
                            u175_20 055F                              u191_20 0068  
                            u167_21 064C                              u183_21 05B1  
                            u175_21 055E                              u191_21 0067  
                            u191_25 0064                              u168_20 065C  
                            u184_20 05B7                              u176_20 056A  
                            u192_20 0091                              u168_21 065B  
                            u184_21 05B6                              u176_21 0569  
                            u192_21 0090                              u192_25 008D  
                            u169_20 0674                              u177_20 057B  
                            u193_20 00B0                              u169_21 0673  
                            u177_21 057A                              u193_21 00AF  
                            u169_25 0670                              u194_20 00BE  
                            u194_21 00BD                              u178_25 057F  
                            u194_25 00BA                              u179_20 058D  
                            u195_20 00CF                              u179_21 058C  
                            u195_21 00CE                              u195_25 00CB  
                            u196_20 00ED                              u196_21 00EC  
                            u196_25 00E9                              u197_20 00FA  
                            u197_21 00F9                              u197_25 00F6  
                            u198_20 010E                              u198_21 010D  
                            u198_25 010A                              u199_20 011C  
                            u199_21 011B                              _OSCCON 008F  
                            _SPBRGH 009A                              _SSPADD 0093  
                            _SSPBUF 0013                 _porcentajeSubenBaja 0054  
                     ?_init_memoria 0070                         i1setLED@red 0021  
                 ??_escribirMemoria 002A                    __end_of_getLumen 0BF1  
                  __end_of_cosasSPI 0627                              ___bmul 0CAA  
                            _getCO2 0BD7                           ??___awdiv 002C  
                  __end_of_init_I2C 0CD9                    __end_of_init_ADC 0CF2  
                         ??___lwdiv 002C                           ??___lwmod 0034  
                  __end_of_init_SPI 07FD                              _copias 00AC  
                            _setCO2 06F1                              _initYo 0D8B  
                            _setLED 0741                         setLED@green 0032  
                    ?_init_CCP1_PWM 0070                              _setPWM 0E2E  
                  ___awdiv@quotient 002F                              _printf 0222  
                  __end_of_setLumen 1000                   __end_ofi1___awdiv 05C1  
__end_of_initActuadoresSegunMemoria 0FB5          _initActuadoresSegunMemoria 0F6C  
                      __pdataCOMMON 007D                 i1setLED@luminosidad 007C  
               escribirMemoria@dato 0029                              saved_w 007E  
                            putch@c 0028                      ??_init_memoria 0028  
           __end_of__initialization 0046                 ___bmul@multiplicand 0028  
                 analisisRuido@temp 002A                      __pcstackCOMMON 0070  
                       ?_i2c_rstart 0070                        __pidataBANK0 0C7F  
                      __pidataBANK1 0C45                     i1setPWM@porcent 007C  
                         ?_TRAT_INT 0070                       __end_of_putch 0C33  
                         ?i1___bmul 0070                    i1_spi_write_read 0D57  
                 __end_of_i2c_write 0BFF                      _OPTION_REGbits 0081  
                         ?i1_setLED 007A                           ?i1_setPWM 0070  
                     i1_leerMemoria 0C94                    i1___bmul@product 0072  
                           ??_putch 0028                          __pbssBANK0 005D  
                        __pbssBANK1 00A0                           ?_i2c_read 0070  
                         ?_i2c_stop 0070            i1spi_write_read@one_byte 0072  
            i1spi_write_read@answer 0073                          __pmaintext 03E0  
                           ?___bmul 0028                             ?_getCO2 0028  
                   ??_init_CCP1_PWM 0028                          __pintentry 0004  
                        ??_TRAT_INT 0022                             ?_setCO2 0070  
                           ?_initYo 0070                             ?_setLED 0032  
                           ?_setPWM 0070                          ??i1___bmul 0071  
                           ?_printf 0036                  i1___awdiv@dividend 0072  
                    ?i1_leerMemoria 0070                          ??i1_setLED 007D  
                        ??i1_setPWM 0079           escribirMemoria@confirmado 002A  
                  ??_spi_write_read 0028                           ?_getLumen 0028  
                         ?_cosasSPI 002D                        i1setLED@blue 007B  
                        __stringtab 033D            escribirMemoria@direccion 002C  
                         ?_init_I2C 0070                           ?_init_ADC 0070  
                        ??_i2c_read 0028                   _leoADCHumedadTemp 004C  
                         ?_init_SPI 0070                          ??_i2c_stop 0028  
                         ?_setLumen 0070                  i1___awdiv@quotient 0077  
              spi_write_read@answer 002B                     setLED@direccion 0035  
                           _anINext 00B0                       _deboContinuar 0050  
                           ___awdiv 04F1                             ___lwdiv 0F26  
                           ___lwmod 0E68                        _direccionLED 0056  
                      _direccionPWM 0057                           _ANSELbits 0188  
                           __ptext1 0D8B                             __ptext2 07DD  
                           __ptext3 0BC1                             __ptext4 0C33  
                           __ptext5 0C10                             __ptext6 0BCB  
                           __ptext7 07F9                             __ptext8 0CC1  
                           __ptext9 0BFF                             _copias1 005D  
                 __end_of_init_TMR0 0BD7                   __end_of_init_TMR1 0C21  
                 __end_of_init_TMR2 0C45                __end_of_init_memoria 0BCB  
                         _T1CONbits 0010                             _dpowers 0343  
                         _T2CONbits 0012          i1escribirMemoria@direccion 0074  
                 __end_of_init_uart 07F9                 i1___bmul@multiplier 0073  
                      ??i1_cosasSPI 0078                     _escribirMemoria 047B  
                   setPWM@direccion 0033                          ??_getLumen 002A  
                           clrloop0 0BA8                          ??_cosasSPI 0030  
              end_of_initialization 0046                          ??_init_I2C 0028  
                        ??_init_ADC 0028                          ??_init_SPI 0028  
                 __end_of_wait_MSSP 0BA7                  i2c_read@master_ack 0028  
                        ??_setLumen 002A         i1escribirMemoria@confirmado 0072  
      getnoPrimerArranque@direccion 002B                           _RCSTAbits 0018  
                           printf@c 00D2                             printf@f 00CF  
                __end_ofi1_cosasSPI 06F1                          _porcentaje 0064  
                         _PORTAbits 0005                           _PORTCbits 0007  
                   ??i1_leerMemoria 0070         ?_initActuadoresSegunMemoria 0070  
                 _emitirMisSensores 00B2                           _TRISCbits 0087  
                        _ruidoMedio 00C6                           i1___awdiv 055A  
                       _CCP1CONbits 0017            __end_ofi1_spi_write_read 0D8B  
                         _TXSTAbits 0098                 _getnoPrimerArranque 0D0E  
                      ??_i2c_rstart 0028                      __end_of___bmul 0CC1  
                    __end_of_getCO2 0BE4                       __pidataCOMMON 07FD  
                       _BAUDCTLbits 0187                      __end_of_setCO2 0741  
           __end_of_escribirMemoria 04F1                      __end_of_initYo 0DC0  
                    __end_of_setLED 078F                      __end_of_setPWM 0E68  
              ?_getnoPrimerArranque 0029                       ??_leerMemoria 0028  
                    __end_of_printf 033D                 start_initialization 0015  
                     i1cosasSPI@azu 0076                          ?i1___awdiv 0070  
                         _i2c_write 0BF1                  __end_of_i2c_rstart 0BB8  
                          ??___bmul 0029                          setLED@blue 0033  
                          ??_getCO2 002A                          init_fetch0 0C57  
            spi_write_read@one_byte 002A                         __pdataBANK0 0048  
                       __pdataBANK1 00BA                    _direccionInicial 0067  
                          ??_setCO2 002A                            ??_initYo 0028  
                          ??_setLED 0035                            ??_setPWM 0031  
                      _los5msen15ms 0048                            ??_printf 0042  
                      _los5msen1sT0 00C4               ??_getnoPrimerArranque 002B  
                     _analisisResto 0EA4                       _analisisRuido 0EE3  
                         ___latbits 0002                       __pcstackBANK0 0020  
                     __pcstackBANK1 00CC                   i1spi_write_read@x 0074  
                        ?_i2c_write 0070                 __end_of_leerMemoria 0D0E  
                      _init_memoria 0BC1                    ___lwdiv@dividend 002A  
                          ?___awdiv 0028                            ?___lwdiv 0028  
                          ?___lwmod 0030                   i1___awdiv@divisor 0070  
             __end_of_init_CCP1_PWM 0C10                   i1___awdiv@counter 0075  
                         __pstrings 033D              getnoPrimerArranque@aux 002C  
                    ?_analisisResto 0070                      ?_analisisRuido 0070  
                  ?_escribirMemoria 0029                           _continuar 00B8  
                         _eltimer1H 007D                           _eltimer1L 0058  
             i1escribirMemoria@dato 0071             escribirMemoria@contador 002D  
                 _actualizoLecturas 00AE                           _init_TMR0 0BCB  
                         _init_TMR1 0C10                           _init_TMR2 0C33  
                       ??i1___awdiv 0074                    ___lwdiv@quotient 002E  
                  i2c_read@I2C_data 0029                           _init_uart 07DD  
                         _reciboLED 0061                           _reciboPWM 00B4  
                 interrupt_function 0004           i1escribirMemoria@contador 0075  
                         clear_ram0 0BA7                            _PIE1bits 008C  
                          _PIE2bits 008D               i1___bmul@multiplicand 0070  
                         _wait_MSSP 0B9F                            _PIR1bits 000C  
                          _PIR2bits 000D                            _TRAT_INT 004A  
                         _ruidoBajo 00C8                       i1setLED@green 007A  
                          i1___bmul 0C6A                          _ADCON0bits 001F  
                       __stringbase 0342                          _ADCON1bits 009F  
                         cosasSPI@i 0030                          printf@flag 00CC  
                        printf@prec 00CD                         _leerMemoria 0CF2  
                          i1_setLED 078F                            i1_setPWM 0DF6  
                        ?_init_TMR0 0070                          ?_init_TMR1 0070  
                        ?_init_TMR2 0070                         ??_i2c_write 0028  
                        ?_init_uart 0070                            _i2c_read 0D32  
                          _i2c_stop 0BB8                   ?i1_spi_write_read 0070  
                        _EECON1bits 018C                          ?_wait_MSSP 0070  
                ??i1_spi_write_read 0070                           setLED@red 0036  
                 i2c_write@I2C_data 0028                     ??_analisisResto 002C  
                   ??_analisisRuido 0028                  __end_of__stringtab 0343  
             __end_ofi1_leerMemoria 0CAA                     ___lwdiv@divisor 0028  
                   ___lwdiv@counter 002D                            __ptext10 0CD9  
                          __ptext11 0F6C                            __ptext20 0C21  
                          __ptext12 0E2E                            __ptext21 0E68  
                          __ptext13 0CAA                            __ptext30 0BF1  
                          __ptext22 0F26                            __ptext14 04F1  
                          __ptext31 0BAF                            __ptext23 0D0E  
                          __ptext15 0741                            __ptext40 078F  
                          __ptext32 0D32                            __ptext24 0CF2  
                          __ptext16 047B                            __ptext41 0627  
                          __ptext33 0B9F                            __ptext25 0BB8  
                          __ptext17 05C1                            __ptext42 0C94  
                          __ptext34 0BE4                            __ptext26 0EE3  
                          __ptext18 0DC0                            __ptext43 068D  
                          __ptext35 0BD7                            __ptext27 0EA4  
                          __ptext19 0222                            __ptext44 0D57  
                          __ptext36 004A                            __ptext28 0FB5  
                          __ptext37 0DF6                            __ptext29 06F1  
                          __ptext38 0C6A                            __ptext39 055A  
                          _getLumen 0BE4                            _cosasSPI 05C1  
                          _copias5s 00AA                            _contado1 00CA  
                          _init_I2C 0CC1                            _init_ADC 0CD9  
                          _init_SPI 07F9                       _porcentajeMax 0055  
                     _porcentajeMin 0065                   setLED@luminosidad 0034  
                          _setLumen 0FB5                            _numLedes 004A  
                          _valorI2C 00A6                           printf@val 00D0  
                        _INTCONbits 000B                         ??_init_TMR0 0028  
                       ??_init_TMR1 0028                         ??_init_TMR2 0028  
                          init_ram0 0C5B                         ??_init_uart 0028  
                          intlevel1 0000                 _continuoEscribiendo 00B6  
                  ___lwmod@dividend 0032                           stringcode 033D  
                       ??_wait_MSSP 0028                            printf@ap 00CE  
       __end_of_getnoPrimerArranque 0D32                     ___lwmod@divisor 0030  
                   ___lwmod@counter 0035                            stringdir 033D  
                          stringtab 033D                         _porcentajeC 0053  
                       _SSPCON2bits 0091                      _spi_write_read 0DC0  
                        _SSPCONbits 0014                   i1setLED@direccion 0020  
