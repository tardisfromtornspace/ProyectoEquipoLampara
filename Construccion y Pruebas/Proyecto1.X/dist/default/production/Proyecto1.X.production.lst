

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Nov 22 11:39:22 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	intentry,global,class=CODE,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    68                           	dabs	1,0x7E,2
    69     0000                     
    70                           ; Version 2.40
    71                           ; Generated 17/11/2021 GMT
    72                           ; 
    73                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution. Publication is not required when
    87                           ;        this file is used in an embedded application.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC16F886 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105     0000                     	;# 
   106     0001                     	;# 
   107     0002                     	;# 
   108     0003                     	;# 
   109     0004                     	;# 
   110     0005                     	;# 
   111     0006                     	;# 
   112     0007                     	;# 
   113     0009                     	;# 
   114     000A                     	;# 
   115     000B                     	;# 
   116     000C                     	;# 
   117     000D                     	;# 
   118     000E                     	;# 
   119     000E                     	;# 
   120     000F                     	;# 
   121     0010                     	;# 
   122     0011                     	;# 
   123     0012                     	;# 
   124     0013                     	;# 
   125     0014                     	;# 
   126     0015                     	;# 
   127     0015                     	;# 
   128     0016                     	;# 
   129     0017                     	;# 
   130     0018                     	;# 
   131     0019                     	;# 
   132     001A                     	;# 
   133     001B                     	;# 
   134     001B                     	;# 
   135     001C                     	;# 
   136     001D                     	;# 
   137     001E                     	;# 
   138     001F                     	;# 
   139     0081                     	;# 
   140     0085                     	;# 
   141     0086                     	;# 
   142     0087                     	;# 
   143     0089                     	;# 
   144     008C                     	;# 
   145     008D                     	;# 
   146     008E                     	;# 
   147     008F                     	;# 
   148     0090                     	;# 
   149     0091                     	;# 
   150     0092                     	;# 
   151     0093                     	;# 
   152     0093                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0095                     	;# 
   156     0096                     	;# 
   157     0097                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009A                     	;# 
   161     009B                     	;# 
   162     009C                     	;# 
   163     009D                     	;# 
   164     009E                     	;# 
   165     009F                     	;# 
   166     0105                     	;# 
   167     0107                     	;# 
   168     0108                     	;# 
   169     0109                     	;# 
   170     010C                     	;# 
   171     010C                     	;# 
   172     010D                     	;# 
   173     010E                     	;# 
   174     010F                     	;# 
   175     0185                     	;# 
   176     0187                     	;# 
   177     0188                     	;# 
   178     0189                     	;# 
   179     018C                     	;# 
   180     018D                     	;# 
   181     0000                     	;# 
   182     0001                     	;# 
   183     0002                     	;# 
   184     0003                     	;# 
   185     0004                     	;# 
   186     0005                     	;# 
   187     0006                     	;# 
   188     0007                     	;# 
   189     0009                     	;# 
   190     000A                     	;# 
   191     000B                     	;# 
   192     000C                     	;# 
   193     000D                     	;# 
   194     000E                     	;# 
   195     000E                     	;# 
   196     000F                     	;# 
   197     0010                     	;# 
   198     0011                     	;# 
   199     0012                     	;# 
   200     0013                     	;# 
   201     0014                     	;# 
   202     0015                     	;# 
   203     0015                     	;# 
   204     0016                     	;# 
   205     0017                     	;# 
   206     0018                     	;# 
   207     0019                     	;# 
   208     001A                     	;# 
   209     001B                     	;# 
   210     001B                     	;# 
   211     001C                     	;# 
   212     001D                     	;# 
   213     001E                     	;# 
   214     001F                     	;# 
   215     0081                     	;# 
   216     0085                     	;# 
   217     0086                     	;# 
   218     0087                     	;# 
   219     0089                     	;# 
   220     008C                     	;# 
   221     008D                     	;# 
   222     008E                     	;# 
   223     008F                     	;# 
   224     0090                     	;# 
   225     0091                     	;# 
   226     0092                     	;# 
   227     0093                     	;# 
   228     0093                     	;# 
   229     0093                     	;# 
   230     0094                     	;# 
   231     0095                     	;# 
   232     0096                     	;# 
   233     0097                     	;# 
   234     0098                     	;# 
   235     0099                     	;# 
   236     009A                     	;# 
   237     009B                     	;# 
   238     009C                     	;# 
   239     009D                     	;# 
   240     009E                     	;# 
   241     009F                     	;# 
   242     0105                     	;# 
   243     0107                     	;# 
   244     0108                     	;# 
   245     0109                     	;# 
   246     010C                     	;# 
   247     010C                     	;# 
   248     010D                     	;# 
   249     010E                     	;# 
   250     010F                     	;# 
   251     0185                     	;# 
   252     0187                     	;# 
   253     0188                     	;# 
   254     0189                     	;# 
   255     018C                     	;# 
   256     018D                     	;# 
   257     0000                     	;# 
   258     0001                     	;# 
   259     0002                     	;# 
   260     0003                     	;# 
   261     0004                     	;# 
   262     0005                     	;# 
   263     0006                     	;# 
   264     0007                     	;# 
   265     0009                     	;# 
   266     000A                     	;# 
   267     000B                     	;# 
   268     000C                     	;# 
   269     000D                     	;# 
   270     000E                     	;# 
   271     000E                     	;# 
   272     000F                     	;# 
   273     0010                     	;# 
   274     0011                     	;# 
   275     0012                     	;# 
   276     0013                     	;# 
   277     0014                     	;# 
   278     0015                     	;# 
   279     0015                     	;# 
   280     0016                     	;# 
   281     0017                     	;# 
   282     0018                     	;# 
   283     0019                     	;# 
   284     001A                     	;# 
   285     001B                     	;# 
   286     001B                     	;# 
   287     001C                     	;# 
   288     001D                     	;# 
   289     001E                     	;# 
   290     001F                     	;# 
   291     0081                     	;# 
   292     0085                     	;# 
   293     0086                     	;# 
   294     0087                     	;# 
   295     0089                     	;# 
   296     008C                     	;# 
   297     008D                     	;# 
   298     008E                     	;# 
   299     008F                     	;# 
   300     0090                     	;# 
   301     0091                     	;# 
   302     0092                     	;# 
   303     0093                     	;# 
   304     0093                     	;# 
   305     0093                     	;# 
   306     0094                     	;# 
   307     0095                     	;# 
   308     0096                     	;# 
   309     0097                     	;# 
   310     0098                     	;# 
   311     0099                     	;# 
   312     009A                     	;# 
   313     009B                     	;# 
   314     009C                     	;# 
   315     009D                     	;# 
   316     009E                     	;# 
   317     009F                     	;# 
   318     0105                     	;# 
   319     0107                     	;# 
   320     0108                     	;# 
   321     0109                     	;# 
   322     010C                     	;# 
   323     010C                     	;# 
   324     010D                     	;# 
   325     010E                     	;# 
   326     010F                     	;# 
   327     0185                     	;# 
   328     0187                     	;# 
   329     0188                     	;# 
   330     0189                     	;# 
   331     018C                     	;# 
   332     018D                     	;# 
   333     0000                     	;# 
   334     0001                     	;# 
   335     0002                     	;# 
   336     0003                     	;# 
   337     0004                     	;# 
   338     0005                     	;# 
   339     0006                     	;# 
   340     0007                     	;# 
   341     0009                     	;# 
   342     000A                     	;# 
   343     000B                     	;# 
   344     000C                     	;# 
   345     000D                     	;# 
   346     000E                     	;# 
   347     000E                     	;# 
   348     000F                     	;# 
   349     0010                     	;# 
   350     0011                     	;# 
   351     0012                     	;# 
   352     0013                     	;# 
   353     0014                     	;# 
   354     0015                     	;# 
   355     0015                     	;# 
   356     0016                     	;# 
   357     0017                     	;# 
   358     0018                     	;# 
   359     0019                     	;# 
   360     001A                     	;# 
   361     001B                     	;# 
   362     001B                     	;# 
   363     001C                     	;# 
   364     001D                     	;# 
   365     001E                     	;# 
   366     001F                     	;# 
   367     0081                     	;# 
   368     0085                     	;# 
   369     0086                     	;# 
   370     0087                     	;# 
   371     0089                     	;# 
   372     008C                     	;# 
   373     008D                     	;# 
   374     008E                     	;# 
   375     008F                     	;# 
   376     0090                     	;# 
   377     0091                     	;# 
   378     0092                     	;# 
   379     0093                     	;# 
   380     0093                     	;# 
   381     0093                     	;# 
   382     0094                     	;# 
   383     0095                     	;# 
   384     0096                     	;# 
   385     0097                     	;# 
   386     0098                     	;# 
   387     0099                     	;# 
   388     009A                     	;# 
   389     009B                     	;# 
   390     009C                     	;# 
   391     009D                     	;# 
   392     009E                     	;# 
   393     009F                     	;# 
   394     0105                     	;# 
   395     0107                     	;# 
   396     0108                     	;# 
   397     0109                     	;# 
   398     010C                     	;# 
   399     010C                     	;# 
   400     010D                     	;# 
   401     010E                     	;# 
   402     010F                     	;# 
   403     0185                     	;# 
   404     0187                     	;# 
   405     0188                     	;# 
   406     0189                     	;# 
   407     018C                     	;# 
   408     018D                     	;# 
   409                           
   410                           	psect	idataCOMMON
   411     0003                     __pidataCOMMON:
   412                           
   413                           ;initializer for _eltimer1H
   414     0003  3461               	retlw	97
   415                           
   416                           	psect	idataBANK0
   417     0CCB                     __pidataBANK0:
   418                           
   419                           ;initializer for _los5msen15ms
   420     0CCB  3403               	retlw	3
   421     0CCC  3400               	retlw	0
   422                           
   423                           ;initializer for _leoADCHumedadTemp
   424     0CCD  3402               	retlw	2
   425     0CCE  3400               	retlw	0
   426                           
   427                           ;initializer for _anI
   428     0CCF  3401               	retlw	1
   429     0CD0  3400               	retlw	0
   430                           
   431                           ;initializer for _elPR2
   432     0CD1  34A7               	retlw	167
   433                           
   434                           ;initializer for _porcentajeC
   435     0CD2  34A7               	retlw	167
   436                           
   437                           ;initializer for _porcentajeSubenBaja
   438     0CD3  3401               	retlw	1
   439                           
   440                           ;initializer for _porcentajeMax
   441     0CD4  34A7               	retlw	167
   442                           
   443                           ;initializer for _direccionLED
   444     0CD5  3402               	retlw	2
   445                           
   446                           ;initializer for _direccionPWM
   447     0CD6  3401               	retlw	1
   448                           
   449                           ;initializer for _eltimer1L
   450     0CD7  34A9               	retlw	169
   451                           
   452                           ;initializer for _miLED
   453     0CD8  34FF               	retlw	255
   454     0CD9  34FF               	retlw	255
   455     0CDA  34FF               	retlw	255
   456     0CDB  341F               	retlw	31
   457                           
   458                           	psect	idataBANK1
   459     0D3E                     __pidataBANK1:
   460                           
   461                           ;initializer for _emitoSensores
   462     0D3E  34FF               	retlw	255
   463     0D3F  34FF               	retlw	255
   464     0D40  34FF               	retlw	255
   465     0D41  34FF               	retlw	255
   466     0D42  34FF               	retlw	255
   467     0D43  34FF               	retlw	255
   468     0D44  34FF               	retlw	255
   469     0D45  34FF               	retlw	255
   470     0D46  34FF               	retlw	255
   471     0D47  34FF               	retlw	255
   472                           
   473                           ;initializer for _los5msen1sT0
   474     0D48  3464               	retlw	100
   475     0D49  3400               	retlw	0
   476                           
   477                           ;initializer for _numLedes
   478     0D4A  340A               	retlw	10
   479     0D4B  3400               	retlw	0
   480                           
   481                           ;initializer for _ruidoMedio
   482     0D4C  3484               	retlw	132
   483     0D4D  3403               	retlw	3
   484                           
   485                           ;initializer for _ruidoBajo
   486     0D4E  3490               	retlw	144
   487     0D4F  3401               	retlw	1
   488                           
   489                           ;initializer for _contado1
   490     0D50  34A8               	retlw	168
   491     0D51  3461               	retlw	97
   492                           
   493                           ;initializer for _deboContinuar
   494     0D52  3401               	retlw	1
   495     0D53  3400               	retlw	0
   496                           
   497                           	psect	strings
   498     067B                     __pstrings:
   499     067B                     stringtab:
   500     067B                     __stringtab:
   501     067B                     stringcode:	
   502                           ;	String table - string pointers are 1 byte each
   503                           
   504     067B                     stringdir:
   505     067B  3006               	movlw	high stringdir
   506     067C  008A               	movwf	10
   507     067D  0804               	movf	4,w
   508     067E  0A84               	incf	4,f
   509     067F  0782               	addwf	2,f
   510     0680                     __stringbase:
   511     0680  3400               	retlw	0
   512     0681                     __end_of__stringtab:
   513     0681                     _dpowers:
   514     0681  3401               	retlw	1
   515     0682  3400               	retlw	0
   516     0683  340A               	retlw	10
   517     0684  3400               	retlw	0
   518     0685  3464               	retlw	100
   519     0686  3400               	retlw	0
   520     0687  34E8               	retlw	232
   521     0688  3403               	retlw	3
   522     0689  3410               	retlw	16
   523     068A  3427               	retlw	39
   524     068B                     __end_of_dpowers:
   525     001A                     _RCREG	set	26
   526     001E                     _ADRESH	set	30
   527     0019                     _TXREG	set	25
   528     000D                     _PIR2bits	set	13
   529     001F                     _ADCON0bits	set	31
   530     0014                     _SSPCONbits	set	20
   531     0018                     _RCSTAbits	set	24
   532     0015                     _CCPR1L	set	21
   533     0017                     _CCP1CONbits	set	23
   534     0012                     _T2CONbits	set	18
   535     0010                     _T1CONbits	set	16
   536     000E                     _TMR1L	set	14
   537     000F                     _TMR1H	set	15
   538     000B                     _INTCONbits	set	11
   539     0001                     _TMR0	set	1
   540     0005                     _PORTAbits	set	5
   541     0007                     _PORTCbits	set	7
   542     0013                     _SSPBUF	set	19
   543     000C                     _PIR1bits	set	12
   544     0064                     _TXIF	set	100
   545     009E                     _ADRESL	set	158
   546     0087                     _TRISC	set	135
   547     0086                     _TRISB	set	134
   548     008F                     _OSCCON	set	143
   549     008D                     _PIE2bits	set	141
   550     009F                     _ADCON1bits	set	159
   551     0085                     _TRISA	set	133
   552     0093                     _SSPADD	set	147
   553     0099                     _SPBRG	set	153
   554     009A                     _SPBRGH	set	154
   555     0098                     _TXSTAbits	set	152
   556     0087                     _TRISCbits	set	135
   557     0092                     _PR2	set	146
   558     008C                     _PIE1bits	set	140
   559     0081                     _OPTION_REGbits	set	129
   560     0091                     _SSPCON2bits	set	145
   561     010C                     _EEDAT	set	268
   562     010D                     _EEADR	set	269
   563     010F                     _EEADRH	set	271
   564     010E                     _EEDATH	set	270
   565     018D                     _EECON2	set	397
   566     018C                     _EECON1bits	set	396
   567     0188                     _ANSELbits	set	392
   568     0187                     _BAUDCTLbits	set	391
   569     0188                     _ANSEL	set	392
   570     068B                     STR_1:
   571     068B  3452               	retlw	82	;'R'
   572     068C  3475               	retlw	117	;'u'
   573     068D  3469               	retlw	105	;'i'
   574     068E  3464               	retlw	100	;'d'
   575     068F  346F               	retlw	111	;'o'
   576     0690  3420               	retlw	32	;' '
   577     0691  343D               	retlw	61	;'='
   578     0692  3420               	retlw	32	;' '
   579     0693  3425               	retlw	37	;'%'
   580     0694  3464               	retlw	100	;'d'
   581     0695  342C               	retlw	44	;','
   582     0696  3420               	retlw	32	;' '
   583     0697  3468               	retlw	104	;'h'
   584     0698  3475               	retlw	117	;'u'
   585     0699  346D               	retlw	109	;'m'
   586     069A  3465               	retlw	101	;'e'
   587     069B  3464               	retlw	100	;'d'
   588     069C  3461               	retlw	97	;'a'
   589     069D  3464               	retlw	100	;'d'
   590     069E  3420               	retlw	32	;' '
   591     069F  343D               	retlw	61	;'='
   592     06A0  3420               	retlw	32	;' '
   593     06A1  3425               	retlw	37	;'%'
   594     06A2  3464               	retlw	100	;'d'
   595     06A3  342C               	retlw	44	;','
   596     06A4  3420               	retlw	32	;' '
   597     06A5  3474               	retlw	116	;'t'
   598     06A6  3465               	retlw	101	;'e'
   599     06A7  346D               	retlw	109	;'m'
   600     06A8  3470               	retlw	112	;'p'
   601     06A9  3465               	retlw	101	;'e'
   602     06AA  3472               	retlw	114	;'r'
   603     06AB  3461               	retlw	97	;'a'
   604     06AC  3474               	retlw	116	;'t'
   605     06AD  3475               	retlw	117	;'u'
   606     06AE  3472               	retlw	114	;'r'
   607     06AF  3461               	retlw	97	;'a'
   608     06B0  3420               	retlw	32	;' '
   609     06B1  343D               	retlw	61	;'='
   610     06B2  3420               	retlw	32	;' '
   611     06B3  3425               	retlw	37	;'%'
   612     06B4  3464               	retlw	100	;'d'
   613     06B5  342C               	retlw	44	;','
   614     06B6  3420               	retlw	32	;' '
   615     06B7  3443               	retlw	67	;'C'
   616     06B8  344F               	retlw	79	;'O'
   617     06B9  3432               	retlw	50	;'2'
   618     06BA  3420               	retlw	32	;' '
   619     06BB  343D               	retlw	61	;'='
   620     06BC  3420               	retlw	32	;' '
   621     06BD  3425               	retlw	37	;'%'
   622     06BE  3464               	retlw	100	;'d'
   623     06BF  342C               	retlw	44	;','
   624     06C0  3420               	retlw	32	;' '
   625     06C1  344C               	retlw	76	;'L'
   626     06C2  3475               	retlw	117	;'u'
   627     06C3  346D               	retlw	109	;'m'
   628     06C4  3469               	retlw	105	;'i'
   629     06C5  346E               	retlw	110	;'n'
   630     06C6  346F               	retlw	111	;'o'
   631     06C7  3473               	retlw	115	;'s'
   632     06C8  3469               	retlw	105	;'i'
   633     06C9  3464               	retlw	100	;'d'
   634     06CA  3461               	retlw	97	;'a'
   635     06CB  3464               	retlw	100	;'d'
   636     06CC  3420               	retlw	32	;' '
   637     06CD  343D               	retlw	61	;'='
   638     06CE  3420               	retlw	32	;' '
   639     06CF  3425               	retlw	37	;'%'
   640     06D0  3464               	retlw	100	;'d'
   641     06D1  3420               	retlw	32	;' '
   642     06D2  340D               	retlw	13
   643     06D3  340A               	retlw	10
   644     06D4  3400               	retlw	0
   645                           
   646                           	psect	cinit
   647     0015                     start_initialization:	
   648                           ; #config settings
   649                           
   650     0015                     __initialization:
   651                           
   652                           ; Initialize objects allocated to BANK1
   653     0015  1383               	bcf	3,7	;select IRP bank0
   654     0016  30CE               	movlw	low (__pdataBANK1+22)
   655     0017  00FD               	movwf	btemp+-1
   656     0018  300D               	movlw	high __pidataBANK1
   657     0019  00FE               	movwf	btemp
   658     001A  303E               	movlw	low __pidataBANK1
   659     001B  00FF               	movwf	btemp+1
   660     001C  30B8               	movlw	low __pdataBANK1
   661     001D  0084               	movwf	4
   662     001E  120A  158A  2504  120A  118A  	fcall	init_ram0
   663                           
   664                           ; Initialize objects allocated to BANK0
   665     0023  3057               	movlw	low (__pdataBANK0+17)
   666     0024  00FD               	movwf	btemp+-1
   667     0025  300C               	movlw	high __pidataBANK0
   668     0026  00FE               	movwf	btemp
   669     0027  30CB               	movlw	low __pidataBANK0
   670     0028  00FF               	movwf	btemp+1
   671     0029  3046               	movlw	low __pdataBANK0
   672     002A  0084               	movwf	4
   673     002B  120A  158A  2504  120A  118A  	fcall	init_ram0
   674                           
   675                           ; Initialize objects allocated to COMMON
   676     0030  120A  118A  2003  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   677     0035  00FD               	movwf	__pdataCOMMON& (0+127)
   678                           
   679                           ; Clear objects allocated to BANK1
   680     0036  30A0               	movlw	low __pbssBANK1
   681     0037  0084               	movwf	4
   682     0038  30B8               	movlw	low (__pbssBANK1+24)
   683     0039  120A  158A  2448  120A  118A  	fcall	clear_ram0
   684                           
   685                           ; Clear objects allocated to BANK0
   686     003E  3057               	movlw	low __pbssBANK0
   687     003F  0084               	movwf	4
   688     0040  3064               	movlw	low (__pbssBANK0+13)
   689     0041  120A  158A  2448  120A  118A  	fcall	clear_ram0
   690     0046                     end_of_initialization:	
   691                           ;End of C runtime variable initialization code
   692                           
   693     0046                     __end_of__initialization:
   694     0046  0183               	clrf	3
   695     0047  120A  118A  2B1B   	ljmp	_main	;jump to C main() function
   696                           
   697                           	psect	dataCOMMON
   698     007D                     __pdataCOMMON:
   699     007D                     _eltimer1H:
   700     007D                     	ds	1
   701                           
   702                           	psect	bssBANK0
   703     0057                     __pbssBANK0:
   704     0057                     _copias1:
   705     0057                     	ds	2
   706     0059                     _ruidoMasAlto:
   707     0059                     	ds	2
   708     005B                     _reciboLED:
   709     005B                     	ds	2
   710     005D                     _continuoEscribiendo:
   711     005D                     	ds	2
   712     005F                     _x:
   713     005F                     	ds	1
   714     0060                     _porcentaje:
   715     0060                     	ds	1
   716     0061                     _porcentajeMin:
   717     0061                     	ds	1
   718     0062                     _pPWM:
   719     0062                     	ds	1
   720     0063                     _direccionInicial:
   721     0063                     	ds	1
   722                           
   723                           	psect	dataBANK0
   724     0046                     __pdataBANK0:
   725     0046                     _los5msen15ms:
   726     0046                     	ds	2
   727     0048                     _leoADCHumedadTemp:
   728     0048                     	ds	2
   729     004A                     _anI:
   730     004A                     	ds	2
   731     004C                     _elPR2:
   732     004C                     	ds	1
   733     004D                     _porcentajeC:
   734     004D                     	ds	1
   735     004E                     _porcentajeSubenBaja:
   736     004E                     	ds	1
   737     004F                     _porcentajeMax:
   738     004F                     	ds	1
   739     0050                     _direccionLED:
   740     0050                     	ds	1
   741     0051                     _direccionPWM:
   742     0051                     	ds	1
   743     0052                     _eltimer1L:
   744     0052                     	ds	1
   745     0053                     _miLED:
   746     0053                     	ds	4
   747                           
   748                           	psect	bssBANK1
   749     00A0                     __pbssBANK1:
   750     00A0                     _valor:
   751     00A0                     	ds	6
   752     00A6                     _valorI2C:
   753     00A6                     	ds	4
   754     00AA                     _copias5s:
   755     00AA                     	ds	2
   756     00AC                     _copias:
   757     00AC                     	ds	2
   758     00AE                     _actualizoLecturas:
   759     00AE                     	ds	2
   760     00B0                     _anINext:
   761     00B0                     	ds	2
   762     00B2                     _emitirMisSensores:
   763     00B2                     	ds	2
   764     00B4                     _reciboPWM:
   765     00B4                     	ds	2
   766     00B6                     _continuar:
   767     00B6                     	ds	2
   768                           
   769                           	psect	dataBANK1
   770     00B8                     __pdataBANK1:
   771     00B8                     _emitoSensores:
   772     00B8                     	ds	10
   773     00C2                     _los5msen1sT0:
   774     00C2                     	ds	2
   775     00C4                     _numLedes:
   776     00C4                     	ds	2
   777     00C6                     _ruidoMedio:
   778     00C6                     	ds	2
   779     00C8                     _ruidoBajo:
   780     00C8                     	ds	2
   781     00CA                     _contado1:
   782     00CA                     	ds	2
   783     00CC                     _deboContinuar:
   784     00CC                     	ds	2
   785                           
   786                           	psect	inittext
   787     0D00                     init_fetch0:	
   788                           ;	Called with low address in FSR and high address in W
   789                           
   790     0D00  087E               	movf	btemp,w
   791     0D01  008A               	movwf	10
   792     0D02  087F               	movf	btemp+1,w
   793     0D03  0082               	movwf	2
   794     0D04                     init_ram0:	
   795                           ;Called with:
   796                           ;	high address of idata address in btemp 
   797                           ;	low address of idata address in btemp+1 
   798                           ;	low address of data in FSR
   799                           ;	high address + 1 of data in btemp-1
   800                           
   801     0D04  120A  158A  2500  120A  158A  	fcall	init_fetch0
   802     0D09  0080               	movwf	0
   803     0D0A  0A84               	incf	4,f
   804     0D0B  0804               	movf	4,w
   805     0D0C  067D               	xorwf	btemp+-1,w
   806     0D0D  1903               	btfsc	3,2
   807     0D0E  3400               	retlw	0
   808     0D0F  0AFF               	incf	btemp+1,f
   809     0D10  1903               	btfsc	3,2
   810     0D11  0AFE               	incf	btemp,f
   811     0D12  2D04               	goto	init_ram0
   812                           
   813                           	psect	clrtext
   814     0C48                     clear_ram0:	
   815                           ;	Called with FSR containing the base address, and
   816                           ;	W with the last address+1
   817                           
   818     0C48  0064               	clrwdt	;clear the watchdog before getting into this loop
   819     0C49                     clrloop0:
   820     0C49  0180               	clrf	0	;clear RAM location pointed to by FSR
   821     0C4A  0A84               	incf	4,f	;increment pointer
   822     0C4B  0604               	xorwf	4,w	;XOR with final address
   823     0C4C  1903               	btfsc	3,2	;have we reached the end yet?
   824     0C4D  3400               	retlw	0	;all done for this memory range, return
   825     0C4E  0604               	xorwf	4,w	;XOR again to restore value
   826     0C4F  2C49               	goto	clrloop0	;do the next byte
   827                           
   828                           	psect	cstackBANK1
   829     00CE                     __pcstackBANK1:
   830     00CE                     ??_printf:
   831                           
   832                           ; 1 bytes @ 0x0
   833     00CE                     	ds	3
   834     00D1                     printf@ap:
   835                           
   836                           ; 1 bytes @ 0x3
   837     00D1                     	ds	1
   838     00D2                     printf@flag:
   839                           
   840                           ; 1 bytes @ 0x4
   841     00D2                     	ds	1
   842     00D3                     printf@f:
   843                           
   844                           ; 1 bytes @ 0x5
   845     00D3                     	ds	1
   846     00D4                     printf@prec:
   847                           
   848                           ; 1 bytes @ 0x6
   849     00D4                     	ds	1
   850     00D5                     printf@val:
   851                           
   852                           ; 2 bytes @ 0x7
   853     00D5                     	ds	2
   854     00D7                     printf@c:
   855                           
   856                           ; 1 bytes @ 0x9
   857     00D7                     	ds	1
   858     00D8                     main@ruidoAux:
   859                           
   860                           ; 1 bytes @ 0xA
   861     00D8                     	ds	1
   862                           
   863                           	psect	cstackCOMMON
   864     0070                     __pcstackCOMMON:
   865     0070                     ?_wait_MSSP:
   866     0070                     ?_i2c_start:	
   867                           ; 1 bytes @ 0x0
   868                           
   869     0070                     ?_i2c_stop:	
   870                           ; 1 bytes @ 0x0
   871                           
   872     0070                     ?_i2c_rstart:	
   873                           ; 1 bytes @ 0x0
   874                           
   875     0070                     ?_i2c_write:	
   876                           ; 1 bytes @ 0x0
   877                           
   878     0070                     ?_i2c_read:	
   879                           ; 1 bytes @ 0x0
   880                           
   881     0070                     ?_spi_write_read:	
   882                           ; 1 bytes @ 0x0
   883                           
   884     0070                     ?_init_TMR0:	
   885                           ; 1 bytes @ 0x0
   886                           
   887     0070                     ?_init_TMR1:	
   888                           ; 1 bytes @ 0x0
   889                           
   890     0070                     ?_init_TMR2:	
   891                           ; 1 bytes @ 0x0
   892                           
   893     0070                     ?_init_CCP1_PWM:	
   894                           ; 1 bytes @ 0x0
   895                           
   896     0070                     ?_init_uart:	
   897                           ; 1 bytes @ 0x0
   898                           
   899     0070                     ?_init_I2C:	
   900                           ; 1 bytes @ 0x0
   901                           
   902     0070                     ?_init_SPI:	
   903                           ; 1 bytes @ 0x0
   904                           
   905     0070                     ?_init_ADC:	
   906                           ; 1 bytes @ 0x0
   907                           
   908     0070                     ?_init_memoria:	
   909                           ; 1 bytes @ 0x0
   910                           
   911     0070                     ?_putch:	
   912                           ; 1 bytes @ 0x0
   913                           
   914     0070                     ?_setLumen:	
   915                           ; 1 bytes @ 0x0
   916                           
   917     0070                     ?_setCO2:	
   918                           ; 1 bytes @ 0x0
   919                           
   920     0070                     ?_leerMemoria:	
   921                           ; 1 bytes @ 0x0
   922                           
   923     0070                     ?_initYo:	
   924                           ; 1 bytes @ 0x0
   925                           
   926     0070                     ?_getnoPrimerArranque:	
   927                           ; 1 bytes @ 0x0
   928                           
   929     0070                     ?_setPWM:	
   930                           ; 1 bytes @ 0x0
   931                           
   932     0070                     ?_analisisRuido:	
   933                           ; 1 bytes @ 0x0
   934                           
   935     0070                     ?_analisisResto:	
   936                           ; 1 bytes @ 0x0
   937                           
   938     0070                     ?_initActuadoresSegunMemoria:	
   939                           ; 1 bytes @ 0x0
   940                           
   941     0070                     ?_TRAT_INT:	
   942                           ; 1 bytes @ 0x0
   943                           
   944     0070                     ?_main:	
   945                           ; 1 bytes @ 0x0
   946                           
   947     0070                     ?i1_spi_write_read:	
   948                           ; 1 bytes @ 0x0
   949                           
   950     0070                     ??i1_spi_write_read:	
   951                           ; 1 bytes @ 0x0
   952                           
   953     0070                     ?i1_leerMemoria:	
   954                           ; 1 bytes @ 0x0
   955                           
   956     0070                     ??i1_leerMemoria:	
   957                           ; 1 bytes @ 0x0
   958                           
   959     0070                     ?i1_setPWM:	
   960                           ; 1 bytes @ 0x0
   961                           
   962     0070                     ?i1___bmul:	
   963                           ; 1 bytes @ 0x0
   964                           
   965     0070                     ?i1___awdiv:	
   966                           ; 1 bytes @ 0x0
   967                           
   968     0070                     i1leerMemoria@direccion:	
   969                           ; 2 bytes @ 0x0
   970                           
   971     0070                     i1___bmul@multiplicand:	
   972                           ; 1 bytes @ 0x0
   973                           
   974     0070                     i1___awdiv@divisor:	
   975                           ; 1 bytes @ 0x0
   976                           
   977                           
   978                           ; 2 bytes @ 0x0
   979     0070                     	ds	1
   980     0071                     ??i1___bmul:
   981     0071                     ?i1_escribirMemoria:	
   982                           ; 1 bytes @ 0x1
   983                           
   984     0071                     i1escribirMemoria@dato:	
   985                           ; 2 bytes @ 0x1
   986                           
   987                           
   988                           ; 1 bytes @ 0x1
   989     0071                     	ds	1
   990     0072                     ??i1_escribirMemoria:
   991     0072                     i1spi_write_read@one_byte:	
   992                           ; 1 bytes @ 0x2
   993                           
   994     0072                     i1___bmul@product:	
   995                           ; 1 bytes @ 0x2
   996                           
   997     0072                     i1escribirMemoria@confirmado:	
   998                           ; 1 bytes @ 0x2
   999                           
  1000     0072                     i1___awdiv@dividend:	
  1001                           ; 2 bytes @ 0x2
  1002                           
  1003                           
  1004                           ; 2 bytes @ 0x2
  1005     0072                     	ds	1
  1006     0073                     i1spi_write_read@answer:
  1007     0073                     i1___bmul@multiplier:	
  1008                           ; 1 bytes @ 0x3
  1009                           
  1010                           
  1011                           ; 1 bytes @ 0x3
  1012     0073                     	ds	1
  1013     0074                     ??i1___awdiv:
  1014     0074                     i1spi_write_read@x:	
  1015                           ; 1 bytes @ 0x4
  1016                           
  1017     0074                     i1escribirMemoria@direccion:	
  1018                           ; 1 bytes @ 0x4
  1019                           
  1020                           
  1021                           ; 1 bytes @ 0x4
  1022     0074                     	ds	1
  1023     0075                     ?i1_cosasSPI:
  1024     0075                     i1cosasSPI@verd:	
  1025                           ; 1 bytes @ 0x5
  1026                           
  1027     0075                     i1___awdiv@counter:	
  1028                           ; 1 bytes @ 0x5
  1029                           
  1030     0075                     i1escribirMemoria@contador:	
  1031                           ; 1 bytes @ 0x5
  1032                           
  1033                           
  1034                           ; 2 bytes @ 0x5
  1035     0075                     	ds	1
  1036     0076                     i1cosasSPI@azu:
  1037     0076                     i1___awdiv@sign:	
  1038                           ; 1 bytes @ 0x6
  1039                           
  1040                           
  1041                           ; 1 bytes @ 0x6
  1042     0076                     	ds	1
  1043     0077                     i1cosasSPI@lumi:
  1044     0077                     i1___awdiv@quotient:	
  1045                           ; 1 bytes @ 0x7
  1046                           
  1047                           
  1048                           ; 2 bytes @ 0x7
  1049     0077                     	ds	1
  1050     0078                     ??i1_cosasSPI:
  1051     0078                     i1cosasSPI@roj:	
  1052                           ; 1 bytes @ 0x8
  1053                           
  1054                           
  1055                           ; 1 bytes @ 0x8
  1056     0078                     	ds	1
  1057     0079                     ??i1_setPWM:
  1058     0079                     i1cosasSPI@lumo:	
  1059                           ; 1 bytes @ 0x9
  1060                           
  1061                           
  1062                           ; 1 bytes @ 0x9
  1063     0079                     	ds	1
  1064     007A                     i1cosasSPI@i:
  1065                           
  1066                           ; 2 bytes @ 0xA
  1067     007A                     	ds	1
  1068     007B                     i1setPWM@porcent:
  1069                           
  1070                           ; 1 bytes @ 0xB
  1071     007B                     	ds	1
  1072     007C                     ??i1_setLED:
  1073     007C                     i1setLED@red:	
  1074                           ; 1 bytes @ 0xC
  1075                           
  1076                           
  1077                           ; 1 bytes @ 0xC
  1078     007C                     	ds	1
  1079                           
  1080                           	psect	cstackBANK0
  1081     0020                     __pcstackBANK0:
  1082     0020                     ?i1_setLED:
  1083     0020                     i1setLED@green:	
  1084                           ; 1 bytes @ 0x0
  1085                           
  1086                           
  1087                           ; 1 bytes @ 0x0
  1088     0020                     	ds	1
  1089     0021                     i1setLED@blue:
  1090                           
  1091                           ; 1 bytes @ 0x1
  1092     0021                     	ds	1
  1093     0022                     i1setLED@luminosidad:
  1094                           
  1095                           ; 1 bytes @ 0x2
  1096     0022                     	ds	1
  1097     0023                     ??_TRAT_INT:
  1098                           
  1099                           ; 1 bytes @ 0x3
  1100     0023                     	ds	9
  1101     002C                     ??_wait_MSSP:
  1102     002C                     ??_i2c_start:	
  1103                           ; 1 bytes @ 0xC
  1104                           
  1105     002C                     ??_i2c_stop:	
  1106                           ; 1 bytes @ 0xC
  1107                           
  1108     002C                     ??_i2c_rstart:	
  1109                           ; 1 bytes @ 0xC
  1110                           
  1111     002C                     ??_i2c_write:	
  1112                           ; 1 bytes @ 0xC
  1113                           
  1114     002C                     ??_i2c_read:	
  1115                           ; 1 bytes @ 0xC
  1116                           
  1117     002C                     ??_spi_write_read:	
  1118                           ; 1 bytes @ 0xC
  1119                           
  1120     002C                     ??_init_TMR0:	
  1121                           ; 1 bytes @ 0xC
  1122                           
  1123     002C                     ??_init_TMR1:	
  1124                           ; 1 bytes @ 0xC
  1125                           
  1126     002C                     ??_init_TMR2:	
  1127                           ; 1 bytes @ 0xC
  1128                           
  1129     002C                     ??_init_CCP1_PWM:	
  1130                           ; 1 bytes @ 0xC
  1131                           
  1132     002C                     ??_init_uart:	
  1133                           ; 1 bytes @ 0xC
  1134                           
  1135     002C                     ??_init_I2C:	
  1136                           ; 1 bytes @ 0xC
  1137                           
  1138     002C                     ??_init_SPI:	
  1139                           ; 1 bytes @ 0xC
  1140                           
  1141     002C                     ??_init_ADC:	
  1142                           ; 1 bytes @ 0xC
  1143                           
  1144     002C                     ??_init_memoria:	
  1145                           ; 1 bytes @ 0xC
  1146                           
  1147     002C                     ??_putch:	
  1148                           ; 1 bytes @ 0xC
  1149                           
  1150     002C                     ??_leerMemoria:	
  1151                           ; 1 bytes @ 0xC
  1152                           
  1153     002C                     ??_initYo:	
  1154                           ; 1 bytes @ 0xC
  1155                           
  1156     002C                     ??_analisisRuido:	
  1157                           ; 1 bytes @ 0xC
  1158                           
  1159     002C                     ?___bmul:	
  1160                           ; 1 bytes @ 0xC
  1161                           
  1162     002C                     ?_getLumen:	
  1163                           ; 1 bytes @ 0xC
  1164                           
  1165     002C                     ?_getCO2:	
  1166                           ; 2 bytes @ 0xC
  1167                           
  1168     002C                     ?___awdiv:	
  1169                           ; 2 bytes @ 0xC
  1170                           
  1171     002C                     ?___lwdiv:	
  1172                           ; 2 bytes @ 0xC
  1173                           
  1174     002C                     i2c_write@I2C_data:	
  1175                           ; 2 bytes @ 0xC
  1176                           
  1177     002C                     i2c_read@master_ack:	
  1178                           ; 1 bytes @ 0xC
  1179                           
  1180     002C                     putch@c:	
  1181                           ; 1 bytes @ 0xC
  1182                           
  1183     002C                     leerMemoria@direccion:	
  1184                           ; 1 bytes @ 0xC
  1185                           
  1186     002C                     ___bmul@multiplicand:	
  1187                           ; 1 bytes @ 0xC
  1188                           
  1189     002C                     ___awdiv@divisor:	
  1190                           ; 1 bytes @ 0xC
  1191                           
  1192     002C                     ___lwdiv@divisor:	
  1193                           ; 2 bytes @ 0xC
  1194                           
  1195                           
  1196                           ; 2 bytes @ 0xC
  1197     002C                     	ds	1
  1198     002D                     ??_getnoPrimerArranque:
  1199     002D                     ??___bmul:	
  1200                           ; 1 bytes @ 0xD
  1201                           
  1202     002D                     ?_escribirMemoria:	
  1203                           ; 1 bytes @ 0xD
  1204                           
  1205     002D                     i2c_read@I2C_data:	
  1206                           ; 2 bytes @ 0xD
  1207                           
  1208     002D                     escribirMemoria@dato:	
  1209                           ; 1 bytes @ 0xD
  1210                           
  1211     002D                     getnoPrimerArranque@aux:	
  1212                           ; 1 bytes @ 0xD
  1213                           
  1214                           
  1215                           ; 1 bytes @ 0xD
  1216     002D                     	ds	1
  1217     002E                     ??_setLumen:
  1218     002E                     ??_getLumen:	
  1219                           ; 1 bytes @ 0xE
  1220                           
  1221     002E                     ??_setCO2:	
  1222                           ; 1 bytes @ 0xE
  1223                           
  1224     002E                     ??_getCO2:	
  1225                           ; 1 bytes @ 0xE
  1226                           
  1227     002E                     ??_escribirMemoria:	
  1228                           ; 1 bytes @ 0xE
  1229                           
  1230     002E                     spi_write_read@one_byte:	
  1231                           ; 1 bytes @ 0xE
  1232                           
  1233     002E                     analisisRuido@temp:	
  1234                           ; 1 bytes @ 0xE
  1235                           
  1236     002E                     ___bmul@product:	
  1237                           ; 1 bytes @ 0xE
  1238                           
  1239     002E                     escribirMemoria@confirmado:	
  1240                           ; 1 bytes @ 0xE
  1241                           
  1242     002E                     ___awdiv@dividend:	
  1243                           ; 2 bytes @ 0xE
  1244                           
  1245     002E                     ___lwdiv@dividend:	
  1246                           ; 2 bytes @ 0xE
  1247                           
  1248                           
  1249                           ; 2 bytes @ 0xE
  1250     002E                     	ds	1
  1251     002F                     spi_write_read@answer:
  1252     002F                     ___bmul@multiplier:	
  1253                           ; 1 bytes @ 0xF
  1254                           
  1255                           
  1256                           ; 1 bytes @ 0xF
  1257     002F                     	ds	1
  1258     0030                     ??_analisisResto:
  1259     0030                     ??___awdiv:	
  1260                           ; 1 bytes @ 0x10
  1261                           
  1262     0030                     ??___lwdiv:	
  1263                           ; 1 bytes @ 0x10
  1264                           
  1265     0030                     spi_write_read@x:	
  1266                           ; 1 bytes @ 0x10
  1267                           
  1268     0030                     escribirMemoria@direccion:	
  1269                           ; 1 bytes @ 0x10
  1270                           
  1271                           
  1272                           ; 1 bytes @ 0x10
  1273     0030                     	ds	1
  1274     0031                     ?_cosasSPI:
  1275     0031                     cosasSPI@verd:	
  1276                           ; 1 bytes @ 0x11
  1277                           
  1278     0031                     ___awdiv@counter:	
  1279                           ; 1 bytes @ 0x11
  1280                           
  1281     0031                     ___lwdiv@counter:	
  1282                           ; 1 bytes @ 0x11
  1283                           
  1284     0031                     escribirMemoria@contador:	
  1285                           ; 1 bytes @ 0x11
  1286                           
  1287                           
  1288                           ; 2 bytes @ 0x11
  1289     0031                     	ds	1
  1290     0032                     cosasSPI@azu:
  1291     0032                     ___awdiv@sign:	
  1292                           ; 1 bytes @ 0x12
  1293                           
  1294     0032                     ___lwdiv@quotient:	
  1295                           ; 1 bytes @ 0x12
  1296                           
  1297                           
  1298                           ; 2 bytes @ 0x12
  1299     0032                     	ds	1
  1300     0033                     cosasSPI@lumi:
  1301     0033                     ___awdiv@quotient:	
  1302                           ; 1 bytes @ 0x13
  1303                           
  1304                           
  1305                           ; 2 bytes @ 0x13
  1306     0033                     	ds	1
  1307     0034                     ??_cosasSPI:
  1308     0034                     ?___lwmod:	
  1309                           ; 1 bytes @ 0x14
  1310                           
  1311     0034                     cosasSPI@roj:	
  1312                           ; 2 bytes @ 0x14
  1313                           
  1314     0034                     ___lwmod@divisor:	
  1315                           ; 1 bytes @ 0x14
  1316                           
  1317                           
  1318                           ; 2 bytes @ 0x14
  1319     0034                     	ds	1
  1320     0035                     ??_setPWM:
  1321     0035                     cosasSPI@lumo:	
  1322                           ; 1 bytes @ 0x15
  1323                           
  1324                           
  1325                           ; 1 bytes @ 0x15
  1326     0035                     	ds	1
  1327     0036                     cosasSPI@i:
  1328     0036                     ___lwmod@dividend:	
  1329                           ; 2 bytes @ 0x16
  1330                           
  1331                           
  1332                           ; 2 bytes @ 0x16
  1333     0036                     	ds	1
  1334     0037                     setPWM@porcent:
  1335                           
  1336                           ; 1 bytes @ 0x17
  1337     0037                     	ds	1
  1338     0038                     ?_setLED:
  1339     0038                     ??___lwmod:	
  1340                           ; 1 bytes @ 0x18
  1341                           
  1342     0038                     setLED@green:	
  1343                           ; 1 bytes @ 0x18
  1344                           
  1345                           
  1346                           ; 1 bytes @ 0x18
  1347     0038                     	ds	1
  1348     0039                     setLED@blue:
  1349     0039                     ___lwmod@counter:	
  1350                           ; 1 bytes @ 0x19
  1351                           
  1352                           
  1353                           ; 1 bytes @ 0x19
  1354     0039                     	ds	1
  1355     003A                     ?_printf:
  1356     003A                     setLED@luminosidad:	
  1357                           ; 2 bytes @ 0x1A
  1358                           
  1359                           
  1360                           ; 1 bytes @ 0x1A
  1361     003A                     	ds	1
  1362     003B                     ??_setLED:
  1363     003B                     setLED@red:	
  1364                           ; 1 bytes @ 0x1B
  1365                           
  1366                           
  1367                           ; 1 bytes @ 0x1B
  1368     003B                     	ds	1
  1369     003C                     ??_initActuadoresSegunMemoria:
  1370     003C                     _initActuadoresSegunMemoria$1570:	
  1371                           ; 1 bytes @ 0x1C
  1372                           
  1373                           
  1374                           ; 1 bytes @ 0x1C
  1375     003C                     	ds	1
  1376     003D                     _initActuadoresSegunMemoria$1571:
  1377                           
  1378                           ; 1 bytes @ 0x1D
  1379     003D                     	ds	1
  1380     003E                     _initActuadoresSegunMemoria$1572:
  1381                           
  1382                           ; 1 bytes @ 0x1E
  1383     003E                     	ds	6
  1384     0044                     ??_main:
  1385                           
  1386                           ; 1 bytes @ 0x24
  1387     0044                     	ds	2
  1388                           
  1389                           	psect	maintext
  1390     031B                     __pmaintext:	
  1391 ;;
  1392 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1393 ;;
  1394 ;; *************** function _main *****************
  1395 ;; Defined at:
  1396 ;;		line 590 in file "main.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;		None
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;  ruidoAux        1   10[BANK1 ] unsigned char 
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      void 
  1403 ;; Registers used:
  1404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1405 ;; Tracked objects:
  1406 ;;		On entry : B00/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1410 ;;      Params:         0       0       0       0       0
  1411 ;;      Locals:         0       0       1       0       0
  1412 ;;      Temps:          0       2       0       0       0
  1413 ;;      Totals:         0       2       1       0       0
  1414 ;;Total ram usage:        3 bytes
  1415 ;; Hardware stack levels required when called: 8
  1416 ;; This function calls:
  1417 ;;		_analisisResto
  1418 ;;		_analisisRuido
  1419 ;;		_i2c_stop
  1420 ;;		_initActuadoresSegunMemoria
  1421 ;;		_initYo
  1422 ;;		_printf
  1423 ;; This function is called by:
  1424 ;;		Startup code after reset
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428     031B                     _main:	
  1429                           ;psect for function _main
  1430                           
  1431     031B                     l3432:	
  1432                           ;incstack = 0
  1433                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1434                           
  1435                           
  1436                           ;main.c: 591:     initYo();
  1437     031B  120A  158A  26C3  120A  118A  	fcall	_initYo
  1438     0320                     l3434:
  1439                           
  1440                           ;main.c: 592:     initActuadoresSegunMemoria();
  1441     0320  120A  118A  261D  120A  118A  	fcall	_initActuadoresSegunMemoria
  1442                           
  1443                           ;main.c: 594:     while (deboContinuar) {
  1444     0325  2B91               	goto	l3456
  1445     0326                     l3436:
  1446                           
  1447                           ;main.c: 595:         if (emitirMisSensores) {
  1448     0326  0832               	movf	_emitirMisSensores^(0+128),w
  1449     0327  0433               	iorwf	(_emitirMisSensores+1)^(0+128),w
  1450     0328  1903               	btfsc	3,2
  1451     0329  2B2B               	goto	u2681
  1452     032A  2B2C               	goto	u2680
  1453     032B                     u2681:
  1454     032B  2B87               	goto	l3452
  1455     032C                     u2680:
  1456     032C                     l3438:
  1457                           
  1458                           ;main.c: 596:             char ruidoAux = 'E';
  1459     032C  3045               	movlw	69
  1460     032D  00D8               	movwf	main@ruidoAux^(0+128)
  1461                           
  1462                           ;main.c: 597:             switch (emitoSensores[0]) {
  1463     032E  2B38               	goto	l3448
  1464     032F                     l3440:
  1465                           
  1466                           ;main.c: 599:                     ruidoAux = 'b';
  1467     032F  3062               	movlw	98
  1468     0330  00D8               	movwf	main@ruidoAux^(0+128)
  1469                           
  1470                           ;main.c: 600:                     break;
  1471     0331  2B48               	goto	l3450
  1472     0332                     l3442:
  1473                           
  1474                           ;main.c: 602:                     ruidoAux = 'm';
  1475     0332  306D               	movlw	109
  1476     0333  00D8               	movwf	main@ruidoAux^(0+128)
  1477                           
  1478                           ;main.c: 603:                     break;
  1479     0334  2B48               	goto	l3450
  1480     0335                     l3444:
  1481                           
  1482                           ;main.c: 605:                     ruidoAux = 'a';
  1483     0335  3061               	movlw	97
  1484     0336  00D8               	movwf	main@ruidoAux^(0+128)
  1485                           
  1486                           ;main.c: 606:                     break;
  1487     0337  2B48               	goto	l3450
  1488     0338                     l3448:
  1489                           
  1490                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1491                           ; Switch size 1, requested type "simple"
  1492                           ; Number of cases is 1, Range of values is 0 to 0
  1493                           ; switch strategies available:
  1494                           ; Name         Instructions Cycles
  1495                           ; simple_byte            4     3 (average)
  1496                           ; direct_byte           11     8 (fixed)
  1497                           ; jumptable            260     6 (fixed)
  1498                           ;	Chosen strategy is simple_byte
  1499     0338  0839               	movf	(_emitoSensores+1)^(0+128),w
  1500     0339  3A00               	xorlw	0	; case 0
  1501     033A  1903               	skipnz
  1502     033B  2B3D               	goto	l3534
  1503     033C  2B48               	goto	l3450
  1504     033D                     l3534:
  1505                           
  1506                           ; Switch size 1, requested type "simple"
  1507                           ; Number of cases is 3, Range of values is 1 to 3
  1508                           ; switch strategies available:
  1509                           ; Name         Instructions Cycles
  1510                           ; simple_byte           10     6 (average)
  1511                           ; direct_byte           20    11 (fixed)
  1512                           ; jumptable            263     9 (fixed)
  1513                           ;	Chosen strategy is simple_byte
  1514     033D  0838               	movf	_emitoSensores^(0+128),w
  1515     033E  3A01               	xorlw	1	; case 1
  1516     033F  1903               	skipnz
  1517     0340  2B2F               	goto	l3440
  1518     0341  3A03               	xorlw	3	; case 2
  1519     0342  1903               	skipnz
  1520     0343  2B32               	goto	l3442
  1521     0344  3A01               	xorlw	1	; case 3
  1522     0345  1903               	skipnz
  1523     0346  2B35               	goto	l3444
  1524     0347  2B48               	goto	l3450
  1525     0348                     l3450:
  1526                           
  1527                           ;main.c: 610:             printf("Ruido = %d, humedad = %d, temperatura = %d, CO2 = %d, 
      +                          Luminosidad = %d \r\n", ruidoAux, emitoSensores[1], emitoSensores[2], emitoSensores[3], 
      +                          emitoSensores[4]);
  1528     0348  0858               	movf	main@ruidoAux^(0+128),w
  1529     0349  1283               	bcf	3,5	;RP0=0, select bank0
  1530     034A  1303               	bcf	3,6	;RP1=0, select bank0
  1531     034B  00C4               	movwf	??_main
  1532     034C  01C5               	clrf	??_main+1
  1533     034D  0844               	movf	??_main,w
  1534     034E  00BA               	movwf	?_printf
  1535     034F  0845               	movf	??_main+1,w
  1536     0350  00BB               	movwf	?_printf+1
  1537     0351  1683               	bsf	3,5	;RP0=1, select bank1
  1538     0352  1303               	bcf	3,6	;RP1=0, select bank1
  1539     0353  083B               	movf	((_emitoSensores+1)^(0+128)+2),w
  1540     0354  1283               	bcf	3,5	;RP0=0, select bank0
  1541     0355  1303               	bcf	3,6	;RP1=0, select bank0
  1542     0356  00BD               	movwf	?_printf+3
  1543     0357  1683               	bsf	3,5	;RP0=1, select bank1
  1544     0358  1303               	bcf	3,6	;RP1=0, select bank1
  1545     0359  083A               	movf	(_emitoSensores^(0+128)+2),w
  1546     035A  1283               	bcf	3,5	;RP0=0, select bank0
  1547     035B  1303               	bcf	3,6	;RP1=0, select bank0
  1548     035C  00BC               	movwf	?_printf+2
  1549     035D  1683               	bsf	3,5	;RP0=1, select bank1
  1550     035E  1303               	bcf	3,6	;RP1=0, select bank1
  1551     035F  083D               	movf	((_emitoSensores+1)^(0+128)+4),w
  1552     0360  1283               	bcf	3,5	;RP0=0, select bank0
  1553     0361  1303               	bcf	3,6	;RP1=0, select bank0
  1554     0362  00BF               	movwf	?_printf+5
  1555     0363  1683               	bsf	3,5	;RP0=1, select bank1
  1556     0364  1303               	bcf	3,6	;RP1=0, select bank1
  1557     0365  083C               	movf	(_emitoSensores^(0+128)+4),w
  1558     0366  1283               	bcf	3,5	;RP0=0, select bank0
  1559     0367  1303               	bcf	3,6	;RP1=0, select bank0
  1560     0368  00BE               	movwf	?_printf+4
  1561     0369  1683               	bsf	3,5	;RP0=1, select bank1
  1562     036A  1303               	bcf	3,6	;RP1=0, select bank1
  1563     036B  083F               	movf	((_emitoSensores+1)^(0+128)+6),w
  1564     036C  1283               	bcf	3,5	;RP0=0, select bank0
  1565     036D  1303               	bcf	3,6	;RP1=0, select bank0
  1566     036E  00C1               	movwf	?_printf+7
  1567     036F  1683               	bsf	3,5	;RP0=1, select bank1
  1568     0370  1303               	bcf	3,6	;RP1=0, select bank1
  1569     0371  083E               	movf	(_emitoSensores^(0+128)+6),w
  1570     0372  1283               	bcf	3,5	;RP0=0, select bank0
  1571     0373  1303               	bcf	3,6	;RP1=0, select bank0
  1572     0374  00C0               	movwf	?_printf+6
  1573     0375  1683               	bsf	3,5	;RP0=1, select bank1
  1574     0376  1303               	bcf	3,6	;RP1=0, select bank1
  1575     0377  0841               	movf	((_emitoSensores+1)^(0+128)+8),w
  1576     0378  1283               	bcf	3,5	;RP0=0, select bank0
  1577     0379  1303               	bcf	3,6	;RP1=0, select bank0
  1578     037A  00C3               	movwf	?_printf+9
  1579     037B  1683               	bsf	3,5	;RP0=1, select bank1
  1580     037C  1303               	bcf	3,6	;RP1=0, select bank1
  1581     037D  0840               	movf	(_emitoSensores^(0+128)+8),w
  1582     037E  1283               	bcf	3,5	;RP0=0, select bank0
  1583     037F  1303               	bcf	3,6	;RP1=0, select bank0
  1584     0380  00C2               	movwf	?_printf+8
  1585     0381  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1586     0382  120A  118A  2236  120A  118A  	fcall	_printf
  1587     0387                     l3452:
  1588                           
  1589                           ;main.c: 613:         analisisRuido();
  1590     0387  120A  158A  27BD  120A  118A  	fcall	_analisisRuido
  1591     038C                     l3454:
  1592                           
  1593                           ;main.c: 614:         analisisResto();
  1594     038C  120A  158A  273B  120A  118A  	fcall	_analisisResto
  1595     0391                     l3456:
  1596                           
  1597                           ;main.c: 594:     while (deboContinuar) {
  1598     0391  1683               	bsf	3,5	;RP0=1, select bank1
  1599     0392  1303               	bcf	3,6	;RP1=0, select bank1
  1600     0393  084C               	movf	_deboContinuar^(0+128),w
  1601     0394  044D               	iorwf	(_deboContinuar+1)^(0+128),w
  1602     0395  1D03               	btfss	3,2
  1603     0396  2B98               	goto	u2691
  1604     0397  2B99               	goto	u2690
  1605     0398                     u2691:
  1606     0398  2B26               	goto	l3436
  1607     0399                     u2690:
  1608     0399                     l3458:
  1609                           
  1610                           ;main.c: 621:     i2c_stop();
  1611     0399  120A  158A  2459  120A  118A  	fcall	_i2c_stop
  1612     039E                     l384:
  1613     039E  120A  118A  2812   	ljmp	start
  1614     03A1                     __end_of_main:
  1615                           
  1616                           	psect	text1
  1617     0236                     __ptext1:	
  1618 ;; *************** function _printf *****************
  1619 ;; Defined at:
  1620 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  f               1    wreg     PTR const unsigned char 
  1623 ;;		 -> STR_1(74), 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  f               1    5[BANK1 ] PTR const unsigned char 
  1626 ;;		 -> STR_1(74), 
  1627 ;;  tmpval          4    0        struct .
  1628 ;;  val             2    7[BANK1 ] unsigned int 
  1629 ;;  cp              2    0        PTR const unsigned char 
  1630 ;;  len             2    0        unsigned int 
  1631 ;;  c               1    9[BANK1 ] unsigned char 
  1632 ;;  prec            1    6[BANK1 ] char 
  1633 ;;  flag            1    4[BANK1 ] unsigned char 
  1634 ;;  ap              1    3[BANK1 ] PTR void [1]
  1635 ;;		 -> ?_printf(2), 
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  2   26[BANK0 ] int 
  1638 ;; Registers used:
  1639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1645 ;;      Params:         0      10       0       0       0
  1646 ;;      Locals:         0       0       7       0       0
  1647 ;;      Temps:          0       0       3       0       0
  1648 ;;      Totals:         0      10      10       0       0
  1649 ;;Total ram usage:       20 bytes
  1650 ;; Hardware stack levels used: 1
  1651 ;; Hardware stack levels required when called: 5
  1652 ;; This function calls:
  1653 ;;		___lwdiv
  1654 ;;		___lwmod
  1655 ;;		_putch
  1656 ;; This function is called by:
  1657 ;;		_main
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661     0236                     _printf:	
  1662                           ;psect for function _printf
  1663                           
  1664                           
  1665                           ;incstack = 0
  1666                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1667                           ;printf@f stored from wreg
  1668     0236  1683               	bsf	3,5	;RP0=1, select bank1
  1669     0237  1303               	bcf	3,6	;RP1=0, select bank1
  1670     0238  00D3               	movwf	printf@f^(0+128)
  1671     0239                     l3380:
  1672                           
  1673                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
  1674     0239  303A               	movlw	(low (?_printf| 0))& (0+255)
  1675     023A  00D1               	movwf	printf@ap^(0+128)
  1676                           
  1677                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1678     023B  2B08               	goto	l3426
  1679     023C                     l3382:
  1680                           
  1681                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1682     023C  3025               	movlw	37
  1683     023D  0657               	xorwf	printf@c^(0+128),w
  1684     023E  1903               	btfsc	3,2
  1685     023F  2A41               	goto	u2611
  1686     0240  2A42               	goto	u2610
  1687     0241                     u2611:
  1688     0241  2A49               	goto	l3386
  1689     0242                     u2610:
  1690     0242                     l3384:
  1691                           
  1692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
  1693     0242  0857               	movf	printf@c^(0+128),w
  1694     0243  120A  158A  24EE  120A  118A  	fcall	_putch
  1695                           
  1696                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1697     0248  2B08               	goto	l3426
  1698     0249                     l3386:
  1699                           
  1700                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1701     0249  01D2               	clrf	printf@flag^(0+128)
  1702     024A                     l3390:	
  1703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1704                           
  1705     024A  3001               	movlw	1
  1706     024B  07D3               	addwf	printf@f^(0+128),f
  1707     024C  30FF               	movlw	-1
  1708     024D  0753               	addwf	printf@f^(0+128),w
  1709     024E  0084               	movwf	4
  1710     024F  120A  118A  267B  120A  118A  	fcall	stringdir
  1711     0254  00D7               	movwf	printf@c^(0+128)
  1712     0255  00CE               	movwf	??_printf^(0+128)
  1713     0256  01CF               	clrf	(??_printf^(0+128)+1)
  1714                           
  1715                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1716                           ; Switch size 1, requested type "simple"
  1717                           ; Number of cases is 1, Range of values is 0 to 0
  1718                           ; switch strategies available:
  1719                           ; Name         Instructions Cycles
  1720                           ; simple_byte            4     3 (average)
  1721                           ; direct_byte           11     8 (fixed)
  1722                           ; jumptable            260     6 (fixed)
  1723                           ;	Chosen strategy is simple_byte
  1724     0257  084F               	movf	(??_printf+1)^(0+128),w
  1725     0258  3A00               	xorlw	0	; case 0
  1726     0259  1903               	skipnz
  1727     025A  2A5C               	goto	l3536
  1728     025B  2B08               	goto	l3426
  1729     025C                     l3536:
  1730                           
  1731                           ; Switch size 1, requested type "simple"
  1732                           ; Number of cases is 3, Range of values is 0 to 105
  1733                           ; switch strategies available:
  1734                           ; Name         Instructions Cycles
  1735                           ; simple_byte           10     6 (average)
  1736                           ; jumptable            260     6 (fixed)
  1737                           ;	Chosen strategy is simple_byte
  1738     025C  084E               	movf	??_printf^(0+128),w
  1739     025D  3A00               	xorlw	0	; case 0
  1740     025E  1903               	skipnz
  1741     025F  2B1A               	goto	l496
  1742     0260  3A64               	xorlw	100	; case 100
  1743     0261  1903               	skipnz
  1744     0262  2A67               	goto	l3392
  1745     0263  3A0D               	xorlw	13	; case 105
  1746     0264  1903               	skipnz
  1747     0265  2A67               	goto	l3392
  1748     0266  2B08               	goto	l3426
  1749     0267                     l3392:
  1750                           
  1751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1752     0267  0851               	movf	printf@ap^(0+128),w
  1753     0268  0084               	movwf	4
  1754     0269  1383               	bcf	3,7	;select IRP bank0
  1755     026A  0800               	movf	0,w
  1756     026B  00D5               	movwf	printf@val^(0+128)
  1757     026C  0A84               	incf	4,f
  1758     026D  0800               	movf	0,w
  1759     026E  00D6               	movwf	(printf@val+1)^(0+128)
  1760     026F                     l3394:
  1761     026F  3002               	movlw	2
  1762     0270  00CE               	movwf	??_printf^(0+128)
  1763     0271  084E               	movf	??_printf^(0+128),w
  1764     0272  07D1               	addwf	printf@ap^(0+128),f
  1765     0273                     l3396:
  1766                           
  1767                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1768     0273  1FD6               	btfss	(printf@val+1)^(0+128),7
  1769     0274  2A76               	goto	u2621
  1770     0275  2A77               	goto	u2620
  1771     0276                     u2621:
  1772     0276  2A80               	goto	l3402
  1773     0277                     u2620:
  1774     0277                     l3398:
  1775                           
  1776                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1777     0277  3003               	movlw	3
  1778     0278  00CE               	movwf	??_printf^(0+128)
  1779     0279  084E               	movf	??_printf^(0+128),w
  1780     027A  04D2               	iorwf	printf@flag^(0+128),f
  1781     027B                     l3400:
  1782                           
  1783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1784     027B  09D5               	comf	printf@val^(0+128),f
  1785     027C  09D6               	comf	(printf@val+1)^(0+128),f
  1786     027D  0AD5               	incf	printf@val^(0+128),f
  1787     027E  1903               	skipnz
  1788     027F  0AD6               	incf	(printf@val+1)^(0+128),f
  1789     0280                     l3402:
  1790                           
  1791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1792     0280  01D7               	clrf	printf@c^(0+128)
  1793     0281  0AD7               	incf	printf@c^(0+128),f
  1794     0282                     l3408:
  1795                           
  1796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1797     0282  0857               	movf	printf@c^(0+128),w
  1798     0283  00CE               	movwf	??_printf^(0+128)
  1799     0284  074E               	addwf	??_printf^(0+128),w
  1800     0285  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1801     0286  0084               	movwf	4
  1802     0287  120A  118A  267B  120A  118A  	fcall	stringdir
  1803     028C  00CF               	movwf	(??_printf+1)^(0+128)
  1804     028D  120A  118A  267B  120A  118A  	fcall	stringdir
  1805     0292  00D0               	movwf	((??_printf+1)^(0+128)+1)
  1806     0293  0850               	movf	(??_printf+2)^(0+128),w
  1807     0294  0256               	subwf	(printf@val+1)^(0+128),w
  1808     0295  1D03               	skipz
  1809     0296  2A99               	goto	u2635
  1810     0297  084F               	movf	(??_printf+1)^(0+128),w
  1811     0298  0255               	subwf	printf@val^(0+128),w
  1812     0299                     u2635:
  1813     0299  1803               	skipnc
  1814     029A  2A9C               	goto	u2631
  1815     029B  2A9D               	goto	u2630
  1816     029C                     u2631:
  1817     029C  2A9E               	goto	l3412
  1818     029D                     u2630:
  1819     029D  2AA8               	goto	l3414
  1820     029E                     l3412:
  1821     029E  3001               	movlw	1
  1822     029F  00CE               	movwf	??_printf^(0+128)
  1823     02A0  084E               	movf	??_printf^(0+128),w
  1824     02A1  07D7               	addwf	printf@c^(0+128),f
  1825     02A2  3005               	movlw	5
  1826     02A3  0657               	xorwf	printf@c^(0+128),w
  1827     02A4  1D03               	btfss	3,2
  1828     02A5  2AA7               	goto	u2641
  1829     02A6  2AA8               	goto	u2640
  1830     02A7                     u2641:
  1831     02A7  2A82               	goto	l3408
  1832     02A8                     u2640:
  1833     02A8                     l3414:
  1834                           
  1835                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1836     02A8  0852               	movf	printf@flag^(0+128),w
  1837     02A9  3903               	andlw	3
  1838     02AA  1903               	btfsc	3,2
  1839     02AB  2AAD               	goto	u2651
  1840     02AC  2AAE               	goto	u2650
  1841     02AD                     u2651:
  1842     02AD  2AB4               	goto	l3418
  1843     02AE                     u2650:
  1844     02AE                     l3416:
  1845                           
  1846                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     (putch(
      +                          '-') );
  1847     02AE  302D               	movlw	45
  1848     02AF  120A  158A  24EE  120A  118A  	fcall	_putch
  1849     02B4                     l3418:
  1850                           
  1851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1852     02B4  1683               	bsf	3,5	;RP0=1, select bank1
  1853     02B5  1303               	bcf	3,6	;RP1=0, select bank1
  1854     02B6  0857               	movf	printf@c^(0+128),w
  1855     02B7  00D4               	movwf	printf@prec^(0+128)
  1856                           
  1857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1858     02B8  2AFD               	goto	l3424
  1859     02B9                     l3420:
  1860                           
  1861                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1862     02B9  300A               	movlw	10
  1863     02BA  1283               	bcf	3,5	;RP0=0, select bank0
  1864     02BB  1303               	bcf	3,6	;RP1=0, select bank0
  1865     02BC  00B4               	movwf	___lwmod@divisor
  1866     02BD  3000               	movlw	0
  1867     02BE  00B5               	movwf	___lwmod@divisor+1
  1868     02BF  1683               	bsf	3,5	;RP0=1, select bank1
  1869     02C0  1303               	bcf	3,6	;RP1=0, select bank1
  1870     02C1  0854               	movf	printf@prec^(0+128),w
  1871     02C2  00CE               	movwf	??_printf^(0+128)
  1872     02C3  074E               	addwf	??_printf^(0+128),w
  1873     02C4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1874     02C5  0084               	movwf	4
  1875     02C6  120A  118A  267B  120A  118A  	fcall	stringdir
  1876     02CB  1283               	bcf	3,5	;RP0=0, select bank0
  1877     02CC  1303               	bcf	3,6	;RP1=0, select bank0
  1878     02CD  00AC               	movwf	___lwdiv@divisor
  1879     02CE  120A  118A  267B  120A  118A  	fcall	stringdir
  1880     02D3  00AD               	movwf	___lwdiv@divisor+1
  1881     02D4  1683               	bsf	3,5	;RP0=1, select bank1
  1882     02D5  1303               	bcf	3,6	;RP1=0, select bank1
  1883     02D6  0856               	movf	(printf@val+1)^(0+128),w
  1884     02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1885     02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1886     02D9  00AF               	movwf	___lwdiv@dividend+1
  1887     02DA  1683               	bsf	3,5	;RP0=1, select bank1
  1888     02DB  1303               	bcf	3,6	;RP1=0, select bank1
  1889     02DC  0855               	movf	printf@val^(0+128),w
  1890     02DD  1283               	bcf	3,5	;RP0=0, select bank0
  1891     02DE  1303               	bcf	3,6	;RP1=0, select bank0
  1892     02DF  00AE               	movwf	___lwdiv@dividend
  1893     02E0  120A  118A  26D5  120A  118A  	fcall	___lwdiv
  1894     02E5  1283               	bcf	3,5	;RP0=0, select bank0
  1895     02E6  1303               	bcf	3,6	;RP1=0, select bank0
  1896     02E7  082D               	movf	?___lwdiv+1,w
  1897     02E8  00B7               	movwf	___lwmod@dividend+1
  1898     02E9  082C               	movf	?___lwdiv,w
  1899     02EA  00B6               	movwf	___lwmod@dividend
  1900     02EB  120A  158A  26FF  120A  118A  	fcall	___lwmod
  1901     02F0  1283               	bcf	3,5	;RP0=0, select bank0
  1902     02F1  1303               	bcf	3,6	;RP1=0, select bank0
  1903     02F2  0834               	movf	?___lwmod,w
  1904     02F3  3E30               	addlw	48
  1905     02F4  1683               	bsf	3,5	;RP0=1, select bank1
  1906     02F5  1303               	bcf	3,6	;RP1=0, select bank1
  1907     02F6  00D7               	movwf	printf@c^(0+128)
  1908     02F7                     l3422:
  1909                           
  1910                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    (putch(c) );
  1911     02F7  0857               	movf	printf@c^(0+128),w
  1912     02F8  120A  158A  24EE  120A  118A  	fcall	_putch
  1913     02FD                     l3424:
  1914                           
  1915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1916     02FD  30FF               	movlw	255
  1917     02FE  1683               	bsf	3,5	;RP0=1, select bank1
  1918     02FF  1303               	bcf	3,6	;RP1=0, select bank1
  1919     0300  00CE               	movwf	??_printf^(0+128)
  1920     0301  084E               	movf	??_printf^(0+128),w
  1921     0302  07D4               	addwf	printf@prec^(0+128),f
  1922     0303  0A54               	incf	printf@prec^(0+128),w
  1923     0304  1D03               	btfss	3,2
  1924     0305  2B07               	goto	u2661
  1925     0306  2B08               	goto	u2660
  1926     0307                     u2661:
  1927     0307  2AB9               	goto	l3420
  1928     0308                     u2660:
  1929     0308                     l3426:
  1930                           
  1931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1932     0308  3001               	movlw	1
  1933     0309  1683               	bsf	3,5	;RP0=1, select bank1
  1934     030A  1303               	bcf	3,6	;RP1=0, select bank1
  1935     030B  07D3               	addwf	printf@f^(0+128),f
  1936     030C  30FF               	movlw	-1
  1937     030D  0753               	addwf	printf@f^(0+128),w
  1938     030E  0084               	movwf	4
  1939     030F  120A  118A  267B  120A  118A  	fcall	stringdir
  1940     0314  00D7               	movwf	printf@c^(0+128)
  1941     0315  0857               	movf	printf@c^(0+128),w
  1942     0316  1D03               	btfss	3,2
  1943     0317  2B19               	goto	u2671
  1944     0318  2B1A               	goto	u2670
  1945     0319                     u2671:
  1946     0319  2A3C               	goto	l3382
  1947     031A                     u2670:
  1948     031A                     l496:
  1949     031A  0008               	return
  1950     031B                     __end_of_printf:
  1951                           
  1952                           	psect	text2
  1953     0CEE                     __ptext2:	
  1954 ;; *************** function _putch *****************
  1955 ;; Defined at:
  1956 ;;		line 234 in file "main.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;  c               1    wreg     unsigned char 
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;  c               1   12[BANK0 ] unsigned char 
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      void 
  1963 ;; Registers used:
  1964 ;;		wreg
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1970 ;;      Params:         0       0       0       0       0
  1971 ;;      Locals:         0       1       0       0       0
  1972 ;;      Temps:          0       0       0       0       0
  1973 ;;      Totals:         0       1       0       0       0
  1974 ;;Total ram usage:        1 bytes
  1975 ;; Hardware stack levels used: 1
  1976 ;; Hardware stack levels required when called: 4
  1977 ;; This function calls:
  1978 ;;		Nothing
  1979 ;; This function is called by:
  1980 ;;		_printf
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984     0CEE                     _putch:	
  1985                           ;psect for function _putch
  1986                           
  1987                           
  1988                           ;incstack = 0
  1989                           ; Regs used in _putch: [wreg]
  1990                           ;putch@c stored from wreg
  1991     0CEE  1283               	bcf	3,5	;RP0=0, select bank0
  1992     0CEF  1303               	bcf	3,6	;RP1=0, select bank0
  1993     0CF0  00AC               	movwf	putch@c
  1994     0CF1                     l3182:
  1995     0CF1                     l239:	
  1996                           ;main.c: 238:     }
  1997                           
  1998                           
  1999                           ;main.c: 235:     while (!TXIF && !TXSTAbits.TRMT) {
  2000     0CF1  1283               	bcf	3,5	;RP0=0, select bank0
  2001     0CF2  1A0C               	btfsc	12,4	;volatile
  2002     0CF3  2CF5               	goto	u2381
  2003     0CF4  2CF6               	goto	u2380
  2004     0CF5                     u2381:
  2005     0CF5  2CFC               	goto	l3186
  2006     0CF6                     u2380:
  2007     0CF6                     l3184:
  2008     0CF6  1683               	bsf	3,5	;RP0=1, select bank1
  2009     0CF7  1303               	bcf	3,6	;RP1=0, select bank1
  2010     0CF8  1C98               	btfss	24,1	;volatile
  2011     0CF9  2CFB               	goto	u2391
  2012     0CFA  2CFC               	goto	u2390
  2013     0CFB                     u2391:
  2014     0CFB  2CF1               	goto	l239
  2015     0CFC                     u2390:
  2016     0CFC                     l3186:
  2017                           
  2018                           ;main.c: 239:     TXREG = c;
  2019     0CFC  1283               	bcf	3,5	;RP0=0, select bank0
  2020     0CFD  082C               	movf	putch@c,w
  2021     0CFE  0099               	movwf	25	;volatile
  2022     0CFF                     l244:
  2023     0CFF  0008               	return
  2024     0D00                     __end_of_putch:
  2025                           
  2026                           	psect	text3
  2027     0EFF                     __ptext3:	
  2028 ;; *************** function ___lwmod *****************
  2029 ;; Defined at:
  2030 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;  divisor         2   20[BANK0 ] unsigned int 
  2033 ;;  dividend        2   22[BANK0 ] unsigned int 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;  counter         1   25[BANK0 ] unsigned char 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  2   20[BANK0 ] unsigned int 
  2038 ;; Registers used:
  2039 ;;		wreg, status,2, status,0
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2045 ;;      Params:         0       4       0       0       0
  2046 ;;      Locals:         0       1       0       0       0
  2047 ;;      Temps:          0       1       0       0       0
  2048 ;;      Totals:         0       6       0       0       0
  2049 ;;Total ram usage:        6 bytes
  2050 ;; Hardware stack levels used: 1
  2051 ;; Hardware stack levels required when called: 4
  2052 ;; This function calls:
  2053 ;;		Nothing
  2054 ;; This function is called by:
  2055 ;;		_printf
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059     0EFF                     ___lwmod:	
  2060                           ;psect for function ___lwmod
  2061                           
  2062     0EFF                     l3286:	
  2063                           ;incstack = 0
  2064                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2065                           
  2066     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  2067     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  2068     0F01  0834               	movf	___lwmod@divisor,w
  2069     0F02  0435               	iorwf	___lwmod@divisor+1,w
  2070     0F03  1903               	btfsc	3,2
  2071     0F04  2F06               	goto	u2501
  2072     0F05  2F07               	goto	u2500
  2073     0F06                     u2501:
  2074     0F06  2F36               	goto	l3304
  2075     0F07                     u2500:
  2076     0F07                     l3288:
  2077     0F07  01B9               	clrf	___lwmod@counter
  2078     0F08  0AB9               	incf	___lwmod@counter,f
  2079     0F09  2F15               	goto	l3294
  2080     0F0A                     l3290:
  2081     0F0A  3001               	movlw	1
  2082     0F0B                     u2515:
  2083     0F0B  1003               	clrc
  2084     0F0C  0DB4               	rlf	___lwmod@divisor,f
  2085     0F0D  0DB5               	rlf	___lwmod@divisor+1,f
  2086     0F0E  3EFF               	addlw	-1
  2087     0F0F  1D03               	skipz
  2088     0F10  2F0B               	goto	u2515
  2089     0F11                     l3292:
  2090     0F11  3001               	movlw	1
  2091     0F12  00B8               	movwf	??___lwmod
  2092     0F13  0838               	movf	??___lwmod,w
  2093     0F14  07B9               	addwf	___lwmod@counter,f
  2094     0F15                     l3294:
  2095     0F15  1FB5               	btfss	___lwmod@divisor+1,7
  2096     0F16  2F18               	goto	u2521
  2097     0F17  2F19               	goto	u2520
  2098     0F18                     u2521:
  2099     0F18  2F0A               	goto	l3290
  2100     0F19                     u2520:
  2101     0F19                     l3296:
  2102     0F19  0835               	movf	___lwmod@divisor+1,w
  2103     0F1A  0237               	subwf	___lwmod@dividend+1,w
  2104     0F1B  1D03               	skipz
  2105     0F1C  2F1F               	goto	u2535
  2106     0F1D  0834               	movf	___lwmod@divisor,w
  2107     0F1E  0236               	subwf	___lwmod@dividend,w
  2108     0F1F                     u2535:
  2109     0F1F  1C03               	skipc
  2110     0F20  2F22               	goto	u2531
  2111     0F21  2F23               	goto	u2530
  2112     0F22                     u2531:
  2113     0F22  2F29               	goto	l3300
  2114     0F23                     u2530:
  2115     0F23                     l3298:
  2116     0F23  0834               	movf	___lwmod@divisor,w
  2117     0F24  02B6               	subwf	___lwmod@dividend,f
  2118     0F25  0835               	movf	___lwmod@divisor+1,w
  2119     0F26  1C03               	skipc
  2120     0F27  03B7               	decf	___lwmod@dividend+1,f
  2121     0F28  02B7               	subwf	___lwmod@dividend+1,f
  2122     0F29                     l3300:
  2123     0F29  3001               	movlw	1
  2124     0F2A                     u2545:
  2125     0F2A  1003               	clrc
  2126     0F2B  0CB5               	rrf	___lwmod@divisor+1,f
  2127     0F2C  0CB4               	rrf	___lwmod@divisor,f
  2128     0F2D  3EFF               	addlw	-1
  2129     0F2E  1D03               	skipz
  2130     0F2F  2F2A               	goto	u2545
  2131     0F30                     l3302:
  2132     0F30  3001               	movlw	1
  2133     0F31  02B9               	subwf	___lwmod@counter,f
  2134     0F32  1D03               	btfss	3,2
  2135     0F33  2F35               	goto	u2551
  2136     0F34  2F36               	goto	u2550
  2137     0F35                     u2551:
  2138     0F35  2F19               	goto	l3296
  2139     0F36                     u2550:
  2140     0F36                     l3304:
  2141     0F36  0837               	movf	___lwmod@dividend+1,w
  2142     0F37  00B5               	movwf	?___lwmod+1
  2143     0F38  0836               	movf	___lwmod@dividend,w
  2144     0F39  00B4               	movwf	?___lwmod
  2145     0F3A                     l782:
  2146     0F3A  0008               	return
  2147     0F3B                     __end_of___lwmod:
  2148                           
  2149                           	psect	text4
  2150     06D5                     __ptext4:	
  2151 ;; *************** function ___lwdiv *****************
  2152 ;; Defined at:
  2153 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  divisor         2   12[BANK0 ] unsigned int 
  2156 ;;  dividend        2   14[BANK0 ] unsigned int 
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;  quotient        2   18[BANK0 ] unsigned int 
  2159 ;;  counter         1   17[BANK0 ] unsigned char 
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  2   12[BANK0 ] unsigned int 
  2162 ;; Registers used:
  2163 ;;		wreg, status,2, status,0
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2169 ;;      Params:         0       4       0       0       0
  2170 ;;      Locals:         0       3       0       0       0
  2171 ;;      Temps:          0       1       0       0       0
  2172 ;;      Totals:         0       8       0       0       0
  2173 ;;Total ram usage:        8 bytes
  2174 ;; Hardware stack levels used: 1
  2175 ;; Hardware stack levels required when called: 4
  2176 ;; This function calls:
  2177 ;;		Nothing
  2178 ;; This function is called by:
  2179 ;;		_printf
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183     06D5                     ___lwdiv:	
  2184                           ;psect for function ___lwdiv
  2185                           
  2186     06D5                     l3260:	
  2187                           ;incstack = 0
  2188                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2189                           
  2190     06D5  1283               	bcf	3,5	;RP0=0, select bank0
  2191     06D6  1303               	bcf	3,6	;RP1=0, select bank0
  2192     06D7  01B2               	clrf	___lwdiv@quotient
  2193     06D8  01B3               	clrf	___lwdiv@quotient+1
  2194     06D9                     l3262:
  2195     06D9  082C               	movf	___lwdiv@divisor,w
  2196     06DA  042D               	iorwf	___lwdiv@divisor+1,w
  2197     06DB  1903               	btfsc	3,2
  2198     06DC  2EDE               	goto	u2431
  2199     06DD  2EDF               	goto	u2430
  2200     06DE                     u2431:
  2201     06DE  2F16               	goto	l3282
  2202     06DF                     u2430:
  2203     06DF                     l3264:
  2204     06DF  01B1               	clrf	___lwdiv@counter
  2205     06E0  0AB1               	incf	___lwdiv@counter,f
  2206     06E1  2EED               	goto	l3270
  2207     06E2                     l3266:
  2208     06E2  3001               	movlw	1
  2209     06E3                     u2445:
  2210     06E3  1003               	clrc
  2211     06E4  0DAC               	rlf	___lwdiv@divisor,f
  2212     06E5  0DAD               	rlf	___lwdiv@divisor+1,f
  2213     06E6  3EFF               	addlw	-1
  2214     06E7  1D03               	skipz
  2215     06E8  2EE3               	goto	u2445
  2216     06E9                     l3268:
  2217     06E9  3001               	movlw	1
  2218     06EA  00B0               	movwf	??___lwdiv
  2219     06EB  0830               	movf	??___lwdiv,w
  2220     06EC  07B1               	addwf	___lwdiv@counter,f
  2221     06ED                     l3270:
  2222     06ED  1FAD               	btfss	___lwdiv@divisor+1,7
  2223     06EE  2EF0               	goto	u2451
  2224     06EF  2EF1               	goto	u2450
  2225     06F0                     u2451:
  2226     06F0  2EE2               	goto	l3266
  2227     06F1                     u2450:
  2228     06F1                     l3272:
  2229     06F1  3001               	movlw	1
  2230     06F2                     u2465:
  2231     06F2  1003               	clrc
  2232     06F3  0DB2               	rlf	___lwdiv@quotient,f
  2233     06F4  0DB3               	rlf	___lwdiv@quotient+1,f
  2234     06F5  3EFF               	addlw	-1
  2235     06F6  1D03               	skipz
  2236     06F7  2EF2               	goto	u2465
  2237     06F8  082D               	movf	___lwdiv@divisor+1,w
  2238     06F9  022F               	subwf	___lwdiv@dividend+1,w
  2239     06FA  1D03               	skipz
  2240     06FB  2EFE               	goto	u2475
  2241     06FC  082C               	movf	___lwdiv@divisor,w
  2242     06FD  022E               	subwf	___lwdiv@dividend,w
  2243     06FE                     u2475:
  2244     06FE  1C03               	skipc
  2245     06FF  2F01               	goto	u2471
  2246     0700  2F02               	goto	u2470
  2247     0701                     u2471:
  2248     0701  2F09               	goto	l3278
  2249     0702                     u2470:
  2250     0702                     l3274:
  2251     0702  082C               	movf	___lwdiv@divisor,w
  2252     0703  02AE               	subwf	___lwdiv@dividend,f
  2253     0704  082D               	movf	___lwdiv@divisor+1,w
  2254     0705  1C03               	skipc
  2255     0706  03AF               	decf	___lwdiv@dividend+1,f
  2256     0707  02AF               	subwf	___lwdiv@dividend+1,f
  2257     0708                     l3276:
  2258     0708  1432               	bsf	___lwdiv@quotient,0
  2259     0709                     l3278:
  2260     0709  3001               	movlw	1
  2261     070A                     u2485:
  2262     070A  1003               	clrc
  2263     070B  0CAD               	rrf	___lwdiv@divisor+1,f
  2264     070C  0CAC               	rrf	___lwdiv@divisor,f
  2265     070D  3EFF               	addlw	-1
  2266     070E  1D03               	skipz
  2267     070F  2F0A               	goto	u2485
  2268     0710                     l3280:
  2269     0710  3001               	movlw	1
  2270     0711  02B1               	subwf	___lwdiv@counter,f
  2271     0712  1D03               	btfss	3,2
  2272     0713  2F15               	goto	u2491
  2273     0714  2F16               	goto	u2490
  2274     0715                     u2491:
  2275     0715  2EF1               	goto	l3272
  2276     0716                     u2490:
  2277     0716                     l3282:
  2278     0716  0833               	movf	___lwdiv@quotient+1,w
  2279     0717  00AD               	movwf	?___lwdiv+1
  2280     0718  0832               	movf	___lwdiv@quotient,w
  2281     0719  00AC               	movwf	?___lwdiv
  2282     071A                     l772:
  2283     071A  0008               	return
  2284     071B                     __end_of___lwdiv:
  2285                           
  2286                           	psect	text5
  2287     0EC3                     __ptext5:	
  2288 ;; *************** function _initYo *****************
  2289 ;; Defined at:
  2290 ;;		line 315 in file "main.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;		None
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;		None
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  1    wreg      void 
  2297 ;; Registers used:
  2298 ;;		wreg, status,2, status,0, pclath, cstack
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2304 ;;      Params:         0       0       0       0       0
  2305 ;;      Locals:         0       0       0       0       0
  2306 ;;      Temps:          0       0       0       0       0
  2307 ;;      Totals:         0       0       0       0       0
  2308 ;;Total ram usage:        0 bytes
  2309 ;; Hardware stack levels used: 1
  2310 ;; Hardware stack levels required when called: 6
  2311 ;; This function calls:
  2312 ;;		_i2c_start
  2313 ;;		_init_ADC
  2314 ;;		_init_CCP1_PWM
  2315 ;;		_init_I2C
  2316 ;;		_init_SPI
  2317 ;;		_init_TMR0
  2318 ;;		_init_TMR1
  2319 ;;		_init_TMR2
  2320 ;;		_init_memoria
  2321 ;;		_init_uart
  2322 ;; This function is called by:
  2323 ;;		_main
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327     0EC3                     _initYo:	
  2328                           ;psect for function _initYo
  2329                           
  2330     0EC3                     l3314:	
  2331                           ;incstack = 0
  2332                           ; Regs used in _initYo: [wreg+status,2+status,0+pclath+cstack]
  2333                           
  2334                           
  2335                           ;main.c: 316:     OSCCON = 0b00001000;
  2336     0EC3  3008               	movlw	8
  2337     0EC4  1683               	bsf	3,5	;RP0=1, select bank1
  2338     0EC5  1303               	bcf	3,6	;RP1=0, select bank1
  2339     0EC6  008F               	movwf	15	;volatile
  2340     0EC7                     l3316:
  2341                           
  2342                           ;main.c: 318:     init_uart();
  2343     0EC7  120A  158A  25BC  120A  158A  	fcall	_init_uart
  2344     0ECC                     l3318:
  2345                           
  2346                           ;main.c: 319:     init_ADC();
  2347     0ECC  120A  158A  256B  120A  158A  	fcall	_init_ADC
  2348     0ED1                     l3320:
  2349                           
  2350                           ;main.c: 320:     init_TMR0();
  2351     0ED1  120A  158A  2475  120A  158A  	fcall	_init_TMR0
  2352     0ED6                     l3322:
  2353                           
  2354                           ;main.c: 321:     init_TMR1();
  2355     0ED6  120A  158A  24BA  120A  158A  	fcall	_init_TMR1
  2356     0EDB                     l3324:
  2357                           
  2358                           ;main.c: 322:     init_TMR2();
  2359     0EDB  120A  158A  24DC  120A  158A  	fcall	_init_TMR2
  2360     0EE0                     l3326:
  2361                           
  2362                           ;main.c: 324:     init_CCP1_PWM();
  2363     0EE0  120A  158A  24A9  120A  158A  	fcall	_init_CCP1_PWM
  2364     0EE5                     l3328:
  2365                           
  2366                           ;main.c: 326:     init_I2C();
  2367     0EE5  120A  118A  27E8  120A  158A  	fcall	_init_I2C
  2368                           
  2369                           ;main.c: 327:     init_SPI();
  2370     0EEA  120A  158A  243C  120A  158A  	fcall	_init_SPI
  2371                           
  2372                           ;main.c: 328:     i2c_start();
  2373     0EEF  120A  158A  2462  120A  158A  	fcall	_i2c_start
  2374                           
  2375                           ;main.c: 329:     init_memoria();
  2376     0EF4  120A  158A  246B  120A  158A  	fcall	_init_memoria
  2377     0EF9                     l3330:
  2378                           
  2379                           ;main.c: 331:     TRISB = 0;
  2380     0EF9  1683               	bsf	3,5	;RP0=1, select bank1
  2381     0EFA  1303               	bcf	3,6	;RP1=0, select bank1
  2382     0EFB  0186               	clrf	6	;volatile
  2383     0EFC                     l3332:
  2384                           
  2385                           ;main.c: 333:     INTCONbits.GIE = 1;
  2386     0EFC  178B               	bsf	11,7	;volatile
  2387     0EFD                     l3334:
  2388                           
  2389                           ;main.c: 334:     INTCONbits.PEIE = 1;
  2390     0EFD  170B               	bsf	11,6	;volatile
  2391     0EFE                     l280:
  2392     0EFE  0008               	return
  2393     0EFF                     __end_of_initYo:
  2394                           
  2395                           	psect	text6
  2396     0DBC                     __ptext6:	
  2397 ;; *************** function _init_uart *****************
  2398 ;; Defined at:
  2399 ;;		line 130 in file "main.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2413 ;;      Params:         0       0       0       0       0
  2414 ;;      Locals:         0       0       0       0       0
  2415 ;;      Temps:          0       0       0       0       0
  2416 ;;      Totals:         0       0       0       0       0
  2417 ;;Total ram usage:        0 bytes
  2418 ;; Hardware stack levels used: 1
  2419 ;; Hardware stack levels required when called: 4
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		_initYo
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427     0DBC                     _init_uart:	
  2428                           ;psect for function _init_uart
  2429                           
  2430     0DBC                     l3122:	
  2431                           ;incstack = 0
  2432                           ; Regs used in _init_uart: [wreg+status,2]
  2433                           
  2434                           
  2435                           ;main.c: 131:     TXSTAbits.BRGH = 0;
  2436     0DBC  1683               	bsf	3,5	;RP0=1, select bank1
  2437     0DBD  1303               	bcf	3,6	;RP1=0, select bank1
  2438     0DBE  1118               	bcf	24,2	;volatile
  2439                           
  2440                           ;main.c: 132:     BAUDCTLbits.BRG16 = 0;
  2441     0DBF  1683               	bsf	3,5	;RP0=1, select bank3
  2442     0DC0  1703               	bsf	3,6	;RP1=1, select bank3
  2443     0DC1  1187               	bcf	7,3	;volatile
  2444     0DC2                     l3124:
  2445                           
  2446                           ;main.c: 135:     SPBRGH = 0;
  2447     0DC2  1683               	bsf	3,5	;RP0=1, select bank1
  2448     0DC3  1303               	bcf	3,6	;RP1=0, select bank1
  2449     0DC4  019A               	clrf	26	;volatile
  2450     0DC5                     l3126:
  2451                           
  2452                           ;main.c: 136:     SPBRG = 32;
  2453     0DC5  3020               	movlw	32
  2454     0DC6  0099               	movwf	25	;volatile
  2455     0DC7                     l3128:
  2456                           
  2457                           ;main.c: 138:     TXSTAbits.SYNC = 0;
  2458     0DC7  1218               	bcf	24,4	;volatile
  2459     0DC8                     l3130:
  2460                           
  2461                           ;main.c: 139:     TXSTAbits.TX9 = 0;
  2462     0DC8  1318               	bcf	24,6	;volatile
  2463     0DC9                     l3132:
  2464                           
  2465                           ;main.c: 140:     RCSTAbits.RX9 = 0;
  2466     0DC9  1283               	bcf	3,5	;RP0=0, select bank0
  2467     0DCA  1303               	bcf	3,6	;RP1=0, select bank0
  2468     0DCB  1318               	bcf	24,6	;volatile
  2469     0DCC                     l3134:
  2470                           
  2471                           ;main.c: 142:     PIE1bits.TXIE = 1;
  2472     0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  2473     0DCD  1303               	bcf	3,6	;RP1=0, select bank1
  2474     0DCE  160C               	bsf	12,4	;volatile
  2475     0DCF                     l3136:
  2476                           
  2477                           ;main.c: 143:     PIE1bits.RCIE = 1;
  2478     0DCF  168C               	bsf	12,5	;volatile
  2479     0DD0                     l3138:
  2480                           
  2481                           ;main.c: 145:     RCSTAbits.SPEN = 1;
  2482     0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  2483     0DD1  1303               	bcf	3,6	;RP1=0, select bank0
  2484     0DD2  1798               	bsf	24,7	;volatile
  2485     0DD3                     l3140:
  2486                           
  2487                           ;main.c: 147:     TXSTAbits.TXEN = 0;
  2488     0DD3  1683               	bsf	3,5	;RP0=1, select bank1
  2489     0DD4  1303               	bcf	3,6	;RP1=0, select bank1
  2490     0DD5  1298               	bcf	24,5	;volatile
  2491     0DD6                     l3142:
  2492                           
  2493                           ;main.c: 148:     TXSTAbits.TXEN = 1;
  2494     0DD6  1698               	bsf	24,5	;volatile
  2495     0DD7                     l224:
  2496     0DD7  0008               	return
  2497     0DD8                     __end_of_init_uart:
  2498                           
  2499                           	psect	text7
  2500     0C6B                     __ptext7:	
  2501 ;; *************** function _init_memoria *****************
  2502 ;; Defined at:
  2503 ;;		line 227 in file "main.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;		None
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;		None
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  1    wreg      void 
  2510 ;; Registers used:
  2511 ;;		None
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2517 ;;      Params:         0       0       0       0       0
  2518 ;;      Locals:         0       0       0       0       0
  2519 ;;      Temps:          0       0       0       0       0
  2520 ;;      Totals:         0       0       0       0       0
  2521 ;;Total ram usage:        0 bytes
  2522 ;; Hardware stack levels used: 1
  2523 ;; Hardware stack levels required when called: 4
  2524 ;; This function calls:
  2525 ;;		Nothing
  2526 ;; This function is called by:
  2527 ;;		_initYo
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531     0C6B                     _init_memoria:	
  2532                           ;psect for function _init_memoria
  2533                           
  2534     0C6B                     l3180:	
  2535                           ;incstack = 0
  2536                           ; Regs used in _init_memoria: []
  2537                           
  2538                           
  2539                           ;main.c: 228:     EECON1bits.EEPGD = 0;
  2540     0C6B  1683               	bsf	3,5	;RP0=1, select bank3
  2541     0C6C  1703               	bsf	3,6	;RP1=1, select bank3
  2542     0C6D  138C               	bcf	12,7	;volsfr
  2543                           
  2544                           ;main.c: 229:     PIR2bits.EEIF = 0;
  2545     0C6E  1283               	bcf	3,5	;RP0=0, select bank0
  2546     0C6F  1303               	bcf	3,6	;RP1=0, select bank0
  2547     0C70  120D               	bcf	13,4	;volatile
  2548                           
  2549                           ;main.c: 230:     PIE2bits.EEIE = 1;
  2550     0C71  1683               	bsf	3,5	;RP0=1, select bank1
  2551     0C72  1303               	bcf	3,6	;RP1=0, select bank1
  2552     0C73  160D               	bsf	13,4	;volatile
  2553     0C74                     l236:
  2554     0C74  0008               	return
  2555     0C75                     __end_of_init_memoria:
  2556                           
  2557                           	psect	text8
  2558     0CDC                     __ptext8:	
  2559 ;; *************** function _init_TMR2 *****************
  2560 ;; Defined at:
  2561 ;;		line 93 in file "main.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;		None
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;		None
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  1    wreg      void 
  2568 ;; Registers used:
  2569 ;;		wreg, status,2, status,0
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2575 ;;      Params:         0       0       0       0       0
  2576 ;;      Locals:         0       0       0       0       0
  2577 ;;      Temps:          0       0       0       0       0
  2578 ;;      Totals:         0       0       0       0       0
  2579 ;;Total ram usage:        0 bytes
  2580 ;; Hardware stack levels used: 1
  2581 ;; Hardware stack levels required when called: 4
  2582 ;; This function calls:
  2583 ;;		Nothing
  2584 ;; This function is called by:
  2585 ;;		_initYo
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589     0CDC                     _init_TMR2:	
  2590                           ;psect for function _init_TMR2
  2591                           
  2592     0CDC                     l3100:	
  2593                           ;incstack = 0
  2594                           ; Regs used in _init_TMR2: [wreg+status,2+status,0]
  2595                           
  2596                           
  2597                           ;main.c: 94:     PR2 = 167;
  2598     0CDC  30A7               	movlw	167
  2599     0CDD  1683               	bsf	3,5	;RP0=1, select bank1
  2600     0CDE  1303               	bcf	3,6	;RP1=0, select bank1
  2601     0CDF  0092               	movwf	18	;volatile
  2602     0CE0                     l3102:
  2603                           
  2604                           ;main.c: 96:     T2CONbits.T2CKPS = 0b00;
  2605     0CE0  30FC               	movlw	-4
  2606     0CE1  1283               	bcf	3,5	;RP0=0, select bank0
  2607     0CE2  1303               	bcf	3,6	;RP1=0, select bank0
  2608     0CE3  0592               	andwf	18,f	;volatile
  2609     0CE4                     l3104:
  2610                           
  2611                           ;main.c: 97:     T2CONbits.TOUTPS = 0b0000;
  2612     0CE4  3087               	movlw	-121
  2613     0CE5  0592               	andwf	18,f	;volatile
  2614     0CE6                     l3106:
  2615                           
  2616                           ;main.c: 98:     PIE1bits.TMR2IE = 1;
  2617     0CE6  1683               	bsf	3,5	;RP0=1, select bank1
  2618     0CE7  1303               	bcf	3,6	;RP1=0, select bank1
  2619     0CE8  148C               	bsf	12,1	;volatile
  2620     0CE9                     l3108:
  2621                           
  2622                           ;main.c: 99:     PIR1bits.TMR2IF = 0;
  2623     0CE9  1283               	bcf	3,5	;RP0=0, select bank0
  2624     0CEA  1303               	bcf	3,6	;RP1=0, select bank0
  2625     0CEB  108C               	bcf	12,1	;volatile
  2626     0CEC                     l3110:
  2627                           
  2628                           ;main.c: 100:     T2CONbits.TMR2ON = 1;
  2629     0CEC  1512               	bsf	18,2	;volatile
  2630     0CED                     l218:
  2631     0CED  0008               	return
  2632     0CEE                     __end_of_init_TMR2:
  2633                           
  2634                           	psect	text9
  2635     0CBA                     __ptext9:	
  2636 ;; *************** function _init_TMR1 *****************
  2637 ;; Defined at:
  2638 ;;		line 82 in file "main.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;		None
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;		None
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      void 
  2645 ;; Registers used:
  2646 ;;		wreg, status,2, status,0
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2652 ;;      Params:         0       0       0       0       0
  2653 ;;      Locals:         0       0       0       0       0
  2654 ;;      Temps:          0       0       0       0       0
  2655 ;;      Totals:         0       0       0       0       0
  2656 ;;Total ram usage:        0 bytes
  2657 ;; Hardware stack levels used: 1
  2658 ;; Hardware stack levels required when called: 4
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_initYo
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666     0CBA                     _init_TMR1:	
  2667                           ;psect for function _init_TMR1
  2668                           
  2669     0CBA                     l3088:	
  2670                           ;incstack = 0
  2671                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
  2672                           
  2673                           
  2674                           ;main.c: 83:     TMR1H = eltimer1H;
  2675     0CBA  087D               	movf	_eltimer1H,w
  2676     0CBB  1283               	bcf	3,5	;RP0=0, select bank0
  2677     0CBC  1303               	bcf	3,6	;RP1=0, select bank0
  2678     0CBD  008F               	movwf	15	;volatile
  2679                           
  2680                           ;main.c: 84:     TMR1L = eltimer1L;
  2681     0CBE  0852               	movf	_eltimer1L,w
  2682     0CBF  008E               	movwf	14	;volatile
  2683     0CC0                     l3090:
  2684                           
  2685                           ;main.c: 85:     T1CONbits.TMR1CS = 0;
  2686     0CC0  1090               	bcf	16,1	;volatile
  2687     0CC1                     l3092:
  2688                           
  2689                           ;main.c: 87:     T1CONbits.T1CKPS = 0b00;
  2690     0CC1  30CF               	movlw	-49
  2691     0CC2  0590               	andwf	16,f	;volatile
  2692     0CC3                     l3094:
  2693                           
  2694                           ;main.c: 88:     T1CONbits.TMR1GE = 0;
  2695     0CC3  1310               	bcf	16,6	;volatile
  2696     0CC4                     l3096:
  2697                           
  2698                           ;main.c: 89:     PIE1bits.TMR1IE = 1;
  2699     0CC4  1683               	bsf	3,5	;RP0=1, select bank1
  2700     0CC5  1303               	bcf	3,6	;RP1=0, select bank1
  2701     0CC6  140C               	bsf	12,0	;volatile
  2702     0CC7                     l3098:
  2703                           
  2704                           ;main.c: 90:     T1CONbits.TMR1ON = 1;
  2705     0CC7  1283               	bcf	3,5	;RP0=0, select bank0
  2706     0CC8  1303               	bcf	3,6	;RP1=0, select bank0
  2707     0CC9  1410               	bsf	16,0	;volatile
  2708     0CCA                     l215:
  2709     0CCA  0008               	return
  2710     0CCB                     __end_of_init_TMR1:
  2711                           
  2712                           	psect	text10
  2713     0C75                     __ptext10:	
  2714 ;; *************** function _init_TMR0 *****************
  2715 ;; Defined at:
  2716 ;;		line 72 in file "main.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;		None
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;		None
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  1    wreg      void 
  2723 ;; Registers used:
  2724 ;;		wreg, status,2, status,0
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2730 ;;      Params:         0       0       0       0       0
  2731 ;;      Locals:         0       0       0       0       0
  2732 ;;      Temps:          0       0       0       0       0
  2733 ;;      Totals:         0       0       0       0       0
  2734 ;;Total ram usage:        0 bytes
  2735 ;; Hardware stack levels used: 1
  2736 ;; Hardware stack levels required when called: 4
  2737 ;; This function calls:
  2738 ;;		Nothing
  2739 ;; This function is called by:
  2740 ;;		_initYo
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744     0C75                     _init_TMR0:	
  2745                           ;psect for function _init_TMR0
  2746                           
  2747     0C75                     l3078:	
  2748                           ;incstack = 0
  2749                           ; Regs used in _init_TMR0: [wreg+status,2+status,0]
  2750                           
  2751                           
  2752                           ;main.c: 73:     TMR0 = 61;
  2753     0C75  303D               	movlw	61
  2754     0C76  1283               	bcf	3,5	;RP0=0, select bank0
  2755     0C77  1303               	bcf	3,6	;RP1=0, select bank0
  2756     0C78  0081               	movwf	1	;volatile
  2757     0C79                     l3080:
  2758                           
  2759                           ;main.c: 76:     OPTION_REGbits.T0CS = 0;
  2760     0C79  1683               	bsf	3,5	;RP0=1, select bank1
  2761     0C7A  1303               	bcf	3,6	;RP1=0, select bank1
  2762     0C7B  1281               	bcf	1,5	;volatile
  2763     0C7C                     l3082:
  2764                           
  2765                           ;main.c: 77:     OPTION_REGbits.PSA = 0;
  2766     0C7C  1181               	bcf	1,3	;volatile
  2767     0C7D                     l3084:
  2768                           
  2769                           ;main.c: 78:     OPTION_REGbits.PS = 0b111;
  2770     0C7D  3007               	movlw	7
  2771     0C7E  0481               	iorwf	1,f	;volatile
  2772     0C7F                     l3086:
  2773                           
  2774                           ;main.c: 79:     INTCONbits.T0IE = 1;
  2775     0C7F  168B               	bsf	11,5	;volatile
  2776     0C80                     l212:
  2777     0C80  0008               	return
  2778     0C81                     __end_of_init_TMR0:
  2779                           
  2780                           	psect	text11
  2781     0C3C                     __ptext11:	
  2782 ;; *************** function _init_SPI *****************
  2783 ;; Defined at:
  2784 ;;		line 202 in file "main.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;		None
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;		None
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      void 
  2791 ;; Registers used:
  2792 ;;		None
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2798 ;;      Params:         0       0       0       0       0
  2799 ;;      Locals:         0       0       0       0       0
  2800 ;;      Temps:          0       0       0       0       0
  2801 ;;      Totals:         0       0       0       0       0
  2802 ;;Total ram usage:        0 bytes
  2803 ;; Hardware stack levels used: 1
  2804 ;; Hardware stack levels required when called: 4
  2805 ;; This function calls:
  2806 ;;		Nothing
  2807 ;; This function is called by:
  2808 ;;		_initYo
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812     0C3C                     _init_SPI:	
  2813                           ;psect for function _init_SPI
  2814                           
  2815     0C3C                     l3156:	
  2816                           ;incstack = 0
  2817                           ; Regs used in _init_SPI: []
  2818                           
  2819                           
  2820                           ;main.c: 208:     TRISCbits.TRISC5 = 0;
  2821     0C3C  1683               	bsf	3,5	;RP0=1, select bank1
  2822     0C3D  1303               	bcf	3,6	;RP1=0, select bank1
  2823     0C3E  1287               	bcf	7,5	;volatile
  2824     0C3F                     l230:
  2825     0C3F  0008               	return
  2826     0C40                     __end_of_init_SPI:
  2827                           
  2828                           	psect	text12
  2829     07E8                     __ptext12:	
  2830 ;; *************** function _init_I2C *****************
  2831 ;; Defined at:
  2832 ;;		line 151 in file "main.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;		None
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1    wreg      void 
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, status,0
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2846 ;;      Params:         0       0       0       0       0
  2847 ;;      Locals:         0       0       0       0       0
  2848 ;;      Temps:          0       0       0       0       0
  2849 ;;      Totals:         0       0       0       0       0
  2850 ;;Total ram usage:        0 bytes
  2851 ;; Hardware stack levels used: 1
  2852 ;; Hardware stack levels required when called: 4
  2853 ;; This function calls:
  2854 ;;		Nothing
  2855 ;; This function is called by:
  2856 ;;		_initYo
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860     07E8                     _init_I2C:	
  2861                           ;psect for function _init_I2C
  2862                           
  2863     07E8                     l3144:	
  2864                           ;incstack = 0
  2865                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
  2866                           
  2867                           
  2868                           ;main.c: 154:     TRISCbits.TRISC3 = 1;
  2869     07E8  1683               	bsf	3,5	;RP0=1, select bank1
  2870     07E9  1303               	bcf	3,6	;RP1=0, select bank1
  2871     07EA  1587               	bsf	7,3	;volatile
  2872                           
  2873                           ;main.c: 155:     TRISCbits.TRISC4 = 1;
  2874     07EB  1607               	bsf	7,4	;volatile
  2875     07EC                     l3146:
  2876                           
  2877                           ;main.c: 158:     SSPCONbits.SSPM = 0;
  2878     07EC  30F0               	movlw	-16
  2879     07ED  1283               	bcf	3,5	;RP0=0, select bank0
  2880     07EE  1303               	bcf	3,6	;RP1=0, select bank0
  2881     07EF  0594               	andwf	20,f	;volatile
  2882                           
  2883                           ;main.c: 159:     SSPCONbits.SSPM = 0;
  2884     07F0  30F0               	movlw	-16
  2885     07F1  0594               	andwf	20,f	;volatile
  2886     07F2                     l3148:
  2887                           
  2888                           ;main.c: 161:     ANSEL = 0;
  2889     07F2  1683               	bsf	3,5	;RP0=1, select bank3
  2890     07F3  1703               	bsf	3,6	;RP1=1, select bank3
  2891     07F4  0188               	clrf	8	;volatile
  2892     07F5                     l3150:
  2893                           
  2894                           ;main.c: 177:     SSPADD = (20000000 / 4) - 1;
  2895     07F5  303F               	movlw	63
  2896     07F6  1683               	bsf	3,5	;RP0=1, select bank1
  2897     07F7  1303               	bcf	3,6	;RP1=0, select bank1
  2898     07F8  0093               	movwf	19	;volatile
  2899     07F9                     l3152:
  2900                           
  2901                           ;main.c: 179:     PIR1bits.SSPIF = 0;
  2902     07F9  1283               	bcf	3,5	;RP0=0, select bank0
  2903     07FA  1303               	bcf	3,6	;RP1=0, select bank0
  2904     07FB  118C               	bcf	12,3	;volatile
  2905     07FC                     l3154:
  2906                           
  2907                           ;main.c: 180:     PIE1bits.SSPIE = 1;
  2908     07FC  1683               	bsf	3,5	;RP0=1, select bank1
  2909     07FD  1303               	bcf	3,6	;RP1=0, select bank1
  2910     07FE  158C               	bsf	12,3	;volatile
  2911     07FF                     l227:
  2912     07FF  0008               	return
  2913     0800                     __end_of_init_I2C:
  2914                           
  2915                           	psect	text13
  2916     0CA9                     __ptext13:	
  2917 ;; *************** function _init_CCP1_PWM *****************
  2918 ;; Defined at:
  2919 ;;		line 103 in file "main.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;		None
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;		None
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      void 
  2926 ;; Registers used:
  2927 ;;		wreg, status,2, status,0
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2933 ;;      Params:         0       0       0       0       0
  2934 ;;      Locals:         0       0       0       0       0
  2935 ;;      Temps:          0       0       0       0       0
  2936 ;;      Totals:         0       0       0       0       0
  2937 ;;Total ram usage:        0 bytes
  2938 ;; Hardware stack levels used: 1
  2939 ;; Hardware stack levels required when called: 4
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_initYo
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947     0CA9                     _init_CCP1_PWM:	
  2948                           ;psect for function _init_CCP1_PWM
  2949                           
  2950     0CA9                     l3112:	
  2951                           ;incstack = 0
  2952                           ; Regs used in _init_CCP1_PWM: [wreg+status,2+status,0]
  2953                           
  2954                           
  2955                           ;main.c: 105:     TRISCbits.TRISC2 = 0;
  2956     0CA9  1683               	bsf	3,5	;RP0=1, select bank1
  2957     0CAA  1303               	bcf	3,6	;RP1=0, select bank1
  2958     0CAB  1107               	bcf	7,2	;volatile
  2959     0CAC                     l3114:
  2960                           
  2961                           ;main.c: 106:     ANSEL = 0;
  2962     0CAC  1683               	bsf	3,5	;RP0=1, select bank3
  2963     0CAD  1703               	bsf	3,6	;RP1=1, select bank3
  2964     0CAE  0188               	clrf	8	;volatile
  2965     0CAF                     l3116:
  2966                           
  2967                           ;main.c: 107:     CCP1CONbits.CCP1M = 0b1100;
  2968     0CAF  1283               	bcf	3,5	;RP0=0, select bank0
  2969     0CB0  1303               	bcf	3,6	;RP1=0, select bank0
  2970     0CB1  0817               	movf	23,w	;volatile
  2971     0CB2  39F0               	andlw	-16
  2972     0CB3  380C               	iorlw	12
  2973     0CB4  0097               	movwf	23	;volatile
  2974     0CB5                     l3118:
  2975                           
  2976                           ;main.c: 108:     CCP1CONbits.P1M = 0b00;
  2977     0CB5  303F               	movlw	-193
  2978     0CB6  0597               	andwf	23,f	;volatile
  2979     0CB7                     l3120:
  2980                           
  2981                           ;main.c: 110:     CCPR1L = porcentaje;
  2982     0CB7  0860               	movf	_porcentaje,w
  2983     0CB8  0095               	movwf	21	;volatile
  2984     0CB9                     l221:
  2985     0CB9  0008               	return
  2986     0CBA                     __end_of_init_CCP1_PWM:
  2987                           
  2988                           	psect	text14
  2989     0D6B                     __ptext14:	
  2990 ;; *************** function _init_ADC *****************
  2991 ;; Defined at:
  2992 ;;		line 211 in file "main.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;		None
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;		None
  2997 ;; Return value:  Size  Location     Type
  2998 ;;                  1    wreg      void 
  2999 ;; Registers used:
  3000 ;;		wreg, status,2, status,0
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3006 ;;      Params:         0       0       0       0       0
  3007 ;;      Locals:         0       0       0       0       0
  3008 ;;      Temps:          0       0       0       0       0
  3009 ;;      Totals:         0       0       0       0       0
  3010 ;;Total ram usage:        0 bytes
  3011 ;; Hardware stack levels used: 1
  3012 ;; Hardware stack levels required when called: 4
  3013 ;; This function calls:
  3014 ;;		Nothing
  3015 ;; This function is called by:
  3016 ;;		_initYo
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020     0D6B                     _init_ADC:	
  3021                           ;psect for function _init_ADC
  3022                           
  3023     0D6B                     l3158:	
  3024                           ;incstack = 0
  3025                           ; Regs used in _init_ADC: [wreg+status,2+status,0]
  3026                           
  3027                           
  3028                           ;main.c: 212:     TRISA = 1;
  3029     0D6B  3001               	movlw	1
  3030     0D6C  1683               	bsf	3,5	;RP0=1, select bank1
  3031     0D6D  1303               	bcf	3,6	;RP1=0, select bank1
  3032     0D6E  0085               	movwf	5	;volatile
  3033     0D6F                     l3160:
  3034                           
  3035                           ;main.c: 213:     ANSELbits.ANS0 = 1;
  3036     0D6F  1683               	bsf	3,5	;RP0=1, select bank3
  3037     0D70  1703               	bsf	3,6	;RP1=1, select bank3
  3038     0D71  1408               	bsf	8,0	;volatile
  3039     0D72                     l3162:
  3040                           
  3041                           ;main.c: 214:     ANSELbits.ANS1 = 1;
  3042     0D72  1488               	bsf	8,1	;volatile
  3043     0D73                     l3164:
  3044                           
  3045                           ;main.c: 215:     ANSELbits.ANS2 = 1;
  3046     0D73  1508               	bsf	8,2	;volatile
  3047     0D74                     l3166:
  3048                           
  3049                           ;main.c: 216:     ADCON0bits.ADCS = 0b10;
  3050     0D74  1283               	bcf	3,5	;RP0=0, select bank0
  3051     0D75  1303               	bcf	3,6	;RP1=0, select bank0
  3052     0D76  081F               	movf	31,w	;volatile
  3053     0D77  393F               	andlw	-193
  3054     0D78  3880               	iorlw	128
  3055     0D79  009F               	movwf	31	;volatile
  3056     0D7A                     l3168:
  3057                           
  3058                           ;main.c: 217:     ADCON0bits.CHS = 0b0000;
  3059     0D7A  30C3               	movlw	-61
  3060     0D7B  059F               	andwf	31,f	;volatile
  3061     0D7C                     l3170:
  3062                           
  3063                           ;main.c: 218:     ADCON0bits.ADON = 1;
  3064     0D7C  141F               	bsf	31,0	;volatile
  3065     0D7D                     l3172:
  3066                           
  3067                           ;main.c: 219:     ADCON1bits.ADFM = 1;
  3068     0D7D  1683               	bsf	3,5	;RP0=1, select bank1
  3069     0D7E  1303               	bcf	3,6	;RP1=0, select bank1
  3070     0D7F  179F               	bsf	31,7	;volatile
  3071     0D80                     l3174:
  3072                           
  3073                           ;main.c: 221:     ADCON1bits.VCFG1 = 0;
  3074     0D80  129F               	bcf	31,5	;volatile
  3075     0D81                     l3176:
  3076                           
  3077                           ;main.c: 222:     ADCON1bits.VCFG0 = 0;
  3078     0D81  121F               	bcf	31,4	;volatile
  3079     0D82                     l3178:
  3080                           
  3081                           ;main.c: 224:     PIE1bits.ADIE = 1;
  3082     0D82  170C               	bsf	12,6	;volatile
  3083     0D83                     l233:
  3084     0D83  0008               	return
  3085     0D84                     __end_of_init_ADC:
  3086                           
  3087                           	psect	text15
  3088     0C62                     __ptext15:	
  3089 ;; *************** function _i2c_start *****************
  3090 ;; Defined at:
  3091 ;;		line 16 in file "i2c-v2.c"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;		None
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;		None
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  1    wreg      void 
  3098 ;; Registers used:
  3099 ;;		status,2, status,0, pclath, cstack
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3105 ;;      Params:         0       0       0       0       0
  3106 ;;      Locals:         0       0       0       0       0
  3107 ;;      Temps:          0       0       0       0       0
  3108 ;;      Totals:         0       0       0       0       0
  3109 ;;Total ram usage:        0 bytes
  3110 ;; Hardware stack levels used: 1
  3111 ;; Hardware stack levels required when called: 5
  3112 ;; This function calls:
  3113 ;;		_wait_MSSP
  3114 ;; This function is called by:
  3115 ;;		_initYo
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119     0C62                     _i2c_start:	
  3120                           ;psect for function _i2c_start
  3121                           
  3122     0C62                     l3072:	
  3123                           ;incstack = 0
  3124                           ; Regs used in _i2c_start: [status,2+status,0+pclath+cstack]
  3125                           
  3126                           
  3127                           ;i2c-v2.c: 18:     SSPCON2bits.SEN = 1;
  3128     0C62  1683               	bsf	3,5	;RP0=1, select bank1
  3129     0C63  1303               	bcf	3,6	;RP1=0, select bank1
  3130     0C64  1411               	bsf	17,0	;volatile
  3131     0C65                     l3074:
  3132                           
  3133                           ;i2c-v2.c: 19:     wait_MSSP();
  3134     0C65  120A  158A  2440  120A  158A  	fcall	_wait_MSSP
  3135     0C6A                     l15:
  3136     0C6A  0008               	return
  3137     0C6B                     __end_of_i2c_start:
  3138                           
  3139                           	psect	text16
  3140     061D                     __ptext16:	
  3141 ;; *************** function _initActuadoresSegunMemoria *****************
  3142 ;; Defined at:
  3143 ;;		line 431 in file "main.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;		None
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;		None
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  1    wreg      void 
  3150 ;; Registers used:
  3151 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3157 ;;      Params:         0       0       0       0       0
  3158 ;;      Locals:         0       3       0       0       0
  3159 ;;      Temps:          0       0       0       0       0
  3160 ;;      Totals:         0       3       0       0       0
  3161 ;;Total ram usage:        3 bytes
  3162 ;; Hardware stack levels used: 1
  3163 ;; Hardware stack levels required when called: 7
  3164 ;; This function calls:
  3165 ;;		_getnoPrimerArranque
  3166 ;;		_leerMemoria
  3167 ;;		_setLED
  3168 ;;		_setPWM
  3169 ;; This function is called by:
  3170 ;;		_main
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174     061D                     _initActuadoresSegunMemoria:	
  3175                           ;psect for function _initActuadoresSegunMemoria
  3176                           
  3177     061D                     l3366:	
  3178                           ;incstack = 0
  3179                           ; Regs used in _initActuadoresSegunMemoria: [wreg+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  3180                           
  3181                           
  3182                           ;main.c: 432:     if (getnoPrimerArranque() == FALSE) {
  3183     061D  120A  158A  25A0  120A  118A  	fcall	_getnoPrimerArranque
  3184     0622  3A00               	xorlw	0
  3185     0623  1D03               	skipz
  3186     0624  2E26               	goto	u2601
  3187     0625  2E27               	goto	u2600
  3188     0626                     u2601:
  3189     0626  2E3C               	goto	l3370
  3190     0627                     u2600:
  3191     0627                     l3368:
  3192                           
  3193                           ;main.c: 433:         setPWM(0);
  3194     0627  3000               	movlw	0
  3195     0628  120A  158A  262A  120A  118A  	fcall	_setPWM
  3196                           
  3197                           ;main.c: 434:         setLED(255, 255, 255, 31);
  3198     062D  30FF               	movlw	255
  3199     062E  1283               	bcf	3,5	;RP0=0, select bank0
  3200     062F  1303               	bcf	3,6	;RP1=0, select bank0
  3201     0630  00B8               	movwf	setLED@green
  3202     0631  30FF               	movlw	255
  3203     0632  00B9               	movwf	setLED@blue
  3204     0633  301F               	movlw	31
  3205     0634  00BA               	movwf	setLED@luminosidad
  3206     0635  30FF               	movlw	255
  3207     0636  120A  118A  27A5  120A  118A  	fcall	_setLED
  3208                           
  3209                           ;main.c: 435:     } else {
  3210     063B  2E7A               	goto	l321
  3211     063C                     l3370:
  3212                           
  3213                           ;main.c: 436:         setPWM(leerMemoria(direccionPWM));
  3214     063C  1283               	bcf	3,5	;RP0=0, select bank0
  3215     063D  1303               	bcf	3,6	;RP1=0, select bank0
  3216     063E  0851               	movf	_direccionPWM,w
  3217     063F  120A  158A  2584  120A  118A  	fcall	_leerMemoria
  3218     0644  120A  158A  262A  120A  118A  	fcall	_setPWM
  3219     0649                     l3372:
  3220                           
  3221                           ;main.c: 437:         setLED(leerMemoria(direccionLED), leerMemoria(direccionLED + 1 * 8
      +                          ), leerMemoria(direccionLED + 2 * 8), leerMemoria(direccionLED + 3 * 8));
  3222     0649  1283               	bcf	3,5	;RP0=0, select bank0
  3223     064A  1303               	bcf	3,6	;RP1=0, select bank0
  3224     064B  0850               	movf	_direccionLED,w
  3225     064C  3E08               	addlw	8
  3226     064D  120A  158A  2584  120A  118A  	fcall	_leerMemoria
  3227     0652  1283               	bcf	3,5	;RP0=0, select bank0
  3228     0653  1303               	bcf	3,6	;RP1=0, select bank0
  3229     0654  00BC               	movwf	_initActuadoresSegunMemoria$1570
  3230     0655                     l3374:
  3231                           
  3232                           ;main.c: 437:         setLED(leerMemoria(direccionLED), leerMemoria(direccionLED + 1 * 8
      +                          ), leerMemoria(direccionLED + 2 * 8), leerMemoria(direccionLED + 3 * 8));
  3233     0655  0850               	movf	_direccionLED,w
  3234     0656  3E10               	addlw	16
  3235     0657  120A  158A  2584  120A  118A  	fcall	_leerMemoria
  3236     065C  1283               	bcf	3,5	;RP0=0, select bank0
  3237     065D  1303               	bcf	3,6	;RP1=0, select bank0
  3238     065E  00BD               	movwf	_initActuadoresSegunMemoria$1571
  3239     065F                     l3376:
  3240                           
  3241                           ;main.c: 437:         setLED(leerMemoria(direccionLED), leerMemoria(direccionLED + 1 * 8
      +                          ), leerMemoria(direccionLED + 2 * 8), leerMemoria(direccionLED + 3 * 8));
  3242     065F  0850               	movf	_direccionLED,w
  3243     0660  3E18               	addlw	24
  3244     0661  120A  158A  2584  120A  118A  	fcall	_leerMemoria
  3245     0666  1283               	bcf	3,5	;RP0=0, select bank0
  3246     0667  1303               	bcf	3,6	;RP1=0, select bank0
  3247     0668  00BE               	movwf	_initActuadoresSegunMemoria$1572
  3248     0669                     l3378:
  3249                           
  3250                           ;main.c: 437:         setLED(leerMemoria(direccionLED), leerMemoria(direccionLED + 1 * 8
      +                          ), leerMemoria(direccionLED + 2 * 8), leerMemoria(direccionLED + 3 * 8));
  3251     0669  083C               	movf	_initActuadoresSegunMemoria$1570,w
  3252     066A  00B8               	movwf	setLED@green
  3253     066B  083D               	movf	_initActuadoresSegunMemoria$1571,w
  3254     066C  00B9               	movwf	setLED@blue
  3255     066D  083E               	movf	_initActuadoresSegunMemoria$1572,w
  3256     066E  00BA               	movwf	setLED@luminosidad
  3257     066F  0850               	movf	_direccionLED,w
  3258     0670  120A  158A  2584  120A  118A  	fcall	_leerMemoria
  3259     0675  120A  118A  27A5  120A  118A  	fcall	_setLED
  3260     067A                     l321:
  3261     067A  0008               	return
  3262     067B                     __end_of_initActuadoresSegunMemoria:
  3263                           
  3264                           	psect	text17
  3265     0E2A                     __ptext17:	
  3266 ;; *************** function _setPWM *****************
  3267 ;; Defined at:
  3268 ;;		line 347 in file "main.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;  porcent         1    wreg     unsigned char 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;  porcent         1   23[BANK0 ] unsigned char 
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3282 ;;      Params:         0       0       0       0       0
  3283 ;;      Locals:         0       1       0       0       0
  3284 ;;      Temps:          0       2       0       0       0
  3285 ;;      Totals:         0       3       0       0       0
  3286 ;;Total ram usage:        3 bytes
  3287 ;; Hardware stack levels used: 1
  3288 ;; Hardware stack levels required when called: 6
  3289 ;; This function calls:
  3290 ;;		___awdiv
  3291 ;;		___bmul
  3292 ;;		_escribirMemoria
  3293 ;; This function is called by:
  3294 ;;		_initActuadoresSegunMemoria
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298     0E2A                     _setPWM:	
  3299                           ;psect for function _setPWM
  3300                           
  3301                           
  3302                           ;incstack = 0
  3303                           ; Regs used in _setPWM: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3304                           ;setPWM@porcent stored from wreg
  3305     0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  3306     0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  3307     0E2C  00B7               	movwf	setPWM@porcent
  3308     0E2D                     l3236:
  3309                           
  3310                           ;main.c: 348:     porcentaje = (char) (porcent / 100);
  3311     0E2D  3064               	movlw	100
  3312     0E2E  00AC               	movwf	___awdiv@divisor
  3313     0E2F  3000               	movlw	0
  3314     0E30  00AD               	movwf	___awdiv@divisor+1
  3315     0E31  0837               	movf	setPWM@porcent,w
  3316     0E32  00B5               	movwf	??_setPWM
  3317     0E33  01B6               	clrf	??_setPWM+1
  3318     0E34  0835               	movf	??_setPWM,w
  3319     0E35  00AE               	movwf	___awdiv@dividend
  3320     0E36  0836               	movf	??_setPWM+1,w
  3321     0E37  00AF               	movwf	___awdiv@dividend+1
  3322     0E38  120A  118A  2486  120A  158A  	fcall	___awdiv
  3323     0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  3324     0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  3325     0E3F  082C               	movf	?___awdiv,w
  3326     0E40  00E0               	movwf	_porcentaje
  3327                           
  3328                           ;main.c: 349:     CCPR1L = porcentaje * porcentajeMax;
  3329     0E41  084F               	movf	_porcentajeMax,w
  3330     0E42  00AC               	movwf	___bmul@multiplicand
  3331     0E43  0860               	movf	_porcentaje,w
  3332     0E44  120A  158A  2554  120A  158A  	fcall	___bmul
  3333     0E49  1283               	bcf	3,5	;RP0=0, select bank0
  3334     0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  3335     0E4B  0095               	movwf	21	;volatile
  3336     0E4C                     l3238:
  3337                           
  3338                           ;main.c: 350:     escribirMemoria(direccionPWM, porcent);
  3339     0E4C  0837               	movf	setPWM@porcent,w
  3340     0E4D  00AD               	movwf	escribirMemoria@dato
  3341     0E4E  0851               	movf	_direccionPWM,w
  3342     0E4F  120A  118A  23A1  120A  158A  	fcall	_escribirMemoria
  3343     0E54                     l3240:
  3344                           
  3345                           ;main.c: 351:     pPWM = porcent;
  3346     0E54  1283               	bcf	3,5	;RP0=0, select bank0
  3347     0E55  1303               	bcf	3,6	;RP1=0, select bank0
  3348     0E56  0837               	movf	setPWM@porcent,w
  3349     0E57  00E2               	movwf	_pPWM
  3350     0E58                     l290:
  3351     0E58  0008               	return
  3352     0E59                     __end_of_setPWM:
  3353                           
  3354                           	psect	text18
  3355     0D54                     __ptext18:	
  3356 ;; *************** function ___bmul *****************
  3357 ;; Defined at:
  3358 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;  multiplier      1    wreg     unsigned char 
  3361 ;;  multiplicand    1   12[BANK0 ] unsigned char 
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;  multiplier      1   15[BANK0 ] unsigned char 
  3364 ;;  product         1   14[BANK0 ] unsigned char 
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      unsigned char 
  3367 ;; Registers used:
  3368 ;;		wreg, status,2, status,0
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3374 ;;      Params:         0       1       0       0       0
  3375 ;;      Locals:         0       2       0       0       0
  3376 ;;      Temps:          0       1       0       0       0
  3377 ;;      Totals:         0       4       0       0       0
  3378 ;;Total ram usage:        4 bytes
  3379 ;; Hardware stack levels used: 1
  3380 ;; Hardware stack levels required when called: 4
  3381 ;; This function calls:
  3382 ;;		Nothing
  3383 ;; This function is called by:
  3384 ;;		_setPWM
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388     0D54                     ___bmul:	
  3389                           ;psect for function ___bmul
  3390                           
  3391                           
  3392                           ;incstack = 0
  3393                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3394                           ;___bmul@multiplier stored from wreg
  3395     0D54  1283               	bcf	3,5	;RP0=0, select bank0
  3396     0D55  1303               	bcf	3,6	;RP1=0, select bank0
  3397     0D56  00AF               	movwf	___bmul@multiplier
  3398     0D57                     l3014:
  3399     0D57  01AE               	clrf	___bmul@product
  3400     0D58                     l3016:
  3401     0D58  1C2F               	btfss	___bmul@multiplier,0
  3402     0D59  2D5B               	goto	u2261
  3403     0D5A  2D5C               	goto	u2260
  3404     0D5B                     u2261:
  3405     0D5B  2D60               	goto	l3020
  3406     0D5C                     u2260:
  3407     0D5C                     l3018:
  3408     0D5C  082C               	movf	___bmul@multiplicand,w
  3409     0D5D  00AD               	movwf	??___bmul
  3410     0D5E  082D               	movf	??___bmul,w
  3411     0D5F  07AE               	addwf	___bmul@product,f
  3412     0D60                     l3020:
  3413     0D60  1003               	clrc
  3414     0D61  0DAC               	rlf	___bmul@multiplicand,f
  3415     0D62                     l3022:
  3416     0D62  1003               	clrc
  3417     0D63  0CAF               	rrf	___bmul@multiplier,f
  3418     0D64  082F               	movf	___bmul@multiplier,w
  3419     0D65  1D03               	btfss	3,2
  3420     0D66  2D68               	goto	u2271
  3421     0D67  2D69               	goto	u2270
  3422     0D68                     u2271:
  3423     0D68  2D58               	goto	l3016
  3424     0D69                     u2270:
  3425     0D69                     l3024:
  3426     0D69  082E               	movf	___bmul@product,w
  3427     0D6A                     l526:
  3428     0D6A  0008               	return
  3429     0D6B                     __end_of___bmul:
  3430                           
  3431                           	psect	text19
  3432     0486                     __ptext19:	
  3433 ;; *************** function ___awdiv *****************
  3434 ;; Defined at:
  3435 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;  divisor         2   12[BANK0 ] int 
  3438 ;;  dividend        2   14[BANK0 ] int 
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;  quotient        2   19[BANK0 ] int 
  3441 ;;  sign            1   18[BANK0 ] unsigned char 
  3442 ;;  counter         1   17[BANK0 ] unsigned char 
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  2   12[BANK0 ] int 
  3445 ;; Registers used:
  3446 ;;		wreg, status,2, status,0
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3452 ;;      Params:         0       4       0       0       0
  3453 ;;      Locals:         0       4       0       0       0
  3454 ;;      Temps:          0       1       0       0       0
  3455 ;;      Totals:         0       9       0       0       0
  3456 ;;Total ram usage:        9 bytes
  3457 ;; Hardware stack levels used: 1
  3458 ;; Hardware stack levels required when called: 4
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_setPWM
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466     0486                     ___awdiv:	
  3467                           ;psect for function ___awdiv
  3468                           
  3469     0486                     l3028:	
  3470                           ;incstack = 0
  3471                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3472                           
  3473     0486  1283               	bcf	3,5	;RP0=0, select bank0
  3474     0487  1303               	bcf	3,6	;RP1=0, select bank0
  3475     0488  01B2               	clrf	___awdiv@sign
  3476     0489                     l3030:
  3477     0489  1FAD               	btfss	___awdiv@divisor+1,7
  3478     048A  2C8C               	goto	u2281
  3479     048B  2C8D               	goto	u2280
  3480     048C                     u2281:
  3481     048C  2C94               	goto	l3036
  3482     048D                     u2280:
  3483     048D                     l3032:
  3484     048D  09AC               	comf	___awdiv@divisor,f
  3485     048E  09AD               	comf	___awdiv@divisor+1,f
  3486     048F  0AAC               	incf	___awdiv@divisor,f
  3487     0490  1903               	skipnz
  3488     0491  0AAD               	incf	___awdiv@divisor+1,f
  3489     0492                     l3034:
  3490     0492  01B2               	clrf	___awdiv@sign
  3491     0493  0AB2               	incf	___awdiv@sign,f
  3492     0494                     l3036:
  3493     0494  1FAF               	btfss	___awdiv@dividend+1,7
  3494     0495  2C97               	goto	u2291
  3495     0496  2C98               	goto	u2290
  3496     0497                     u2291:
  3497     0497  2CA1               	goto	l3042
  3498     0498                     u2290:
  3499     0498                     l3038:
  3500     0498  09AE               	comf	___awdiv@dividend,f
  3501     0499  09AF               	comf	___awdiv@dividend+1,f
  3502     049A  0AAE               	incf	___awdiv@dividend,f
  3503     049B  1903               	skipnz
  3504     049C  0AAF               	incf	___awdiv@dividend+1,f
  3505     049D                     l3040:
  3506     049D  3001               	movlw	1
  3507     049E  00B0               	movwf	??___awdiv
  3508     049F  0830               	movf	??___awdiv,w
  3509     04A0  06B2               	xorwf	___awdiv@sign,f
  3510     04A1                     l3042:
  3511     04A1  01B3               	clrf	___awdiv@quotient
  3512     04A2  01B4               	clrf	___awdiv@quotient+1
  3513     04A3                     l3044:
  3514     04A3  082C               	movf	___awdiv@divisor,w
  3515     04A4  042D               	iorwf	___awdiv@divisor+1,w
  3516     04A5  1903               	btfsc	3,2
  3517     04A6  2CA8               	goto	u2301
  3518     04A7  2CA9               	goto	u2300
  3519     04A8                     u2301:
  3520     04A8  2CE0               	goto	l3064
  3521     04A9                     u2300:
  3522     04A9                     l3046:
  3523     04A9  01B1               	clrf	___awdiv@counter
  3524     04AA  0AB1               	incf	___awdiv@counter,f
  3525     04AB  2CB7               	goto	l3052
  3526     04AC                     l3048:
  3527     04AC  3001               	movlw	1
  3528     04AD                     u2315:
  3529     04AD  1003               	clrc
  3530     04AE  0DAC               	rlf	___awdiv@divisor,f
  3531     04AF  0DAD               	rlf	___awdiv@divisor+1,f
  3532     04B0  3EFF               	addlw	-1
  3533     04B1  1D03               	skipz
  3534     04B2  2CAD               	goto	u2315
  3535     04B3                     l3050:
  3536     04B3  3001               	movlw	1
  3537     04B4  00B0               	movwf	??___awdiv
  3538     04B5  0830               	movf	??___awdiv,w
  3539     04B6  07B1               	addwf	___awdiv@counter,f
  3540     04B7                     l3052:
  3541     04B7  1FAD               	btfss	___awdiv@divisor+1,7
  3542     04B8  2CBA               	goto	u2321
  3543     04B9  2CBB               	goto	u2320
  3544     04BA                     u2321:
  3545     04BA  2CAC               	goto	l3048
  3546     04BB                     u2320:
  3547     04BB                     l3054:
  3548     04BB  3001               	movlw	1
  3549     04BC                     u2335:
  3550     04BC  1003               	clrc
  3551     04BD  0DB3               	rlf	___awdiv@quotient,f
  3552     04BE  0DB4               	rlf	___awdiv@quotient+1,f
  3553     04BF  3EFF               	addlw	-1
  3554     04C0  1D03               	skipz
  3555     04C1  2CBC               	goto	u2335
  3556     04C2  082D               	movf	___awdiv@divisor+1,w
  3557     04C3  022F               	subwf	___awdiv@dividend+1,w
  3558     04C4  1D03               	skipz
  3559     04C5  2CC8               	goto	u2345
  3560     04C6  082C               	movf	___awdiv@divisor,w
  3561     04C7  022E               	subwf	___awdiv@dividend,w
  3562     04C8                     u2345:
  3563     04C8  1C03               	skipc
  3564     04C9  2CCB               	goto	u2341
  3565     04CA  2CCC               	goto	u2340
  3566     04CB                     u2341:
  3567     04CB  2CD3               	goto	l3060
  3568     04CC                     u2340:
  3569     04CC                     l3056:
  3570     04CC  082C               	movf	___awdiv@divisor,w
  3571     04CD  02AE               	subwf	___awdiv@dividend,f
  3572     04CE  082D               	movf	___awdiv@divisor+1,w
  3573     04CF  1C03               	skipc
  3574     04D0  03AF               	decf	___awdiv@dividend+1,f
  3575     04D1  02AF               	subwf	___awdiv@dividend+1,f
  3576     04D2                     l3058:
  3577     04D2  1433               	bsf	___awdiv@quotient,0
  3578     04D3                     l3060:
  3579     04D3  3001               	movlw	1
  3580     04D4                     u2355:
  3581     04D4  1003               	clrc
  3582     04D5  0CAD               	rrf	___awdiv@divisor+1,f
  3583     04D6  0CAC               	rrf	___awdiv@divisor,f
  3584     04D7  3EFF               	addlw	-1
  3585     04D8  1D03               	skipz
  3586     04D9  2CD4               	goto	u2355
  3587     04DA                     l3062:
  3588     04DA  3001               	movlw	1
  3589     04DB  02B1               	subwf	___awdiv@counter,f
  3590     04DC  1D03               	btfss	3,2
  3591     04DD  2CDF               	goto	u2361
  3592     04DE  2CE0               	goto	u2360
  3593     04DF                     u2361:
  3594     04DF  2CBB               	goto	l3054
  3595     04E0                     u2360:
  3596     04E0                     l3064:
  3597     04E0  0832               	movf	___awdiv@sign,w
  3598     04E1  1903               	btfsc	3,2
  3599     04E2  2CE4               	goto	u2371
  3600     04E3  2CE5               	goto	u2370
  3601     04E4                     u2371:
  3602     04E4  2CEA               	goto	l3068
  3603     04E5                     u2370:
  3604     04E5                     l3066:
  3605     04E5  09B3               	comf	___awdiv@quotient,f
  3606     04E6  09B4               	comf	___awdiv@quotient+1,f
  3607     04E7  0AB3               	incf	___awdiv@quotient,f
  3608     04E8  1903               	skipnz
  3609     04E9  0AB4               	incf	___awdiv@quotient+1,f
  3610     04EA                     l3068:
  3611     04EA  0834               	movf	___awdiv@quotient+1,w
  3612     04EB  00AD               	movwf	?___awdiv+1
  3613     04EC  0833               	movf	___awdiv@quotient,w
  3614     04ED  00AC               	movwf	?___awdiv
  3615     04EE                     l653:
  3616     04EE  0008               	return
  3617     04EF                     __end_of___awdiv:
  3618                           
  3619                           	psect	text20
  3620     07A5                     __ptext20:	
  3621 ;; *************** function _setLED *****************
  3622 ;; Defined at:
  3623 ;;		line 380 in file "main.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;  red             1    wreg     unsigned char 
  3626 ;;  green           1   24[BANK0 ] unsigned char 
  3627 ;;  blue            1   25[BANK0 ] unsigned char 
  3628 ;;  luminosidad     1   26[BANK0 ] unsigned char 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;  red             1   27[BANK0 ] unsigned char 
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  1    wreg      void 
  3633 ;; Registers used:
  3634 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3640 ;;      Params:         0       3       0       0       0
  3641 ;;      Locals:         0       1       0       0       0
  3642 ;;      Temps:          0       0       0       0       0
  3643 ;;      Totals:         0       4       0       0       0
  3644 ;;Total ram usage:        4 bytes
  3645 ;; Hardware stack levels used: 1
  3646 ;; Hardware stack levels required when called: 6
  3647 ;; This function calls:
  3648 ;;		_cosasSPI
  3649 ;;		_escribirMemoria
  3650 ;; This function is called by:
  3651 ;;		_initActuadoresSegunMemoria
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655     07A5                     _setLED:	
  3656                           ;psect for function _setLED
  3657                           
  3658                           
  3659                           ;incstack = 0
  3660                           ; Regs used in _setLED: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3661                           ;setLED@red stored from wreg
  3662     07A5  1283               	bcf	3,5	;RP0=0, select bank0
  3663     07A6  1303               	bcf	3,6	;RP1=0, select bank0
  3664     07A7  00BB               	movwf	setLED@red
  3665     07A8                     l3242:
  3666                           
  3667                           ;main.c: 382:     cosasSPI(red, green, blue, luminosidad);
  3668     07A8  0838               	movf	setLED@green,w
  3669     07A9  00B1               	movwf	cosasSPI@verd
  3670     07AA  0839               	movf	setLED@blue,w
  3671     07AB  00B2               	movwf	cosasSPI@azu
  3672     07AC  083A               	movf	setLED@luminosidad,w
  3673     07AD  00B3               	movwf	cosasSPI@lumi
  3674     07AE  083B               	movf	setLED@red,w
  3675     07AF  120A  118A  2414  120A  118A  	fcall	_cosasSPI
  3676     07B4                     l3244:
  3677                           
  3678                           ;main.c: 384:     miLED[0] = red;
  3679     07B4  1283               	bcf	3,5	;RP0=0, select bank0
  3680     07B5  1303               	bcf	3,6	;RP1=0, select bank0
  3681     07B6  083B               	movf	setLED@red,w
  3682     07B7  00D3               	movwf	_miLED
  3683     07B8                     l3246:
  3684                           
  3685                           ;main.c: 385:     miLED[1] = green;
  3686     07B8  0838               	movf	setLED@green,w
  3687     07B9  00D4               	movwf	_miLED+1
  3688     07BA                     l3248:
  3689                           
  3690                           ;main.c: 386:     miLED[2] = blue;
  3691     07BA  0839               	movf	setLED@blue,w
  3692     07BB  00D5               	movwf	_miLED+2
  3693     07BC                     l3250:
  3694                           
  3695                           ;main.c: 387:     miLED[3] = luminosidad;
  3696     07BC  083A               	movf	setLED@luminosidad,w
  3697     07BD  00D6               	movwf	_miLED+3
  3698     07BE                     l3252:
  3699                           
  3700                           ;main.c: 389:     escribirMemoria(direccionLED, miLED[0]);
  3701     07BE  0853               	movf	_miLED,w
  3702     07BF  00AD               	movwf	escribirMemoria@dato
  3703     07C0  0850               	movf	_direccionLED,w
  3704     07C1  120A  118A  23A1  120A  118A  	fcall	_escribirMemoria
  3705     07C6                     l3254:
  3706                           
  3707                           ;main.c: 390:     escribirMemoria(direccionLED + 1 * sizeof (char), miLED[1]);
  3708     07C6  1283               	bcf	3,5	;RP0=0, select bank0
  3709     07C7  1303               	bcf	3,6	;RP1=0, select bank0
  3710     07C8  0854               	movf	_miLED+1,w
  3711     07C9  00AD               	movwf	escribirMemoria@dato
  3712     07CA  0850               	movf	_direccionLED,w
  3713     07CB  3E01               	addlw	1
  3714     07CC  120A  118A  23A1  120A  118A  	fcall	_escribirMemoria
  3715     07D1                     l3256:
  3716                           
  3717                           ;main.c: 391:     escribirMemoria(direccionLED + 2 * sizeof (char), miLED[2]);
  3718     07D1  1283               	bcf	3,5	;RP0=0, select bank0
  3719     07D2  1303               	bcf	3,6	;RP1=0, select bank0
  3720     07D3  0855               	movf	_miLED+2,w
  3721     07D4  00AD               	movwf	escribirMemoria@dato
  3722     07D5  0850               	movf	_direccionLED,w
  3723     07D6  3E02               	addlw	2
  3724     07D7  120A  118A  23A1  120A  118A  	fcall	_escribirMemoria
  3725     07DC                     l3258:
  3726                           
  3727                           ;main.c: 392:     escribirMemoria(direccionLED + 3 * sizeof (char), miLED[3]);
  3728     07DC  1283               	bcf	3,5	;RP0=0, select bank0
  3729     07DD  1303               	bcf	3,6	;RP1=0, select bank0
  3730     07DE  0856               	movf	_miLED+3,w
  3731     07DF  00AD               	movwf	escribirMemoria@dato
  3732     07E0  0850               	movf	_direccionLED,w
  3733     07E1  3E03               	addlw	3
  3734     07E2  120A  118A  23A1  120A  118A  	fcall	_escribirMemoria
  3735     07E7                     l301:
  3736     07E7  0008               	return
  3737     07E8                     __end_of_setLED:
  3738                           
  3739                           	psect	text21
  3740     03A1                     __ptext21:	
  3741 ;; *************** function _escribirMemoria *****************
  3742 ;; Defined at:
  3743 ;;		line 284 in file "main.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;  direccion       1    wreg     unsigned char 
  3746 ;;  dato            1   13[BANK0 ] unsigned char 
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;  direccion       1   16[BANK0 ] unsigned char 
  3749 ;;  contador        2   17[BANK0 ] int 
  3750 ;;  confirmado      2   14[BANK0 ] int 
  3751 ;;  valorSal        2    0        int 
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  2   13[BANK0 ] int 
  3754 ;; Registers used:
  3755 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3761 ;;      Params:         0       1       0       0       0
  3762 ;;      Locals:         0       5       0       0       0
  3763 ;;      Temps:          0       0       0       0       0
  3764 ;;      Totals:         0       6       0       0       0
  3765 ;;Total ram usage:        6 bytes
  3766 ;; Hardware stack levels used: 1
  3767 ;; Hardware stack levels required when called: 5
  3768 ;; This function calls:
  3769 ;;		_leerMemoria
  3770 ;; This function is called by:
  3771 ;;		_setPWM
  3772 ;;		_setLED
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776     03A1                     _escribirMemoria:	
  3777                           ;psect for function _escribirMemoria
  3778                           
  3779                           
  3780                           ;incstack = 0
  3781                           ; Regs used in _escribirMemoria: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3782                           ;escribirMemoria@direccion stored from wreg
  3783     03A1  1283               	bcf	3,5	;RP0=0, select bank0
  3784     03A2  1303               	bcf	3,6	;RP1=0, select bank0
  3785     03A3  00B0               	movwf	escribirMemoria@direccion
  3786     03A4                     l2950:
  3787                           
  3788                           ;main.c: 285:     int valorSal;;main.c: 286:     EECON1bits.EEPGD = 0;
  3789     03A4  1683               	bsf	3,5	;RP0=1, select bank3
  3790     03A5  1703               	bsf	3,6	;RP1=1, select bank3
  3791     03A6  138C               	bcf	12,7	;volsfr
  3792                           
  3793                           ;main.c: 288:     EECON1bits.WREN = 1;
  3794     03A7  150C               	bsf	12,2	;volsfr
  3795     03A8                     l2952:
  3796                           
  3797                           ;main.c: 289:     EEADRH = 0;
  3798     03A8  1283               	bcf	3,5	;RP0=0, select bank2
  3799     03A9  1703               	bsf	3,6	;RP1=1, select bank2
  3800     03AA  018F               	clrf	15	;volatile
  3801     03AB                     l2954:
  3802                           
  3803                           ;main.c: 290:     EEADR = direccion;
  3804     03AB  1283               	bcf	3,5	;RP0=0, select bank0
  3805     03AC  1303               	bcf	3,6	;RP1=0, select bank0
  3806     03AD  0830               	movf	escribirMemoria@direccion,w
  3807     03AE  1283               	bcf	3,5	;RP0=0, select bank2
  3808     03AF  1703               	bsf	3,6	;RP1=1, select bank2
  3809     03B0  008D               	movwf	13	;volatile
  3810     03B1                     l2956:
  3811                           
  3812                           ;main.c: 291:     if (EECON1bits.RD == 0) {
  3813     03B1  1683               	bsf	3,5	;RP0=1, select bank3
  3814     03B2  1703               	bsf	3,6	;RP1=1, select bank3
  3815     03B3  180C               	btfsc	12,0	;volsfr
  3816     03B4  2BB6               	goto	u2191
  3817     03B5  2BB7               	goto	u2190
  3818     03B6                     u2191:
  3819     03B6  2C13               	goto	l2986
  3820     03B7                     u2190:
  3821     03B7                     l2958:
  3822                           
  3823                           ;main.c: 292:         int contador = 0;
  3824     03B7  1283               	bcf	3,5	;RP0=0, select bank0
  3825     03B8  1303               	bcf	3,6	;RP1=0, select bank0
  3826     03B9  01B1               	clrf	escribirMemoria@contador
  3827     03BA  01B2               	clrf	escribirMemoria@contador+1
  3828                           
  3829                           ;main.c: 293:         int confirmado = 0;
  3830     03BB  01AE               	clrf	escribirMemoria@confirmado
  3831     03BC  01AF               	clrf	escribirMemoria@confirmado+1
  3832                           
  3833                           ;main.c: 294:         while (contador < 10 && confirmado == 0) {
  3834     03BD  2BED               	goto	l2976
  3835     03BE                     l265:
  3836                           
  3837                           ;main.c: 295:             INTCONbits.GIE = 0;
  3838     03BE  138B               	bcf	11,7	;volatile
  3839     03BF                     l2960:
  3840                           
  3841                           ;main.c: 296:             EEDAT = dato;
  3842     03BF  082D               	movf	escribirMemoria@dato,w
  3843     03C0  1283               	bcf	3,5	;RP0=0, select bank2
  3844     03C1  1703               	bsf	3,6	;RP1=1, select bank2
  3845     03C2  008C               	movwf	12	;volatile
  3846                           
  3847                           ;main.c: 297:             EECON2 = 0x55;
  3848     03C3  3055               	movlw	85
  3849     03C4  1683               	bsf	3,5	;RP0=1, select bank3
  3850     03C5  1703               	bsf	3,6	;RP1=1, select bank3
  3851     03C6  008D               	movwf	13	;volsfr
  3852                           
  3853                           ;main.c: 298:             EECON2 = 0xAA;
  3854     03C7  30AA               	movlw	170
  3855     03C8  008D               	movwf	13	;volsfr
  3856     03C9                     l2962:
  3857                           
  3858                           ;main.c: 299:             EECON1bits.WR = 1;
  3859     03C9  148C               	bsf	12,1	;volsfr
  3860     03CA                     l2964:
  3861                           
  3862                           ;main.c: 300:             INTCONbits.GIE = 1;
  3863     03CA  178B               	bsf	11,7	;volatile
  3864     03CB                     l2966:	
  3865                           ;main.c: 301:             while (!continuoEscribiendo);
  3866                           
  3867     03CB  1283               	bcf	3,5	;RP0=0, select bank0
  3868     03CC  1303               	bcf	3,6	;RP1=0, select bank0
  3869     03CD  085D               	movf	_continuoEscribiendo,w
  3870     03CE  045E               	iorwf	_continuoEscribiendo+1,w
  3871     03CF  1903               	btfsc	3,2
  3872     03D0  2BD2               	goto	u2201
  3873     03D1  2BD3               	goto	u2200
  3874     03D2                     u2201:
  3875     03D2  2BCB               	goto	l2966
  3876     03D3                     u2200:
  3877     03D3                     l2968:
  3878                           
  3879                           ;main.c: 302:             continuoEscribiendo = 0;
  3880     03D3  01DD               	clrf	_continuoEscribiendo
  3881     03D4  01DE               	clrf	_continuoEscribiendo+1
  3882     03D5                     l2970:
  3883                           
  3884                           ;main.c: 303:             if (leerMemoria(direccion) == dato)
  3885     03D5  0830               	movf	escribirMemoria@direccion,w
  3886     03D6  120A  158A  2584  120A  118A  	fcall	_leerMemoria
  3887     03DB  1283               	bcf	3,5	;RP0=0, select bank0
  3888     03DC  1303               	bcf	3,6	;RP1=0, select bank0
  3889     03DD  062D               	xorwf	escribirMemoria@dato,w
  3890     03DE  1D03               	skipz
  3891     03DF  2BE1               	goto	u2211
  3892     03E0  2BE2               	goto	u2210
  3893     03E1                     u2211:
  3894     03E1  2BE7               	goto	l2974
  3895     03E2                     u2210:
  3896     03E2                     l2972:
  3897                           
  3898                           ;main.c: 304:                 confirmado = 1;
  3899     03E2  3001               	movlw	1
  3900     03E3  00AE               	movwf	escribirMemoria@confirmado
  3901     03E4  3000               	movlw	0
  3902     03E5  00AF               	movwf	escribirMemoria@confirmado+1
  3903     03E6  2BED               	goto	l2976
  3904     03E7                     l2974:
  3905                           
  3906                           ;main.c: 306:                 contador++;
  3907     03E7  3001               	movlw	1
  3908     03E8  07B1               	addwf	escribirMemoria@contador,f
  3909     03E9  1803               	skipnc
  3910     03EA  0AB2               	incf	escribirMemoria@contador+1,f
  3911     03EB  3000               	movlw	0
  3912     03EC  07B2               	addwf	escribirMemoria@contador+1,f
  3913     03ED                     l2976:
  3914                           
  3915                           ;main.c: 294:         while (contador < 10 && confirmado == 0) {
  3916     03ED  0832               	movf	escribirMemoria@contador+1,w
  3917     03EE  3A80               	xorlw	128
  3918     03EF  00FF               	movwf	btemp+1
  3919     03F0  3080               	movlw	128
  3920     03F1  027F               	subwf	btemp+1,w
  3921     03F2  1D03               	skipz
  3922     03F3  2BF6               	goto	u2225
  3923     03F4  300A               	movlw	10
  3924     03F5  0231               	subwf	escribirMemoria@contador,w
  3925     03F6                     u2225:
  3926     03F6  1803               	skipnc
  3927     03F7  2BF9               	goto	u2221
  3928     03F8  2BFA               	goto	u2220
  3929     03F9                     u2221:
  3930     03F9  2C02               	goto	l2980
  3931     03FA                     u2220:
  3932     03FA                     l2978:
  3933     03FA  1283               	bcf	3,5	;RP0=0, select bank0
  3934     03FB  1303               	bcf	3,6	;RP1=0, select bank0
  3935     03FC  082E               	movf	escribirMemoria@confirmado,w
  3936     03FD  042F               	iorwf	escribirMemoria@confirmado+1,w
  3937     03FE  1903               	btfsc	3,2
  3938     03FF  2C01               	goto	u2231
  3939     0400  2C02               	goto	u2230
  3940     0401                     u2231:
  3941     0401  2BBE               	goto	l265
  3942     0402                     u2230:
  3943     0402                     l2980:
  3944                           
  3945                           ;main.c: 308:         if (contador >= 10) valorSal = 1;
  3946     0402  1283               	bcf	3,5	;RP0=0, select bank0
  3947     0403  1303               	bcf	3,6	;RP1=0, select bank0
  3948     0404  0832               	movf	escribirMemoria@contador+1,w
  3949     0405  3A80               	xorlw	128
  3950     0406  00FF               	movwf	btemp+1
  3951     0407  3080               	movlw	128
  3952     0408  027F               	subwf	btemp+1,w
  3953     0409  1D03               	skipz
  3954     040A  2C0D               	goto	u2245
  3955     040B  300A               	movlw	10
  3956     040C  0231               	subwf	escribirMemoria@contador,w
  3957     040D                     u2245:
  3958     040D  1C03               	skipc
  3959     040E  2C10               	goto	u2241
  3960     040F  2C11               	goto	u2240
  3961     0410                     u2241:
  3962     0410  2C12               	goto	l2984
  3963     0411                     u2240:
  3964     0411                     l2982:
  3965     0411  2C13               	goto	l277
  3966     0412                     l2984:
  3967     0412  2C13               	goto	l277
  3968     0413                     l2986:
  3969     0413                     l277:
  3970     0413  0008               	return
  3971     0414                     __end_of_escribirMemoria:
  3972                           
  3973                           	psect	text22
  3974     0414                     __ptext22:	
  3975 ;; *************** function _cosasSPI *****************
  3976 ;; Defined at:
  3977 ;;		line 360 in file "main.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;  roj             1    wreg     unsigned char 
  3980 ;;  verd            1   17[BANK0 ] unsigned char 
  3981 ;;  azu             1   18[BANK0 ] unsigned char 
  3982 ;;  lumi            1   19[BANK0 ] unsigned char 
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;  roj             1   20[BANK0 ] unsigned char 
  3985 ;;  i               2   22[BANK0 ] int 
  3986 ;;  lumo            1   21[BANK0 ] unsigned char 
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  1    wreg      void 
  3989 ;; Registers used:
  3990 ;;		wreg, status,2, status,0, pclath, cstack
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3996 ;;      Params:         0       3       0       0       0
  3997 ;;      Locals:         0       4       0       0       0
  3998 ;;      Temps:          0       0       0       0       0
  3999 ;;      Totals:         0       7       0       0       0
  4000 ;;Total ram usage:        7 bytes
  4001 ;; Hardware stack levels used: 1
  4002 ;; Hardware stack levels required when called: 5
  4003 ;; This function calls:
  4004 ;;		_spi_write_read
  4005 ;; This function is called by:
  4006 ;;		_setLED
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010     0414                     _cosasSPI:	
  4011                           ;psect for function _cosasSPI
  4012                           
  4013                           
  4014                           ;incstack = 0
  4015                           ; Regs used in _cosasSPI: [wreg+status,2+status,0+pclath+cstack]
  4016                           ;cosasSPI@roj stored from wreg
  4017     0414  1283               	bcf	3,5	;RP0=0, select bank0
  4018     0415  1303               	bcf	3,6	;RP1=0, select bank0
  4019     0416  00B4               	movwf	cosasSPI@roj
  4020     0417                     l2990:
  4021                           
  4022                           ;main.c: 361:     int i;;main.c: 362:     char lumo = 0b11100000 + (lumi % 32);
  4023     0417  0833               	movf	cosasSPI@lumi,w
  4024     0418  391F               	andlw	31
  4025     0419  3EE0               	addlw	224
  4026     041A  00B5               	movwf	cosasSPI@lumo
  4027     041B                     l2992:
  4028                           
  4029                           ;main.c: 363:     spi_write_read(0x00);
  4030     041B  3000               	movlw	0
  4031     041C  120A  158A  268D  120A  118A  	fcall	_spi_write_read
  4032     0421                     l2994:
  4033                           
  4034                           ;main.c: 364:     spi_write_read(0x00);
  4035     0421  3000               	movlw	0
  4036     0422  120A  158A  268D  120A  118A  	fcall	_spi_write_read
  4037     0427                     l2996:
  4038                           
  4039                           ;main.c: 365:     spi_write_read(0x00);
  4040     0427  3000               	movlw	0
  4041     0428  120A  158A  268D  120A  118A  	fcall	_spi_write_read
  4042     042D                     l2998:
  4043                           
  4044                           ;main.c: 366:     spi_write_read(0x00);
  4045     042D  3000               	movlw	0
  4046     042E  120A  158A  268D  120A  118A  	fcall	_spi_write_read
  4047     0433                     l3000:
  4048                           
  4049                           ;main.c: 367:     for (i = numLedes; i == 0; i--) {
  4050     0433  1683               	bsf	3,5	;RP0=1, select bank1
  4051     0434  1303               	bcf	3,6	;RP1=0, select bank1
  4052     0435  0845               	movf	(_numLedes+1)^(0+128),w
  4053     0436  1283               	bcf	3,5	;RP0=0, select bank0
  4054     0437  1303               	bcf	3,6	;RP1=0, select bank0
  4055     0438  00B7               	movwf	cosasSPI@i+1
  4056     0439  1683               	bsf	3,5	;RP0=1, select bank1
  4057     043A  1303               	bcf	3,6	;RP1=0, select bank1
  4058     043B  0844               	movf	_numLedes^(0+128),w
  4059     043C  1283               	bcf	3,5	;RP0=0, select bank0
  4060     043D  1303               	bcf	3,6	;RP1=0, select bank0
  4061     043E  00B6               	movwf	cosasSPI@i
  4062     043F                     l3002:
  4063     043F  0836               	movf	cosasSPI@i,w
  4064     0440  0437               	iorwf	cosasSPI@i+1,w
  4065     0441  1903               	btfsc	3,2
  4066     0442  2C44               	goto	u2251
  4067     0443  2C45               	goto	u2250
  4068     0444                     u2251:
  4069     0444  2C46               	goto	l3006
  4070     0445                     u2250:
  4071     0445  2C6D               	goto	l3012
  4072     0446                     l3006:
  4073                           
  4074                           ;main.c: 368:         spi_write_read(lumo);
  4075     0446  0835               	movf	cosasSPI@lumo,w
  4076     0447  120A  158A  268D  120A  118A  	fcall	_spi_write_read
  4077                           
  4078                           ;main.c: 369:         spi_write_read(azu);
  4079     044C  1283               	bcf	3,5	;RP0=0, select bank0
  4080     044D  1303               	bcf	3,6	;RP1=0, select bank0
  4081     044E  0832               	movf	cosasSPI@azu,w
  4082     044F  120A  158A  268D  120A  118A  	fcall	_spi_write_read
  4083                           
  4084                           ;main.c: 370:         spi_write_read(verd);
  4085     0454  1283               	bcf	3,5	;RP0=0, select bank0
  4086     0455  1303               	bcf	3,6	;RP1=0, select bank0
  4087     0456  0831               	movf	cosasSPI@verd,w
  4088     0457  120A  158A  268D  120A  118A  	fcall	_spi_write_read
  4089                           
  4090                           ;main.c: 371:         spi_write_read(roj);
  4091     045C  1283               	bcf	3,5	;RP0=0, select bank0
  4092     045D  1303               	bcf	3,6	;RP1=0, select bank0
  4093     045E  0834               	movf	cosasSPI@roj,w
  4094     045F  120A  158A  268D  120A  118A  	fcall	_spi_write_read
  4095     0464                     l3008:
  4096                           
  4097                           ;main.c: 372:     }
  4098     0464  30FF               	movlw	255
  4099     0465  1283               	bcf	3,5	;RP0=0, select bank0
  4100     0466  1303               	bcf	3,6	;RP1=0, select bank0
  4101     0467  07B6               	addwf	cosasSPI@i,f
  4102     0468  1803               	skipnc
  4103     0469  0AB7               	incf	cosasSPI@i+1,f
  4104     046A  30FF               	movlw	255
  4105     046B  07B7               	addwf	cosasSPI@i+1,f
  4106     046C  2C3F               	goto	l3002
  4107     046D                     l3012:
  4108                           
  4109                           ;main.c: 373:     spi_write_read(0xFF);
  4110     046D  30FF               	movlw	255
  4111     046E  120A  158A  268D  120A  118A  	fcall	_spi_write_read
  4112                           
  4113                           ;main.c: 374:     spi_write_read(0xFF);
  4114     0473  30FF               	movlw	255
  4115     0474  120A  158A  268D  120A  118A  	fcall	_spi_write_read
  4116                           
  4117                           ;main.c: 375:     spi_write_read(0xFF);
  4118     0479  30FF               	movlw	255
  4119     047A  120A  158A  268D  120A  118A  	fcall	_spi_write_read
  4120                           
  4121                           ;main.c: 376:     spi_write_read(0xFF);
  4122     047F  30FF               	movlw	255
  4123     0480  120A  158A  268D  120A  118A  	fcall	_spi_write_read
  4124     0485                     l298:
  4125     0485  0008               	return
  4126     0486                     __end_of_cosasSPI:
  4127                           
  4128                           	psect	text23
  4129     0E8D                     __ptext23:	
  4130 ;; *************** function _spi_write_read *****************
  4131 ;; Defined at:
  4132 ;;		line 8 in file "spi-master-v1.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;  one_byte        1    wreg     unsigned char 
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;  one_byte        1   14[BANK0 ] unsigned char 
  4137 ;;  x               1   16[BANK0 ] unsigned char 
  4138 ;;  answer          1   15[BANK0 ] unsigned char 
  4139 ;; Return value:  Size  Location     Type
  4140 ;;                  1    wreg      unsigned char 
  4141 ;; Registers used:
  4142 ;;		wreg, status,2, status,0
  4143 ;; Tracked objects:
  4144 ;;		On entry : 0/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4148 ;;      Params:         0       0       0       0       0
  4149 ;;      Locals:         0       3       0       0       0
  4150 ;;      Temps:          0       2       0       0       0
  4151 ;;      Totals:         0       5       0       0       0
  4152 ;;Total ram usage:        5 bytes
  4153 ;; Hardware stack levels used: 1
  4154 ;; Hardware stack levels required when called: 4
  4155 ;; This function calls:
  4156 ;;		Nothing
  4157 ;; This function is called by:
  4158 ;;		_cosasSPI
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162     0E8D                     _spi_write_read:	
  4163                           ;psect for function _spi_write_read
  4164                           
  4165                           
  4166                           ;incstack = 0
  4167                           ; Regs used in _spi_write_read: [wreg+status,2+status,0]
  4168                           ;spi_write_read@one_byte stored from wreg
  4169     0E8D  1283               	bcf	3,5	;RP0=0, select bank0
  4170     0E8E  1303               	bcf	3,6	;RP1=0, select bank0
  4171     0E8F  00AE               	movwf	spi_write_read@one_byte
  4172     0E90                     l2888:
  4173                           
  4174                           ;spi-master-v1.c: 8: char spi_write_read(char one_byte);spi-master-v1.c: 9: {;spi-master
      +                          -v1.c: 11:     char answer, x;;spi-master-v1.c: 13:     answer = 0;
  4175     0E90  01AF               	clrf	spi_write_read@answer
  4176     0E91                     l2890:
  4177                           
  4178                           ;spi-master-v1.c: 15:     for(x = 8; x > 0; x--)
  4179     0E91  3008               	movlw	8
  4180     0E92  00B0               	movwf	spi_write_read@x
  4181     0E93                     l2896:
  4182                           
  4183                           ;spi-master-v1.c: 16:     {;spi-master-v1.c: 17:         PORTCbits.RC0 = (__bit)((one_by
      +                          te >> (x - 1)) & 0b00000001);
  4184     0E93  082E               	movf	spi_write_read@one_byte,w
  4185     0E94  00AC               	movwf	??_spi_write_read
  4186     0E95  0830               	movf	spi_write_read@x,w
  4187     0E96  3EFF               	addlw	-1
  4188     0E97  3E01               	addlw	1
  4189     0E98  2E9B               	goto	u2124
  4190     0E99                     u2125:
  4191     0E99  1003               	clrc
  4192     0E9A  0CAC               	rrf	??_spi_write_read,f
  4193     0E9B                     u2124:
  4194     0E9B  3EFF               	addlw	-1
  4195     0E9C  1D03               	skipz
  4196     0E9D  2E99               	goto	u2125
  4197     0E9E  182C               	btfsc	??_spi_write_read,0
  4198     0E9F  2EA1               	goto	u2131
  4199     0EA0  2EA5               	goto	u2130
  4200     0EA1                     u2131:
  4201     0EA1  1283               	bcf	3,5	;RP0=0, select bank0
  4202     0EA2  1303               	bcf	3,6	;RP1=0, select bank0
  4203     0EA3  1407               	bsf	7,0	;volatile
  4204     0EA4  2EA8               	goto	u2144
  4205     0EA5                     u2130:
  4206     0EA5  1283               	bcf	3,5	;RP0=0, select bank0
  4207     0EA6  1303               	bcf	3,6	;RP1=0, select bank0
  4208     0EA7  1007               	bcf	7,0	;volatile
  4209     0EA8                     u2144:
  4210     0EA8                     l2898:
  4211                           
  4212                           ;spi-master-v1.c: 19:         PORTCbits.RC5 = 1;
  4213     0EA8  1687               	bsf	7,5	;volatile
  4214                           
  4215                           ;spi-master-v1.c: 21:         answer |= (char)PORTAbits.RA5;
  4216     0EA9  0E05               	swapf	5,w	;volatile
  4217     0EAA  00AC               	movwf	??_spi_write_read
  4218     0EAB  0C2C               	rrf	??_spi_write_read,w
  4219     0EAC  3901               	andlw	1
  4220     0EAD  00AD               	movwf	??_spi_write_read+1
  4221     0EAE  082D               	movf	??_spi_write_read+1,w
  4222     0EAF  04AF               	iorwf	spi_write_read@answer,f
  4223     0EB0                     l2900:
  4224                           
  4225                           ;spi-master-v1.c: 22:         PORTCbits.RC5 = 0;
  4226     0EB0  1287               	bcf	7,5	;volatile
  4227     0EB1                     l2902:
  4228                           
  4229                           ;spi-master-v1.c: 24:         if(x > 1)
  4230     0EB1  3002               	movlw	2
  4231     0EB2  0230               	subwf	spi_write_read@x,w
  4232     0EB3  1C03               	skipc
  4233     0EB4  2EB6               	goto	u2151
  4234     0EB5  2EB7               	goto	u2150
  4235     0EB6                     u2151:
  4236     0EB6  2EBB               	goto	l38
  4237     0EB7                     u2150:
  4238     0EB7                     l2904:
  4239                           
  4240                           ;spi-master-v1.c: 25:             answer = answer << 1;
  4241     0EB7  082F               	movf	spi_write_read@answer,w
  4242     0EB8  00AC               	movwf	??_spi_write_read
  4243     0EB9  072C               	addwf	??_spi_write_read,w
  4244     0EBA  00AF               	movwf	spi_write_read@answer
  4245     0EBB                     l38:
  4246                           
  4247                           ;spi-master-v1.c: 26:     }
  4248     0EBB  3001               	movlw	1
  4249     0EBC  02B0               	subwf	spi_write_read@x,f
  4250     0EBD  0830               	movf	spi_write_read@x,w
  4251     0EBE  1D03               	btfss	3,2
  4252     0EBF  2EC1               	goto	u2161
  4253     0EC0  2EC2               	goto	u2160
  4254     0EC1                     u2161:
  4255     0EC1  2E93               	goto	l2896
  4256     0EC2                     u2160:
  4257     0EC2                     l39:
  4258     0EC2  0008               	return
  4259     0EC3                     __end_of_spi_write_read:
  4260                           
  4261                           	psect	text24
  4262     0DA0                     __ptext24:	
  4263 ;; *************** function _getnoPrimerArranque *****************
  4264 ;; Defined at:
  4265 ;;		line 339 in file "main.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;		None
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  aux             1   13[BANK0 ] unsigned char 
  4270 ;;  direccion       1    0        unsigned char 
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  1    wreg      enum E1298
  4273 ;; Registers used:
  4274 ;;		wreg, status,2, status,0, pclath, cstack
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4280 ;;      Params:         0       0       0       0       0
  4281 ;;      Locals:         0       1       0       0       0
  4282 ;;      Temps:          0       0       0       0       0
  4283 ;;      Totals:         0       1       0       0       0
  4284 ;;Total ram usage:        1 bytes
  4285 ;; Hardware stack levels used: 1
  4286 ;; Hardware stack levels required when called: 5
  4287 ;; This function calls:
  4288 ;;		_leerMemoria
  4289 ;; This function is called by:
  4290 ;;		_initActuadoresSegunMemoria
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294     0DA0                     _getnoPrimerArranque:	
  4295                           ;psect for function _getnoPrimerArranque
  4296                           
  4297     0DA0                     l3216:	
  4298                           ;incstack = 0
  4299                           ; Regs used in _getnoPrimerArranque: [wreg+status,2+status,0+pclath+cstack]
  4300                           
  4301     0DA0                     l3218:
  4302                           
  4303                           ;main.c: 341:     char aux = leerMemoria(direccion);
  4304     0DA0  3000               	movlw	0
  4305     0DA1  120A  158A  2584  120A  158A  	fcall	_leerMemoria
  4306     0DA6  1283               	bcf	3,5	;RP0=0, select bank0
  4307     0DA7  1303               	bcf	3,6	;RP1=0, select bank0
  4308     0DA8  00AD               	movwf	getnoPrimerArranque@aux
  4309     0DA9                     l3220:
  4310                           
  4311                           ;main.c: 342:     if (aux == (0) || aux == 0 || aux == (char) 0b00000000) return FALSE;
  4312     0DA9  082D               	movf	getnoPrimerArranque@aux,w
  4313     0DAA  1903               	btfsc	3,2
  4314     0DAB  2DAD               	goto	u2401
  4315     0DAC  2DAE               	goto	u2400
  4316     0DAD                     u2401:
  4317     0DAD  2DB8               	goto	l3226
  4318     0DAE                     u2400:
  4319     0DAE                     l3222:
  4320     0DAE  082D               	movf	getnoPrimerArranque@aux,w
  4321     0DAF  1903               	btfsc	3,2
  4322     0DB0  2DB2               	goto	u2411
  4323     0DB1  2DB3               	goto	u2410
  4324     0DB2                     u2411:
  4325     0DB2  2DB8               	goto	l3226
  4326     0DB3                     u2410:
  4327     0DB3                     l3224:
  4328     0DB3  082D               	movf	getnoPrimerArranque@aux,w
  4329     0DB4  1D03               	btfss	3,2
  4330     0DB5  2DB7               	goto	u2421
  4331     0DB6  2DB8               	goto	u2420
  4332     0DB7                     u2421:
  4333     0DB7  2DBA               	goto	l3232
  4334     0DB8                     u2420:
  4335     0DB8                     l3226:
  4336     0DB8  3000               	movlw	0
  4337     0DB9  2DBB               	goto	l286
  4338     0DBA                     l3232:
  4339     0DBA  3001               	movlw	1
  4340     0DBB                     l286:
  4341     0DBB  0008               	return
  4342     0DBC                     __end_of_getnoPrimerArranque:
  4343                           
  4344                           	psect	text25
  4345     0D84                     __ptext25:	
  4346 ;; *************** function _leerMemoria *****************
  4347 ;; Defined at:
  4348 ;;		line 271 in file "main.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;  direccion       1    wreg     unsigned char 
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;  direccion       1   12[BANK0 ] unsigned char 
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  1    wreg      unsigned char 
  4355 ;; Registers used:
  4356 ;;		wreg, status,2
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4362 ;;      Params:         0       0       0       0       0
  4363 ;;      Locals:         0       1       0       0       0
  4364 ;;      Temps:          0       0       0       0       0
  4365 ;;      Totals:         0       1       0       0       0
  4366 ;;Total ram usage:        1 bytes
  4367 ;; Hardware stack levels used: 1
  4368 ;; Hardware stack levels required when called: 4
  4369 ;; This function calls:
  4370 ;;		Nothing
  4371 ;; This function is called by:
  4372 ;;		_escribirMemoria
  4373 ;;		_getnoPrimerArranque
  4374 ;;		_initActuadoresSegunMemoria
  4375 ;; This function uses a non-reentrant model
  4376 ;;
  4377                           
  4378     0D84                     _leerMemoria:	
  4379                           ;psect for function _leerMemoria
  4380                           
  4381                           
  4382                           ;incstack = 0
  4383                           ; Regs used in _leerMemoria: [wreg+status,2]
  4384                           ;leerMemoria@direccion stored from wreg
  4385     0D84  1283               	bcf	3,5	;RP0=0, select bank0
  4386     0D85  1303               	bcf	3,6	;RP1=0, select bank0
  4387     0D86  00AC               	movwf	leerMemoria@direccion
  4388     0D87                     l2906:
  4389                           
  4390                           ;main.c: 272:     EECON1bits.EEPGD = 0;
  4391     0D87  1683               	bsf	3,5	;RP0=1, select bank3
  4392     0D88  1703               	bsf	3,6	;RP1=1, select bank3
  4393     0D89  138C               	bcf	12,7	;volsfr
  4394                           
  4395                           ;main.c: 274:     EECON1bits.WREN = 0;
  4396     0D8A  110C               	bcf	12,2	;volsfr
  4397     0D8B                     l2908:
  4398                           
  4399                           ;main.c: 275:     EEDATH = 0;
  4400     0D8B  1283               	bcf	3,5	;RP0=0, select bank2
  4401     0D8C  1703               	bsf	3,6	;RP1=1, select bank2
  4402     0D8D  018E               	clrf	14	;volatile
  4403                           
  4404                           ;main.c: 276:     EEADRH = 0;
  4405     0D8E  018F               	clrf	15	;volatile
  4406     0D8F                     l2910:
  4407                           
  4408                           ;main.c: 277:     EEADR = direccion;
  4409     0D8F  1283               	bcf	3,5	;RP0=0, select bank0
  4410     0D90  1303               	bcf	3,6	;RP1=0, select bank0
  4411     0D91  082C               	movf	leerMemoria@direccion,w
  4412     0D92  1283               	bcf	3,5	;RP0=0, select bank2
  4413     0D93  1703               	bsf	3,6	;RP1=1, select bank2
  4414     0D94  008D               	movwf	13	;volatile
  4415     0D95                     l2912:
  4416                           
  4417                           ;main.c: 278:     if (EECON1bits.WR == 0)
  4418     0D95  1683               	bsf	3,5	;RP0=1, select bank3
  4419     0D96  1703               	bsf	3,6	;RP1=1, select bank3
  4420     0D97  188C               	btfsc	12,1	;volsfr
  4421     0D98  2D9A               	goto	u2171
  4422     0D99  2D9B               	goto	u2170
  4423     0D9A                     u2171:
  4424     0D9A  2D9C               	goto	l2916
  4425     0D9B                     u2170:
  4426     0D9B                     l2914:
  4427                           
  4428                           ;main.c: 279:         EECON1bits.RD = 1;
  4429     0D9B  140C               	bsf	12,0	;volsfr
  4430     0D9C                     l2916:
  4431                           
  4432                           ;main.c: 281:     return EEDAT;
  4433     0D9C  1283               	bcf	3,5	;RP0=0, select bank2
  4434     0D9D  1703               	bsf	3,6	;RP1=1, select bank2
  4435     0D9E  080C               	movf	12,w	;volatile
  4436     0D9F                     l260:
  4437     0D9F  0008               	return
  4438     0DA0                     __end_of_leerMemoria:
  4439                           
  4440                           	psect	text26
  4441     0C59                     __ptext26:	
  4442 ;; *************** function _i2c_stop *****************
  4443 ;; Defined at:
  4444 ;;		line 23 in file "i2c-v2.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;		None
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;		None
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  1    wreg      void 
  4451 ;; Registers used:
  4452 ;;		status,2, status,0, pclath, cstack
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4458 ;;      Params:         0       0       0       0       0
  4459 ;;      Locals:         0       0       0       0       0
  4460 ;;      Temps:          0       0       0       0       0
  4461 ;;      Totals:         0       0       0       0       0
  4462 ;;Total ram usage:        0 bytes
  4463 ;; Hardware stack levels used: 1
  4464 ;; Hardware stack levels required when called: 5
  4465 ;; This function calls:
  4466 ;;		_wait_MSSP
  4467 ;; This function is called by:
  4468 ;;		_main
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472     0C59                     _i2c_stop:	
  4473                           ;psect for function _i2c_stop
  4474                           
  4475     0C59                     l3308:	
  4476                           ;incstack = 0
  4477                           ; Regs used in _i2c_stop: [status,2+status,0+pclath+cstack]
  4478                           
  4479                           
  4480                           ;i2c-v2.c: 25:     SSPCON2bits.PEN = 1;
  4481     0C59  1683               	bsf	3,5	;RP0=1, select bank1
  4482     0C5A  1303               	bcf	3,6	;RP1=0, select bank1
  4483     0C5B  1511               	bsf	17,2	;volatile
  4484     0C5C                     l3310:
  4485                           
  4486                           ;i2c-v2.c: 26:     wait_MSSP();
  4487     0C5C  120A  158A  2440  120A  158A  	fcall	_wait_MSSP
  4488     0C61                     l18:
  4489     0C61  0008               	return
  4490     0C62                     __end_of_i2c_stop:
  4491                           
  4492                           	psect	text27
  4493     0FBD                     __ptext27:	
  4494 ;; *************** function _analisisRuido *****************
  4495 ;; Defined at:
  4496 ;;		line 401 in file "main.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;		None
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;  temp            1   14[BANK0 ] unsigned char 
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  1    wreg      void 
  4503 ;; Registers used:
  4504 ;;		wreg, status,2, btemp+1
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4510 ;;      Params:         0       0       0       0       0
  4511 ;;      Locals:         0       1       0       0       0
  4512 ;;      Temps:          0       2       0       0       0
  4513 ;;      Totals:         0       3       0       0       0
  4514 ;;Total ram usage:        3 bytes
  4515 ;; Hardware stack levels used: 1
  4516 ;; Hardware stack levels required when called: 4
  4517 ;; This function calls:
  4518 ;;		Nothing
  4519 ;; This function is called by:
  4520 ;;		_main
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524     0FBD                     _analisisRuido:	
  4525                           ;psect for function _analisisRuido
  4526                           
  4527     0FBD                     l3336:	
  4528                           ;incstack = 0
  4529                           ; Regs used in _analisisRuido: [wreg+status,2+btemp+1]
  4530                           
  4531     0FBD                     l3338:
  4532                           
  4533                           ;main.c: 406:     if (valor[0] < ruidoBajo) temp = 1;
  4534     0FBD  1683               	bsf	3,5	;RP0=1, select bank1
  4535     0FBE  1303               	bcf	3,6	;RP1=0, select bank1
  4536     0FBF  0821               	movf	(_valor+1)^(0+128),w
  4537     0FC0  3A80               	xorlw	128
  4538     0FC1  00FF               	movwf	btemp+1
  4539     0FC2  3081               	movlw	129
  4540     0FC3  027F               	subwf	btemp+1,w
  4541     0FC4  1D03               	skipz
  4542     0FC5  2FC8               	goto	u2565
  4543     0FC6  3090               	movlw	144
  4544     0FC7  0220               	subwf	_valor^(0+128),w
  4545     0FC8                     u2565:
  4546     0FC8  1803               	skipnc
  4547     0FC9  2FCB               	goto	u2561
  4548     0FCA  2FCC               	goto	u2560
  4549     0FCB                     u2561:
  4550     0FCB  2FD1               	goto	l3342
  4551     0FCC                     u2560:
  4552     0FCC                     l3340:
  4553     0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  4554     0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  4555     0FCE  01AE               	clrf	analisisRuido@temp
  4556     0FCF  0AAE               	incf	analisisRuido@temp,f
  4557     0FD0  2FE9               	goto	l308
  4558     0FD1                     l3342:
  4559     0FD1  1683               	bsf	3,5	;RP0=1, select bank1
  4560     0FD2  1303               	bcf	3,6	;RP1=0, select bank1
  4561     0FD3  0821               	movf	(_valor+1)^(0+128),w
  4562     0FD4  3A80               	xorlw	128
  4563     0FD5  00FF               	movwf	btemp+1
  4564     0FD6  3083               	movlw	131
  4565     0FD7  027F               	subwf	btemp+1,w
  4566     0FD8  1D03               	skipz
  4567     0FD9  2FDC               	goto	u2575
  4568     0FDA  3084               	movlw	132
  4569     0FDB  0220               	subwf	_valor^(0+128),w
  4570     0FDC                     u2575:
  4571     0FDC  1803               	skipnc
  4572     0FDD  2FDF               	goto	u2571
  4573     0FDE  2FE0               	goto	u2570
  4574     0FDF                     u2571:
  4575     0FDF  2FE5               	goto	l3346
  4576     0FE0                     u2570:
  4577     0FE0                     l3344:
  4578     0FE0  3002               	movlw	2
  4579     0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  4580     0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  4581     0FE3  00AE               	movwf	analisisRuido@temp
  4582     0FE4  2FE9               	goto	l308
  4583     0FE5                     l3346:
  4584     0FE5  3003               	movlw	3
  4585     0FE6  1283               	bcf	3,5	;RP0=0, select bank0
  4586     0FE7  1303               	bcf	3,6	;RP1=0, select bank0
  4587     0FE8  00AE               	movwf	analisisRuido@temp
  4588     0FE9                     l308:
  4589                           
  4590                           ;main.c: 410:     if (temp > ruidoMasAlto) ruidoMasAlto = temp;
  4591     0FE9  085A               	movf	_ruidoMasAlto+1,w
  4592     0FEA  3A80               	xorlw	128
  4593     0FEB  00AC               	movwf	??_analisisRuido
  4594     0FEC  3080               	movlw	128
  4595     0FED  022C               	subwf	??_analisisRuido,w
  4596     0FEE  1D03               	skipz
  4597     0FEF  2FF2               	goto	u2585
  4598     0FF0  082E               	movf	analisisRuido@temp,w
  4599     0FF1  0259               	subwf	_ruidoMasAlto,w
  4600     0FF2                     u2585:
  4601     0FF2  1803               	skipnc
  4602     0FF3  2FF5               	goto	u2581
  4603     0FF4  2FF6               	goto	u2580
  4604     0FF5                     u2581:
  4605     0FF5  2FFF               	goto	l312
  4606     0FF6                     u2580:
  4607     0FF6                     l3348:
  4608     0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  4609     0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  4610     0FF8  082E               	movf	analisisRuido@temp,w
  4611     0FF9  00AC               	movwf	??_analisisRuido
  4612     0FFA  01AD               	clrf	??_analisisRuido+1
  4613     0FFB  082C               	movf	??_analisisRuido,w
  4614     0FFC  00D9               	movwf	_ruidoMasAlto
  4615     0FFD  082D               	movf	??_analisisRuido+1,w
  4616     0FFE  00DA               	movwf	_ruidoMasAlto+1
  4617     0FFF                     l312:
  4618     0FFF  0008               	return
  4619     1000                     __end_of_analisisRuido:
  4620                           
  4621                           	psect	text28
  4622     0F3B                     __ptext28:	
  4623 ;; *************** function _analisisResto *****************
  4624 ;; Defined at:
  4625 ;;		line 415 in file "main.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;		None
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;		None
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  1    wreg      void 
  4632 ;; Registers used:
  4633 ;;		wreg, status,2, status,0, pclath, cstack
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4639 ;;      Params:         0       0       0       0       0
  4640 ;;      Locals:         0       0       0       0       0
  4641 ;;      Temps:          0       0       0       0       0
  4642 ;;      Totals:         0       0       0       0       0
  4643 ;;Total ram usage:        0 bytes
  4644 ;; Hardware stack levels used: 1
  4645 ;; Hardware stack levels required when called: 7
  4646 ;; This function calls:
  4647 ;;		_getCO2
  4648 ;;		_getLumen
  4649 ;;		_setCO2
  4650 ;;		_setLumen
  4651 ;; This function is called by:
  4652 ;;		_main
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656     0F3B                     _analisisResto:	
  4657                           ;psect for function _analisisResto
  4658                           
  4659     0F3B                     l3350:	
  4660                           ;incstack = 0
  4661                           ; Regs used in _analisisResto: [wreg+status,2+status,0+pclath+cstack]
  4662                           
  4663                           
  4664                           ;main.c: 417:     if (actualizoLecturas)
  4665     0F3B  1683               	bsf	3,5	;RP0=1, select bank1
  4666     0F3C  1303               	bcf	3,6	;RP1=0, select bank1
  4667     0F3D  082E               	movf	_actualizoLecturas^(0+128),w
  4668     0F3E  042F               	iorwf	(_actualizoLecturas+1)^(0+128),w
  4669     0F3F  1903               	btfsc	3,2
  4670     0F40  2F42               	goto	u2591
  4671     0F41  2F43               	goto	u2590
  4672     0F42                     u2591:
  4673     0F42  2F79               	goto	l316
  4674     0F43                     u2590:
  4675     0F43                     l3352:
  4676                           
  4677                           ;main.c: 418:     {;main.c: 419:         actualizoLecturas = 0;
  4678     0F43  01AE               	clrf	_actualizoLecturas^(0+128)
  4679     0F44  01AF               	clrf	(_actualizoLecturas+1)^(0+128)
  4680     0F45                     l3354:
  4681                           
  4682                           ;main.c: 421:         emitoSensores[1] = valor[1];
  4683     0F45  0823               	movf	((_valor+1)^(0+128)+2),w
  4684     0F46  00BB               	movwf	((_emitoSensores+1)^(0+128)+2)
  4685     0F47  0822               	movf	(_valor^(0+128)+2),w
  4686     0F48  00BA               	movwf	(_emitoSensores^(0+128)+2)
  4687     0F49                     l3356:
  4688                           
  4689                           ;main.c: 422:         emitoSensores[2] = valor[2];
  4690     0F49  0825               	movf	((_valor+1)^(0+128)+4),w
  4691     0F4A  00BD               	movwf	((_emitoSensores+1)^(0+128)+4)
  4692     0F4B  0824               	movf	(_valor^(0+128)+4),w
  4693     0F4C  00BC               	movwf	(_emitoSensores^(0+128)+4)
  4694     0F4D                     l3358:
  4695                           
  4696                           ;main.c: 423:         emitoSensores[3] = getCO2();
  4697     0F4D  120A  158A  2481  120A  158A  	fcall	_getCO2
  4698     0F52  1283               	bcf	3,5	;RP0=0, select bank0
  4699     0F53  1303               	bcf	3,6	;RP1=0, select bank0
  4700     0F54  082D               	movf	?_getCO2+1,w
  4701     0F55  1683               	bsf	3,5	;RP0=1, select bank1
  4702     0F56  1303               	bcf	3,6	;RP1=0, select bank1
  4703     0F57  00BF               	movwf	((_emitoSensores+1)^(0+128)+6)
  4704     0F58  1283               	bcf	3,5	;RP0=0, select bank0
  4705     0F59  1303               	bcf	3,6	;RP1=0, select bank0
  4706     0F5A  082C               	movf	?_getCO2,w
  4707     0F5B  1683               	bsf	3,5	;RP0=1, select bank1
  4708     0F5C  1303               	bcf	3,6	;RP1=0, select bank1
  4709     0F5D  00BE               	movwf	(_emitoSensores^(0+128)+6)
  4710     0F5E                     l3360:
  4711                           
  4712                           ;main.c: 424:         emitoSensores[4] = getLumen();
  4713     0F5E  120A  158A  248E  120A  158A  	fcall	_getLumen
  4714     0F63  1283               	bcf	3,5	;RP0=0, select bank0
  4715     0F64  1303               	bcf	3,6	;RP1=0, select bank0
  4716     0F65  082D               	movf	?_getLumen+1,w
  4717     0F66  1683               	bsf	3,5	;RP0=1, select bank1
  4718     0F67  1303               	bcf	3,6	;RP1=0, select bank1
  4719     0F68  00C1               	movwf	((_emitoSensores+1)^(0+128)+8)
  4720     0F69  1283               	bcf	3,5	;RP0=0, select bank0
  4721     0F6A  1303               	bcf	3,6	;RP1=0, select bank0
  4722     0F6B  082C               	movf	?_getLumen,w
  4723     0F6C  1683               	bsf	3,5	;RP0=1, select bank1
  4724     0F6D  1303               	bcf	3,6	;RP1=0, select bank1
  4725     0F6E  00C0               	movwf	(_emitoSensores^(0+128)+8)
  4726     0F6F                     l3362:
  4727                           
  4728                           ;main.c: 425:         setCO2();
  4729     0F6F  120A  118A  2760  120A  158A  	fcall	_setCO2
  4730     0F74                     l3364:
  4731                           
  4732                           ;main.c: 426:         setLumen();
  4733     0F74  120A  118A  271B  120A  158A  	fcall	_setLumen
  4734     0F79                     l316:
  4735     0F79  0008               	return
  4736     0F7A                     __end_of_analisisResto:
  4737                           
  4738                           	psect	text29
  4739     071B                     __ptext29:	
  4740 ;; *************** function _setLumen *****************
  4741 ;; Defined at:
  4742 ;;		line 243 in file "main.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;		None
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;		None
  4747 ;; Return value:  Size  Location     Type
  4748 ;;                  1    wreg      void 
  4749 ;; Registers used:
  4750 ;;		wreg, status,2, status,0, pclath, cstack
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4756 ;;      Params:         0       0       0       0       0
  4757 ;;      Locals:         0       0       0       0       0
  4758 ;;      Temps:          0       2       0       0       0
  4759 ;;      Totals:         0       2       0       0       0
  4760 ;;Total ram usage:        2 bytes
  4761 ;; Hardware stack levels used: 1
  4762 ;; Hardware stack levels required when called: 6
  4763 ;; This function calls:
  4764 ;;		_i2c_read
  4765 ;;		_i2c_rstart
  4766 ;;		_i2c_write
  4767 ;; This function is called by:
  4768 ;;		_analisisResto
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772     071B                     _setLumen:	
  4773                           ;psect for function _setLumen
  4774                           
  4775     071B                     l3188:	
  4776                           ;incstack = 0
  4777                           ; Regs used in _setLumen: [wreg+status,2+status,0+pclath+cstack]
  4778                           
  4779                           
  4780                           ;main.c: 245:     i2c_rstart();
  4781     071B  120A  158A  2450  120A  118A  	fcall	_i2c_rstart
  4782     0720                     l3190:
  4783                           
  4784                           ;main.c: 246:     i2c_write(0x21);
  4785     0720  3021               	movlw	33
  4786     0721  120A  158A  249B  120A  118A  	fcall	_i2c_write
  4787     0726                     l3192:
  4788                           
  4789                           ;main.c: 247:     i2c_write(0x04);
  4790     0726  3004               	movlw	4
  4791     0727  120A  158A  249B  120A  118A  	fcall	_i2c_write
  4792     072C                     l3194:
  4793                           
  4794                           ;main.c: 248:     valorI2C[1] = i2c_read(1);
  4795     072C  3001               	movlw	1
  4796     072D  120A  158A  25D8  120A  118A  	fcall	_i2c_read
  4797     0732  1283               	bcf	3,5	;RP0=0, select bank0
  4798     0733  1303               	bcf	3,6	;RP1=0, select bank0
  4799     0734  00AE               	movwf	??_setLumen
  4800     0735  01AF               	clrf	??_setLumen+1
  4801     0736  082E               	movf	??_setLumen,w
  4802     0737  1683               	bsf	3,5	;RP0=1, select bank1
  4803     0738  1303               	bcf	3,6	;RP1=0, select bank1
  4804     0739  00A8               	movwf	(_valorI2C^(0+128)+2)
  4805     073A  1283               	bcf	3,5	;RP0=0, select bank0
  4806     073B  1303               	bcf	3,6	;RP1=0, select bank0
  4807     073C  082F               	movf	??_setLumen+1,w
  4808     073D  1683               	bsf	3,5	;RP0=1, select bank1
  4809     073E  1303               	bcf	3,6	;RP1=0, select bank1
  4810     073F  00A9               	movwf	((_valorI2C+1)^(0+128)+2)
  4811     0740                     l3196:
  4812                           
  4813                           ;main.c: 249:     valorI2C[1] += (i2c_read(1) * 0x10);
  4814     0740  3001               	movlw	1
  4815     0741  120A  158A  25D8  120A  118A  	fcall	_i2c_read
  4816     0746  1283               	bcf	3,5	;RP0=0, select bank0
  4817     0747  1303               	bcf	3,6	;RP1=0, select bank0
  4818     0748  00AE               	movwf	??_setLumen
  4819     0749  01AF               	clrf	??_setLumen+1
  4820     074A  0EAE               	swapf	??_setLumen,f
  4821     074B  0EAF               	swapf	??_setLumen+1,f
  4822     074C  30F0               	movlw	240
  4823     074D  05AF               	andwf	??_setLumen+1,f
  4824     074E  082E               	movf	??_setLumen,w
  4825     074F  390F               	andlw	15
  4826     0750  04AF               	iorwf	??_setLumen+1,f
  4827     0751  30F0               	movlw	240
  4828     0752  05AE               	andwf	??_setLumen,f
  4829     0753  082E               	movf	??_setLumen,w
  4830     0754  1683               	bsf	3,5	;RP0=1, select bank1
  4831     0755  1303               	bcf	3,6	;RP1=0, select bank1
  4832     0756  07A8               	addwf	(_valorI2C^(0+128)+2),f
  4833     0757  1803               	skipnc
  4834     0758  0AA9               	incf	((_valorI2C+1)^(0+128)+2),f
  4835     0759  1283               	bcf	3,5	;RP0=0, select bank0
  4836     075A  1303               	bcf	3,6	;RP1=0, select bank0
  4837     075B  082F               	movf	??_setLumen+1,w
  4838     075C  1683               	bsf	3,5	;RP0=1, select bank1
  4839     075D  1303               	bcf	3,6	;RP1=0, select bank1
  4840     075E  07A9               	addwf	((_valorI2C+1)^(0+128)+2),f
  4841     075F                     l247:
  4842     075F  0008               	return
  4843     0760                     __end_of_setLumen:
  4844                           
  4845                           	psect	text30
  4846     0760                     __ptext30:	
  4847 ;; *************** function _setCO2 *****************
  4848 ;; Defined at:
  4849 ;;		line 257 in file "main.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;		None
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;		None
  4854 ;; Return value:  Size  Location     Type
  4855 ;;                  1    wreg      void 
  4856 ;; Registers used:
  4857 ;;		wreg, status,2, status,0, pclath, cstack
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4863 ;;      Params:         0       0       0       0       0
  4864 ;;      Locals:         0       0       0       0       0
  4865 ;;      Temps:          0       2       0       0       0
  4866 ;;      Totals:         0       2       0       0       0
  4867 ;;Total ram usage:        2 bytes
  4868 ;; Hardware stack levels used: 1
  4869 ;; Hardware stack levels required when called: 6
  4870 ;; This function calls:
  4871 ;;		_i2c_read
  4872 ;;		_i2c_rstart
  4873 ;;		_i2c_write
  4874 ;; This function is called by:
  4875 ;;		_analisisResto
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879     0760                     _setCO2:	
  4880                           ;psect for function _setCO2
  4881                           
  4882     0760                     l3202:	
  4883                           ;incstack = 0
  4884                           ; Regs used in _setCO2: [wreg+status,2+status,0+pclath+cstack]
  4885                           
  4886                           
  4887                           ;main.c: 259:     i2c_rstart();
  4888     0760  120A  158A  2450  120A  118A  	fcall	_i2c_rstart
  4889     0765                     l3204:
  4890                           
  4891                           ;main.c: 260:     i2c_write(0x5A);
  4892     0765  305A               	movlw	90
  4893     0766  120A  158A  249B  120A  118A  	fcall	_i2c_write
  4894     076B                     l3206:
  4895                           
  4896                           ;main.c: 261:     i2c_write(0xB5);
  4897     076B  30B5               	movlw	181
  4898     076C  120A  158A  249B  120A  118A  	fcall	_i2c_write
  4899     0771                     l3208:
  4900                           
  4901                           ;main.c: 262:     valorI2C[0] = i2c_read(1);
  4902     0771  3001               	movlw	1
  4903     0772  120A  158A  25D8  120A  118A  	fcall	_i2c_read
  4904     0777  1283               	bcf	3,5	;RP0=0, select bank0
  4905     0778  1303               	bcf	3,6	;RP1=0, select bank0
  4906     0779  00AE               	movwf	??_setCO2
  4907     077A  01AF               	clrf	??_setCO2+1
  4908     077B  082E               	movf	??_setCO2,w
  4909     077C  1683               	bsf	3,5	;RP0=1, select bank1
  4910     077D  1303               	bcf	3,6	;RP1=0, select bank1
  4911     077E  00A6               	movwf	_valorI2C^(0+128)
  4912     077F  1283               	bcf	3,5	;RP0=0, select bank0
  4913     0780  1303               	bcf	3,6	;RP1=0, select bank0
  4914     0781  082F               	movf	??_setCO2+1,w
  4915     0782  1683               	bsf	3,5	;RP0=1, select bank1
  4916     0783  1303               	bcf	3,6	;RP1=0, select bank1
  4917     0784  00A7               	movwf	(_valorI2C+1)^(0+128)
  4918     0785                     l3210:
  4919                           
  4920                           ;main.c: 263:     valorI2C[0] += (i2c_read(1) * 0x10);
  4921     0785  3001               	movlw	1
  4922     0786  120A  158A  25D8  120A  118A  	fcall	_i2c_read
  4923     078B  1283               	bcf	3,5	;RP0=0, select bank0
  4924     078C  1303               	bcf	3,6	;RP1=0, select bank0
  4925     078D  00AE               	movwf	??_setCO2
  4926     078E  01AF               	clrf	??_setCO2+1
  4927     078F  0EAE               	swapf	??_setCO2,f
  4928     0790  0EAF               	swapf	??_setCO2+1,f
  4929     0791  30F0               	movlw	240
  4930     0792  05AF               	andwf	??_setCO2+1,f
  4931     0793  082E               	movf	??_setCO2,w
  4932     0794  390F               	andlw	15
  4933     0795  04AF               	iorwf	??_setCO2+1,f
  4934     0796  30F0               	movlw	240
  4935     0797  05AE               	andwf	??_setCO2,f
  4936     0798  082E               	movf	??_setCO2,w
  4937     0799  1683               	bsf	3,5	;RP0=1, select bank1
  4938     079A  1303               	bcf	3,6	;RP1=0, select bank1
  4939     079B  07A6               	addwf	_valorI2C^(0+128),f
  4940     079C  1803               	skipnc
  4941     079D  0AA7               	incf	(_valorI2C+1)^(0+128),f
  4942     079E  1283               	bcf	3,5	;RP0=0, select bank0
  4943     079F  1303               	bcf	3,6	;RP1=0, select bank0
  4944     07A0  082F               	movf	??_setCO2+1,w
  4945     07A1  1683               	bsf	3,5	;RP0=1, select bank1
  4946     07A2  1303               	bcf	3,6	;RP1=0, select bank1
  4947     07A3  07A7               	addwf	(_valorI2C+1)^(0+128),f
  4948     07A4                     l253:
  4949     07A4  0008               	return
  4950     07A5                     __end_of_setCO2:
  4951                           
  4952                           	psect	text31
  4953     0C9B                     __ptext31:	
  4954 ;; *************** function _i2c_write *****************
  4955 ;; Defined at:
  4956 ;;		line 37 in file "i2c-v2.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;  I2C_data        1    wreg     unsigned char 
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;  I2C_data        1   12[BANK0 ] unsigned char 
  4961 ;; Return value:  Size  Location     Type
  4962 ;;                  1    wreg      unsigned char 
  4963 ;; Registers used:
  4964 ;;		wreg, status,2, status,0, pclath, cstack
  4965 ;; Tracked objects:
  4966 ;;		On entry : 0/0
  4967 ;;		On exit  : 0/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4970 ;;      Params:         0       0       0       0       0
  4971 ;;      Locals:         0       1       0       0       0
  4972 ;;      Temps:          0       0       0       0       0
  4973 ;;      Totals:         0       1       0       0       0
  4974 ;;Total ram usage:        1 bytes
  4975 ;; Hardware stack levels used: 1
  4976 ;; Hardware stack levels required when called: 5
  4977 ;; This function calls:
  4978 ;;		_wait_MSSP
  4979 ;; This function is called by:
  4980 ;;		_setLumen
  4981 ;;		_setCO2
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985     0C9B                     _i2c_write:	
  4986                           ;psect for function _i2c_write
  4987                           
  4988                           
  4989                           ;incstack = 0
  4990                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  4991                           ;i2c_write@I2C_data stored from wreg
  4992     0C9B  1283               	bcf	3,5	;RP0=0, select bank0
  4993     0C9C  1303               	bcf	3,6	;RP1=0, select bank0
  4994     0C9D  00AC               	movwf	i2c_write@I2C_data
  4995     0C9E                     l2926:
  4996                           
  4997                           ;i2c-v2.c: 37: unsigned char i2c_write(unsigned char I2C_data);i2c-v2.c: 38: {;i2c-v2.c:
      +                           39:     SSPBUF = I2C_data;
  4998     0C9E  082C               	movf	i2c_write@I2C_data,w
  4999     0C9F  0093               	movwf	19	;volatile
  5000     0CA0                     l2928:
  5001                           
  5002                           ;i2c-v2.c: 40:     wait_MSSP();
  5003     0CA0  120A  158A  2440  120A  158A  	fcall	_wait_MSSP
  5004     0CA5                     l2930:
  5005                           
  5006                           ;i2c-v2.c: 41:     return((unsigned char)!SSPCON2bits.ACKSTAT);;	Return value of _i2c_wr
      +                          ite is never used
  5007     0CA5  1683               	bsf	3,5	;RP0=1, select bank1
  5008     0CA6  1303               	bcf	3,6	;RP1=0, select bank1
  5009     0CA7  0811               	movf	17,w	;volatile
  5010     0CA8                     l24:
  5011     0CA8  0008               	return
  5012     0CA9                     __end_of_i2c_write:
  5013                           
  5014                           	psect	text32
  5015     0C50                     __ptext32:	
  5016 ;; *************** function _i2c_rstart *****************
  5017 ;; Defined at:
  5018 ;;		line 30 in file "i2c-v2.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;		None
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;		None
  5023 ;; Return value:  Size  Location     Type
  5024 ;;                  1    wreg      void 
  5025 ;; Registers used:
  5026 ;;		status,2, status,0, pclath, cstack
  5027 ;; Tracked objects:
  5028 ;;		On entry : 0/0
  5029 ;;		On exit  : 0/0
  5030 ;;		Unchanged: 0/0
  5031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5032 ;;      Params:         0       0       0       0       0
  5033 ;;      Locals:         0       0       0       0       0
  5034 ;;      Temps:          0       0       0       0       0
  5035 ;;      Totals:         0       0       0       0       0
  5036 ;;Total ram usage:        0 bytes
  5037 ;; Hardware stack levels used: 1
  5038 ;; Hardware stack levels required when called: 5
  5039 ;; This function calls:
  5040 ;;		_wait_MSSP
  5041 ;; This function is called by:
  5042 ;;		_setLumen
  5043 ;;		_setCO2
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047     0C50                     _i2c_rstart:	
  5048                           ;psect for function _i2c_rstart
  5049                           
  5050     0C50                     l2920:	
  5051                           ;incstack = 0
  5052                           ; Regs used in _i2c_rstart: [status,2+status,0+pclath+cstack]
  5053                           
  5054                           
  5055                           ;i2c-v2.c: 32:     SSPCON2bits.RSEN = 1;
  5056     0C50  1683               	bsf	3,5	;RP0=1, select bank1
  5057     0C51  1303               	bcf	3,6	;RP1=0, select bank1
  5058     0C52  1491               	bsf	17,1	;volatile
  5059     0C53                     l2922:
  5060                           
  5061                           ;i2c-v2.c: 33:     wait_MSSP();
  5062     0C53  120A  158A  2440  120A  158A  	fcall	_wait_MSSP
  5063     0C58                     l21:
  5064     0C58  0008               	return
  5065     0C59                     __end_of_i2c_rstart:
  5066                           
  5067                           	psect	text33
  5068     0DD8                     __ptext33:	
  5069 ;; *************** function _i2c_read *****************
  5070 ;; Defined at:
  5071 ;;		line 47 in file "i2c-v2.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  master_ack      1    wreg     unsigned char 
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;  master_ack      1   12[BANK0 ] unsigned char 
  5076 ;;  I2C_data        1   13[BANK0 ] unsigned char 
  5077 ;; Return value:  Size  Location     Type
  5078 ;;                  1    wreg      unsigned char 
  5079 ;; Registers used:
  5080 ;;		wreg, status,2, status,0, pclath, cstack
  5081 ;; Tracked objects:
  5082 ;;		On entry : 0/0
  5083 ;;		On exit  : 0/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5086 ;;      Params:         0       0       0       0       0
  5087 ;;      Locals:         0       2       0       0       0
  5088 ;;      Temps:          0       0       0       0       0
  5089 ;;      Totals:         0       2       0       0       0
  5090 ;;Total ram usage:        2 bytes
  5091 ;; Hardware stack levels used: 1
  5092 ;; Hardware stack levels required when called: 5
  5093 ;; This function calls:
  5094 ;;		_wait_MSSP
  5095 ;; This function is called by:
  5096 ;;		_setLumen
  5097 ;;		_setCO2
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101     0DD8                     _i2c_read:	
  5102                           ;psect for function _i2c_read
  5103                           
  5104                           
  5105                           ;incstack = 0
  5106                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  5107                           ;i2c_read@master_ack stored from wreg
  5108     0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  5109     0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  5110     0DDA  00AC               	movwf	i2c_read@master_ack
  5111     0DDB                     l2934:
  5112                           
  5113                           ;i2c-v2.c: 47: unsigned char i2c_read(char master_ack);i2c-v2.c: 48: {;i2c-v2.c: 49:    
      +                           unsigned char I2C_data;;i2c-v2.c: 51:     SSPCON2bits.RCEN = 1;
  5114     0DDB  1683               	bsf	3,5	;RP0=1, select bank1
  5115     0DDC  1303               	bcf	3,6	;RP1=0, select bank1
  5116     0DDD  1591               	bsf	17,3	;volatile
  5117     0DDE                     l2936:
  5118                           
  5119                           ;i2c-v2.c: 52:     wait_MSSP();
  5120     0DDE  120A  158A  2440  120A  158A  	fcall	_wait_MSSP
  5121     0DE3                     l2938:
  5122                           
  5123                           ;i2c-v2.c: 54:     I2C_data = SSPBUF;
  5124     0DE3  1283               	bcf	3,5	;RP0=0, select bank0
  5125     0DE4  1303               	bcf	3,6	;RP1=0, select bank0
  5126     0DE5  0813               	movf	19,w	;volatile
  5127     0DE6  00AD               	movwf	i2c_read@I2C_data
  5128     0DE7                     l2940:
  5129                           
  5130                           ;i2c-v2.c: 56:     if(master_ack)
  5131     0DE7  082C               	movf	i2c_read@master_ack,w
  5132     0DE8  1903               	btfsc	3,2
  5133     0DE9  2DEB               	goto	u2181
  5134     0DEA  2DEC               	goto	u2180
  5135     0DEB                     u2181:
  5136     0DEB  2DF0               	goto	l27
  5137     0DEC                     u2180:
  5138     0DEC                     l2942:
  5139                           
  5140                           ;i2c-v2.c: 57:         SSPCON2bits.ACKDT = 0;
  5141     0DEC  1683               	bsf	3,5	;RP0=1, select bank1
  5142     0DED  1303               	bcf	3,6	;RP1=0, select bank1
  5143     0DEE  1291               	bcf	17,5	;volatile
  5144     0DEF  2DF3               	goto	l28
  5145     0DF0                     l27:	
  5146                           ;i2c-v2.c: 58:     else
  5147                           
  5148                           
  5149                           ;i2c-v2.c: 59:         SSPCON2bits.ACKDT = 1;
  5150     0DF0  1683               	bsf	3,5	;RP0=1, select bank1
  5151     0DF1  1303               	bcf	3,6	;RP1=0, select bank1
  5152     0DF2  1691               	bsf	17,5	;volatile
  5153     0DF3                     l28:
  5154                           
  5155                           ;i2c-v2.c: 61:     SSPCON2bits.ACKEN = 1;
  5156     0DF3  1611               	bsf	17,4	;volatile
  5157     0DF4                     l2944:
  5158                           
  5159                           ;i2c-v2.c: 62:     wait_MSSP();
  5160     0DF4  120A  158A  2440  120A  158A  	fcall	_wait_MSSP
  5161     0DF9                     l2946:
  5162                           
  5163                           ;i2c-v2.c: 63:     return(I2C_data);
  5164     0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  5165     0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  5166     0DFB  082D               	movf	i2c_read@I2C_data,w
  5167     0DFC                     l29:
  5168     0DFC  0008               	return
  5169     0DFD                     __end_of_i2c_read:
  5170                           
  5171                           	psect	text34
  5172     0C40                     __ptext34:	
  5173 ;; *************** function _wait_MSSP *****************
  5174 ;; Defined at:
  5175 ;;		line 8 in file "i2c-v2.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;		None
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;		None
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  1    wreg      void 
  5182 ;; Registers used:
  5183 ;;		None
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5189 ;;      Params:         0       0       0       0       0
  5190 ;;      Locals:         0       0       0       0       0
  5191 ;;      Temps:          0       0       0       0       0
  5192 ;;      Totals:         0       0       0       0       0
  5193 ;;Total ram usage:        0 bytes
  5194 ;; Hardware stack levels used: 1
  5195 ;; Hardware stack levels required when called: 4
  5196 ;; This function calls:
  5197 ;;		Nothing
  5198 ;; This function is called by:
  5199 ;;		_i2c_start
  5200 ;;		_i2c_stop
  5201 ;;		_i2c_rstart
  5202 ;;		_i2c_write
  5203 ;;		_i2c_read
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207     0C40                     _wait_MSSP:	
  5208                           ;psect for function _wait_MSSP
  5209                           
  5210     0C40                     l2886:	
  5211                           ;incstack = 0
  5212                           ; Regs used in _wait_MSSP: []
  5213                           
  5214     0C40                     l9:	
  5215                           ;i2c-v2.c: 10:     while(!PIR1bits.SSPIF);
  5216                           
  5217     0C40  1283               	bcf	3,5	;RP0=0, select bank0
  5218     0C41  1303               	bcf	3,6	;RP1=0, select bank0
  5219     0C42  1D8C               	btfss	12,3	;volatile
  5220     0C43  2C45               	goto	u2111
  5221     0C44  2C46               	goto	u2110
  5222     0C45                     u2111:
  5223     0C45  2C40               	goto	l9
  5224     0C46                     u2110:
  5225     0C46                     l11:
  5226                           
  5227                           ;i2c-v2.c: 12:     PIR1bits.SSPIF = 0;
  5228     0C46  118C               	bcf	12,3	;volatile
  5229     0C47                     l12:	
  5230                           ;i2c-v2.c: 13:     return;
  5231                           
  5232     0C47  0008               	return
  5233     0C48                     __end_of_wait_MSSP:
  5234                           
  5235                           	psect	text35
  5236     0C8E                     __ptext35:	
  5237 ;; *************** function _getLumen *****************
  5238 ;; Defined at:
  5239 ;;		line 252 in file "main.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;		None
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;		None
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  2   12[BANK0 ] int 
  5246 ;; Registers used:
  5247 ;;		wreg
  5248 ;; Tracked objects:
  5249 ;;		On entry : 0/0
  5250 ;;		On exit  : 0/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5253 ;;      Params:         0       2       0       0       0
  5254 ;;      Locals:         0       0       0       0       0
  5255 ;;      Temps:          0       0       0       0       0
  5256 ;;      Totals:         0       2       0       0       0
  5257 ;;Total ram usage:        2 bytes
  5258 ;; Hardware stack levels used: 1
  5259 ;; Hardware stack levels required when called: 4
  5260 ;; This function calls:
  5261 ;;		Nothing
  5262 ;; This function is called by:
  5263 ;;		_analisisResto
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267     0C8E                     _getLumen:	
  5268                           ;psect for function _getLumen
  5269                           
  5270     0C8E                     l3198:	
  5271                           ;incstack = 0
  5272                           ; Regs used in _getLumen: [wreg]
  5273                           
  5274                           
  5275                           ;main.c: 253:     return valorI2C[1];
  5276     0C8E  1683               	bsf	3,5	;RP0=1, select bank1
  5277     0C8F  1303               	bcf	3,6	;RP1=0, select bank1
  5278     0C90  0829               	movf	((_valorI2C+1)^(0+128)+2),w
  5279     0C91  1283               	bcf	3,5	;RP0=0, select bank0
  5280     0C92  1303               	bcf	3,6	;RP1=0, select bank0
  5281     0C93  00AD               	movwf	?_getLumen+1
  5282     0C94  1683               	bsf	3,5	;RP0=1, select bank1
  5283     0C95  1303               	bcf	3,6	;RP1=0, select bank1
  5284     0C96  0828               	movf	(_valorI2C^(0+128)+2),w
  5285     0C97  1283               	bcf	3,5	;RP0=0, select bank0
  5286     0C98  1303               	bcf	3,6	;RP1=0, select bank0
  5287     0C99  00AC               	movwf	?_getLumen
  5288     0C9A                     l250:
  5289     0C9A  0008               	return
  5290     0C9B                     __end_of_getLumen:
  5291                           
  5292                           	psect	text36
  5293     0C81                     __ptext36:	
  5294 ;; *************** function _getCO2 *****************
  5295 ;; Defined at:
  5296 ;;		line 266 in file "main.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;		None
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;		None
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  2   12[BANK0 ] int 
  5303 ;; Registers used:
  5304 ;;		wreg
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5310 ;;      Params:         0       2       0       0       0
  5311 ;;      Locals:         0       0       0       0       0
  5312 ;;      Temps:          0       0       0       0       0
  5313 ;;      Totals:         0       2       0       0       0
  5314 ;;Total ram usage:        2 bytes
  5315 ;; Hardware stack levels used: 1
  5316 ;; Hardware stack levels required when called: 4
  5317 ;; This function calls:
  5318 ;;		Nothing
  5319 ;; This function is called by:
  5320 ;;		_analisisResto
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324     0C81                     _getCO2:	
  5325                           ;psect for function _getCO2
  5326                           
  5327     0C81                     l3212:	
  5328                           ;incstack = 0
  5329                           ; Regs used in _getCO2: [wreg]
  5330                           
  5331                           
  5332                           ;main.c: 267:     return valorI2C[0];
  5333     0C81  1683               	bsf	3,5	;RP0=1, select bank1
  5334     0C82  1303               	bcf	3,6	;RP1=0, select bank1
  5335     0C83  0827               	movf	(_valorI2C+1)^(0+128),w
  5336     0C84  1283               	bcf	3,5	;RP0=0, select bank0
  5337     0C85  1303               	bcf	3,6	;RP1=0, select bank0
  5338     0C86  00AD               	movwf	?_getCO2+1
  5339     0C87  1683               	bsf	3,5	;RP0=1, select bank1
  5340     0C88  1303               	bcf	3,6	;RP1=0, select bank1
  5341     0C89  0826               	movf	_valorI2C^(0+128),w
  5342     0C8A  1283               	bcf	3,5	;RP0=0, select bank0
  5343     0C8B  1303               	bcf	3,6	;RP1=0, select bank0
  5344     0C8C  00AC               	movwf	?_getCO2
  5345     0C8D                     l256:
  5346     0C8D  0008               	return
  5347     0C8E                     __end_of_getCO2:
  5348                           
  5349                           	psect	text37
  5350     004A                     __ptext37:	
  5351 ;; *************** function _TRAT_INT *****************
  5352 ;; Defined at:
  5353 ;;		line 441 in file "main.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;		None
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;		None
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  1    wreg      void 
  5360 ;; Registers used:
  5361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5367 ;;      Params:         0       0       0       0       0
  5368 ;;      Locals:         0       0       0       0       0
  5369 ;;      Temps:          0       9       0       0       0
  5370 ;;      Totals:         0       9       0       0       0
  5371 ;;Total ram usage:        9 bytes
  5372 ;; Hardware stack levels used: 1
  5373 ;; Hardware stack levels required when called: 3
  5374 ;; This function calls:
  5375 ;;		i1_setLED
  5376 ;;		i1_setPWM
  5377 ;; This function is called by:
  5378 ;;		Interrupt level 1
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382     004A                     _TRAT_INT:	
  5383                           ;psect for function _TRAT_INT
  5384                           
  5385     004A                     i1l2672:
  5386                           
  5387                           ;main.c: 442:     if (INTCONbits.TMR0IF)
  5388     004A  1D0B               	btfss	11,2	;volatile
  5389     004B  284D               	goto	u188_21
  5390     004C  284E               	goto	u188_20
  5391     004D                     u188_21:
  5392     004D  28AC               	goto	i1l326
  5393     004E                     u188_20:
  5394     004E                     i1l2674:
  5395                           
  5396                           ;main.c: 443:     {;main.c: 445:         TMR0 = 61;
  5397     004E  303D               	movlw	61
  5398     004F  0081               	movwf	1	;volatile
  5399                           
  5400                           ;main.c: 446:         if (copias >= los5msen1sT0) {
  5401     0050  1683               	bsf	3,5	;RP0=1, select bank1
  5402     0051  1303               	bcf	3,6	;RP1=0, select bank1
  5403     0052  082D               	movf	(_copias+1)^(0+128),w
  5404     0053  3A80               	xorlw	128
  5405     0054  1283               	bcf	3,5	;RP0=0, select bank0
  5406     0055  1303               	bcf	3,6	;RP1=0, select bank0
  5407     0056  00A3               	movwf	??_TRAT_INT
  5408     0057  1683               	bsf	3,5	;RP0=1, select bank1
  5409     0058  1303               	bcf	3,6	;RP1=0, select bank1
  5410     0059  0843               	movf	(_los5msen1sT0+1)^(0+128),w
  5411     005A  3A80               	xorlw	128
  5412     005B  1283               	bcf	3,5	;RP0=0, select bank0
  5413     005C  1303               	bcf	3,6	;RP1=0, select bank0
  5414     005D  0223               	subwf	??_TRAT_INT,w
  5415     005E  1D03               	skipz
  5416     005F  2864               	goto	u189_25
  5417     0060  1683               	bsf	3,5	;RP0=1, select bank1
  5418     0061  1303               	bcf	3,6	;RP1=0, select bank1
  5419     0062  0842               	movf	_los5msen1sT0^(0+128),w
  5420     0063  022C               	subwf	_copias^(0+128),w
  5421     0064                     u189_25:
  5422     0064  1C03               	skipc
  5423     0065  2867               	goto	u189_21
  5424     0066  2868               	goto	u189_20
  5425     0067                     u189_21:
  5426     0067  28A2               	goto	i1l2688
  5427     0068                     u189_20:
  5428     0068                     i1l2676:
  5429                           
  5430                           ;main.c: 448:             copias = 0;
  5431     0068  1683               	bsf	3,5	;RP0=1, select bank1
  5432     0069  1303               	bcf	3,6	;RP1=0, select bank1
  5433     006A  01AC               	clrf	_copias^(0+128)
  5434     006B  01AD               	clrf	(_copias+1)^(0+128)
  5435     006C                     i1l2678:
  5436                           
  5437                           ;main.c: 449:             copias5s++;
  5438     006C  3001               	movlw	1
  5439     006D  07AA               	addwf	_copias5s^(0+128),f
  5440     006E  1803               	skipnc
  5441     006F  0AAB               	incf	(_copias5s+1)^(0+128),f
  5442     0070  3000               	movlw	0
  5443     0071  07AB               	addwf	(_copias5s+1)^(0+128),f
  5444     0072                     i1l2680:
  5445                           
  5446                           ;main.c: 451:             emitoSensores[0] = ruidoMasAlto;
  5447     0072  1283               	bcf	3,5	;RP0=0, select bank0
  5448     0073  1303               	bcf	3,6	;RP1=0, select bank0
  5449     0074  085A               	movf	_ruidoMasAlto+1,w
  5450     0075  1683               	bsf	3,5	;RP0=1, select bank1
  5451     0076  1303               	bcf	3,6	;RP1=0, select bank1
  5452     0077  00B9               	movwf	(_emitoSensores+1)^(0+128)
  5453     0078  1283               	bcf	3,5	;RP0=0, select bank0
  5454     0079  1303               	bcf	3,6	;RP1=0, select bank0
  5455     007A  0859               	movf	_ruidoMasAlto,w
  5456     007B  1683               	bsf	3,5	;RP0=1, select bank1
  5457     007C  1303               	bcf	3,6	;RP1=0, select bank1
  5458     007D  00B8               	movwf	_emitoSensores^(0+128)
  5459                           
  5460                           ;main.c: 452:             ruidoMasAlto = 0;
  5461     007E  1283               	bcf	3,5	;RP0=0, select bank0
  5462     007F  1303               	bcf	3,6	;RP1=0, select bank0
  5463     0080  01D9               	clrf	_ruidoMasAlto
  5464     0081  01DA               	clrf	_ruidoMasAlto+1
  5465     0082                     i1l2682:
  5466                           
  5467                           ;main.c: 456:             if (copias5s >= 5)
  5468     0082  1683               	bsf	3,5	;RP0=1, select bank1
  5469     0083  1303               	bcf	3,6	;RP1=0, select bank1
  5470     0084  082B               	movf	(_copias5s+1)^(0+128),w
  5471     0085  3A80               	xorlw	128
  5472     0086  00FF               	movwf	btemp+1
  5473     0087  3080               	movlw	128
  5474     0088  027F               	subwf	btemp+1,w
  5475     0089  1D03               	skipz
  5476     008A  288D               	goto	u190_25
  5477     008B  3005               	movlw	5
  5478     008C  022A               	subwf	_copias5s^(0+128),w
  5479     008D                     u190_25:
  5480     008D  1C03               	skipc
  5481     008E  2890               	goto	u190_21
  5482     008F  2891               	goto	u190_20
  5483     0090                     u190_21:
  5484     0090  28AA               	goto	i1l2690
  5485     0091                     u190_20:
  5486     0091                     i1l2684:
  5487                           
  5488                           ;main.c: 457:             {;main.c: 458:                 actualizoLecturas = 1;
  5489     0091  3001               	movlw	1
  5490     0092  1683               	bsf	3,5	;RP0=1, select bank1
  5491     0093  1303               	bcf	3,6	;RP1=0, select bank1
  5492     0094  00AE               	movwf	_actualizoLecturas^(0+128)
  5493     0095  3000               	movlw	0
  5494     0096  00AF               	movwf	(_actualizoLecturas^(0+128)+1)
  5495                           
  5496                           ;main.c: 459:                 leoADCHumedadTemp = 2;
  5497     0097  3002               	movlw	2
  5498     0098  1283               	bcf	3,5	;RP0=0, select bank0
  5499     0099  1303               	bcf	3,6	;RP1=0, select bank0
  5500     009A  00C8               	movwf	_leoADCHumedadTemp
  5501     009B  3000               	movlw	0
  5502     009C  00C9               	movwf	_leoADCHumedadTemp+1
  5503     009D                     i1l2686:
  5504                           
  5505                           ;main.c: 460:                 copias5s = 0;
  5506     009D  1683               	bsf	3,5	;RP0=1, select bank1
  5507     009E  1303               	bcf	3,6	;RP1=0, select bank1
  5508     009F  01AA               	clrf	_copias5s^(0+128)
  5509     00A0  01AB               	clrf	(_copias5s+1)^(0+128)
  5510     00A1  28AA               	goto	i1l2690
  5511     00A2                     i1l2688:
  5512                           
  5513                           ;main.c: 464:             copias += 1;
  5514     00A2  3001               	movlw	1
  5515     00A3  1683               	bsf	3,5	;RP0=1, select bank1
  5516     00A4  1303               	bcf	3,6	;RP1=0, select bank1
  5517     00A5  07AC               	addwf	_copias^(0+128),f
  5518     00A6  1803               	skipnc
  5519     00A7  0AAD               	incf	(_copias+1)^(0+128),f
  5520     00A8  3000               	movlw	0
  5521     00A9  07AD               	addwf	(_copias+1)^(0+128),f
  5522     00AA                     i1l2690:
  5523                           
  5524                           ;main.c: 466:         INTCONbits.T0IF = 0;
  5525     00AA  110B               	bcf	11,2	;volatile
  5526                           
  5527                           ;main.c: 468:     } else {
  5528     00AB  2A29               	goto	i1l369
  5529     00AC                     i1l326:
  5530                           
  5531                           ;main.c: 469:         if (PIR1bits.TMR1IF == 1)
  5532     00AC  1C0C               	btfss	12,0	;volatile
  5533     00AD  28AF               	goto	u191_21
  5534     00AE  28B0               	goto	u191_20
  5535     00AF                     u191_21:
  5536     00AF  2918               	goto	i1l331
  5537     00B0                     u191_20:
  5538     00B0                     i1l2692:
  5539                           
  5540                           ;main.c: 470:         {;main.c: 472:             if (copias1 >= los5msen15ms) {
  5541     00B0  0858               	movf	_copias1+1,w
  5542     00B1  3A80               	xorlw	128
  5543     00B2  00A3               	movwf	??_TRAT_INT
  5544     00B3  0847               	movf	_los5msen15ms+1,w
  5545     00B4  3A80               	xorlw	128
  5546     00B5  0223               	subwf	??_TRAT_INT,w
  5547     00B6  1D03               	skipz
  5548     00B7  28BA               	goto	u192_25
  5549     00B8  0846               	movf	_los5msen15ms,w
  5550     00B9  0257               	subwf	_copias1,w
  5551     00BA                     u192_25:
  5552     00BA  1C03               	skipc
  5553     00BB  28BD               	goto	u192_21
  5554     00BC  28BE               	goto	u192_20
  5555     00BD                     u192_21:
  5556     00BD  28D3               	goto	i1l2700
  5557     00BE                     u192_20:
  5558     00BE                     i1l2694:
  5559                           
  5560                           ;main.c: 473:                 copias1 = 0;
  5561     00BE  1283               	bcf	3,5	;RP0=0, select bank0
  5562     00BF  1303               	bcf	3,6	;RP1=0, select bank0
  5563     00C0  01D7               	clrf	_copias1
  5564     00C1  01D8               	clrf	_copias1+1
  5565     00C2                     i1l2696:
  5566                           
  5567                           ;main.c: 476:                 if (leoADCHumedadTemp > 0) ADCON0bits.GO_DONE = 1;
  5568     00C2  0849               	movf	_leoADCHumedadTemp+1,w
  5569     00C3  3A80               	xorlw	128
  5570     00C4  00FF               	movwf	btemp+1
  5571     00C5  3080               	movlw	128
  5572     00C6  027F               	subwf	btemp+1,w
  5573     00C7  1D03               	skipz
  5574     00C8  28CB               	goto	u193_25
  5575     00C9  3001               	movlw	1
  5576     00CA  0248               	subwf	_leoADCHumedadTemp,w
  5577     00CB                     u193_25:
  5578     00CB  1C03               	skipc
  5579     00CC  28CE               	goto	u193_21
  5580     00CD  28CF               	goto	u193_20
  5581     00CE                     u193_21:
  5582     00CE  290F               	goto	i1l334
  5583     00CF                     u193_20:
  5584     00CF                     i1l2698:
  5585     00CF  1283               	bcf	3,5	;RP0=0, select bank0
  5586     00D0  1303               	bcf	3,6	;RP1=0, select bank0
  5587     00D1  149F               	bsf	31,1	;volatile
  5588     00D2  290F               	goto	i1l334
  5589     00D3                     i1l2700:
  5590                           
  5591                           ;main.c: 478:                 copias1 += 1;
  5592     00D3  3001               	movlw	1
  5593     00D4  1283               	bcf	3,5	;RP0=0, select bank0
  5594     00D5  1303               	bcf	3,6	;RP1=0, select bank0
  5595     00D6  07D7               	addwf	_copias1,f
  5596     00D7  1803               	skipnc
  5597     00D8  0AD8               	incf	_copias1+1,f
  5598     00D9  3000               	movlw	0
  5599     00DA  07D8               	addwf	_copias1+1,f
  5600     00DB                     i1l2702:
  5601                           
  5602                           ;main.c: 479:                 if (copias1 == los5msen15ms - 1 || (leoADCHumedadTemp > 0 
      +                          && copias1 == los5msen15ms - 2))
  5603     00DB  0846               	movf	_los5msen15ms,w
  5604     00DC  3EFF               	addlw	255
  5605     00DD  00A3               	movwf	??_TRAT_INT
  5606     00DE  0847               	movf	_los5msen15ms+1,w
  5607     00DF  1803               	skipnc
  5608     00E0  3E01               	addlw	1
  5609     00E1  3EFF               	addlw	255
  5610     00E2  00A4               	movwf	??_TRAT_INT+1
  5611     00E3  0858               	movf	_copias1+1,w
  5612     00E4  0624               	xorwf	??_TRAT_INT+1,w
  5613     00E5  1D03               	skipz
  5614     00E6  28E9               	goto	u194_25
  5615     00E7  0857               	movf	_copias1,w
  5616     00E8  0623               	xorwf	??_TRAT_INT,w
  5617     00E9                     u194_25:
  5618     00E9  1903               	skipnz
  5619     00EA  28EC               	goto	u194_21
  5620     00EB  28ED               	goto	u194_20
  5621     00EC                     u194_21:
  5622     00EC  290E               	goto	i1l337
  5623     00ED                     u194_20:
  5624     00ED                     i1l2704:
  5625     00ED  0849               	movf	_leoADCHumedadTemp+1,w
  5626     00EE  3A80               	xorlw	128
  5627     00EF  00FF               	movwf	btemp+1
  5628     00F0  3080               	movlw	128
  5629     00F1  027F               	subwf	btemp+1,w
  5630     00F2  1D03               	skipz
  5631     00F3  28F6               	goto	u195_25
  5632     00F4  3001               	movlw	1
  5633     00F5  0248               	subwf	_leoADCHumedadTemp,w
  5634     00F6                     u195_25:
  5635     00F6  1C03               	skipc
  5636     00F7  28F9               	goto	u195_21
  5637     00F8  28FA               	goto	u195_20
  5638     00F9                     u195_21:
  5639     00F9  290F               	goto	i1l334
  5640     00FA                     u195_20:
  5641     00FA                     i1l2706:
  5642     00FA  1283               	bcf	3,5	;RP0=0, select bank0
  5643     00FB  1303               	bcf	3,6	;RP1=0, select bank0
  5644     00FC  0846               	movf	_los5msen15ms,w
  5645     00FD  3EFE               	addlw	254
  5646     00FE  00A3               	movwf	??_TRAT_INT
  5647     00FF  0847               	movf	_los5msen15ms+1,w
  5648     0100  1803               	skipnc
  5649     0101  3E01               	addlw	1
  5650     0102  3EFF               	addlw	255
  5651     0103  00A4               	movwf	??_TRAT_INT+1
  5652     0104  0858               	movf	_copias1+1,w
  5653     0105  0624               	xorwf	??_TRAT_INT+1,w
  5654     0106  1D03               	skipz
  5655     0107  290A               	goto	u196_25
  5656     0108  0857               	movf	_copias1,w
  5657     0109  0623               	xorwf	??_TRAT_INT,w
  5658     010A                     u196_25:
  5659     010A  1D03               	skipz
  5660     010B  290D               	goto	u196_21
  5661     010C  290E               	goto	u196_20
  5662     010D                     u196_21:
  5663     010D  290F               	goto	i1l334
  5664     010E                     u196_20:
  5665     010E                     i1l337:
  5666                           
  5667                           ;main.c: 480:                     ADCON0bits.GO_DONE = 1;
  5668     010E  149F               	bsf	31,1	;volatile
  5669     010F                     i1l334:	
  5670                           ;main.c: 483:             }
  5671                           
  5672                           
  5673                           ;main.c: 484:             ADCON0bits.GO_DONE = 1;
  5674     010F  1283               	bcf	3,5	;RP0=0, select bank0
  5675     0110  1303               	bcf	3,6	;RP1=0, select bank0
  5676     0111  149F               	bsf	31,1	;volatile
  5677     0112                     i1l2708:
  5678                           
  5679                           ;main.c: 485:             TMR1H = eltimer1H;
  5680     0112  087D               	movf	_eltimer1H,w
  5681     0113  008F               	movwf	15	;volatile
  5682                           
  5683                           ;main.c: 486:             TMR1L = eltimer1L;
  5684     0114  0852               	movf	_eltimer1L,w
  5685     0115  008E               	movwf	14	;volatile
  5686     0116                     i1l2710:
  5687                           
  5688                           ;main.c: 487:             PIR1bits.TMR1IF = 0;
  5689     0116  100C               	bcf	12,0	;volatile
  5690                           
  5691                           ;main.c: 488:         } else {
  5692     0117  2A29               	goto	i1l369
  5693     0118                     i1l331:
  5694                           
  5695                           ;main.c: 489:             if (PIR1bits.TMR2IF)
  5696     0118  1C8C               	btfss	12,1	;volatile
  5697     0119  291B               	goto	u197_21
  5698     011A  291C               	goto	u197_20
  5699     011B                     u197_21:
  5700     011B  2923               	goto	i1l339
  5701     011C                     u197_20:
  5702     011C                     i1l2712:
  5703                           
  5704                           ;main.c: 490:             {;main.c: 492:                 TRISC = 0;
  5705     011C  1683               	bsf	3,5	;RP0=1, select bank1
  5706     011D  1303               	bcf	3,6	;RP1=0, select bank1
  5707     011E  0187               	clrf	7	;volatile
  5708     011F                     i1l2714:
  5709                           
  5710                           ;main.c: 493:                 PIR1bits.TMR2IF = 0;
  5711     011F  1283               	bcf	3,5	;RP0=0, select bank0
  5712     0120  1303               	bcf	3,6	;RP1=0, select bank0
  5713     0121  108C               	bcf	12,1	;volatile
  5714                           
  5715                           ;main.c: 494:             } else {
  5716     0122  2A29               	goto	i1l369
  5717     0123                     i1l339:
  5718                           
  5719                           ;main.c: 495:                 if (PIR1bits.ADIF) {
  5720     0123  1F0C               	btfss	12,6	;volatile
  5721     0124  2926               	goto	u198_21
  5722     0125  2927               	goto	u198_20
  5723     0126                     u198_21:
  5724     0126  298B               	goto	i1l341
  5725     0127                     u198_20:
  5726     0127                     i1l2716:
  5727                           
  5728                           ;main.c: 497:                     PIR1bits.ADIF = 0;
  5729     0127  130C               	bcf	12,6	;volatile
  5730     0128                     i1l2718:
  5731                           
  5732                           ;main.c: 498:                     valor[anI] = (int) ADRESH * 0x10 + ADRESL;
  5733     0128  081E               	movf	30,w	;volatile
  5734     0129  00A3               	movwf	??_TRAT_INT
  5735     012A  01A4               	clrf	??_TRAT_INT+1
  5736     012B  0EA3               	swapf	??_TRAT_INT,f
  5737     012C  0EA4               	swapf	??_TRAT_INT+1,f
  5738     012D  30F0               	movlw	240
  5739     012E  05A4               	andwf	??_TRAT_INT+1,f
  5740     012F  0823               	movf	??_TRAT_INT,w
  5741     0130  390F               	andlw	15
  5742     0131  04A4               	iorwf	??_TRAT_INT+1,f
  5743     0132  30F0               	movlw	240
  5744     0133  05A3               	andwf	??_TRAT_INT,f
  5745     0134  1683               	bsf	3,5	;RP0=1, select bank1
  5746     0135  1303               	bcf	3,6	;RP1=0, select bank1
  5747     0136  081E               	movf	30,w	;volatile
  5748     0137  1283               	bcf	3,5	;RP0=0, select bank0
  5749     0138  1303               	bcf	3,6	;RP1=0, select bank0
  5750     0139  0723               	addwf	??_TRAT_INT,w
  5751     013A  00A5               	movwf	??_TRAT_INT+2
  5752     013B  3000               	movlw	0
  5753     013C  1803               	skipnc
  5754     013D  3001               	movlw	1
  5755     013E  0724               	addwf	??_TRAT_INT+1,w
  5756     013F  00A6               	movwf	??_TRAT_INT+3
  5757     0140  084A               	movf	_anI,w
  5758     0141  00A7               	movwf	??_TRAT_INT+4
  5759     0142  0727               	addwf	??_TRAT_INT+4,w
  5760     0143  3EA0               	addlw	(low (_valor| 0))& (0+255)
  5761     0144  0084               	movwf	4
  5762     0145  0825               	movf	??_TRAT_INT+2,w
  5763     0146  1383               	bcf	3,7	;select IRP bank1
  5764     0147  0080               	movwf	0
  5765     0148  0A84               	incf	4,f
  5766     0149  0826               	movf	??_TRAT_INT+3,w
  5767     014A  0080               	movwf	0
  5768     014B                     i1l2720:
  5769                           
  5770                           ;main.c: 517:                     if (leoADCHumedadTemp > 0)
  5771     014B  0849               	movf	_leoADCHumedadTemp+1,w
  5772     014C  3A80               	xorlw	128
  5773     014D  00FF               	movwf	btemp+1
  5774     014E  3080               	movlw	128
  5775     014F  027F               	subwf	btemp+1,w
  5776     0150  1D03               	skipz
  5777     0151  2954               	goto	u199_25
  5778     0152  3001               	movlw	1
  5779     0153  0248               	subwf	_leoADCHumedadTemp,w
  5780     0154                     u199_25:
  5781     0154  1C03               	skipc
  5782     0155  2957               	goto	u199_21
  5783     0156  2958               	goto	u199_20
  5784     0157                     u199_21:
  5785     0157  297D               	goto	i1l2730
  5786     0158                     u199_20:
  5787     0158                     i1l2722:
  5788                           
  5789                           ;main.c: 518:                     {;main.c: 519:                         if (copias1 == 
      +                          0)
  5790     0158  1283               	bcf	3,5	;RP0=0, select bank0
  5791     0159  1303               	bcf	3,6	;RP1=0, select bank0
  5792     015A  0857               	movf	_copias1,w
  5793     015B  0458               	iorwf	_copias1+1,w
  5794     015C  1D03               	btfss	3,2
  5795     015D  295F               	goto	u200_21
  5796     015E  2960               	goto	u200_20
  5797     015F                     u200_21:
  5798     015F  296B               	goto	i1l2726
  5799     0160                     u200_20:
  5800     0160                     i1l2724:
  5801                           
  5802                           ;main.c: 520:                         {;main.c: 521:                             leoADCH
      +                          umedadTemp--;
  5803     0160  30FF               	movlw	255
  5804     0161  07C8               	addwf	_leoADCHumedadTemp,f
  5805     0162  1803               	skipnc
  5806     0163  0AC9               	incf	_leoADCHumedadTemp+1,f
  5807     0164  30FF               	movlw	255
  5808     0165  07C9               	addwf	_leoADCHumedadTemp+1,f
  5809                           
  5810                           ;main.c: 522:                             anI = 1;
  5811     0166  3001               	movlw	1
  5812     0167  00CA               	movwf	_anI
  5813     0168  3000               	movlw	0
  5814     0169  00CB               	movwf	_anI+1
  5815                           
  5816                           ;main.c: 523:                         } else if (copias1 == 2)
  5817     016A  2981               	goto	i1l2734
  5818     016B                     i1l2726:
  5819     016B  3002               	movlw	2
  5820     016C  0657               	xorwf	_copias1,w
  5821     016D  0458               	iorwf	_copias1+1,w
  5822     016E  1D03               	btfss	3,2
  5823     016F  2971               	goto	u201_21
  5824     0170  2972               	goto	u201_20
  5825     0171                     u201_21:
  5826     0171  297D               	goto	i1l2730
  5827     0172                     u201_20:
  5828     0172                     i1l2728:
  5829                           
  5830                           ;main.c: 524:                         {;main.c: 525:                             leoADCH
      +                          umedadTemp--;
  5831     0172  30FF               	movlw	255
  5832     0173  07C8               	addwf	_leoADCHumedadTemp,f
  5833     0174  1803               	skipnc
  5834     0175  0AC9               	incf	_leoADCHumedadTemp+1,f
  5835     0176  30FF               	movlw	255
  5836     0177  07C9               	addwf	_leoADCHumedadTemp+1,f
  5837                           
  5838                           ;main.c: 526:                             anI = 2;
  5839     0178  3002               	movlw	2
  5840     0179  00CA               	movwf	_anI
  5841     017A  3000               	movlw	0
  5842     017B  00CB               	movwf	_anI+1
  5843                           
  5844                           ;main.c: 527:                         } else anI = 0;
  5845     017C  2981               	goto	i1l2734
  5846     017D                     i1l2730:
  5847     017D  1283               	bcf	3,5	;RP0=0, select bank0
  5848     017E  1303               	bcf	3,6	;RP1=0, select bank0
  5849     017F  01CA               	clrf	_anI
  5850     0180  01CB               	clrf	_anI+1
  5851     0181                     i1l2734:
  5852                           
  5853                           ;main.c: 530:                     ADCON0bits.CHS = (char) anI;
  5854     0181  084A               	movf	_anI,w
  5855     0182  00A3               	movwf	??_TRAT_INT
  5856     0183  0DA3               	rlf	??_TRAT_INT,f
  5857     0184  0DA3               	rlf	??_TRAT_INT,f
  5858     0185  081F               	movf	31,w	;volatile
  5859     0186  0623               	xorwf	??_TRAT_INT,w
  5860     0187  39C3               	andlw	-61
  5861     0188  0623               	xorwf	??_TRAT_INT,w
  5862     0189  009F               	movwf	31	;volatile
  5863                           
  5864                           ;main.c: 533:                 } else if (PIR2bits.EEIF) {
  5865     018A  2A29               	goto	i1l369
  5866     018B                     i1l341:
  5867     018B  1E0D               	btfss	13,4	;volatile
  5868     018C  298E               	goto	u202_21
  5869     018D  298F               	goto	u202_20
  5870     018E                     u202_21:
  5871     018E  2995               	goto	i1l349
  5872     018F                     u202_20:
  5873     018F                     i1l2736:
  5874                           
  5875                           ;main.c: 534:                     PIR2bits.EEIF = 0;
  5876     018F  120D               	bcf	13,4	;volatile
  5877     0190                     i1l2738:
  5878                           
  5879                           ;main.c: 535:                     continuoEscribiendo = 1;
  5880     0190  3001               	movlw	1
  5881     0191  00DD               	movwf	_continuoEscribiendo
  5882     0192  3000               	movlw	0
  5883     0193  00DE               	movwf	_continuoEscribiendo+1
  5884                           
  5885                           ;main.c: 538:                 } else if (PIR1bits.TXIF) {
  5886     0194  2A29               	goto	i1l369
  5887     0195                     i1l349:
  5888     0195  1E0C               	btfss	12,4	;volatile
  5889     0196  2998               	goto	u203_21
  5890     0197  2999               	goto	u203_20
  5891     0198                     u203_21:
  5892     0198  299B               	goto	i1l351
  5893     0199                     u203_20:
  5894     0199                     i1l2740:
  5895                           
  5896                           ;main.c: 539:                     PIR1bits.TXIF = 0;
  5897     0199  120C               	bcf	12,4	;volatile
  5898                           
  5899                           ;main.c: 543:                 } else if (PIR1bits.RCIF) {
  5900     019A  2A29               	goto	i1l369
  5901     019B                     i1l351:
  5902     019B  1E8C               	btfss	12,5	;volatile
  5903     019C  299E               	goto	u204_21
  5904     019D  299F               	goto	u204_20
  5905     019E                     u204_21:
  5906     019E  2A23               	goto	i1l353
  5907     019F                     u204_20:
  5908     019F                     i1l2742:
  5909                           
  5910                           ;main.c: 544:                     PIR1bits.RCIF = 0;
  5911     019F  128C               	bcf	12,5	;volatile
  5912     01A0                     i1l2744:
  5913                           
  5914                           ;main.c: 546:                     if (reciboLED > 0) {
  5915     01A0  085C               	movf	_reciboLED+1,w
  5916     01A1  3A80               	xorlw	128
  5917     01A2  00FF               	movwf	btemp+1
  5918     01A3  3080               	movlw	128
  5919     01A4  027F               	subwf	btemp+1,w
  5920     01A5  1D03               	skipz
  5921     01A6  29A9               	goto	u205_25
  5922     01A7  3001               	movlw	1
  5923     01A8  025B               	subwf	_reciboLED,w
  5924     01A9                     u205_25:
  5925     01A9  1C03               	skipc
  5926     01AA  29AC               	goto	u205_21
  5927     01AB  29AD               	goto	u205_20
  5928     01AC                     u205_21:
  5929     01AC  29CE               	goto	i1l2754
  5930     01AD                     u205_20:
  5931     01AD                     i1l2746:
  5932                           
  5933                           ;main.c: 547:                         reciboLED--;
  5934     01AD  30FF               	movlw	255
  5935     01AE  1283               	bcf	3,5	;RP0=0, select bank0
  5936     01AF  1303               	bcf	3,6	;RP1=0, select bank0
  5937     01B0  07DB               	addwf	_reciboLED,f
  5938     01B1  1803               	skipnc
  5939     01B2  0ADC               	incf	_reciboLED+1,f
  5940     01B3  30FF               	movlw	255
  5941     01B4  07DC               	addwf	_reciboLED+1,f
  5942     01B5                     i1l2748:
  5943                           
  5944                           ;main.c: 548:                         miLED[reciboLED] = RCREG;
  5945     01B5  085B               	movf	_reciboLED,w
  5946     01B6  3E53               	addlw	(low (_miLED| 0))& (0+255)
  5947     01B7  0084               	movwf	4
  5948     01B8  081A               	movf	26,w	;volatile
  5949     01B9  1383               	bcf	3,7	;select IRP bank0
  5950     01BA  0080               	movwf	0
  5951     01BB                     i1l2750:
  5952                           
  5953                           ;main.c: 549:                         if (reciboLED == 0) setLED(miLED[3], miLED[2], miL
      +                          ED[1], miLED[0]);
  5954     01BB  085B               	movf	_reciboLED,w
  5955     01BC  045C               	iorwf	_reciboLED+1,w
  5956     01BD  1D03               	btfss	3,2
  5957     01BE  29C0               	goto	u206_21
  5958     01BF  29C1               	goto	u206_20
  5959     01C0                     u206_21:
  5960     01C0  2A29               	goto	i1l350
  5961     01C1                     u206_20:
  5962     01C1                     i1l2752:
  5963     01C1  0855               	movf	_miLED+2,w
  5964     01C2  00A0               	movwf	i1setLED@green
  5965     01C3  0854               	movf	_miLED+1,w
  5966     01C4  00A1               	movwf	i1setLED@blue
  5967     01C5  0853               	movf	_miLED,w
  5968     01C6  00A2               	movwf	i1setLED@luminosidad
  5969     01C7  0856               	movf	_miLED+3,w
  5970     01C8  120A  158A  277A  120A  118A  	fcall	i1_setLED
  5971     01CD  2A29               	goto	i1l369
  5972     01CE                     i1l2754:
  5973     01CE  1683               	bsf	3,5	;RP0=1, select bank1
  5974     01CF  1303               	bcf	3,6	;RP1=0, select bank1
  5975     01D0  0835               	movf	(_reciboPWM+1)^(0+128),w
  5976     01D1  3A80               	xorlw	128
  5977     01D2  00FF               	movwf	btemp+1
  5978     01D3  3080               	movlw	128
  5979     01D4  027F               	subwf	btemp+1,w
  5980     01D5  1D03               	skipz
  5981     01D6  29D9               	goto	u207_25
  5982     01D7  3001               	movlw	1
  5983     01D8  0234               	subwf	_reciboPWM^(0+128),w
  5984     01D9                     u207_25:
  5985     01D9  1C03               	skipc
  5986     01DA  29DC               	goto	u207_21
  5987     01DB  29DD               	goto	u207_20
  5988     01DC                     u207_21:
  5989     01DC  2A08               	goto	i1l2774
  5990     01DD                     u207_20:
  5991     01DD                     i1l2756:
  5992                           
  5993                           ;main.c: 551:                         reciboPWM = 0;
  5994     01DD  1683               	bsf	3,5	;RP0=1, select bank1
  5995     01DE  1303               	bcf	3,6	;RP1=0, select bank1
  5996     01DF  01B4               	clrf	_reciboPWM^(0+128)
  5997     01E0  01B5               	clrf	(_reciboPWM+1)^(0+128)
  5998     01E1                     i1l2758:
  5999                           
  6000                           ;main.c: 552:                         setPWM(RCREG);
  6001     01E1  1283               	bcf	3,5	;RP0=0, select bank0
  6002     01E2  1303               	bcf	3,6	;RP1=0, select bank0
  6003     01E3  081A               	movf	26,w	;volatile
  6004     01E4  120A  158A  25FD  120A  118A  	fcall	i1_setPWM
  6005                           
  6006                           ;main.c: 553:                     } else {
  6007     01E9  2A29               	goto	i1l369
  6008     01EA                     i1l2760:
  6009                           
  6010                           ;main.c: 556:                                 emitirMisSensores = 1;
  6011     01EA  3001               	movlw	1
  6012     01EB  1683               	bsf	3,5	;RP0=1, select bank1
  6013     01EC  1303               	bcf	3,6	;RP1=0, select bank1
  6014     01ED  00B2               	movwf	_emitirMisSensores^(0+128)
  6015     01EE  3000               	movlw	0
  6016     01EF  00B3               	movwf	(_emitirMisSensores^(0+128)+1)
  6017                           
  6018                           ;main.c: 557:                                 break;
  6019     01F0  2A29               	goto	i1l369
  6020     01F1                     i1l2762:
  6021                           
  6022                           ;main.c: 559:                                 TXREG = 'B';
  6023     01F1  3042               	movlw	66
  6024     01F2  0099               	movwf	25	;volatile
  6025                           
  6026                           ;main.c: 560:                                 break;
  6027     01F3  2A29               	goto	i1l369
  6028     01F4                     i1l2764:
  6029                           
  6030                           ;main.c: 562:                                 reciboPWM = 1;
  6031     01F4  3001               	movlw	1
  6032     01F5  1683               	bsf	3,5	;RP0=1, select bank1
  6033     01F6  1303               	bcf	3,6	;RP1=0, select bank1
  6034     01F7  00B4               	movwf	_reciboPWM^(0+128)
  6035     01F8  3000               	movlw	0
  6036     01F9  00B5               	movwf	(_reciboPWM^(0+128)+1)
  6037                           
  6038                           ;main.c: 563:                                 break;
  6039     01FA  2A29               	goto	i1l369
  6040     01FB                     i1l2766:
  6041                           
  6042                           ;main.c: 566:                                 reciboLED = 4;
  6043     01FB  3004               	movlw	4
  6044     01FC  00DB               	movwf	_reciboLED
  6045     01FD  3000               	movlw	0
  6046     01FE  00DC               	movwf	_reciboLED+1
  6047                           
  6048                           ;main.c: 567:                                 break;
  6049     01FF  2A29               	goto	i1l369
  6050     0200                     i1l2768:
  6051                           
  6052                           ;main.c: 570:                                 deboContinuar = 0;
  6053     0200  1683               	bsf	3,5	;RP0=1, select bank1
  6054     0201  1303               	bcf	3,6	;RP1=0, select bank1
  6055     0202  01CC               	clrf	_deboContinuar^(0+128)
  6056     0203  01CD               	clrf	(_deboContinuar+1)^(0+128)
  6057                           
  6058                           ;main.c: 571:                                 break;
  6059     0204  2A29               	goto	i1l369
  6060     0205                     i1l2770:
  6061                           
  6062                           ;main.c: 573:                                 TXREG = 'E';
  6063     0205  3045               	movlw	69
  6064     0206  0099               	movwf	25	;volatile
  6065                           
  6066                           ;main.c: 574:                                 break;
  6067     0207  2A29               	goto	i1l369
  6068     0208                     i1l2774:
  6069     0208  1283               	bcf	3,5	;RP0=0, select bank0
  6070     0209  1303               	bcf	3,6	;RP1=0, select bank0
  6071     020A  081A               	movf	26,w	;volatile
  6072     020B  00A3               	movwf	??_TRAT_INT
  6073     020C  01A4               	clrf	??_TRAT_INT+1
  6074                           
  6075                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6076                           ; Switch size 1, requested type "simple"
  6077                           ; Number of cases is 1, Range of values is 0 to 0
  6078                           ; switch strategies available:
  6079                           ; Name         Instructions Cycles
  6080                           ; simple_byte            4     3 (average)
  6081                           ; direct_byte           11     8 (fixed)
  6082                           ; jumptable            260     6 (fixed)
  6083                           ;	Chosen strategy is simple_byte
  6084     020D  0824               	movf	??_TRAT_INT+1,w
  6085     020E  3A00               	xorlw	0	; case 0
  6086     020F  1903               	skipnz
  6087     0210  2A12               	goto	i1l3538
  6088     0211  2A05               	goto	i1l2770
  6089     0212                     i1l3538:
  6090                           
  6091                           ; Switch size 1, requested type "simple"
  6092                           ; Number of cases is 5, Range of values is 97 to 101
  6093                           ; switch strategies available:
  6094                           ; Name         Instructions Cycles
  6095                           ; simple_byte           16     9 (average)
  6096                           ; direct_byte           26    11 (fixed)
  6097                           ; jumptable            263     9 (fixed)
  6098                           ;	Chosen strategy is simple_byte
  6099     0212  0823               	movf	??_TRAT_INT,w
  6100     0213  3A61               	xorlw	97	; case 97
  6101     0214  1903               	skipnz
  6102     0215  29EA               	goto	i1l2760
  6103     0216  3A03               	xorlw	3	; case 98
  6104     0217  1903               	skipnz
  6105     0218  29F1               	goto	i1l2762
  6106     0219  3A01               	xorlw	1	; case 99
  6107     021A  1903               	skipnz
  6108     021B  29F4               	goto	i1l2764
  6109     021C  3A07               	xorlw	7	; case 100
  6110     021D  1903               	skipnz
  6111     021E  29FB               	goto	i1l2766
  6112     021F  3A01               	xorlw	1	; case 101
  6113     0220  1903               	skipnz
  6114     0221  2A00               	goto	i1l2768
  6115     0222  2A05               	goto	i1l2770
  6116     0223                     i1l353:
  6117     0223  1D8C               	btfss	12,3	;volatile
  6118     0224  2A26               	goto	u208_21
  6119     0225  2A27               	goto	u208_20
  6120     0226                     u208_21:
  6121     0226  2A29               	goto	i1l350
  6122     0227                     u208_20:
  6123     0227                     i1l2776:
  6124                           
  6125                           ;main.c: 578:                     PIR1bits.SSPIF = 0;
  6126     0227  118C               	bcf	12,3	;volatile
  6127     0228  2A29               	goto	i1l369
  6128     0229                     i1l350:
  6129     0229                     i1l369:
  6130     0229  1283               	bcf	3,5	;RP0=0, select bank0
  6131     022A  1303               	bcf	3,6	;RP1=0, select bank0
  6132     022B  082B               	movf	??_TRAT_INT+8,w
  6133     022C  00FF               	movwf	btemp+1
  6134     022D  082A               	movf	??_TRAT_INT+7,w
  6135     022E  008A               	movwf	10
  6136     022F  0829               	movf	??_TRAT_INT+6,w
  6137     0230  0084               	movwf	4
  6138     0231  0E28               	swapf	??_TRAT_INT+5,w
  6139     0232  0083               	movwf	3
  6140     0233  0EFE               	swapf	btemp,f
  6141     0234  0E7E               	swapf	btemp,w
  6142     0235  0009               	retfie
  6143     0236                     __end_of_TRAT_INT:
  6144                           
  6145                           	psect	intentry
  6146     0004                     __pintentry:	
  6147                           ;incstack = 0
  6148                           ; Regs used in _TRAT_INT: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6149                           
  6150     0004                     interrupt_function:
  6151     007E                     saved_w	set	btemp
  6152     0004  00FE               	movwf	btemp
  6153     0005  0E03               	swapf	3,w
  6154     0006  1283               	bcf	3,5	;RP0=0, select bank0
  6155     0007  1303               	bcf	3,6	;RP1=0, select bank0
  6156     0008  00A8               	movwf	??_TRAT_INT+5
  6157     0009  0804               	movf	4,w
  6158     000A  00A9               	movwf	??_TRAT_INT+6
  6159     000B  080A               	movf	10,w
  6160     000C  00AA               	movwf	??_TRAT_INT+7
  6161     000D  087F               	movf	btemp+1,w
  6162     000E  00AB               	movwf	??_TRAT_INT+8
  6163     000F  120A  118A  284A   	ljmp	_TRAT_INT
  6164                           
  6165                           	psect	text38
  6166     0DFD                     __ptext38:	
  6167 ;; *************** function i1_setPWM *****************
  6168 ;; Defined at:
  6169 ;;		line 347 in file "main.c"
  6170 ;; Parameters:    Size  Location     Type
  6171 ;;  porcent         1    wreg     unsigned char 
  6172 ;; Auto vars:     Size  Location     Type
  6173 ;;  porcent         1   11[COMMON] unsigned char 
  6174 ;; Return value:  Size  Location     Type
  6175 ;;                  1    wreg      void 
  6176 ;; Registers used:
  6177 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6178 ;; Tracked objects:
  6179 ;;		On entry : 0/0
  6180 ;;		On exit  : 0/0
  6181 ;;		Unchanged: 0/0
  6182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6183 ;;      Params:         0       0       0       0       0
  6184 ;;      Locals:         1       0       0       0       0
  6185 ;;      Temps:          2       0       0       0       0
  6186 ;;      Totals:         3       0       0       0       0
  6187 ;;Total ram usage:        3 bytes
  6188 ;; Hardware stack levels used: 1
  6189 ;; Hardware stack levels required when called: 2
  6190 ;; This function calls:
  6191 ;;		i1___awdiv
  6192 ;;		i1___bmul
  6193 ;;		i1_escribirMemoria
  6194 ;; This function is called by:
  6195 ;;		_TRAT_INT
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199     0DFD                     i1_setPWM:	
  6200                           ;psect for function i1_setPWM
  6201                           
  6202                           
  6203                           ;incstack = 0
  6204                           ; Regs used in i1_setPWM: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6205                           ;i1setPWM@porcent stored from wreg
  6206     0DFD  00FB               	movwf	i1setPWM@porcent
  6207     0DFE                     i1l2648:
  6208                           
  6209                           ;main.c: 348:     porcentaje = (char) (porcent / 100);
  6210     0DFE  3064               	movlw	100
  6211     0DFF  00F0               	movwf	i1___awdiv@divisor
  6212     0E00  3000               	movlw	0
  6213     0E01  00F1               	movwf	i1___awdiv@divisor+1
  6214     0E02  087B               	movf	i1setPWM@porcent,w
  6215     0E03  00F9               	movwf	??i1_setPWM
  6216     0E04  01FA               	clrf	??i1_setPWM+1
  6217     0E05  0879               	movf	??i1_setPWM,w
  6218     0E06  00F2               	movwf	i1___awdiv@dividend
  6219     0E07  087A               	movf	??i1_setPWM+1,w
  6220     0E08  00F3               	movwf	i1___awdiv@dividend+1
  6221     0E09  120A  118A  24EF  120A  158A  	fcall	i1___awdiv
  6222     0E0E  0870               	movf	?i1___awdiv,w
  6223     0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  6224     0E10  1303               	bcf	3,6	;RP1=0, select bank0
  6225     0E11  00E0               	movwf	_porcentaje
  6226                           
  6227                           ;main.c: 349:     CCPR1L = porcentaje * porcentajeMax;
  6228     0E12  084F               	movf	_porcentajeMax,w
  6229     0E13  00F0               	movwf	i1___bmul@multiplicand
  6230     0E14  0860               	movf	_porcentaje,w
  6231     0E15  120A  158A  2513  120A  158A  	fcall	i1___bmul
  6232     0E1A  1283               	bcf	3,5	;RP0=0, select bank0
  6233     0E1B  1303               	bcf	3,6	;RP1=0, select bank0
  6234     0E1C  0095               	movwf	21	;volatile
  6235     0E1D                     i1l2650:
  6236                           
  6237                           ;main.c: 350:     escribirMemoria(direccionPWM, porcent);
  6238     0E1D  087B               	movf	i1setPWM@porcent,w
  6239     0E1E  00F1               	movwf	i1escribirMemoria@dato
  6240     0E1F  0851               	movf	_direccionPWM,w
  6241     0E20  120A  118A  2556  120A  158A  	fcall	i1_escribirMemoria
  6242     0E25                     i1l2652:
  6243                           
  6244                           ;main.c: 351:     pPWM = porcent;
  6245     0E25  087B               	movf	i1setPWM@porcent,w
  6246     0E26  1283               	bcf	3,5	;RP0=0, select bank0
  6247     0E27  1303               	bcf	3,6	;RP1=0, select bank0
  6248     0E28  00E2               	movwf	_pPWM
  6249     0E29                     i1l290:
  6250     0E29  0008               	return
  6251     0E2A                     __end_ofi1_setPWM:
  6252                           
  6253                           	psect	text39
  6254     0D13                     __ptext39:	
  6255 ;; *************** function i1___bmul *****************
  6256 ;; Defined at:
  6257 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;  multiplier      1    wreg     unsigned char 
  6260 ;;  multiplicand    1    0[COMMON] unsigned char 
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;  multiplier      1    3[COMMON] unsigned char 
  6263 ;;  product         1    2[COMMON] unsigned char 
  6264 ;; Return value:  Size  Location     Type
  6265 ;;                  1    wreg      unsigned char 
  6266 ;; Registers used:
  6267 ;;		wreg, status,2, status,0
  6268 ;; Tracked objects:
  6269 ;;		On entry : 0/0
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6273 ;;      Params:         1       0       0       0       0
  6274 ;;      Locals:         2       0       0       0       0
  6275 ;;      Temps:          1       0       0       0       0
  6276 ;;      Totals:         4       0       0       0       0
  6277 ;;Total ram usage:        4 bytes
  6278 ;; Hardware stack levels used: 1
  6279 ;; This function calls:
  6280 ;;		Nothing
  6281 ;; This function is called by:
  6282 ;;		i1_setPWM
  6283 ;; This function uses a non-reentrant model
  6284 ;;
  6285                           
  6286     0D13                     i1___bmul:	
  6287                           ;psect for function i1___bmul
  6288                           
  6289                           
  6290                           ;incstack = 0
  6291                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  6292                           ;i1___bmul@multiplier stored from wreg
  6293     0D13  00F3               	movwf	i1___bmul@multiplier
  6294     0D14                     i1l2466:
  6295     0D14  01F2               	clrf	i1___bmul@product
  6296     0D15                     i1l2468:
  6297     0D15  1C73               	btfss	i1___bmul@multiplier,0
  6298     0D16  2D18               	goto	u164_21
  6299     0D17  2D19               	goto	u164_20
  6300     0D18                     u164_21:
  6301     0D18  2D1D               	goto	i1l2472
  6302     0D19                     u164_20:
  6303     0D19                     i1l2470:
  6304     0D19  0870               	movf	i1___bmul@multiplicand,w
  6305     0D1A  00F1               	movwf	??i1___bmul
  6306     0D1B  0871               	movf	??i1___bmul,w
  6307     0D1C  07F2               	addwf	i1___bmul@product,f
  6308     0D1D                     i1l2472:
  6309     0D1D  1003               	clrc
  6310     0D1E  0DF0               	rlf	i1___bmul@multiplicand,f
  6311     0D1F                     i1l2474:
  6312     0D1F  1003               	clrc
  6313     0D20  0CF3               	rrf	i1___bmul@multiplier,f
  6314     0D21  0873               	movf	i1___bmul@multiplier,w
  6315     0D22  1D03               	btfss	3,2
  6316     0D23  2D25               	goto	u165_21
  6317     0D24  2D26               	goto	u165_20
  6318     0D25                     u165_21:
  6319     0D25  2D15               	goto	i1l2468
  6320     0D26                     u165_20:
  6321     0D26                     i1l2476:
  6322     0D26  0872               	movf	i1___bmul@product,w
  6323     0D27                     i1l526:
  6324     0D27  0008               	return
  6325     0D28                     __end_ofi1___bmul:
  6326                           
  6327                           	psect	text40
  6328     04EF                     __ptext40:	
  6329 ;; *************** function i1___awdiv *****************
  6330 ;; Defined at:
  6331 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  6332 ;; Parameters:    Size  Location     Type
  6333 ;;  divisor         2    0[COMMON] int 
  6334 ;;  dividend        2    2[COMMON] int 
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;  quotient        2    7[COMMON] int 
  6337 ;;  sign            1    6[COMMON] unsigned char 
  6338 ;;  counter         1    5[COMMON] unsigned char 
  6339 ;; Return value:  Size  Location     Type
  6340 ;;                  2    0[COMMON] int 
  6341 ;; Registers used:
  6342 ;;		wreg, status,2, status,0
  6343 ;; Tracked objects:
  6344 ;;		On entry : 0/0
  6345 ;;		On exit  : 0/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6348 ;;      Params:         4       0       0       0       0
  6349 ;;      Locals:         4       0       0       0       0
  6350 ;;      Temps:          1       0       0       0       0
  6351 ;;      Totals:         9       0       0       0       0
  6352 ;;Total ram usage:        9 bytes
  6353 ;; Hardware stack levels used: 1
  6354 ;; This function calls:
  6355 ;;		Nothing
  6356 ;; This function is called by:
  6357 ;;		i1_setPWM
  6358 ;; This function uses a non-reentrant model
  6359 ;;
  6360                           
  6361     04EF                     i1___awdiv:	
  6362                           ;psect for function i1___awdiv
  6363                           
  6364     04EF                     i1l2480:	
  6365                           ;incstack = 0
  6366                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  6367                           
  6368     04EF  01F6               	clrf	i1___awdiv@sign
  6369     04F0                     i1l2482:
  6370     04F0  1FF1               	btfss	i1___awdiv@divisor+1,7
  6371     04F1  2CF3               	goto	u166_21
  6372     04F2  2CF4               	goto	u166_20
  6373     04F3                     u166_21:
  6374     04F3  2CFB               	goto	i1l2488
  6375     04F4                     u166_20:
  6376     04F4                     i1l2484:
  6377     04F4  09F0               	comf	i1___awdiv@divisor,f
  6378     04F5  09F1               	comf	i1___awdiv@divisor+1,f
  6379     04F6  0AF0               	incf	i1___awdiv@divisor,f
  6380     04F7  1903               	skipnz
  6381     04F8  0AF1               	incf	i1___awdiv@divisor+1,f
  6382     04F9                     i1l2486:
  6383     04F9  01F6               	clrf	i1___awdiv@sign
  6384     04FA  0AF6               	incf	i1___awdiv@sign,f
  6385     04FB                     i1l2488:
  6386     04FB  1FF3               	btfss	i1___awdiv@dividend+1,7
  6387     04FC  2CFE               	goto	u167_21
  6388     04FD  2CFF               	goto	u167_20
  6389     04FE                     u167_21:
  6390     04FE  2D08               	goto	i1l2494
  6391     04FF                     u167_20:
  6392     04FF                     i1l2490:
  6393     04FF  09F2               	comf	i1___awdiv@dividend,f
  6394     0500  09F3               	comf	i1___awdiv@dividend+1,f
  6395     0501  0AF2               	incf	i1___awdiv@dividend,f
  6396     0502  1903               	skipnz
  6397     0503  0AF3               	incf	i1___awdiv@dividend+1,f
  6398     0504                     i1l2492:
  6399     0504  3001               	movlw	1
  6400     0505  00F4               	movwf	??i1___awdiv
  6401     0506  0874               	movf	??i1___awdiv,w
  6402     0507  06F6               	xorwf	i1___awdiv@sign,f
  6403     0508                     i1l2494:
  6404     0508  01F7               	clrf	i1___awdiv@quotient
  6405     0509  01F8               	clrf	i1___awdiv@quotient+1
  6406     050A                     i1l2496:
  6407     050A  0870               	movf	i1___awdiv@divisor,w
  6408     050B  0471               	iorwf	i1___awdiv@divisor+1,w
  6409     050C  1903               	btfsc	3,2
  6410     050D  2D0F               	goto	u168_21
  6411     050E  2D10               	goto	u168_20
  6412     050F                     u168_21:
  6413     050F  2D47               	goto	i1l2516
  6414     0510                     u168_20:
  6415     0510                     i1l2498:
  6416     0510  01F5               	clrf	i1___awdiv@counter
  6417     0511  0AF5               	incf	i1___awdiv@counter,f
  6418     0512  2D1E               	goto	i1l2504
  6419     0513                     i1l2500:
  6420     0513  3001               	movlw	1
  6421     0514                     u169_25:
  6422     0514  1003               	clrc
  6423     0515  0DF0               	rlf	i1___awdiv@divisor,f
  6424     0516  0DF1               	rlf	i1___awdiv@divisor+1,f
  6425     0517  3EFF               	addlw	-1
  6426     0518  1D03               	skipz
  6427     0519  2D14               	goto	u169_25
  6428     051A                     i1l2502:
  6429     051A  3001               	movlw	1
  6430     051B  00F4               	movwf	??i1___awdiv
  6431     051C  0874               	movf	??i1___awdiv,w
  6432     051D  07F5               	addwf	i1___awdiv@counter,f
  6433     051E                     i1l2504:
  6434     051E  1FF1               	btfss	i1___awdiv@divisor+1,7
  6435     051F  2D21               	goto	u170_21
  6436     0520  2D22               	goto	u170_20
  6437     0521                     u170_21:
  6438     0521  2D13               	goto	i1l2500
  6439     0522                     u170_20:
  6440     0522                     i1l2506:
  6441     0522  3001               	movlw	1
  6442     0523                     u171_25:
  6443     0523  1003               	clrc
  6444     0524  0DF7               	rlf	i1___awdiv@quotient,f
  6445     0525  0DF8               	rlf	i1___awdiv@quotient+1,f
  6446     0526  3EFF               	addlw	-1
  6447     0527  1D03               	skipz
  6448     0528  2D23               	goto	u171_25
  6449     0529  0871               	movf	i1___awdiv@divisor+1,w
  6450     052A  0273               	subwf	i1___awdiv@dividend+1,w
  6451     052B  1D03               	skipz
  6452     052C  2D2F               	goto	u172_25
  6453     052D  0870               	movf	i1___awdiv@divisor,w
  6454     052E  0272               	subwf	i1___awdiv@dividend,w
  6455     052F                     u172_25:
  6456     052F  1C03               	skipc
  6457     0530  2D32               	goto	u172_21
  6458     0531  2D33               	goto	u172_20
  6459     0532                     u172_21:
  6460     0532  2D3A               	goto	i1l2512
  6461     0533                     u172_20:
  6462     0533                     i1l2508:
  6463     0533  0870               	movf	i1___awdiv@divisor,w
  6464     0534  02F2               	subwf	i1___awdiv@dividend,f
  6465     0535  0871               	movf	i1___awdiv@divisor+1,w
  6466     0536  1C03               	skipc
  6467     0537  03F3               	decf	i1___awdiv@dividend+1,f
  6468     0538  02F3               	subwf	i1___awdiv@dividend+1,f
  6469     0539                     i1l2510:
  6470     0539  1477               	bsf	i1___awdiv@quotient,0
  6471     053A                     i1l2512:
  6472     053A  3001               	movlw	1
  6473     053B                     u173_25:
  6474     053B  1003               	clrc
  6475     053C  0CF1               	rrf	i1___awdiv@divisor+1,f
  6476     053D  0CF0               	rrf	i1___awdiv@divisor,f
  6477     053E  3EFF               	addlw	-1
  6478     053F  1D03               	skipz
  6479     0540  2D3B               	goto	u173_25
  6480     0541                     i1l2514:
  6481     0541  3001               	movlw	1
  6482     0542  02F5               	subwf	i1___awdiv@counter,f
  6483     0543  1D03               	btfss	3,2
  6484     0544  2D46               	goto	u174_21
  6485     0545  2D47               	goto	u174_20
  6486     0546                     u174_21:
  6487     0546  2D22               	goto	i1l2506
  6488     0547                     u174_20:
  6489     0547                     i1l2516:
  6490     0547  0876               	movf	i1___awdiv@sign,w
  6491     0548  1903               	btfsc	3,2
  6492     0549  2D4B               	goto	u175_21
  6493     054A  2D4C               	goto	u175_20
  6494     054B                     u175_21:
  6495     054B  2D51               	goto	i1l2520
  6496     054C                     u175_20:
  6497     054C                     i1l2518:
  6498     054C  09F7               	comf	i1___awdiv@quotient,f
  6499     054D  09F8               	comf	i1___awdiv@quotient+1,f
  6500     054E  0AF7               	incf	i1___awdiv@quotient,f
  6501     054F  1903               	skipnz
  6502     0550  0AF8               	incf	i1___awdiv@quotient+1,f
  6503     0551                     i1l2520:
  6504     0551  0878               	movf	i1___awdiv@quotient+1,w
  6505     0552  00F1               	movwf	?i1___awdiv+1
  6506     0553  0877               	movf	i1___awdiv@quotient,w
  6507     0554  00F0               	movwf	?i1___awdiv
  6508     0555                     i1l653:
  6509     0555  0008               	return
  6510     0556                     __end_ofi1___awdiv:
  6511                           
  6512                           	psect	text41
  6513     0F7A                     __ptext41:	
  6514 ;; *************** function i1_setLED *****************
  6515 ;; Defined at:
  6516 ;;		line 380 in file "main.c"
  6517 ;; Parameters:    Size  Location     Type
  6518 ;;  red             1    wreg     unsigned char 
  6519 ;;  green           1    0[BANK0 ] unsigned char 
  6520 ;;  blue            1    1[BANK0 ] unsigned char 
  6521 ;;  luminosidad     1    2[BANK0 ] unsigned char 
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;  red             1   12[COMMON] unsigned char 
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  1    wreg      void 
  6526 ;; Registers used:
  6527 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6533 ;;      Params:         0       3       0       0       0
  6534 ;;      Locals:         1       0       0       0       0
  6535 ;;      Temps:          0       0       0       0       0
  6536 ;;      Totals:         1       3       0       0       0
  6537 ;;Total ram usage:        4 bytes
  6538 ;; Hardware stack levels used: 1
  6539 ;; Hardware stack levels required when called: 2
  6540 ;; This function calls:
  6541 ;;		i1_cosasSPI
  6542 ;;		i1_escribirMemoria
  6543 ;; This function is called by:
  6544 ;;		_TRAT_INT
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548     0F7A                     i1_setLED:	
  6549                           ;psect for function i1_setLED
  6550                           
  6551                           
  6552                           ;incstack = 0
  6553                           ; Regs used in i1_setLED: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6554                           ;i1setLED@red stored from wreg
  6555     0F7A  00FC               	movwf	i1setLED@red
  6556     0F7B                     i1l2654:
  6557                           
  6558                           ;main.c: 382:     cosasSPI(red, green, blue, luminosidad);
  6559     0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  6560     0F7C  1303               	bcf	3,6	;RP1=0, select bank0
  6561     0F7D  0820               	movf	i1setLED@green,w
  6562     0F7E  00F5               	movwf	i1cosasSPI@verd
  6563     0F7F  0821               	movf	i1setLED@blue,w
  6564     0F80  00F6               	movwf	i1cosasSPI@azu
  6565     0F81  0822               	movf	i1setLED@luminosidad,w
  6566     0F82  00F7               	movwf	i1cosasSPI@lumi
  6567     0F83  087C               	movf	i1setLED@red,w
  6568     0F84  120A  118A  25BB  120A  158A  	fcall	i1_cosasSPI
  6569     0F89                     i1l2656:
  6570                           
  6571                           ;main.c: 384:     miLED[0] = red;
  6572     0F89  087C               	movf	i1setLED@red,w
  6573     0F8A  1283               	bcf	3,5	;RP0=0, select bank0
  6574     0F8B  1303               	bcf	3,6	;RP1=0, select bank0
  6575     0F8C  00D3               	movwf	_miLED
  6576     0F8D                     i1l2658:
  6577                           
  6578                           ;main.c: 385:     miLED[1] = green;
  6579     0F8D  0820               	movf	i1setLED@green,w
  6580     0F8E  00D4               	movwf	_miLED+1
  6581     0F8F                     i1l2660:
  6582                           
  6583                           ;main.c: 386:     miLED[2] = blue;
  6584     0F8F  0821               	movf	i1setLED@blue,w
  6585     0F90  00D5               	movwf	_miLED+2
  6586     0F91                     i1l2662:
  6587                           
  6588                           ;main.c: 387:     miLED[3] = luminosidad;
  6589     0F91  0822               	movf	i1setLED@luminosidad,w
  6590     0F92  00D6               	movwf	_miLED+3
  6591     0F93                     i1l2664:
  6592                           
  6593                           ;main.c: 389:     escribirMemoria(direccionLED, miLED[0]);
  6594     0F93  0853               	movf	_miLED,w
  6595     0F94  00F1               	movwf	i1escribirMemoria@dato
  6596     0F95  0850               	movf	_direccionLED,w
  6597     0F96  120A  118A  2556  120A  158A  	fcall	i1_escribirMemoria
  6598     0F9B                     i1l2666:
  6599                           
  6600                           ;main.c: 390:     escribirMemoria(direccionLED + 1 * sizeof (char), miLED[1]);
  6601     0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  6602     0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  6603     0F9D  0854               	movf	_miLED+1,w
  6604     0F9E  00F1               	movwf	i1escribirMemoria@dato
  6605     0F9F  0850               	movf	_direccionLED,w
  6606     0FA0  3E01               	addlw	1
  6607     0FA1  120A  118A  2556  120A  158A  	fcall	i1_escribirMemoria
  6608     0FA6                     i1l2668:
  6609                           
  6610                           ;main.c: 391:     escribirMemoria(direccionLED + 2 * sizeof (char), miLED[2]);
  6611     0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  6612     0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  6613     0FA8  0855               	movf	_miLED+2,w
  6614     0FA9  00F1               	movwf	i1escribirMemoria@dato
  6615     0FAA  0850               	movf	_direccionLED,w
  6616     0FAB  3E02               	addlw	2
  6617     0FAC  120A  118A  2556  120A  158A  	fcall	i1_escribirMemoria
  6618     0FB1                     i1l2670:
  6619                           
  6620                           ;main.c: 392:     escribirMemoria(direccionLED + 3 * sizeof (char), miLED[3]);
  6621     0FB1  1283               	bcf	3,5	;RP0=0, select bank0
  6622     0FB2  1303               	bcf	3,6	;RP1=0, select bank0
  6623     0FB3  0856               	movf	_miLED+3,w
  6624     0FB4  00F1               	movwf	i1escribirMemoria@dato
  6625     0FB5  0850               	movf	_direccionLED,w
  6626     0FB6  3E03               	addlw	3
  6627     0FB7  120A  118A  2556  120A  158A  	fcall	i1_escribirMemoria
  6628     0FBC                     i1l301:
  6629     0FBC  0008               	return
  6630     0FBD                     __end_ofi1_setLED:
  6631                           
  6632                           	psect	text42
  6633     0556                     __ptext42:	
  6634 ;; *************** function i1_escribirMemoria *****************
  6635 ;; Defined at:
  6636 ;;		line 284 in file "main.c"
  6637 ;; Parameters:    Size  Location     Type
  6638 ;;  direccion       1    wreg     unsigned char 
  6639 ;;  dato            1    1[COMMON] unsigned char 
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;  direccion       1    4[COMMON] unsigned char 
  6642 ;;  contador        2    5[COMMON] int 
  6643 ;;  confirmado      2    2[COMMON] int 
  6644 ;;  valorSal        2    0        int 
  6645 ;; Return value:  Size  Location     Type
  6646 ;;                  2    1[COMMON] int 
  6647 ;; Registers used:
  6648 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6649 ;; Tracked objects:
  6650 ;;		On entry : 0/0
  6651 ;;		On exit  : 0/0
  6652 ;;		Unchanged: 0/0
  6653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6654 ;;      Params:         1       0       0       0       0
  6655 ;;      Locals:         5       0       0       0       0
  6656 ;;      Temps:          0       0       0       0       0
  6657 ;;      Totals:         6       0       0       0       0
  6658 ;;Total ram usage:        6 bytes
  6659 ;; Hardware stack levels used: 1
  6660 ;; Hardware stack levels required when called: 1
  6661 ;; This function calls:
  6662 ;;		i1_leerMemoria
  6663 ;; This function is called by:
  6664 ;;		i1_setPWM
  6665 ;;		i1_setLED
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           
  6669     0556                     i1_escribirMemoria:	
  6670                           ;psect for function i1_escribirMemoria
  6671                           
  6672                           
  6673                           ;incstack = 0
  6674                           ; Regs used in i1_escribirMemoria: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6675                           ;i1escribirMemoria@direccion stored from wreg
  6676     0556  00F4               	movwf	i1escribirMemoria@direccion
  6677     0557                     i1l2402:
  6678                           
  6679                           ;main.c: 285:     int valorSal;;main.c: 286:     EECON1bits.EEPGD = 0;
  6680     0557  1683               	bsf	3,5	;RP0=1, select bank3
  6681     0558  1703               	bsf	3,6	;RP1=1, select bank3
  6682     0559  138C               	bcf	12,7	;volsfr
  6683                           
  6684                           ;main.c: 288:     EECON1bits.WREN = 1;
  6685     055A  150C               	bsf	12,2	;volsfr
  6686     055B                     i1l2404:
  6687                           
  6688                           ;main.c: 289:     EEADRH = 0;
  6689     055B  1283               	bcf	3,5	;RP0=0, select bank2
  6690     055C  1703               	bsf	3,6	;RP1=1, select bank2
  6691     055D  018F               	clrf	15	;volatile
  6692     055E                     i1l2406:
  6693                           
  6694                           ;main.c: 290:     EEADR = direccion;
  6695     055E  0874               	movf	i1escribirMemoria@direccion,w
  6696     055F  008D               	movwf	13	;volatile
  6697     0560                     i1l2408:
  6698                           
  6699                           ;main.c: 291:     if (EECON1bits.RD == 0) {
  6700     0560  1683               	bsf	3,5	;RP0=1, select bank3
  6701     0561  1703               	bsf	3,6	;RP1=1, select bank3
  6702     0562  180C               	btfsc	12,0	;volsfr
  6703     0563  2D65               	goto	u157_21
  6704     0564  2D66               	goto	u157_20
  6705     0565                     u157_21:
  6706     0565  2DBA               	goto	i1l2438
  6707     0566                     u157_20:
  6708     0566                     i1l2410:
  6709                           
  6710                           ;main.c: 292:         int contador = 0;
  6711     0566  01F5               	clrf	i1escribirMemoria@contador
  6712     0567  01F6               	clrf	i1escribirMemoria@contador+1
  6713                           
  6714                           ;main.c: 293:         int confirmado = 0;
  6715     0568  01F2               	clrf	i1escribirMemoria@confirmado
  6716     0569  01F3               	clrf	i1escribirMemoria@confirmado+1
  6717                           
  6718                           ;main.c: 294:         while (contador < 10 && confirmado == 0) {
  6719     056A  2D98               	goto	i1l2428
  6720     056B                     i1l265:
  6721                           
  6722                           ;main.c: 295:             INTCONbits.GIE = 0;
  6723     056B  138B               	bcf	11,7	;volatile
  6724     056C                     i1l2412:
  6725                           
  6726                           ;main.c: 296:             EEDAT = dato;
  6727     056C  0871               	movf	i1escribirMemoria@dato,w
  6728     056D  1283               	bcf	3,5	;RP0=0, select bank2
  6729     056E  1703               	bsf	3,6	;RP1=1, select bank2
  6730     056F  008C               	movwf	12	;volatile
  6731                           
  6732                           ;main.c: 297:             EECON2 = 0x55;
  6733     0570  3055               	movlw	85
  6734     0571  1683               	bsf	3,5	;RP0=1, select bank3
  6735     0572  1703               	bsf	3,6	;RP1=1, select bank3
  6736     0573  008D               	movwf	13	;volsfr
  6737                           
  6738                           ;main.c: 298:             EECON2 = 0xAA;
  6739     0574  30AA               	movlw	170
  6740     0575  008D               	movwf	13	;volsfr
  6741     0576                     i1l2414:
  6742                           
  6743                           ;main.c: 299:             EECON1bits.WR = 1;
  6744     0576  148C               	bsf	12,1	;volsfr
  6745     0577                     i1l2416:
  6746                           
  6747                           ;main.c: 300:             INTCONbits.GIE = 1;
  6748     0577  178B               	bsf	11,7	;volatile
  6749     0578                     i1l2418:	
  6750                           ;main.c: 301:             while (!continuoEscribiendo);
  6751                           
  6752     0578  1283               	bcf	3,5	;RP0=0, select bank0
  6753     0579  1303               	bcf	3,6	;RP1=0, select bank0
  6754     057A  085D               	movf	_continuoEscribiendo,w
  6755     057B  045E               	iorwf	_continuoEscribiendo+1,w
  6756     057C  1903               	btfsc	3,2
  6757     057D  2D7F               	goto	u158_21
  6758     057E  2D80               	goto	u158_20
  6759     057F                     u158_21:
  6760     057F  2D78               	goto	i1l2418
  6761     0580                     u158_20:
  6762     0580                     i1l2420:
  6763                           
  6764                           ;main.c: 302:             continuoEscribiendo = 0;
  6765     0580  01DD               	clrf	_continuoEscribiendo
  6766     0581  01DE               	clrf	_continuoEscribiendo+1
  6767     0582                     i1l2422:
  6768                           
  6769                           ;main.c: 303:             if (leerMemoria(direccion) == dato)
  6770     0582  0874               	movf	i1escribirMemoria@direccion,w
  6771     0583  120A  158A  2528  120A  118A  	fcall	i1_leerMemoria
  6772     0588  0671               	xorwf	i1escribirMemoria@dato,w
  6773     0589  1D03               	skipz
  6774     058A  2D8C               	goto	u159_21
  6775     058B  2D8D               	goto	u159_20
  6776     058C                     u159_21:
  6777     058C  2D92               	goto	i1l2426
  6778     058D                     u159_20:
  6779     058D                     i1l2424:
  6780                           
  6781                           ;main.c: 304:                 confirmado = 1;
  6782     058D  3001               	movlw	1
  6783     058E  00F2               	movwf	i1escribirMemoria@confirmado
  6784     058F  3000               	movlw	0
  6785     0590  00F3               	movwf	i1escribirMemoria@confirmado+1
  6786     0591  2D98               	goto	i1l2428
  6787     0592                     i1l2426:
  6788                           
  6789                           ;main.c: 306:                 contador++;
  6790     0592  3001               	movlw	1
  6791     0593  07F5               	addwf	i1escribirMemoria@contador,f
  6792     0594  1803               	skipnc
  6793     0595  0AF6               	incf	i1escribirMemoria@contador+1,f
  6794     0596  3000               	movlw	0
  6795     0597  07F6               	addwf	i1escribirMemoria@contador+1,f
  6796     0598                     i1l2428:
  6797                           
  6798                           ;main.c: 294:         while (contador < 10 && confirmado == 0) {
  6799     0598  0876               	movf	i1escribirMemoria@contador+1,w
  6800     0599  3A80               	xorlw	128
  6801     059A  00FF               	movwf	btemp+1
  6802     059B  3080               	movlw	128
  6803     059C  027F               	subwf	btemp+1,w
  6804     059D  1D03               	skipz
  6805     059E  2DA1               	goto	u160_25
  6806     059F  300A               	movlw	10
  6807     05A0  0275               	subwf	i1escribirMemoria@contador,w
  6808     05A1                     u160_25:
  6809     05A1  1803               	skipnc
  6810     05A2  2DA4               	goto	u160_21
  6811     05A3  2DA5               	goto	u160_20
  6812     05A4                     u160_21:
  6813     05A4  2DAB               	goto	i1l2432
  6814     05A5                     u160_20:
  6815     05A5                     i1l2430:
  6816     05A5  0872               	movf	i1escribirMemoria@confirmado,w
  6817     05A6  0473               	iorwf	i1escribirMemoria@confirmado+1,w
  6818     05A7  1903               	btfsc	3,2
  6819     05A8  2DAA               	goto	u161_21
  6820     05A9  2DAB               	goto	u161_20
  6821     05AA                     u161_21:
  6822     05AA  2D6B               	goto	i1l265
  6823     05AB                     u161_20:
  6824     05AB                     i1l2432:
  6825                           
  6826                           ;main.c: 308:         if (contador >= 10) valorSal = 1;
  6827     05AB  0876               	movf	i1escribirMemoria@contador+1,w
  6828     05AC  3A80               	xorlw	128
  6829     05AD  00FF               	movwf	btemp+1
  6830     05AE  3080               	movlw	128
  6831     05AF  027F               	subwf	btemp+1,w
  6832     05B0  1D03               	skipz
  6833     05B1  2DB4               	goto	u162_25
  6834     05B2  300A               	movlw	10
  6835     05B3  0275               	subwf	i1escribirMemoria@contador,w
  6836     05B4                     u162_25:
  6837     05B4  1C03               	skipc
  6838     05B5  2DB7               	goto	u162_21
  6839     05B6  2DB8               	goto	u162_20
  6840     05B7                     u162_21:
  6841     05B7  2DB9               	goto	i1l2436
  6842     05B8                     u162_20:
  6843     05B8                     i1l2434:
  6844     05B8  2DBA               	goto	i1l277
  6845     05B9                     i1l2436:
  6846     05B9  2DBA               	goto	i1l277
  6847     05BA                     i1l2438:
  6848     05BA                     i1l277:
  6849     05BA  0008               	return
  6850     05BB                     __end_ofi1_escribirMemoria:
  6851                           
  6852                           	psect	text43
  6853     0D28                     __ptext43:	
  6854 ;; *************** function i1_leerMemoria *****************
  6855 ;; Defined at:
  6856 ;;		line 271 in file "main.c"
  6857 ;; Parameters:    Size  Location     Type
  6858 ;;  direccion       1    wreg     unsigned char 
  6859 ;; Auto vars:     Size  Location     Type
  6860 ;;  direccion       1    0[COMMON] unsigned char 
  6861 ;; Return value:  Size  Location     Type
  6862 ;;                  1    wreg      unsigned char 
  6863 ;; Registers used:
  6864 ;;		wreg, status,2
  6865 ;; Tracked objects:
  6866 ;;		On entry : 0/0
  6867 ;;		On exit  : 0/0
  6868 ;;		Unchanged: 0/0
  6869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6870 ;;      Params:         0       0       0       0       0
  6871 ;;      Locals:         1       0       0       0       0
  6872 ;;      Temps:          0       0       0       0       0
  6873 ;;      Totals:         1       0       0       0       0
  6874 ;;Total ram usage:        1 bytes
  6875 ;; Hardware stack levels used: 1
  6876 ;; This function calls:
  6877 ;;		Nothing
  6878 ;; This function is called by:
  6879 ;;		i1_escribirMemoria
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883     0D28                     i1_leerMemoria:	
  6884                           ;psect for function i1_leerMemoria
  6885                           
  6886                           
  6887                           ;incstack = 0
  6888                           ; Regs used in i1_leerMemoria: [wreg+status,2]
  6889                           ;i1leerMemoria@direccion stored from wreg
  6890     0D28  00F0               	movwf	i1leerMemoria@direccion
  6891     0D29                     i1l2152:
  6892                           
  6893                           ;main.c: 272:     EECON1bits.EEPGD = 0;
  6894     0D29  1683               	bsf	3,5	;RP0=1, select bank3
  6895     0D2A  1703               	bsf	3,6	;RP1=1, select bank3
  6896     0D2B  138C               	bcf	12,7	;volsfr
  6897                           
  6898                           ;main.c: 274:     EECON1bits.WREN = 0;
  6899     0D2C  110C               	bcf	12,2	;volsfr
  6900     0D2D                     i1l2154:
  6901                           
  6902                           ;main.c: 275:     EEDATH = 0;
  6903     0D2D  1283               	bcf	3,5	;RP0=0, select bank2
  6904     0D2E  1703               	bsf	3,6	;RP1=1, select bank2
  6905     0D2F  018E               	clrf	14	;volatile
  6906                           
  6907                           ;main.c: 276:     EEADRH = 0;
  6908     0D30  018F               	clrf	15	;volatile
  6909     0D31                     i1l2156:
  6910                           
  6911                           ;main.c: 277:     EEADR = direccion;
  6912     0D31  0870               	movf	i1leerMemoria@direccion,w
  6913     0D32  008D               	movwf	13	;volatile
  6914     0D33                     i1l2158:
  6915                           
  6916                           ;main.c: 278:     if (EECON1bits.WR == 0)
  6917     0D33  1683               	bsf	3,5	;RP0=1, select bank3
  6918     0D34  1703               	bsf	3,6	;RP1=1, select bank3
  6919     0D35  188C               	btfsc	12,1	;volsfr
  6920     0D36  2D38               	goto	u138_21
  6921     0D37  2D39               	goto	u138_20
  6922     0D38                     u138_21:
  6923     0D38  2D3A               	goto	i1l2162
  6924     0D39                     u138_20:
  6925     0D39                     i1l2160:
  6926                           
  6927                           ;main.c: 279:         EECON1bits.RD = 1;
  6928     0D39  140C               	bsf	12,0	;volsfr
  6929     0D3A                     i1l2162:
  6930                           
  6931                           ;main.c: 281:     return EEDAT;
  6932     0D3A  1283               	bcf	3,5	;RP0=0, select bank2
  6933     0D3B  1703               	bsf	3,6	;RP1=1, select bank2
  6934     0D3C  080C               	movf	12,w	;volatile
  6935     0D3D                     i1l260:
  6936     0D3D  0008               	return
  6937     0D3E                     __end_ofi1_leerMemoria:
  6938                           
  6939                           	psect	text44
  6940     05BB                     __ptext44:	
  6941 ;; *************** function i1_cosasSPI *****************
  6942 ;; Defined at:
  6943 ;;		line 360 in file "main.c"
  6944 ;; Parameters:    Size  Location     Type
  6945 ;;  roj             1    wreg     unsigned char 
  6946 ;;  verd            1    5[COMMON] unsigned char 
  6947 ;;  azu             1    6[COMMON] unsigned char 
  6948 ;;  lumi            1    7[COMMON] unsigned char 
  6949 ;; Auto vars:     Size  Location     Type
  6950 ;;  roj             1    8[COMMON] unsigned char 
  6951 ;;  i               2   10[COMMON] int 
  6952 ;;  lumo            1    9[COMMON] unsigned char 
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  1    wreg      void 
  6955 ;; Registers used:
  6956 ;;		wreg, status,2, status,0, pclath, cstack
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6962 ;;      Params:         3       0       0       0       0
  6963 ;;      Locals:         4       0       0       0       0
  6964 ;;      Temps:          0       0       0       0       0
  6965 ;;      Totals:         7       0       0       0       0
  6966 ;;Total ram usage:        7 bytes
  6967 ;; Hardware stack levels used: 1
  6968 ;; Hardware stack levels required when called: 1
  6969 ;; This function calls:
  6970 ;;		i1_spi_write_read
  6971 ;; This function is called by:
  6972 ;;		i1_setLED
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           
  6976     05BB                     i1_cosasSPI:	
  6977                           ;psect for function i1_cosasSPI
  6978                           
  6979                           
  6980                           ;incstack = 0
  6981                           ; Regs used in i1_cosasSPI: [wreg+status,2+status,0+pclath+cstack]
  6982                           ;i1cosasSPI@roj stored from wreg
  6983     05BB  00F8               	movwf	i1cosasSPI@roj
  6984     05BC                     i1l2442:
  6985                           
  6986                           ;main.c: 361:     int i;;main.c: 362:     char lumo = 0b11100000 + (lumi % 32);
  6987     05BC  0877               	movf	i1cosasSPI@lumi,w
  6988     05BD  391F               	andlw	31
  6989     05BE  3EE0               	addlw	224
  6990     05BF  00F9               	movwf	i1cosasSPI@lumo
  6991     05C0                     i1l2444:
  6992                           
  6993                           ;main.c: 363:     spi_write_read(0x00);
  6994     05C0  3000               	movlw	0
  6995     05C1  120A  158A  2659  120A  118A  	fcall	i1_spi_write_read
  6996     05C6                     i1l2446:
  6997                           
  6998                           ;main.c: 364:     spi_write_read(0x00);
  6999     05C6  3000               	movlw	0
  7000     05C7  120A  158A  2659  120A  118A  	fcall	i1_spi_write_read
  7001     05CC                     i1l2448:
  7002                           
  7003                           ;main.c: 365:     spi_write_read(0x00);
  7004     05CC  3000               	movlw	0
  7005     05CD  120A  158A  2659  120A  118A  	fcall	i1_spi_write_read
  7006     05D2                     i1l2450:
  7007                           
  7008                           ;main.c: 366:     spi_write_read(0x00);
  7009     05D2  3000               	movlw	0
  7010     05D3  120A  158A  2659  120A  118A  	fcall	i1_spi_write_read
  7011     05D8                     i1l2452:
  7012                           
  7013                           ;main.c: 367:     for (i = numLedes; i == 0; i--) {
  7014     05D8  1683               	bsf	3,5	;RP0=1, select bank1
  7015     05D9  1303               	bcf	3,6	;RP1=0, select bank1
  7016     05DA  0845               	movf	(_numLedes+1)^(0+128),w
  7017     05DB  00FB               	movwf	i1cosasSPI@i+1
  7018     05DC  0844               	movf	_numLedes^(0+128),w
  7019     05DD  00FA               	movwf	i1cosasSPI@i
  7020     05DE                     i1l2454:
  7021     05DE  087A               	movf	i1cosasSPI@i,w
  7022     05DF  047B               	iorwf	i1cosasSPI@i+1,w
  7023     05E0  1903               	btfsc	3,2
  7024     05E1  2DE3               	goto	u163_21
  7025     05E2  2DE4               	goto	u163_20
  7026     05E3                     u163_21:
  7027     05E3  2DE5               	goto	i1l2458
  7028     05E4                     u163_20:
  7029     05E4  2E04               	goto	i1l2464
  7030     05E5                     i1l2458:
  7031                           
  7032                           ;main.c: 368:         spi_write_read(lumo);
  7033     05E5  0879               	movf	i1cosasSPI@lumo,w
  7034     05E6  120A  158A  2659  120A  118A  	fcall	i1_spi_write_read
  7035                           
  7036                           ;main.c: 369:         spi_write_read(azu);
  7037     05EB  0876               	movf	i1cosasSPI@azu,w
  7038     05EC  120A  158A  2659  120A  118A  	fcall	i1_spi_write_read
  7039                           
  7040                           ;main.c: 370:         spi_write_read(verd);
  7041     05F1  0875               	movf	i1cosasSPI@verd,w
  7042     05F2  120A  158A  2659  120A  118A  	fcall	i1_spi_write_read
  7043                           
  7044                           ;main.c: 371:         spi_write_read(roj);
  7045     05F7  0878               	movf	i1cosasSPI@roj,w
  7046     05F8  120A  158A  2659  120A  118A  	fcall	i1_spi_write_read
  7047     05FD                     i1l2460:
  7048                           
  7049                           ;main.c: 372:     }
  7050     05FD  30FF               	movlw	255
  7051     05FE  07FA               	addwf	i1cosasSPI@i,f
  7052     05FF  1803               	skipnc
  7053     0600  0AFB               	incf	i1cosasSPI@i+1,f
  7054     0601  30FF               	movlw	255
  7055     0602  07FB               	addwf	i1cosasSPI@i+1,f
  7056     0603  2DDE               	goto	i1l2454
  7057     0604                     i1l2464:
  7058                           
  7059                           ;main.c: 373:     spi_write_read(0xFF);
  7060     0604  30FF               	movlw	255
  7061     0605  120A  158A  2659  120A  118A  	fcall	i1_spi_write_read
  7062                           
  7063                           ;main.c: 374:     spi_write_read(0xFF);
  7064     060A  30FF               	movlw	255
  7065     060B  120A  158A  2659  120A  118A  	fcall	i1_spi_write_read
  7066                           
  7067                           ;main.c: 375:     spi_write_read(0xFF);
  7068     0610  30FF               	movlw	255
  7069     0611  120A  158A  2659  120A  118A  	fcall	i1_spi_write_read
  7070                           
  7071                           ;main.c: 376:     spi_write_read(0xFF);
  7072     0616  30FF               	movlw	255
  7073     0617  120A  158A  2659  120A  118A  	fcall	i1_spi_write_read
  7074     061C                     i1l298:
  7075     061C  0008               	return
  7076     061D                     __end_ofi1_cosasSPI:
  7077                           
  7078                           	psect	text45
  7079     0E59                     __ptext45:	
  7080 ;; *************** function i1_spi_write_read *****************
  7081 ;; Defined at:
  7082 ;;		line 8 in file "spi-master-v1.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;  one_byte        1    wreg     unsigned char 
  7085 ;; Auto vars:     Size  Location     Type
  7086 ;;  one_byte        1    2[COMMON] unsigned char 
  7087 ;;  x               1    4[COMMON] unsigned char 
  7088 ;;  answer          1    3[COMMON] unsigned char 
  7089 ;; Return value:  Size  Location     Type
  7090 ;;                  1    wreg      unsigned char 
  7091 ;; Registers used:
  7092 ;;		wreg, status,2, status,0
  7093 ;; Tracked objects:
  7094 ;;		On entry : 0/0
  7095 ;;		On exit  : 0/0
  7096 ;;		Unchanged: 0/0
  7097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7098 ;;      Params:         0       0       0       0       0
  7099 ;;      Locals:         3       0       0       0       0
  7100 ;;      Temps:          2       0       0       0       0
  7101 ;;      Totals:         5       0       0       0       0
  7102 ;;Total ram usage:        5 bytes
  7103 ;; Hardware stack levels used: 1
  7104 ;; This function calls:
  7105 ;;		Nothing
  7106 ;; This function is called by:
  7107 ;;		i1_cosasSPI
  7108 ;; This function uses a non-reentrant model
  7109 ;;
  7110                           
  7111     0E59                     i1_spi_write_read:	
  7112                           ;psect for function i1_spi_write_read
  7113                           
  7114                           
  7115                           ;incstack = 0
  7116                           ; Regs used in i1_spi_write_read: [wreg+status,2+status,0]
  7117                           ;i1spi_write_read@one_byte stored from wreg
  7118     0E59  00F2               	movwf	i1spi_write_read@one_byte
  7119     0E5A                     i1l2134:
  7120                           
  7121                           ;spi-master-v1.c: 8: char spi_write_read(char one_byte);spi-master-v1.c: 9: {;spi-master
      +                          -v1.c: 11:     char answer, x;;spi-master-v1.c: 13:     answer = 0;
  7122     0E5A  01F3               	clrf	i1spi_write_read@answer
  7123     0E5B                     i1l2136:
  7124                           
  7125                           ;spi-master-v1.c: 15:     for(x = 8; x > 0; x--)
  7126     0E5B  3008               	movlw	8
  7127     0E5C  00F4               	movwf	i1spi_write_read@x
  7128     0E5D                     i1l2142:
  7129                           
  7130                           ;spi-master-v1.c: 16:     {;spi-master-v1.c: 17:         PORTCbits.RC0 = (__bit)((one_by
      +                          te >> (x - 1)) & 0b00000001);
  7131     0E5D  0872               	movf	i1spi_write_read@one_byte,w
  7132     0E5E  00F0               	movwf	??i1_spi_write_read
  7133     0E5F  0874               	movf	i1spi_write_read@x,w
  7134     0E60  3EFF               	addlw	-1
  7135     0E61  3E01               	addlw	1
  7136     0E62  2E65               	goto	u133_24
  7137     0E63                     u133_25:
  7138     0E63  1003               	clrc
  7139     0E64  0CF0               	rrf	??i1_spi_write_read,f
  7140     0E65                     u133_24:
  7141     0E65  3EFF               	addlw	-1
  7142     0E66  1D03               	skipz
  7143     0E67  2E63               	goto	u133_25
  7144     0E68  1870               	btfsc	??i1_spi_write_read,0
  7145     0E69  2E6B               	goto	u134_21
  7146     0E6A  2E6F               	goto	u134_20
  7147     0E6B                     u134_21:
  7148     0E6B  1283               	bcf	3,5	;RP0=0, select bank0
  7149     0E6C  1303               	bcf	3,6	;RP1=0, select bank0
  7150     0E6D  1407               	bsf	7,0	;volatile
  7151     0E6E  2E72               	goto	u135_24
  7152     0E6F                     u134_20:
  7153     0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  7154     0E70  1303               	bcf	3,6	;RP1=0, select bank0
  7155     0E71  1007               	bcf	7,0	;volatile
  7156     0E72                     u135_24:
  7157     0E72                     i1l2144:
  7158                           
  7159                           ;spi-master-v1.c: 19:         PORTCbits.RC5 = 1;
  7160     0E72  1687               	bsf	7,5	;volatile
  7161                           
  7162                           ;spi-master-v1.c: 21:         answer |= (char)PORTAbits.RA5;
  7163     0E73  0E05               	swapf	5,w	;volatile
  7164     0E74  00F0               	movwf	??i1_spi_write_read
  7165     0E75  0C70               	rrf	??i1_spi_write_read,w
  7166     0E76  3901               	andlw	1
  7167     0E77  00F1               	movwf	??i1_spi_write_read+1
  7168     0E78  0871               	movf	??i1_spi_write_read+1,w
  7169     0E79  04F3               	iorwf	i1spi_write_read@answer,f
  7170     0E7A                     i1l2146:
  7171                           
  7172                           ;spi-master-v1.c: 22:         PORTCbits.RC5 = 0;
  7173     0E7A  1287               	bcf	7,5	;volatile
  7174     0E7B                     i1l2148:
  7175                           
  7176                           ;spi-master-v1.c: 24:         if(x > 1)
  7177     0E7B  3002               	movlw	2
  7178     0E7C  0274               	subwf	i1spi_write_read@x,w
  7179     0E7D  1C03               	skipc
  7180     0E7E  2E80               	goto	u136_21
  7181     0E7F  2E81               	goto	u136_20
  7182     0E80                     u136_21:
  7183     0E80  2E85               	goto	i1l38
  7184     0E81                     u136_20:
  7185     0E81                     i1l2150:
  7186                           
  7187                           ;spi-master-v1.c: 25:             answer = answer << 1;
  7188     0E81  0873               	movf	i1spi_write_read@answer,w
  7189     0E82  00F0               	movwf	??i1_spi_write_read
  7190     0E83  0770               	addwf	??i1_spi_write_read,w
  7191     0E84  00F3               	movwf	i1spi_write_read@answer
  7192     0E85                     i1l38:
  7193                           
  7194                           ;spi-master-v1.c: 26:     }
  7195     0E85  3001               	movlw	1
  7196     0E86  02F4               	subwf	i1spi_write_read@x,f
  7197     0E87  0874               	movf	i1spi_write_read@x,w
  7198     0E88  1D03               	btfss	3,2
  7199     0E89  2E8B               	goto	u137_21
  7200     0E8A  2E8C               	goto	u137_20
  7201     0E8B                     u137_21:
  7202     0E8B  2E5D               	goto	i1l2142
  7203     0E8C                     u137_20:
  7204     0E8C                     i1l39:
  7205     0E8C  0008               	return
  7206     0E8D                     __end_ofi1_spi_write_read:
  7207     007E                     btemp	set	126	;btemp
  7208     007E                     wtemp0	set	126
  7209                           
  7210                           	psect	idloc
  7211                           
  7212                           ;Config register IDLOC0 @ 0x2000
  7213                           ;	unspecified, using default values
  7214     2000                     	org	8192
  7215     2000  3FFF               	dw	16383
  7216                           
  7217                           ;Config register IDLOC1 @ 0x2001
  7218                           ;	unspecified, using default values
  7219     2001                     	org	8193
  7220     2001  3FFF               	dw	16383
  7221                           
  7222                           ;Config register IDLOC2 @ 0x2002
  7223                           ;	unspecified, using default values
  7224     2002                     	org	8194
  7225     2002  3FFF               	dw	16383
  7226                           
  7227                           ;Config register IDLOC3 @ 0x2003
  7228                           ;	unspecified, using default values
  7229     2003                     	org	8195
  7230     2003  3FFF               	dw	16383
  7231                           
  7232                           	psect	config
  7233                           
  7234                           ;Config register CONFIG1 @ 0x2007
  7235                           ;	Oscillator Selection bits
  7236                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  7237                           ;	Watchdog Timer Enable bit
  7238                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  7239                           ;	Power-up Timer Enable bit
  7240                           ;	PWRTE = ON, PWRT enabled
  7241                           ;	RE3/MCLR pin function select bit
  7242                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  7243                           ;	Code Protection bit
  7244                           ;	CP = OFF, Program memory code protection is disabled
  7245                           ;	Data Code Protection bit
  7246                           ;	CPD = OFF, Data memory code protection is disabled
  7247                           ;	Brown Out Reset Selection bits
  7248                           ;	BOREN = OFF, BOR disabled
  7249                           ;	Internal External Switchover bit
  7250                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  7251                           ;	Fail-Safe Clock Monitor Enabled bit
  7252                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  7253                           ;	Low Voltage Programming Enable bit
  7254                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  7255                           ;	In-Circuit Debugger Mode bit
  7256                           ;	DEBUG = OFF, In-Circuit Debugger disabled, RB6/ICSPCLK and RB7/ICSPDAT are general pur
      +                          pose I/O pins
  7257     2007                     	org	8199
  7258     2007  20E2               	dw	8418
  7259                           
  7260                           ;Config register CONFIG2 @ 0x2008
  7261                           ;	Brown-out Reset Selection bit
  7262                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  7263                           ;	Flash Program Memory Self Write Enable bits
  7264                           ;	WRT = OFF, Write protection off
  7265     2008                     	org	8200
  7266     2008  3EFF               	dw	16127

Data Sizes:
    Strings     74
    Constant    10
    Data        40
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     38      68
    BANK1            80     11      57
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 74
		 -> STR_1(CODE[74]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    sp__getLED	PTR unsigned char  size(1) Largest target is 4
		 -> miLED(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _TRAT_INT in COMMON

    _TRAT_INT->i1_setLED
    i1_setPWM->i1___awdiv
    i1_setLED->i1_cosasSPI
    i1_escribirMemoria->i1_leerMemoria
    i1_cosasSPI->i1_spi_write_read

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv
    _initActuadoresSegunMemoria->_setLED
    _setPWM->___awdiv
    _setLED->_cosasSPI
    _escribirMemoria->_leerMemoria
    _cosasSPI->_spi_write_read
    _getnoPrimerArranque->_leerMemoria
    _analisisResto->_setCO2
    _analisisResto->_setLumen
    _setLumen->_i2c_read
    _setCO2->_i2c_read

Critical Paths under _TRAT_INT in BANK0

    _TRAT_INT->i1_setLED

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _TRAT_INT in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TRAT_INT in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TRAT_INT in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6119
                                             36 BANK0      2     2      0
                                             10 BANK1      1     1      0
                      _analisisResto
                      _analisisRuido
                           _i2c_stop
         _initActuadoresSegunMemoria
                             _initYo
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              28    18     10    1463
                                             26 BANK0     10     0     10
                                              0 BANK1     10    10      0
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      31
                                             12 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                             20 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                             12 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _initYo                                               0     0      0       0
                          _i2c_start
                           _init_ADC
                      _init_CCP1_PWM
                           _init_I2C
                           _init_SPI
                          _init_TMR0
                          _init_TMR1
                          _init_TMR2
                       _init_memoria
                          _init_uart
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_memoria                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_TMR2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_TMR0                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_SPI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_I2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_CCP1_PWM                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                          _wait_MSSP
 ---------------------------------------------------------------------------------
 (1) _initActuadoresSegunMemoria                           3     3      0    4347
                                             28 BANK0      3     3      0
                _getnoPrimerArranque
                        _leerMemoria
                             _setLED
                             _setPWM
 ---------------------------------------------------------------------------------
 (2) _setPWM                                               3     3      0    1670
                                             21 BANK0      3     3      0
                            ___awdiv
                             ___bmul
                    _escribirMemoria
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     226
                                             12 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     625
                                             12 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _setLED                                               4     1      3    2383
                                             24 BANK0      4     1      3
                           _cosasSPI
                    _escribirMemoria
 ---------------------------------------------------------------------------------
 (3) _escribirMemoria                                      8     7      1     726
                                             13 BANK0      6     5      1
                        _leerMemoria
 ---------------------------------------------------------------------------------
 (3) _cosasSPI                                             7     4      3     704
                                             17 BANK0      7     4      3
                     _spi_write_read
 ---------------------------------------------------------------------------------
 (4) _spi_write_read                                       5     5      0     208
                                             12 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _getnoPrimerArranque                                  2     2      0     161
                                             13 BANK0      1     1      0
                        _leerMemoria
 ---------------------------------------------------------------------------------
 (4) _leerMemoria                                          1     1      0      31
                                             12 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c_stop                                             0     0      0       0
                          _wait_MSSP
 ---------------------------------------------------------------------------------
 (1) _analisisRuido                                        3     3      0      74
                                             12 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _analisisResto                                        0     0      0     192
                             _getCO2
                           _getLumen
                             _setCO2
                           _setLumen
 ---------------------------------------------------------------------------------
 (2) _setLumen                                             2     2      0      96
                                             14 BANK0      2     2      0
                           _i2c_read
                         _i2c_rstart
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _setCO2                                               2     2      0      96
                                             14 BANK0      2     2      0
                           _i2c_read
                         _i2c_rstart
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      31
                                             12 BANK0      1     1      0
                          _wait_MSSP
 ---------------------------------------------------------------------------------
 (3) _i2c_rstart                                           0     0      0       0
                          _wait_MSSP
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             2     2      0      65
                                             12 BANK0      2     2      0
                          _wait_MSSP
 ---------------------------------------------------------------------------------
 (3) _wait_MSSP                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getLumen                                             2     0      2       0
                                             12 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _getCO2                                               2     0      2       0
                                             12 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _TRAT_INT                                             9     9      0    1806
                                              3 BANK0      9     9      0
                           i1_setLED
                           i1_setPWM
 ---------------------------------------------------------------------------------
 (6) i1_setPWM                                             3     3      0     855
                                              9 COMMON     3     3      0
                          i1___awdiv
                           i1___bmul
                  i1_escribirMemoria
 ---------------------------------------------------------------------------------
 (7) i1___bmul                                             4     3      1     118
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (7) i1___awdiv                                            9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (6) i1_setLED                                             4     1      3     951
                                             12 COMMON     1     1      0
                                              0 BANK0      3     0      3
                         i1_cosasSPI
                  i1_escribirMemoria
 ---------------------------------------------------------------------------------
 (7) i1_escribirMemoria                                    8     7      1     319
                                              1 COMMON     6     5      1
                      i1_leerMemoria
 ---------------------------------------------------------------------------------
 (8) i1_leerMemoria                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_cosasSPI                                           7     4      3     378
                                              5 COMMON     7     4      3
                   i1_spi_write_read
 ---------------------------------------------------------------------------------
 (8) i1_spi_write_read                                     5     5      0     143
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _analisisResto
     _getCO2
     _getLumen
     _setCO2
       _i2c_read
         _wait_MSSP
       _i2c_rstart
         _wait_MSSP
       _i2c_write
         _wait_MSSP
     _setLumen
       _i2c_read
       _i2c_rstart
       _i2c_write
   _analisisRuido
   _i2c_stop
     _wait_MSSP
   _initActuadoresSegunMemoria
     _getnoPrimerArranque
       _leerMemoria
     _leerMemoria
     _setLED
       _cosasSPI
         _spi_write_read
       _escribirMemoria
         _leerMemoria
     _setPWM
       ___awdiv
       ___bmul
       _escribirMemoria
   _initYo
     _i2c_start
       _wait_MSSP
     _init_ADC
     _init_CCP1_PWM
     _init_I2C
     _init_SPI
     _init_TMR0
     _init_TMR1
     _init_TMR2
     _init_memoria
     _init_uart
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch

 _TRAT_INT (ROOT)
   i1_setLED
     i1_cosasSPI
       i1_spi_write_read
     i1_escribirMemoria
       i1_leerMemoria
   i1_setPWM
     i1___awdiv
     i1___bmul
     i1_escribirMemoria

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      B      39       7       71.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     26      44       5       85.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      8B      12        0.0%
ABS                  0      0      8B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Nov 22 11:39:22 2022

                      _ruidoMasAlto 0059                                   l9 0C40  
                                 _x 005F                                   pc 0002  
                    ___bmul@product 002E                                  l11 0C46  
                                l12 0C47                                  l21 0C58  
                                l15 0C6A                                  l24 0CA8  
                                l18 0C61                                  l27 0DF0  
                                l28 0DF3                                  l29 0DFC  
                                l38 0EBB                                  l39 0EC2  
                      ___awdiv@sign 0032                                  fsr 0004  
                               l212 0C80                                 l301 07E7  
                               l221 0CB9                                 l230 0C3F  
                               l215 0CCA                                 l312 0FFF  
                               l224 0DD7                                 l321 067A  
                               l233 0D83                                 l250 0C9A  
                               l218 0CED                                 l227 07FF  
                               l316 0F79                                 l308 0FE9  
                               l260 0D9F                                 l236 0C74  
                               l244 0CFF                                 l253 07A4  
                               l247 075F                                 l239 0CF1  
                               l256 0C8D                                 l280 0EFE  
                               l265 03BE                                 l290 0E58  
                               l277 0413                                 l286 0DBB  
                               l526 0D6A                                 l384 039E  
                               l298 0485                                 l653 04EE  
                               l496 031A                                 l772 071A  
                               l782 0F3A                                 _PR2 0092  
                     _emitoSensores 00B8                                 _anI 004A  
                      ?_leerMemoria 0070                                 fsr0 0004  
                 i1_escribirMemoria 0556                                 indf 0000  
                       cosasSPI@azu 0032        ??_initActuadoresSegunMemoria 003C  
                       cosasSPI@roj 0034                          i1_cosasSPI 05BB  
                ?i1_escribirMemoria 0071              i1leerMemoria@direccion 0070  
                              l3000 0433                                l3002 043F  
                              l3012 046D                                l3020 0D60  
                              l3100 0CDC                                l3006 0446  
                              l3030 0489                                l3022 0D62  
                              l3014 0D57                                l3110 0CEC  
                              l3102 0CE0                                l3008 0464  
                              l3040 049D                                l3032 048D  
                              l3024 0D69                                l3016 0D58  
                              l3120 0CB7                                l3112 0CA9  
                              l3104 0CE4                                l3210 0785  
                              l3202 0760                                l3050 04B3  
                              l3042 04A1                                l3034 0492  
                              l3018 0D5C                                l3114 0CAC  
                              l3106 0CE6                                l3130 0DC8  
                              l3122 0DBC                                l3212 0C81  
                              l3204 0765                                l3220 0DA9  
                              l3060 04D3                                l3052 04B7  
                              l3044 04A3                                l3036 0494  
                              l3028 0486                                l3116 0CAF  
                              l3108 0CE9                                l3140 0DD3  
                              l3132 0DC9                                l3124 0DC2  
                              l3300 0F29                                l3206 076B  
                              l3310 0C5C                                l3222 0DAE  
                              l3062 04DA                                l3054 04BB  
                              l3046 04A9                                l3038 0498  
                              l3118 0CB5                                l3150 07F5  
                              l3142 0DD6                                l3134 0DCC  
                              l3126 0DC5                                l3302 0F30  
                              l3208 0771                                l3232 0DBA  
                              l3224 0DB3                                l3216 0DA0  
                              l3056 04CC                                l3048 04AC  
                              l3064 04E0                                l3240 0E54  
                              l3072 0C62                                l3160 0D6F  
                              l3152 07F9                                l3144 07E8  
                              l3080 0C79                                l3136 0DCF  
                              l3128 0DC7                                l3320 0ED1  
                              l3304 0F36                                l3400 027B  
                              l3226 0DB8                                l3218 0DA0  
                              l3250 07BC                                l3242 07A8  
                              l3066 04E5                                l3058 04D2  
                              l3074 0C65                                l3170 0D7C  
                              l3162 0D72                                l3154 07FC  
                              l3146 07EC                                l3082 0C7C  
                              l3090 0CC0                                l3138 0DD0  
                              l3330 0EF9                                l3322 0ED6  
                              l3314 0EC3                                l3402 0280  
                              l3340 0FCC                                l3308 0C59  
                              l3252 07BE                                l3244 07B4  
                              l3068 04EA                                l3236 0E2D  
                              l3172 0D7D                                l3164 0D73  
                              l3148 07F2                                l3156 0C3C  
                              l3084 0C7D                                l3092 0CC1  
                              l3180 0C6B                                l3332 0EFC  
                              l3324 0EDB                                l3316 0EC7  
                              l3260 06D5                                l3420 02B9  
                              l3412 029E                                l3190 0720  
                              l3350 0F3B                                l3342 0FD1  
                              l3254 07C6                                l3246 07B8  
                              l3238 0E4C                                l3174 0D80  
                              l3166 0D74                                l3158 0D6B  
                              l3086 0C7F                                l3078 0C75  
                              l3094 0CC3                                l3334 0EFD  
                              l3326 0EE0                                l3318 0ECC  
                              l3270 06ED                                l3262 06D9  
                              l3182 0CF1                                l3422 02F7  
                              l3414 02A8                                l3192 0726  
                              l3360 0F5E                                l3352 0F43  
                              l3344 0FE0                                l3336 0FBD  
                              l3256 07D1                                l3248 07BA  
                              l3176 0D81                                l3168 0D7A  
                              l3096 0CC4                                l3088 0CBA  
                              l3328 0EE5                                l3280 0710  
                              l3272 06F1                                l3264 06DF  
                              l3184 0CF6                                l3424 02FD  
                              l3416 02AE                                l3408 0282  
                              l3440 032F                                l3432 031B  
                              l3194 072C                                l3362 0F6F  
                              l3354 0F45                                l3346 0FE5  
                              l3338 0FBD                                l3258 07DC  
                              l3370 063C                                l3178 0D82  
                              l3098 0CC7                                l3274 0702  
                              l3266 06E2                                l3282 0716  
                              l3290 0F0A                                l3186 0CFC  
                              l3418 02B4                                l3426 0308  
                              l3442 0332                                l3450 0348  
                              l3434 0320                                l3196 0740  
                              l3188 071B                                l3364 0F74  
                              l3356 0F49                                l3348 0FF6  
                              l2900 0EB0                                l3372 0649  
                              l3276 0708                                l3268 06E9  
                              l3292 0F11                                l3380 0239  
                              l3444 0335                                l3452 0387  
                              l3436 0326                                l3198 0C8E  
                              l3358 0F4D                                l2910 0D8F  
                              l2902 0EB1                                l3374 0655  
                              l3366 061D                                l3278 0709  
                              l3294 0F15                                l3286 0EFF  
                              l3390 024A                                l3382 023C  
                              l3454 038C                                l3534 033D  
                              l3438 032C                                l2920 0C50  
                              l2912 0D95                                l2904 0EB7  
                              l3376 065F                                l3368 0627  
                              l3296 0F19                                l3288 0F07  
                              l3392 0267                                l3536 025C  
                              l3384 0242                                l3448 0338  
                              l3456 0391                                l2922 0C53  
                              l2930 0CA5                                l2914 0D9B  
                              l2906 0D87                                l3378 0669  
                              l3298 0F23                                l3394 026F  
                              l3386 0249                                l3458 0399  
                              l2940 0DE7                                l2916 0D9C  
                              l2908 0D8B                                l3396 0273  
                              l2942 0DEC                                l2934 0DDB  
                              l2926 0C9E                                l2950 03A4  
                              l3398 0277                                l2944 0DF4  
                              l2936 0DDE                                l2928 0CA0  
                              l2960 03BF                                l2952 03A8  
                              l2946 0DF9                                l2938 0DE3  
                              l2890 0E91                                l2970 03D5  
                              l2962 03C9                                l2954 03AB  
                              l2980 0402                                l2972 03E2  
                              l2964 03CA                                l2956 03B1  
                              l2886 0C40                                l2990 0417  
                              l2982 0411                                l2974 03E7  
                              l2966 03CB                                l2958 03B7  
                              l2896 0E93                                l2888 0E90  
                              l2992 041B                                l2984 0412  
                              l2968 03D3                                l2976 03ED  
                              l2898 0EA8                                l2994 0421  
                              l2978 03FA                                l2986 0413  
                              l2996 0427                                l2998 042D  
                   spi_write_read@x 0030                                STR_1 068B  
                              u2110 0C46                                u2111 0C45  
                              u2200 03D3                                u2201 03D2  
                              u2130 0EA5                                u2210 03E2  
                              u2131 0EA1                                u2211 03E1  
                              u2124 0E9B                                u2220 03FA  
                              u2300 04A9                                u2125 0E99  
                              u2221 03F9                                u2301 04A8  
                              u2150 0EB7                                u2230 0402  
                              u2151 0EB6                                u2231 0401  
                              u2400 0DAE                                u2160 0EC2  
                              u2144 0EA8                                u2240 0411  
                              u2320 04BB                                u2401 0DAD  
                              u2161 0EC1                                u2241 0410  
                              u2225 03F6                                u2321 04BA  
                              u2170 0D9B                                u2410 0DB3  
                              u2250 0445                                u2171 0D9A  
                              u2411 0DB2                                u2251 0444  
                              u2315 04AD                                u2180 0DEC  
                              u2420 0DB8                                u2340 04CC  
                              u2260 0D5C                                u2500 0F07  
                              u2181 0DEB                                u2421 0DB7  
                              u2245 040D                                u2341 04CB  
                              u2261 0D5B                                u2501 0F06  
                              u2190 03B7                                u2270 0D69  
                              u2430 06DF                                u2191 03B6  
                              u2335 04BC                                u2271 0D68  
                              u2431 06DE                                u2360 04E0  
                              u2280 048D                                u2600 0627  
                              u2520 0F19                                u2361 04DF  
                              u2345 04C8                                u2281 048C  
                              u2601 0626                                u2521 0F18  
                              u2370 04E5                                u2290 0498  
                              u2450 06F1                                u2530 0F23  
                              u2610 0242                                u2371 04E4  
                              u2355 04D4                                u2291 0497  
                              u2451 06F0                                u2531 0F22  
                              u2515 0F0B                                u2611 0241  
                              u2380 0CF6                                u2620 0277  
                              u2445 06E3                                u2381 0CF5  
                              u2621 0276                                u2470 0702  
                              u2550 0F36                                u2390 0CFC  
                              u2630 029D                                u2471 0701  
                              u2551 0F35                                u2535 0F1F  
                              u2391 0CFB                                u2631 029C  
                              u2560 0FCC                                u2640 02A8  
                              u2561 0FCB                                u2465 06F2  
                              u2545 0F2A                                u2641 02A7  
                              u2570 0FE0                                u2490 0716  
                              u2650 02AE                                u2571 0FDF  
                              u2491 0715                                u2475 06FE  
                              u2651 02AD                                u2635 0299  
                              u2580 0FF6                                u2660 0308  
                              u2581 0FF5                                u2565 0FC8  
                              u2485 070A                                u2661 0307  
                              u2590 0F43                                u2670 031A  
                              u2591 0F42                                u2575 0FDC  
                              u2671 0319                                u2680 032C  
                              u2585 0FF2                                u2681 032B  
                              u2690 0399                                u2691 0398  
                              i1l38 0E85                                i1l39 0E8C  
                              _TMR0 0001                                _TXIF 0064  
            __end_of_spi_write_read 0EC3                                _pPWM 0062  
               ??i1_escribirMemoria 0072                                _main 031B  
                              btemp 007E                                start 0012  
                      cosasSPI@lumi 0033                        cosasSPI@lumo 0035  
                      cosasSPI@verd 0031                   ___bmul@multiplier 002F  
         __end_ofi1_escribirMemoria 05BB                               ?_main 0070  
                    i1___awdiv@sign 0076                     __end_of___awdiv 04EF  
                             _EEADR 010D                               _EEDAT 010C  
                             _ANSEL 0188                     ___awdiv@divisor 002C  
                   __end_of___lwdiv 071B                               i1l301 0FBC  
                             i1l331 0118                               i1l260 0D3D  
                             i1l341 018B                               i1l350 0229  
                             i1l334 010F                               i1l326 00AC  
                             i1l351 019B                               i1l265 056B  
                             i1l353 0223                               i1l337 010E  
                   __end_of___lwmod 0F3B                               i1l290 0E29  
                             i1l339 0123                               i1l277 05BA  
                             i1l349 0195                               i1l526 0D27  
                             i1l369 0229                               i1l298 061C  
                             i1l653 0555                     ___awdiv@counter 0031  
                             _RCREG 001A                               _TMR1H 000F  
                             _TMR1L 000E                               _SPBRG 0099  
                             _TRISA 0085                               _TRISB 0086  
                             _TRISC 0087                               _TXREG 0019  
                             _elPR2 004C                               _miLED 0053  
                   __end_of_dpowers 068B                    __end_of_TRAT_INT 0236  
                             _valor 00A0                               _putch 0CEE  
                  __end_ofi1___bmul 0D28                leerMemoria@direccion 002C  
                             pclath 000A                     ?_spi_write_read 0070  
                      main@ruidoAux 00D8                               status 0003  
                             wtemp0 007E                    __end_ofi1_setLED 0FBD  
                  __end_ofi1_setPWM 0E2A                       setPWM@porcent 0037  
                   __initialization 0015                      i1cosasSPI@lumi 0077  
                    i1cosasSPI@lumo 0079                      i1cosasSPI@verd 0075  
                      __end_of_main 03A1                          _i2c_rstart 0C50  
                       i1cosasSPI@i 007A                    __end_of_i2c_read 0DFD  
                  __end_of_i2c_stop 0C62                       _init_CCP1_PWM 0CA9  
             __end_of_analisisResto 0F7A               __end_of_analisisRuido 1000  
                            ??_main 0044                         ?i1_cosasSPI 0075  
                            _ADRESH 001E                              _EEADRH 010F  
                            _ADRESL 009E                              _EEDATH 010E  
                            _CCPR1L 0015                              _EECON2 018D  
                  ___awdiv@dividend 002E                              ?_putch 0070  
                            i1l2150 0E81                              i1l2142 0E5D  
                            i1l2134 0E5A                              i1l2144 0E72  
                            i1l2136 0E5B                              i1l2160 0D39  
                            i1l2152 0D29                              u200_20 0160  
                            u200_21 015F                              i1l2146 0E7A  
                            i1l2162 0D3A                              i1l2154 0D2D  
                            i1l2410 0566                              i1l2402 0557  
                            i1l2148 0E7B                              i1l2156 0D31  
                            i1l2420 0580                              i1l2412 056C  
                            i1l2404 055B                              i1l2500 0513  
                            i1l2158 0D33                              i1l2430 05A5  
                            i1l2422 0582                              i1l2414 0576  
                            i1l2406 055E                              i1l2510 0539  
                            i1l2502 051A                              i1l2432 05AB  
                            i1l2424 058D                              i1l2416 0577  
                            i1l2408 0560                              i1l2520 0551  
                            i1l2512 053A                              i1l2504 051E  
                            u201_20 0172                              u201_21 0171  
                            i1l2450 05D2                              i1l2442 05BC  
                            i1l2434 05B8                              i1l2426 0592  
                            i1l2418 0578                              i1l2514 0541  
                            i1l2506 0522                              i1l2460 05FD  
                            i1l2452 05D8                              i1l2444 05C0  
                            i1l2436 05B9                              i1l2428 0598  
                            i1l2508 0533                              i1l2516 0547  
                            i1l2700 00D3                              i1l2454 05DE  
                            i1l2446 05C6                              i1l2438 05BA  
                            i1l2518 054C                              i1l2470 0D19  
                            i1l2710 0116                              i1l2702 00DB  
                            i1l2464 0604                              i1l2448 05CC  
                            i1l2480 04EF                              i1l2472 0D1D  
                            u202_20 018F                              i1l2720 014B  
                            i1l2712 011C                              i1l2704 00ED  
                            u202_21 018E                              i1l2458 05E5  
                            i1l2490 04FF                              i1l2482 04F0  
                            i1l2474 0D1F                              i1l2466 0D14  
                            i1l2650 0E1D                              i1l2722 0158  
                            i1l2730 017D                              i1l2714 011F  
                            i1l2706 00FA                              i1l2660 0F8F  
                            i1l2492 0504                              i1l2484 04F4  
                            i1l2476 0D26                              i1l2468 0D15  
                            i1l2652 0E25                              i1l2740 0199  
                            i1l2724 0160                              i1l2716 0127  
                            i1l2708 0112                              i1l2670 0FB1  
                            i1l2662 0F91                              i1l2654 0F7B  
                            i1l2494 0508                              i1l2486 04F9  
                            i1l2750 01BB                              i1l2742 019F  
                            i1l2734 0181                              i1l2726 016B  
                            i1l2718 0128                              i1l2664 0F93  
                            i1l2656 0F89                              i1l2496 050A  
                            i1l2488 04FB                              i1l2648 0DFE  
                            i1l2760 01EA                              i1l2752 01C1  
                            i1l2744 01A0                              u203_20 0199  
                            i1l2736 018F                              i1l2728 0172  
                            i1l2680 0072                              i1l2672 004A  
                            u203_21 0198                              i1l2666 0F9B  
                            i1l2658 0F8D                              i1l2498 0510  
                            i1l3538 0212                              i1l2770 0205  
                            i1l2762 01F1                              i1l2746 01AD  
                            i1l2754 01CE                              i1l2738 0190  
                            i1l2690 00AA                              i1l2682 0082  
                            i1l2674 004E                              i1l2668 0FA6  
                            i1l2764 01F4                              i1l2756 01DD  
                            i1l2748 01B5                              i1l2692 00B0  
                            i1l2684 0091                              i1l2676 0068  
                            i1l2766 01FB                              i1l2758 01E1  
                            i1l2774 0208                              i1l2694 00BE  
                            i1l2686 009D                              i1l2678 006C  
                            i1l2776 0227                              i1l2768 0200  
                            u204_20 019F                              i1l2696 00C2  
                            i1l2688 00A2                              u204_21 019E  
                            i1l2698 00CF                              u205_20 01AD  
                            u205_21 01AC                              u133_24 0E65  
                            u133_25 0E63                              u205_25 01A9  
                            u134_20 0E6F                              u206_20 01C1  
                            u134_21 0E6B                              u206_21 01C0  
                            u207_20 01DD                              u207_21 01DC  
                            u135_24 0E72                              u207_25 01D9  
                            u136_20 0E81                              u160_20 05A5  
                            u208_20 0227                              u136_21 0E80  
                            u160_21 05A4                              u208_21 0226  
                            u160_25 05A1                              u137_20 0E8C  
                            u161_20 05AB                              u137_21 0E8B  
                            u161_21 05AA                              u138_20 0D39  
                            u162_20 05B8                              u170_20 0522  
                            u138_21 0D38                              u162_21 05B7  
                            u170_21 0521                              u162_25 05B4  
                            u163_20 05E4                              u163_21 05E3  
                            u171_25 0523                              u172_20 0533  
                            u164_20 0D19                              u172_21 0532  
                            u164_21 0D18                              u172_25 052F  
                            u157_20 0566                              u165_20 0D26  
                            u157_21 0565                              u165_21 0D25  
                            u173_25 053B                              u158_20 0580  
                            u174_20 0547                              u166_20 04F4  
                            u190_20 0091                              u158_21 057F  
                            u174_21 0546                              u166_21 04F3  
                            u190_21 0090                              u190_25 008D  
                            u159_20 058D                              u175_20 054C  
                            u167_20 04FF                              u191_20 00B0  
                            u159_21 058C                              u175_21 054B  
                            u167_21 04FE                              u191_21 00AF  
                            u168_20 0510                              u192_20 00BE  
                            u168_21 050F                              u192_21 00BD  
                            u192_25 00BA                              u193_20 00CF  
                            u193_21 00CE                              u169_25 0514  
                            u193_25 00CB                              u194_20 00ED  
                            u194_21 00EC                              u194_25 00E9  
                            u195_20 00FA                              u195_21 00F9  
                            u195_25 00F6                              u196_20 010E  
                            u188_20 004E                              u196_21 010D  
                            u188_21 004D                              u196_25 010A  
                            u197_20 011C                              u189_20 0068  
                            u197_21 011B                              u189_21 0067  
                            u189_25 0064                              u198_20 0127  
                            u198_21 0126                              u199_20 0158  
                            u199_21 0157                              u199_25 0154  
                            _OSCCON 008F                              _SPBRGH 009A  
                            _SSPADD 0093                              _SSPBUF 0013  
               _porcentajeSubenBaja 004E                       ?_init_memoria 0070  
                       i1setLED@red 007C                   ??_escribirMemoria 002E  
                  __end_of_getLumen 0C9B                    __end_of_cosasSPI 0486  
                            ___bmul 0D54                              _getCO2 0C81  
                         ??___awdiv 0030                    __end_of_init_I2C 0800  
                  __end_of_init_ADC 0D84                           ??___lwdiv 0030  
                         ??___lwmod 0038                    __end_of_init_SPI 0C40  
                            _copias 00AC                              _setCO2 0760  
                            _initYo 0EC3                              _setLED 07A5  
                       setLED@green 0038                      ?_init_CCP1_PWM 0070  
                            _setPWM 0E2A                    ___awdiv@quotient 0033  
                            _printf 0236                    __end_of_setLumen 0760  
                 __end_ofi1___awdiv 0556  __end_of_initActuadoresSegunMemoria 067B  
        _initActuadoresSegunMemoria 061D                        __pdataCOMMON 007D  
               i1setLED@luminosidad 0022                 escribirMemoria@dato 002D  
                            saved_w 007E                              putch@c 002C  
                    ??_init_memoria 002C             __end_of__initialization 0046  
               ___bmul@multiplicand 002C                   analisisRuido@temp 002E  
                    __pcstackCOMMON 0070                         ?_i2c_rstart 0070  
                      __pidataBANK0 0CCB                        __pidataBANK1 0D3E  
                   i1setPWM@porcent 007B                           ?_TRAT_INT 0070  
                     __end_of_putch 0D00                           ?i1___bmul 0070  
                  i1_spi_write_read 0E59                   __end_of_i2c_start 0C6B  
                 __end_of_i2c_write 0CA9                      _OPTION_REGbits 0081  
                         ?i1_setLED 0020                           ?i1_setPWM 0070  
                     i1_leerMemoria 0D28                    i1___bmul@product 0072  
                           ??_putch 002C                          __pbssBANK0 0057  
                        __pbssBANK1 00A0                           ?_i2c_read 0070  
                         ?_i2c_stop 0070            i1spi_write_read@one_byte 0072  
            i1spi_write_read@answer 0073                          __pmaintext 031B  
                           ?___bmul 002C                             ?_getCO2 002C  
                   ??_init_CCP1_PWM 002C                          __pintentry 0004  
                        ??_TRAT_INT 0023                             ?_setCO2 0070  
                           ?_initYo 0070                             ?_setLED 0038  
                           ?_setPWM 0070                          ??i1___bmul 0071  
                           ?_printf 003A                  i1___awdiv@dividend 0072  
                    ?i1_leerMemoria 0070                          ??i1_setLED 007C  
                        ??i1_setPWM 0079           escribirMemoria@confirmado 002E  
                  ??_spi_write_read 002C                           ?_getLumen 002C  
                         ?_cosasSPI 0031                        i1setLED@blue 0021  
                        __stringtab 067B            escribirMemoria@direccion 0030  
                         ?_init_I2C 0070                           ?_init_ADC 0070  
                        ??_i2c_read 002C                   _leoADCHumedadTemp 0048  
                         ?_init_SPI 0070                          ??_i2c_stop 002C  
                         ?_setLumen 0070                  i1___awdiv@quotient 0077  
              spi_write_read@answer 002F                             _anINext 00B0  
                     _deboContinuar 00CC                             ___awdiv 0486  
                           ___lwdiv 06D5                             ___lwmod 0EFF  
                      _direccionLED 0050                        _direccionPWM 0051  
                         _ANSELbits 0188                             __ptext1 0236  
                           __ptext2 0CEE                             __ptext3 0EFF  
                           __ptext4 06D5                             __ptext5 0EC3  
                           __ptext6 0DBC                             __ptext7 0C6B  
                           __ptext8 0CDC                             __ptext9 0CBA  
                           _copias1 0057                   __end_of_init_TMR0 0C81  
                 __end_of_init_TMR1 0CCB                   __end_of_init_TMR2 0CEE  
              __end_of_init_memoria 0C75                           _T1CONbits 0010  
                           _dpowers 0681                           _T2CONbits 0012  
        i1escribirMemoria@direccion 0074                   __end_of_init_uart 0DD8  
               i1___bmul@multiplier 0073                        ??i1_cosasSPI 0078  
                   _escribirMemoria 03A1                          ??_getLumen 002E  
                           clrloop0 0C49                          ??_cosasSPI 0034  
              end_of_initialization 0046                          ??_init_I2C 002C  
                        ??_init_ADC 002C                          ??_init_SPI 002C  
                 __end_of_wait_MSSP 0C48                  i2c_read@master_ack 002C  
                        ??_setLumen 002E         i1escribirMemoria@confirmado 0072  
                         _RCSTAbits 0018                             printf@c 00D7  
                           printf@f 00D3                  __end_ofi1_cosasSPI 061D  
                        _porcentaje 0060                           _PORTAbits 0005  
                         _PORTCbits 0007                     ??i1_leerMemoria 0070  
       ?_initActuadoresSegunMemoria 0070                   _emitirMisSensores 00B2  
                         _TRISCbits 0087                          _ruidoMedio 00C6  
                         i1___awdiv 04EF     _initActuadoresSegunMemoria$1570 003C  
   _initActuadoresSegunMemoria$1571 003D     _initActuadoresSegunMemoria$1572 003E  
                       _CCP1CONbits 0017            __end_ofi1_spi_write_read 0E8D  
                         _TXSTAbits 0098                 _getnoPrimerArranque 0DA0  
                      ??_i2c_rstart 002C                      __end_of___bmul 0D6B  
                    __end_of_getCO2 0C8E                       __pidataCOMMON 0003  
                       _BAUDCTLbits 0187                      __end_of_setCO2 07A5  
           __end_of_escribirMemoria 0414                      __end_of_initYo 0EFF  
                    __end_of_setLED 07E8                      __end_of_setPWM 0E59  
              ?_getnoPrimerArranque 0070                       ??_leerMemoria 002C  
                    __end_of_printf 031B                 start_initialization 0015  
                     i1cosasSPI@azu 0076                       i1cosasSPI@roj 0078  
                         _i2c_start 0C62                          ?i1___awdiv 0070  
                         _i2c_write 0C9B                  __end_of_i2c_rstart 0C59  
                          ??___bmul 002D                          setLED@blue 0039  
                          ??_getCO2 002E                          init_fetch0 0D00  
            spi_write_read@one_byte 002E                         __pdataBANK0 0046  
                       __pdataBANK1 00B8                    _direccionInicial 0063  
                          ??_setCO2 002E                            ??_initYo 002C  
                          ??_setLED 003B                            ??_setPWM 0035  
                      _los5msen15ms 0046                            ??_printf 00CE  
                      _los5msen1sT0 00C2               ??_getnoPrimerArranque 002D  
                     _analisisResto 0F3B                       _analisisRuido 0FBD  
                         ___latbits 0002                       __pcstackBANK0 0020  
                     __pcstackBANK1 00CE                          ?_i2c_start 0070  
                 i1spi_write_read@x 0074                          ?_i2c_write 0070  
               __end_of_leerMemoria 0DA0                        _init_memoria 0C6B  
                  ___lwdiv@dividend 002E                            ?___awdiv 002C  
                          ?___lwdiv 002C                            ?___lwmod 0034  
                 i1___awdiv@divisor 0070               __end_of_init_CCP1_PWM 0CBA  
                 i1___awdiv@counter 0075                           __pstrings 067B  
            getnoPrimerArranque@aux 002D                      ?_analisisResto 0070  
                    ?_analisisRuido 0070                    ?_escribirMemoria 002D  
                         _continuar 00B6                           _eltimer1H 007D  
                         _eltimer1L 0052               i1escribirMemoria@dato 0071  
           escribirMemoria@contador 0031                   _actualizoLecturas 00AE  
                         _init_TMR0 0C75                           _init_TMR1 0CBA  
                         _init_TMR2 0CDC                         ??i1___awdiv 0074  
                  ___lwdiv@quotient 0032                    i2c_read@I2C_data 002D  
                         _init_uart 0DBC                           _reciboLED 005B  
                         _reciboPWM 00B4                   interrupt_function 0004  
         i1escribirMemoria@contador 0075                           clear_ram0 0C48  
                          _PIE1bits 008C                            _PIE2bits 008D  
             i1___bmul@multiplicand 0070                           _wait_MSSP 0C40  
                          _PIR1bits 000C                            _PIR2bits 000D  
                          _TRAT_INT 004A                           _ruidoBajo 00C8  
                     i1setLED@green 0020                            i1___bmul 0D13  
                        _ADCON0bits 001F                         __stringbase 0680  
                        _ADCON1bits 009F                           cosasSPI@i 0036  
                        printf@flag 00D2                          printf@prec 00D4  
                       _leerMemoria 0D84                            i1_setLED 0F7A  
                          i1_setPWM 0DFD                          ?_init_TMR0 0070  
                        ?_init_TMR1 0070                          ?_init_TMR2 0070  
                       ??_i2c_start 002C                         ??_i2c_write 002C  
                        ?_init_uart 0070                            _i2c_read 0DD8  
                          _i2c_stop 0C59                   ?i1_spi_write_read 0070  
                        _EECON1bits 018C                          ?_wait_MSSP 0070  
                ??i1_spi_write_read 0070                           setLED@red 003B  
                 i2c_write@I2C_data 002C                     ??_analisisResto 0030  
                   ??_analisisRuido 002C                  __end_of__stringtab 0681  
             __end_ofi1_leerMemoria 0D3E                     ___lwdiv@divisor 002C  
                   ___lwdiv@counter 0031                            __ptext10 0C75  
                          __ptext11 0C3C                            __ptext20 07A5  
                          __ptext12 07E8                            __ptext21 03A1  
                          __ptext13 0CA9                            __ptext30 0760  
                          __ptext22 0414                            __ptext14 0D6B  
                          __ptext31 0C9B                            __ptext23 0E8D  
                          __ptext15 0C62                            __ptext40 04EF  
                          __ptext32 0C50                            __ptext24 0DA0  
                          __ptext16 061D                            __ptext41 0F7A  
                          __ptext33 0DD8                            __ptext25 0D84  
                          __ptext17 0E2A                            __ptext42 0556  
                          __ptext34 0C40                            __ptext26 0C59  
                          __ptext18 0D54                            __ptext43 0D28  
                          __ptext35 0C8E                            __ptext27 0FBD  
                          __ptext19 0486                            __ptext44 05BB  
                          __ptext36 0C81                            __ptext28 0F3B  
                          __ptext45 0E59                            __ptext37 004A  
                          __ptext29 071B                            __ptext38 0DFD  
                          __ptext39 0D13                            _getLumen 0C8E  
                          _cosasSPI 0414                            _copias5s 00AA  
                          _contado1 00CA                            _init_I2C 07E8  
                          _init_ADC 0D6B                            _init_SPI 0C3C  
                     _porcentajeMax 004F                       _porcentajeMin 0061  
                 setLED@luminosidad 003A                            _setLumen 071B  
                          _numLedes 00C4                            _valorI2C 00A6  
                         printf@val 00D5                          _INTCONbits 000B  
                       ??_init_TMR0 002C                         ??_init_TMR1 002C  
                       ??_init_TMR2 002C                            init_ram0 0D04  
                       ??_init_uart 002C                            intlevel1 0000  
               _continuoEscribiendo 005D                    ___lwmod@dividend 0036  
                         stringcode 067B                         ??_wait_MSSP 002C  
                          printf@ap 00D1         __end_of_getnoPrimerArranque 0DBC  
                   ___lwmod@divisor 0034                     ___lwmod@counter 0039  
                          stringdir 067B                            stringtab 067B  
                       _porcentajeC 004D                         _SSPCON2bits 0091  
                    _spi_write_read 0E8D                          _SSPCONbits 0014  
