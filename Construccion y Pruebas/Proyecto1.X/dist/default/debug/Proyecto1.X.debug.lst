

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Oct 13 15:07:18 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27     0000                     
    28                           ; Version 2.40
    29                           ; Generated 17/11/2021 GMT
    30                           ; 
    31                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F886 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63     0000                     	;# 
    64     0001                     	;# 
    65     0002                     	;# 
    66     0003                     	;# 
    67     0004                     	;# 
    68     0005                     	;# 
    69     0006                     	;# 
    70     0007                     	;# 
    71     0009                     	;# 
    72     000A                     	;# 
    73     000B                     	;# 
    74     000C                     	;# 
    75     000D                     	;# 
    76     000E                     	;# 
    77     000E                     	;# 
    78     000F                     	;# 
    79     0010                     	;# 
    80     0011                     	;# 
    81     0012                     	;# 
    82     0013                     	;# 
    83     0014                     	;# 
    84     0015                     	;# 
    85     0015                     	;# 
    86     0016                     	;# 
    87     0017                     	;# 
    88     0018                     	;# 
    89     0019                     	;# 
    90     001A                     	;# 
    91     001B                     	;# 
    92     001B                     	;# 
    93     001C                     	;# 
    94     001D                     	;# 
    95     001E                     	;# 
    96     001F                     	;# 
    97     0081                     	;# 
    98     0085                     	;# 
    99     0086                     	;# 
   100     0087                     	;# 
   101     0089                     	;# 
   102     008C                     	;# 
   103     008D                     	;# 
   104     008E                     	;# 
   105     008F                     	;# 
   106     0090                     	;# 
   107     0091                     	;# 
   108     0092                     	;# 
   109     0093                     	;# 
   110     0093                     	;# 
   111     0093                     	;# 
   112     0094                     	;# 
   113     0095                     	;# 
   114     0096                     	;# 
   115     0097                     	;# 
   116     0098                     	;# 
   117     0099                     	;# 
   118     009A                     	;# 
   119     009B                     	;# 
   120     009C                     	;# 
   121     009D                     	;# 
   122     009E                     	;# 
   123     009F                     	;# 
   124     0105                     	;# 
   125     0107                     	;# 
   126     0108                     	;# 
   127     0109                     	;# 
   128     010C                     	;# 
   129     010C                     	;# 
   130     010D                     	;# 
   131     010E                     	;# 
   132     010F                     	;# 
   133     0185                     	;# 
   134     0187                     	;# 
   135     0188                     	;# 
   136     0189                     	;# 
   137     018C                     	;# 
   138     018D                     	;# 
   139     0000                     	;# 
   140     0001                     	;# 
   141     0002                     	;# 
   142     0003                     	;# 
   143     0004                     	;# 
   144     0005                     	;# 
   145     0006                     	;# 
   146     0007                     	;# 
   147     0009                     	;# 
   148     000A                     	;# 
   149     000B                     	;# 
   150     000C                     	;# 
   151     000D                     	;# 
   152     000E                     	;# 
   153     000E                     	;# 
   154     000F                     	;# 
   155     0010                     	;# 
   156     0011                     	;# 
   157     0012                     	;# 
   158     0013                     	;# 
   159     0014                     	;# 
   160     0015                     	;# 
   161     0015                     	;# 
   162     0016                     	;# 
   163     0017                     	;# 
   164     0018                     	;# 
   165     0019                     	;# 
   166     001A                     	;# 
   167     001B                     	;# 
   168     001B                     	;# 
   169     001C                     	;# 
   170     001D                     	;# 
   171     001E                     	;# 
   172     001F                     	;# 
   173     0081                     	;# 
   174     0085                     	;# 
   175     0086                     	;# 
   176     0087                     	;# 
   177     0089                     	;# 
   178     008C                     	;# 
   179     008D                     	;# 
   180     008E                     	;# 
   181     008F                     	;# 
   182     0090                     	;# 
   183     0091                     	;# 
   184     0092                     	;# 
   185     0093                     	;# 
   186     0093                     	;# 
   187     0093                     	;# 
   188     0094                     	;# 
   189     0095                     	;# 
   190     0096                     	;# 
   191     0097                     	;# 
   192     0098                     	;# 
   193     0099                     	;# 
   194     009A                     	;# 
   195     009B                     	;# 
   196     009C                     	;# 
   197     009D                     	;# 
   198     009E                     	;# 
   199     009F                     	;# 
   200     0105                     	;# 
   201     0107                     	;# 
   202     0108                     	;# 
   203     0109                     	;# 
   204     010C                     	;# 
   205     010C                     	;# 
   206     010D                     	;# 
   207     010E                     	;# 
   208     010F                     	;# 
   209     0185                     	;# 
   210     0187                     	;# 
   211     0188                     	;# 
   212     0189                     	;# 
   213     018C                     	;# 
   214     018D                     	;# 
   215                           
   216                           	psect	idataCOMMON
   217     0289                     __pidataCOMMON:
   218                           
   219                           ;initializer for _eltimer1L
   220     0289  344D               	retlw	77
   221                           
   222                           ;initializer for _eltimer1H
   223     028A  343B               	retlw	59
   224                           
   225                           	psect	idataBANK0
   226     0285                     __pidataBANK0:
   227                           
   228                           ;initializer for _los5msen1s
   229     0285  3404               	retlw	4
   230     0286  3400               	retlw	0
   231                           
   232                           ;initializer for _contado1
   233     0287  344C               	retlw	76
   234     0288  343B               	retlw	59
   235                           
   236                           	psect	strings
   237     024D                     __pstrings:
   238     024D                     stringtab:
   239     024D                     __stringtab:
   240     024D                     stringcode:	
   241                           ;	String table - string pointers are 1 byte each
   242                           
   243     024D                     stringdir:
   244     024D  3002               	movlw	high stringdir
   245     024E  008A               	movwf	10
   246     024F  0804               	movf	4,w
   247     0250  0A84               	incf	4,f
   248     0251  0782               	addwf	2,f
   249     0252                     __stringbase:
   250     0252  3400               	retlw	0
   251     0253                     __end_of__stringtab:
   252     0253                     _dpowers:
   253     0253  3401               	retlw	1
   254     0254  3400               	retlw	0
   255     0255  340A               	retlw	10
   256     0256  3400               	retlw	0
   257     0257  3464               	retlw	100
   258     0258  3400               	retlw	0
   259     0259  34E8               	retlw	232
   260     025A  3403               	retlw	3
   261     025B  3410               	retlw	16
   262     025C  3427               	retlw	39
   263     025D                     __end_of_dpowers:
   264     000B                     _INTCONbits	set	11
   265     0019                     _TXREG	set	25
   266     0018                     _RCSTAbits	set	24
   267     0006                     _PORTB	set	6
   268     001E                     _ADRESH	set	30
   269     000C                     _PIR1bits	set	12
   270     001F                     _ADCON0bits	set	31
   271     0010                     _T1CONbits	set	16
   272     000E                     _TMR1L	set	14
   273     000F                     _TMR1H	set	15
   274     0064                     _TXIF	set	100
   275     008F                     _OSCCON	set	143
   276     0099                     _SPBRG	set	153
   277     009A                     _SPBRGH	set	154
   278     0098                     _TXSTAbits	set	152
   279     009E                     _ADRESL	set	158
   280     009F                     _ADCON1bits	set	159
   281     0085                     _TRISA	set	133
   282     008C                     _PIE1bits	set	140
   283     0187                     _BAUDCTLbits	set	391
   284     0188                     _ANSELbits	set	392
   285     025D                     STR_1:
   286     025D  3425               	retlw	37	;'%'
   287     025E  3464               	retlw	100	;'d'
   288     025F  340D               	retlw	13
   289     0260  340A               	retlw	10
   290     0261  3400               	retlw	0
   291                           
   292                           	psect	cinit
   293     000F                     start_initialization:	
   294                           ; #config settings
   295                           
   296     000F                     __initialization:
   297                           
   298                           ; Initialize objects allocated to BANK0
   299     000F  120A  118A  2285  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   300     0014  00BE               	movwf	__pdataBANK0& (0+127)
   301     0015  120A  118A  2286  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   302     001A  00BF               	movwf	(__pdataBANK0+1)& (0+127)
   303     001B  120A  118A  2287  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   304     0020  00C0               	movwf	(__pdataBANK0+2)& (0+127)
   305     0021  120A  118A  2288  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   306     0026  00C1               	movwf	(__pdataBANK0+3)& (0+127)
   307                           
   308                           ; Initialize objects allocated to COMMON
   309     0027  120A  118A  2289  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   310     002C  00F9               	movwf	__pdataCOMMON& (0+127)
   311     002D  120A  118A  228A  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   312     0032  00FA               	movwf	(__pdataCOMMON+1)& (0+127)
   313                           
   314                           ; Clear objects allocated to BANK0
   315     0033  01BA               	clrf	__pbssBANK0& (0+127)
   316     0034  01BB               	clrf	(__pbssBANK0+1)& (0+127)
   317     0035  01BC               	clrf	(__pbssBANK0+2)& (0+127)
   318     0036  01BD               	clrf	(__pbssBANK0+3)& (0+127)
   319                           
   320                           ; Clear objects allocated to COMMON
   321     0037  01F6               	clrf	__pbssCOMMON& (0+127)
   322     0038  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   323     0039  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   324     003A                     end_of_initialization:	
   325                           ;End of C runtime variable initialization code
   326                           
   327     003A                     __end_of__initialization:
   328     003A  0183               	clrf	3
   329     003B  120A  118A  29ED   	ljmp	_main	;jump to C main() function
   330                           
   331                           	psect	bssCOMMON
   332     0076                     __pbssCOMMON:
   333     0076                     _copias:
   334     0076                     	ds	2
   335     0078                     _x:
   336     0078                     	ds	1
   337                           
   338                           	psect	dataCOMMON
   339     0079                     __pdataCOMMON:
   340     0079                     _eltimer1L:
   341     0079                     	ds	1
   342     007A                     _eltimer1H:
   343     007A                     	ds	1
   344                           
   345                           	psect	bssBANK0
   346     003A                     __pbssBANK0:
   347     003A                     _valor:
   348     003A                     	ds	2
   349     003C                     _continuar:
   350     003C                     	ds	2
   351                           
   352                           	psect	dataBANK0
   353     003E                     __pdataBANK0:
   354     003E                     _los5msen1s:
   355     003E                     	ds	2
   356     0040                     _contado1:
   357     0040                     	ds	2
   358                           
   359                           	psect	cstackCOMMON
   360     0070                     __pcstackCOMMON:
   361     0070                     ?_init_TMR1:
   362     0070                     ?_init_ADC:	
   363                           ; 1 bytes @ 0x0
   364                           
   365     0070                     ?_TRAT_INT:	
   366                           ; 1 bytes @ 0x0
   367                           
   368     0070                     ??_TRAT_INT:	
   369                           ; 1 bytes @ 0x0
   370                           
   371     0070                     ?_init_uart:	
   372                           ; 1 bytes @ 0x0
   373                           
   374     0070                     ?_putch:	
   375                           ; 1 bytes @ 0x0
   376                           
   377     0070                     ?_main:	
   378                           ; 1 bytes @ 0x0
   379                           
   380                           
   381                           ; 1 bytes @ 0x0
   382     0070                     	ds	6
   383                           
   384                           	psect	cstackBANK0
   385     0020                     __pcstackBANK0:
   386     0020                     ??_init_TMR1:
   387     0020                     ??_init_ADC:	
   388                           ; 1 bytes @ 0x0
   389                           
   390     0020                     ??_init_uart:	
   391                           ; 1 bytes @ 0x0
   392                           
   393     0020                     ??_putch:	
   394                           ; 1 bytes @ 0x0
   395                           
   396     0020                     ?___lwdiv:	
   397                           ; 1 bytes @ 0x0
   398                           
   399     0020                     putch@c:	
   400                           ; 2 bytes @ 0x0
   401                           
   402     0020                     ___lwdiv@divisor:	
   403                           ; 1 bytes @ 0x0
   404                           
   405                           
   406                           ; 2 bytes @ 0x0
   407     0020                     	ds	2
   408     0022                     ___lwdiv@dividend:
   409                           
   410                           ; 2 bytes @ 0x2
   411     0022                     	ds	2
   412     0024                     ??___lwdiv:
   413                           
   414                           ; 1 bytes @ 0x4
   415     0024                     	ds	1
   416     0025                     ___lwdiv@counter:
   417                           
   418                           ; 1 bytes @ 0x5
   419     0025                     	ds	1
   420     0026                     ___lwdiv@quotient:
   421                           
   422                           ; 2 bytes @ 0x6
   423     0026                     	ds	2
   424     0028                     ?___lwmod:
   425     0028                     ___lwmod@divisor:	
   426                           ; 2 bytes @ 0x8
   427                           
   428                           
   429                           ; 2 bytes @ 0x8
   430     0028                     	ds	2
   431     002A                     ___lwmod@dividend:
   432                           
   433                           ; 2 bytes @ 0xA
   434     002A                     	ds	2
   435     002C                     ??___lwmod:
   436                           
   437                           ; 1 bytes @ 0xC
   438     002C                     	ds	1
   439     002D                     ___lwmod@counter:
   440                           
   441                           ; 1 bytes @ 0xD
   442     002D                     	ds	1
   443     002E                     ?_printf:
   444                           
   445                           ; 2 bytes @ 0xE
   446     002E                     	ds	2
   447     0030                     ??_printf:
   448                           
   449                           ; 1 bytes @ 0x10
   450     0030                     	ds	3
   451     0033                     printf@ap:
   452                           
   453                           ; 1 bytes @ 0x13
   454     0033                     	ds	1
   455     0034                     printf@flag:
   456                           
   457                           ; 1 bytes @ 0x14
   458     0034                     	ds	1
   459     0035                     printf@f:
   460                           
   461                           ; 1 bytes @ 0x15
   462     0035                     	ds	1
   463     0036                     printf@prec:
   464                           
   465                           ; 1 bytes @ 0x16
   466     0036                     	ds	1
   467     0037                     printf@val:
   468                           
   469                           ; 2 bytes @ 0x17
   470     0037                     	ds	2
   471     0039                     printf@c:
   472                           
   473                           ; 1 bytes @ 0x19
   474     0039                     	ds	1
   475     003A                     ??_main:
   476                           
   477                           	psect	maintext
   478     01ED                     __pmaintext:	
   479                           ; 1 bytes @ 0x1A
   480 ;;
   481 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   482 ;;
   483 ;; *************** function _main *****************
   484 ;; Defined at:
   485 ;;		line 121 in file "adc-1.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   494 ;; Tracked objects:
   495 ;;		On entry : B00/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   499 ;;      Params:         0       0       0       0       0
   500 ;;      Locals:         0       0       0       0       0
   501 ;;      Temps:          0       0       0       0       0
   502 ;;      Totals:         0       0       0       0       0
   503 ;;Total ram usage:        0 bytes
   504 ;; Hardware stack levels required when called: 3
   505 ;; This function calls:
   506 ;;		_init_ADC
   507 ;;		_init_TMR1
   508 ;;		_init_uart
   509 ;;		_printf
   510 ;; This function is called by:
   511 ;;		Startup code after reset
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515     01ED                     _main:	
   516                           ;psect for function _main
   517                           
   518     01ED                     l1321:	
   519                           ;incstack = 0
   520                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   521                           
   522                           
   523                           ;adc-1.c: 122:     OSCCON = 0b00001000;
   524     01ED  3008               	movlw	8
   525     01EE  1683               	bsf	3,5	;RP0=1, select bank1
   526     01EF  1303               	bcf	3,6	;RP1=0, select bank1
   527     01F0  008F               	movwf	15	;volatile
   528     01F1                     l1323:
   529                           
   530                           ;adc-1.c: 123:     init_uart();
   531     01F1  120A  118A  221A  120A  118A  	fcall	_init_uart
   532     01F6                     l1325:
   533                           
   534                           ;adc-1.c: 124:     init_ADC();
   535     01F6  120A  118A  2236  120A  118A  	fcall	_init_ADC
   536     01FB                     l1327:
   537                           
   538                           ;adc-1.c: 125:     init_TMR1();
   539     01FB  120A  118A  2274  120A  118A  	fcall	_init_TMR1
   540     0200                     l1329:
   541                           
   542                           ;adc-1.c: 127:     INTCONbits.GIE = 1;
   543     0200  178B               	bsf	11,7	;volatile
   544     0201                     l1331:
   545                           
   546                           ;adc-1.c: 128:     INTCONbits.PEIE = 1;
   547     0201  170B               	bsf	11,6	;volatile
   548     0202                     l1333:
   549     0202  1283               	bcf	3,5	;RP0=0, select bank0
   550     0203  1303               	bcf	3,6	;RP1=0, select bank0
   551     0204  083C               	movf	_continuar,w
   552     0205  043D               	iorwf	_continuar+1,w
   553     0206  1903               	btfsc	3,2
   554     0207  2A09               	goto	u731
   555     0208  2A0A               	goto	u730
   556     0209                     u731:
   557     0209  2A02               	goto	l1333
   558     020A                     u730:
   559     020A                     l1335:
   560                           
   561                           ;adc-1.c: 132:         continuar = 0;
   562     020A  01BC               	clrf	_continuar
   563     020B  01BD               	clrf	_continuar+1
   564     020C                     l1337:
   565                           
   566                           ;adc-1.c: 133:         printf("%d\r\n", valor);
   567     020C  083B               	movf	_valor+1,w
   568     020D  00AF               	movwf	?_printf+1
   569     020E  083A               	movf	_valor,w
   570     020F  00AE               	movwf	?_printf
   571     0210  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   572     0211  120A  118A  203E  120A  118A  	fcall	_printf
   573     0216  2A02               	goto	l1333
   574     0217  120A  118A  280C   	ljmp	start
   575     021A                     __end_of_main:
   576                           
   577                           	psect	text1
   578     003E                     __ptext1:	
   579 ;; *************** function _printf *****************
   580 ;; Defined at:
   581 ;;		line 477 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;  f               1    wreg     PTR const unsigned char 
   584 ;;		 -> STR_1(5), 
   585 ;; Auto vars:     Size  Location     Type
   586 ;;  f               1   21[BANK0 ] PTR const unsigned char 
   587 ;;		 -> STR_1(5), 
   588 ;;  tmpval          4    0        struct .
   589 ;;  val             2   23[BANK0 ] unsigned int 
   590 ;;  cp              2    0        PTR const unsigned char 
   591 ;;  len             2    0        unsigned int 
   592 ;;  c               1   25[BANK0 ] unsigned char 
   593 ;;  prec            1   22[BANK0 ] char 
   594 ;;  flag            1   20[BANK0 ] unsigned char 
   595 ;;  ap              1   19[BANK0 ] PTR void [1]
   596 ;;		 -> ?_printf(2), 
   597 ;; Return value:  Size  Location     Type
   598 ;;                  2   14[BANK0 ] int 
   599 ;; Registers used:
   600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   606 ;;      Params:         0       2       0       0       0
   607 ;;      Locals:         0       7       0       0       0
   608 ;;      Temps:          0       3       0       0       0
   609 ;;      Totals:         0      12       0       0       0
   610 ;;Total ram usage:       12 bytes
   611 ;; Hardware stack levels used: 1
   612 ;; Hardware stack levels required when called: 2
   613 ;; This function calls:
   614 ;;		___lwdiv
   615 ;;		___lwmod
   616 ;;		_putch
   617 ;; This function is called by:
   618 ;;		_main
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622     003E                     _printf:	
   623                           ;psect for function _printf
   624                           
   625                           
   626                           ;incstack = 0
   627                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   628                           ;printf@f stored from wreg
   629     003E  1283               	bcf	3,5	;RP0=0, select bank0
   630     003F  1303               	bcf	3,6	;RP1=0, select bank0
   631     0040  00B5               	movwf	printf@f
   632     0041                     l1269:
   633                           
   634                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 477: printf(const char * f, .
      +                          ..);/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 478: {;/opt/microchip/xc8/
      +                          v2.40/pic/sources/c90/common/doprnt.c: 479:  va_list ap;;/opt/microchip/xc8/v2.40/pic/so
      +                          urces/c90/common/doprnt.c: 512:  char c;;/opt/microchip/xc8/v2.40/pic/sources/c90/common
      +                          /doprnt.c: 521:  signed char prec;;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprn
      +                          t.c: 525:  unsigned char flag;;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c:
      +                           543:  } tmpval;
   635     0041  302E               	movlw	(low (?_printf| 0))& (0+255)
   636     0042  00B3               	movwf	printf@ap
   637                           
   638                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 553:  while((c = *f++)) {
   639     0043  2900               	goto	l1315
   640     0044                     l1271:
   641                           
   642                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 555:   if(c != '%')
   643     0044  3025               	movlw	37
   644     0045  0639               	xorwf	printf@c,w
   645     0046  1903               	btfsc	3,2
   646     0047  2849               	goto	u661
   647     0048  284A               	goto	u660
   648     0049                     u661:
   649     0049  2851               	goto	l1275
   650     004A                     u660:
   651     004A                     l1273:
   652                           
   653                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 557:   {;/opt/microchip/xc8/v
      +                          2.40/pic/sources/c90/common/doprnt.c: 558:    (putch(c) );
   654     004A  0839               	movf	printf@c,w
   655     004B  120A  118A  2262  120A  118A  	fcall	_putch
   656                           
   657                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 559:    continue;
   658     0050  2900               	goto	l1315
   659     0051                     l1275:
   660                           
   661                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 565:   flag = 0;
   662     0051  01B4               	clrf	printf@flag
   663     0052                     l1279:	
   664                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 661:   switch(c = *f++) {
   665                           
   666     0052  3001               	movlw	1
   667     0053  07B5               	addwf	printf@f,f
   668     0054  30FF               	movlw	-1
   669     0055  0735               	addwf	printf@f,w
   670     0056  0084               	movwf	4
   671     0057  120A  118A  224D  120A  118A  	fcall	stringdir
   672     005C  00B9               	movwf	printf@c
   673     005D  00B0               	movwf	??_printf
   674     005E  01B1               	clrf	??_printf+1
   675                           
   676                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   677                           ; Switch size 1, requested type "simple"
   678                           ; Number of cases is 1, Range of values is 0 to 0
   679                           ; switch strategies available:
   680                           ; Name         Instructions Cycles
   681                           ; simple_byte            4     3 (average)
   682                           ; direct_byte           11     8 (fixed)
   683                           ; jumptable            260     6 (fixed)
   684                           ;	Chosen strategy is simple_byte
   685     005F  0831               	movf	??_printf+1,w
   686     0060  3A00               	xorlw	0	; case 0
   687     0061  1903               	skipnz
   688     0062  2864               	goto	l1359
   689     0063  2900               	goto	l1315
   690     0064                     l1359:
   691                           
   692                           ; Switch size 1, requested type "simple"
   693                           ; Number of cases is 3, Range of values is 0 to 105
   694                           ; switch strategies available:
   695                           ; Name         Instructions Cycles
   696                           ; simple_byte           10     6 (average)
   697                           ; jumptable            260     6 (fixed)
   698                           ;	Chosen strategy is simple_byte
   699     0064  0830               	movf	??_printf,w
   700     0065  3A00               	xorlw	0	; case 0
   701     0066  1903               	skipnz
   702     0067  2912               	goto	l209
   703     0068  3A64               	xorlw	100	; case 100
   704     0069  1903               	skipnz
   705     006A  286F               	goto	l1281
   706     006B  3A0D               	xorlw	13	; case 105
   707     006C  1903               	skipnz
   708     006D  286F               	goto	l1281
   709     006E  2900               	goto	l1315
   710     006F                     l1281:
   711                           
   712                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1279:   {;/opt/microchip/xc8/
      +                          v2.40/pic/sources/c90/common/doprnt.c: 1285:     val = (unsigned int)(*(int *)__va_arg((
      +                          *(int **)ap), (int)0));
   713     006F  0833               	movf	printf@ap,w
   714     0070  0084               	movwf	4
   715     0071  1383               	bcf	3,7	;select IRP bank0
   716     0072  0800               	movf	0,w
   717     0073  00B7               	movwf	printf@val
   718     0074  0A84               	incf	4,f
   719     0075  0800               	movf	0,w
   720     0076  00B8               	movwf	printf@val+1
   721     0077                     l1283:
   722     0077  3002               	movlw	2
   723     0078  00B0               	movwf	??_printf
   724     0079  0830               	movf	??_printf,w
   725     007A  07B3               	addwf	printf@ap,f
   726     007B                     l1285:
   727                           
   728                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1287:    if((int)val < 0) {
   729     007B  1FB8               	btfss	printf@val+1,7
   730     007C  287E               	goto	u671
   731     007D  287F               	goto	u670
   732     007E                     u671:
   733     007E  2888               	goto	l1291
   734     007F                     u670:
   735     007F                     l1287:
   736                           
   737                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1288:     flag |= 0x03;
   738     007F  3003               	movlw	3
   739     0080  00B0               	movwf	??_printf
   740     0081  0830               	movf	??_printf,w
   741     0082  04B4               	iorwf	printf@flag,f
   742     0083                     l1289:
   743                           
   744                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1289:     val = -val;
   745     0083  09B7               	comf	printf@val,f
   746     0084  09B8               	comf	printf@val+1,f
   747     0085  0AB7               	incf	printf@val,f
   748     0086  1903               	skipnz
   749     0087  0AB8               	incf	printf@val+1,f
   750     0088                     l1291:
   751                           
   752                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1292:   };/opt/microchip/xc8/
      +                          v2.40/pic/sources/c90/common/doprnt.c: 1331:    for(c = 1 ; c != sizeof dpowers/sizeof d
      +                          powers[0] ; c++)
   753     0088  01B9               	clrf	printf@c
   754     0089  0AB9               	incf	printf@c,f
   755     008A                     l1297:
   756                           
   757                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1332:     if(val < dpowers[c]
      +                          )
   758     008A  0839               	movf	printf@c,w
   759     008B  00B0               	movwf	??_printf
   760     008C  0730               	addwf	??_printf,w
   761     008D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   762     008E  0084               	movwf	4
   763     008F  120A  118A  224D  120A  118A  	fcall	stringdir
   764     0094  00B1               	movwf	??_printf+1
   765     0095  120A  118A  224D  120A  118A  	fcall	stringdir
   766     009A  00B2               	movwf	??_printf+2
   767     009B  0832               	movf	??_printf+2,w
   768     009C  0238               	subwf	printf@val+1,w
   769     009D  1D03               	skipz
   770     009E  28A1               	goto	u685
   771     009F  0831               	movf	??_printf+1,w
   772     00A0  0237               	subwf	printf@val,w
   773     00A1                     u685:
   774     00A1  1803               	skipnc
   775     00A2  28A4               	goto	u681
   776     00A3  28A5               	goto	u680
   777     00A4                     u681:
   778     00A4  28A6               	goto	l1301
   779     00A5                     u680:
   780     00A5  28B0               	goto	l1303
   781     00A6                     l1301:
   782     00A6  3001               	movlw	1
   783     00A7  00B0               	movwf	??_printf
   784     00A8  0830               	movf	??_printf,w
   785     00A9  07B9               	addwf	printf@c,f
   786     00AA  3005               	movlw	5
   787     00AB  0639               	xorwf	printf@c,w
   788     00AC  1D03               	btfss	3,2
   789     00AD  28AF               	goto	u691
   790     00AE  28B0               	goto	u690
   791     00AF                     u691:
   792     00AF  288A               	goto	l1297
   793     00B0                     u690:
   794     00B0                     l1303:
   795                           
   796                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1448:   {;/opt/microchip/xc8/
      +                          v2.40/pic/sources/c90/common/doprnt.c: 1464:    if(flag & 0x03)
   797     00B0  0834               	movf	printf@flag,w
   798     00B1  3903               	andlw	3
   799     00B2  1903               	btfsc	3,2
   800     00B3  28B5               	goto	u701
   801     00B4  28B6               	goto	u700
   802     00B5                     u701:
   803     00B5  28BC               	goto	l1307
   804     00B6                     u700:
   805     00B6                     l1305:
   806                           
   807                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1465:     (putch('-') );
   808     00B6  302D               	movlw	45
   809     00B7  120A  118A  2262  120A  118A  	fcall	_putch
   810     00BC                     l1307:
   811                           
   812                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1495:   };/opt/microchip/xc8/
      +                          v2.40/pic/sources/c90/common/doprnt.c: 1498:   prec = c;
   813     00BC  1283               	bcf	3,5	;RP0=0, select bank0
   814     00BD  1303               	bcf	3,6	;RP1=0, select bank0
   815     00BE  0839               	movf	printf@c,w
   816     00BF  00B6               	movwf	printf@prec
   817                           
   818                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1500:   while(prec--) {
   819     00C0  28F5               	goto	l1313
   820     00C1                     l1309:
   821                           
   822                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1504:    {;/opt/microchip/xc8
      +                          /v2.40/pic/sources/c90/common/doprnt.c: 1515:     c = (val / dpowers[(unsigned char)prec
      +                          ]) % 10 + '0';
   823     00C1  300A               	movlw	10
   824     00C2  00A8               	movwf	___lwmod@divisor
   825     00C3  3000               	movlw	0
   826     00C4  00A9               	movwf	___lwmod@divisor+1
   827     00C5  0836               	movf	printf@prec,w
   828     00C6  00B0               	movwf	??_printf
   829     00C7  0730               	addwf	??_printf,w
   830     00C8  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
   831     00C9  0084               	movwf	4
   832     00CA  120A  118A  224D  120A  118A  	fcall	stringdir
   833     00CF  00A0               	movwf	___lwdiv@divisor
   834     00D0  120A  118A  224D  120A  118A  	fcall	stringdir
   835     00D5  00A1               	movwf	___lwdiv@divisor+1
   836     00D6  0838               	movf	printf@val+1,w
   837     00D7  00A3               	movwf	___lwdiv@dividend+1
   838     00D8  0837               	movf	printf@val,w
   839     00D9  00A2               	movwf	___lwdiv@dividend
   840     00DA  120A  118A  216B  120A  118A  	fcall	___lwdiv
   841     00DF  1283               	bcf	3,5	;RP0=0, select bank0
   842     00E0  1303               	bcf	3,6	;RP1=0, select bank0
   843     00E1  0821               	movf	?___lwdiv+1,w
   844     00E2  00AB               	movwf	___lwmod@dividend+1
   845     00E3  0820               	movf	?___lwdiv,w
   846     00E4  00AA               	movwf	___lwmod@dividend
   847     00E5  120A  118A  21B1  120A  118A  	fcall	___lwmod
   848     00EA  1283               	bcf	3,5	;RP0=0, select bank0
   849     00EB  1303               	bcf	3,6	;RP1=0, select bank0
   850     00EC  0828               	movf	?___lwmod,w
   851     00ED  3E30               	addlw	48
   852     00EE  00B9               	movwf	printf@c
   853     00EF                     l1311:
   854                           
   855                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1549:    };/opt/microchip/xc8
      +                          /v2.40/pic/sources/c90/common/doprnt.c: 1550:    (putch(c) );
   856     00EF  0839               	movf	printf@c,w
   857     00F0  120A  118A  2262  120A  118A  	fcall	_putch
   858     00F5                     l1313:
   859                           
   860                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 1500:   while(prec--) {
   861     00F5  30FF               	movlw	255
   862     00F6  1283               	bcf	3,5	;RP0=0, select bank0
   863     00F7  1303               	bcf	3,6	;RP1=0, select bank0
   864     00F8  00B0               	movwf	??_printf
   865     00F9  0830               	movf	??_printf,w
   866     00FA  07B6               	addwf	printf@prec,f
   867     00FB  0A36               	incf	printf@prec,w
   868     00FC  1D03               	btfss	3,2
   869     00FD  28FF               	goto	u711
   870     00FE  2900               	goto	u710
   871     00FF                     u711:
   872     00FF  28C1               	goto	l1309
   873     0100                     u710:
   874     0100                     l1315:
   875                           
   876                           ;/opt/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c: 553:  while((c = *f++)) {
   877     0100  3001               	movlw	1
   878     0101  1283               	bcf	3,5	;RP0=0, select bank0
   879     0102  1303               	bcf	3,6	;RP1=0, select bank0
   880     0103  07B5               	addwf	printf@f,f
   881     0104  30FF               	movlw	-1
   882     0105  0735               	addwf	printf@f,w
   883     0106  0084               	movwf	4
   884     0107  120A  118A  224D  120A  118A  	fcall	stringdir
   885     010C  00B9               	movwf	printf@c
   886     010D  0839               	movf	printf@c,w
   887     010E  1D03               	btfss	3,2
   888     010F  2911               	goto	u721
   889     0110  2912               	goto	u720
   890     0111                     u721:
   891     0111  2844               	goto	l1271
   892     0112                     u720:
   893     0112                     l209:
   894     0112  0008               	return
   895     0113                     __end_of_printf:
   896                           
   897                           	psect	text2
   898     0262                     __ptext2:	
   899 ;; *************** function _putch *****************
   900 ;; Defined at:
   901 ;;		line 113 in file "adc-1.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;  c               1    wreg     unsigned char 
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  c               1    0[BANK0 ] unsigned char 
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   915 ;;      Params:         0       0       0       0       0
   916 ;;      Locals:         0       1       0       0       0
   917 ;;      Temps:          0       0       0       0       0
   918 ;;      Totals:         0       1       0       0       0
   919 ;;Total ram usage:        1 bytes
   920 ;; Hardware stack levels used: 1
   921 ;; Hardware stack levels required when called: 1
   922 ;; This function calls:
   923 ;;		Nothing
   924 ;; This function is called by:
   925 ;;		_printf
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929     0262                     _putch:	
   930                           ;psect for function _putch
   931                           
   932                           
   933                           ;incstack = 0
   934                           ; Regs used in _putch: [wreg]
   935                           ;putch@c stored from wreg
   936     0262  1283               	bcf	3,5	;RP0=0, select bank0
   937     0263  1303               	bcf	3,6	;RP1=0, select bank0
   938     0264  00A0               	movwf	putch@c
   939     0265                     l1163:
   940     0265                     l81:	
   941                           ;adc-1.c: 117:     }
   942                           
   943                           
   944                           ;adc-1.c: 114:     while (!TXIF && !TXSTAbits.TRMT) {
   945     0265  1283               	bcf	3,5	;RP0=0, select bank0
   946     0266  1A0C               	btfsc	12,4	;volatile
   947     0267  2A69               	goto	u511
   948     0268  2A6A               	goto	u510
   949     0269                     u511:
   950     0269  2A70               	goto	l1167
   951     026A                     u510:
   952     026A                     l1165:
   953     026A  1683               	bsf	3,5	;RP0=1, select bank1
   954     026B  1303               	bcf	3,6	;RP1=0, select bank1
   955     026C  1C98               	btfss	24,1	;volatile
   956     026D  2A6F               	goto	u521
   957     026E  2A70               	goto	u520
   958     026F                     u521:
   959     026F  2A65               	goto	l81
   960     0270                     u520:
   961     0270                     l1167:
   962                           
   963                           ;adc-1.c: 118:     TXREG = c;
   964     0270  1283               	bcf	3,5	;RP0=0, select bank0
   965     0271  0820               	movf	putch@c,w
   966     0272  0099               	movwf	25	;volatile
   967     0273                     l86:
   968     0273  0008               	return
   969     0274                     __end_of_putch:
   970                           
   971                           	psect	text3
   972     01B1                     __ptext3:	
   973 ;; *************** function ___lwmod *****************
   974 ;; Defined at:
   975 ;;		line 5 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/lwmod.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;  divisor         2    8[BANK0 ] unsigned int 
   978 ;;  dividend        2   10[BANK0 ] unsigned int 
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  counter         1   13[BANK0 ] unsigned char 
   981 ;; Return value:  Size  Location     Type
   982 ;;                  2    8[BANK0 ] unsigned int 
   983 ;; Registers used:
   984 ;;		wreg, status,2, status,0
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   990 ;;      Params:         0       4       0       0       0
   991 ;;      Locals:         0       1       0       0       0
   992 ;;      Temps:          0       1       0       0       0
   993 ;;      Totals:         0       6       0       0       0
   994 ;;Total ram usage:        6 bytes
   995 ;; Hardware stack levels used: 1
   996 ;; Hardware stack levels required when called: 1
   997 ;; This function calls:
   998 ;;		Nothing
   999 ;; This function is called by:
  1000 ;;		_printf
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004     01B1                     ___lwmod:	
  1005                           ;psect for function ___lwmod
  1006                           
  1007     01B1                     l1195:	
  1008                           ;incstack = 0
  1009                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1010                           
  1011     01B1  1283               	bcf	3,5	;RP0=0, select bank0
  1012     01B2  1303               	bcf	3,6	;RP1=0, select bank0
  1013     01B3  0828               	movf	___lwmod@divisor,w
  1014     01B4  0429               	iorwf	___lwmod@divisor+1,w
  1015     01B5  1903               	btfsc	3,2
  1016     01B6  29B8               	goto	u601
  1017     01B7  29B9               	goto	u600
  1018     01B8                     u601:
  1019     01B8  29E8               	goto	l1213
  1020     01B9                     u600:
  1021     01B9                     l1197:
  1022     01B9  01AD               	clrf	___lwmod@counter
  1023     01BA  0AAD               	incf	___lwmod@counter,f
  1024     01BB  29C7               	goto	l1203
  1025     01BC                     l1199:
  1026     01BC  3001               	movlw	1
  1027     01BD                     u615:
  1028     01BD  1003               	clrc
  1029     01BE  0DA8               	rlf	___lwmod@divisor,f
  1030     01BF  0DA9               	rlf	___lwmod@divisor+1,f
  1031     01C0  3EFF               	addlw	-1
  1032     01C1  1D03               	skipz
  1033     01C2  29BD               	goto	u615
  1034     01C3                     l1201:
  1035     01C3  3001               	movlw	1
  1036     01C4  00AC               	movwf	??___lwmod
  1037     01C5  082C               	movf	??___lwmod,w
  1038     01C6  07AD               	addwf	___lwmod@counter,f
  1039     01C7                     l1203:
  1040     01C7  1FA9               	btfss	___lwmod@divisor+1,7
  1041     01C8  29CA               	goto	u621
  1042     01C9  29CB               	goto	u620
  1043     01CA                     u621:
  1044     01CA  29BC               	goto	l1199
  1045     01CB                     u620:
  1046     01CB                     l1205:
  1047     01CB  0829               	movf	___lwmod@divisor+1,w
  1048     01CC  022B               	subwf	___lwmod@dividend+1,w
  1049     01CD  1D03               	skipz
  1050     01CE  29D1               	goto	u635
  1051     01CF  0828               	movf	___lwmod@divisor,w
  1052     01D0  022A               	subwf	___lwmod@dividend,w
  1053     01D1                     u635:
  1054     01D1  1C03               	skipc
  1055     01D2  29D4               	goto	u631
  1056     01D3  29D5               	goto	u630
  1057     01D4                     u631:
  1058     01D4  29DB               	goto	l1209
  1059     01D5                     u630:
  1060     01D5                     l1207:
  1061     01D5  0828               	movf	___lwmod@divisor,w
  1062     01D6  02AA               	subwf	___lwmod@dividend,f
  1063     01D7  0829               	movf	___lwmod@divisor+1,w
  1064     01D8  1C03               	skipc
  1065     01D9  03AB               	decf	___lwmod@dividend+1,f
  1066     01DA  02AB               	subwf	___lwmod@dividend+1,f
  1067     01DB                     l1209:
  1068     01DB  3001               	movlw	1
  1069     01DC                     u645:
  1070     01DC  1003               	clrc
  1071     01DD  0CA9               	rrf	___lwmod@divisor+1,f
  1072     01DE  0CA8               	rrf	___lwmod@divisor,f
  1073     01DF  3EFF               	addlw	-1
  1074     01E0  1D03               	skipz
  1075     01E1  29DC               	goto	u645
  1076     01E2                     l1211:
  1077     01E2  3001               	movlw	1
  1078     01E3  02AD               	subwf	___lwmod@counter,f
  1079     01E4  1D03               	btfss	3,2
  1080     01E5  29E7               	goto	u651
  1081     01E6  29E8               	goto	u650
  1082     01E7                     u651:
  1083     01E7  29CB               	goto	l1205
  1084     01E8                     u650:
  1085     01E8                     l1213:
  1086     01E8  082B               	movf	___lwmod@dividend+1,w
  1087     01E9  00A9               	movwf	?___lwmod+1
  1088     01EA  082A               	movf	___lwmod@dividend,w
  1089     01EB  00A8               	movwf	?___lwmod
  1090     01EC                     l495:
  1091     01EC  0008               	return
  1092     01ED                     __end_of___lwmod:
  1093                           
  1094                           	psect	text4
  1095     016B                     __ptext4:	
  1096 ;; *************** function ___lwdiv *****************
  1097 ;; Defined at:
  1098 ;;		line 5 in file "/opt/microchip/xc8/v2.40/pic/sources/c90/common/lwdiv.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;  divisor         2    0[BANK0 ] unsigned int 
  1101 ;;  dividend        2    2[BANK0 ] unsigned int 
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;  quotient        2    6[BANK0 ] unsigned int 
  1104 ;;  counter         1    5[BANK0 ] unsigned char 
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  2    0[BANK0 ] unsigned int 
  1107 ;; Registers used:
  1108 ;;		wreg, status,2, status,0
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1114 ;;      Params:         0       4       0       0       0
  1115 ;;      Locals:         0       3       0       0       0
  1116 ;;      Temps:          0       1       0       0       0
  1117 ;;      Totals:         0       8       0       0       0
  1118 ;;Total ram usage:        8 bytes
  1119 ;; Hardware stack levels used: 1
  1120 ;; Hardware stack levels required when called: 1
  1121 ;; This function calls:
  1122 ;;		Nothing
  1123 ;; This function is called by:
  1124 ;;		_printf
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128     016B                     ___lwdiv:	
  1129                           ;psect for function ___lwdiv
  1130                           
  1131     016B                     l1169:	
  1132                           ;incstack = 0
  1133                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1134                           
  1135     016B  1283               	bcf	3,5	;RP0=0, select bank0
  1136     016C  1303               	bcf	3,6	;RP1=0, select bank0
  1137     016D  01A6               	clrf	___lwdiv@quotient
  1138     016E  01A7               	clrf	___lwdiv@quotient+1
  1139     016F                     l1171:
  1140     016F  0820               	movf	___lwdiv@divisor,w
  1141     0170  0421               	iorwf	___lwdiv@divisor+1,w
  1142     0171  1903               	btfsc	3,2
  1143     0172  2974               	goto	u531
  1144     0173  2975               	goto	u530
  1145     0174                     u531:
  1146     0174  29AC               	goto	l1191
  1147     0175                     u530:
  1148     0175                     l1173:
  1149     0175  01A5               	clrf	___lwdiv@counter
  1150     0176  0AA5               	incf	___lwdiv@counter,f
  1151     0177  2983               	goto	l1179
  1152     0178                     l1175:
  1153     0178  3001               	movlw	1
  1154     0179                     u545:
  1155     0179  1003               	clrc
  1156     017A  0DA0               	rlf	___lwdiv@divisor,f
  1157     017B  0DA1               	rlf	___lwdiv@divisor+1,f
  1158     017C  3EFF               	addlw	-1
  1159     017D  1D03               	skipz
  1160     017E  2979               	goto	u545
  1161     017F                     l1177:
  1162     017F  3001               	movlw	1
  1163     0180  00A4               	movwf	??___lwdiv
  1164     0181  0824               	movf	??___lwdiv,w
  1165     0182  07A5               	addwf	___lwdiv@counter,f
  1166     0183                     l1179:
  1167     0183  1FA1               	btfss	___lwdiv@divisor+1,7
  1168     0184  2986               	goto	u551
  1169     0185  2987               	goto	u550
  1170     0186                     u551:
  1171     0186  2978               	goto	l1175
  1172     0187                     u550:
  1173     0187                     l1181:
  1174     0187  3001               	movlw	1
  1175     0188                     u565:
  1176     0188  1003               	clrc
  1177     0189  0DA6               	rlf	___lwdiv@quotient,f
  1178     018A  0DA7               	rlf	___lwdiv@quotient+1,f
  1179     018B  3EFF               	addlw	-1
  1180     018C  1D03               	skipz
  1181     018D  2988               	goto	u565
  1182     018E  0821               	movf	___lwdiv@divisor+1,w
  1183     018F  0223               	subwf	___lwdiv@dividend+1,w
  1184     0190  1D03               	skipz
  1185     0191  2994               	goto	u575
  1186     0192  0820               	movf	___lwdiv@divisor,w
  1187     0193  0222               	subwf	___lwdiv@dividend,w
  1188     0194                     u575:
  1189     0194  1C03               	skipc
  1190     0195  2997               	goto	u571
  1191     0196  2998               	goto	u570
  1192     0197                     u571:
  1193     0197  299F               	goto	l1187
  1194     0198                     u570:
  1195     0198                     l1183:
  1196     0198  0820               	movf	___lwdiv@divisor,w
  1197     0199  02A2               	subwf	___lwdiv@dividend,f
  1198     019A  0821               	movf	___lwdiv@divisor+1,w
  1199     019B  1C03               	skipc
  1200     019C  03A3               	decf	___lwdiv@dividend+1,f
  1201     019D  02A3               	subwf	___lwdiv@dividend+1,f
  1202     019E                     l1185:
  1203     019E  1426               	bsf	___lwdiv@quotient,0
  1204     019F                     l1187:
  1205     019F  3001               	movlw	1
  1206     01A0                     u585:
  1207     01A0  1003               	clrc
  1208     01A1  0CA1               	rrf	___lwdiv@divisor+1,f
  1209     01A2  0CA0               	rrf	___lwdiv@divisor,f
  1210     01A3  3EFF               	addlw	-1
  1211     01A4  1D03               	skipz
  1212     01A5  29A0               	goto	u585
  1213     01A6                     l1189:
  1214     01A6  3001               	movlw	1
  1215     01A7  02A5               	subwf	___lwdiv@counter,f
  1216     01A8  1D03               	btfss	3,2
  1217     01A9  29AB               	goto	u591
  1218     01AA  29AC               	goto	u590
  1219     01AB                     u591:
  1220     01AB  2987               	goto	l1181
  1221     01AC                     u590:
  1222     01AC                     l1191:
  1223     01AC  0827               	movf	___lwdiv@quotient+1,w
  1224     01AD  00A1               	movwf	?___lwdiv+1
  1225     01AE  0826               	movf	___lwdiv@quotient,w
  1226     01AF  00A0               	movwf	?___lwdiv
  1227     01B0                     l485:
  1228     01B0  0008               	return
  1229     01B1                     __end_of___lwdiv:
  1230                           
  1231                           	psect	text5
  1232     021A                     __ptext5:	
  1233 ;; *************** function _init_uart *****************
  1234 ;; Defined at:
  1235 ;;		line 90 in file "adc-1.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;		None
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;		None
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  1    wreg      void 
  1242 ;; Registers used:
  1243 ;;		wreg, status,2
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1249 ;;      Params:         0       0       0       0       0
  1250 ;;      Locals:         0       0       0       0       0
  1251 ;;      Temps:          0       0       0       0       0
  1252 ;;      Totals:         0       0       0       0       0
  1253 ;;Total ram usage:        0 bytes
  1254 ;; Hardware stack levels used: 1
  1255 ;; Hardware stack levels required when called: 1
  1256 ;; This function calls:
  1257 ;;		Nothing
  1258 ;; This function is called by:
  1259 ;;		_main
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263     021A                     _init_uart:	
  1264                           ;psect for function _init_uart
  1265                           
  1266     021A                     l1247:	
  1267                           ;incstack = 0
  1268                           ; Regs used in _init_uart: [wreg+status,2]
  1269                           
  1270                           
  1271                           ;adc-1.c: 91:     TXSTAbits.BRGH = 0;
  1272     021A  1683               	bsf	3,5	;RP0=1, select bank1
  1273     021B  1303               	bcf	3,6	;RP1=0, select bank1
  1274     021C  1118               	bcf	24,2	;volatile
  1275                           
  1276                           ;adc-1.c: 92:     BAUDCTLbits.BRG16 = 0;
  1277     021D  1683               	bsf	3,5	;RP0=1, select bank3
  1278     021E  1703               	bsf	3,6	;RP1=1, select bank3
  1279     021F  1187               	bcf	7,3	;volatile
  1280     0220                     l1249:
  1281                           
  1282                           ;adc-1.c: 95:     SPBRGH = 0;
  1283     0220  1683               	bsf	3,5	;RP0=1, select bank1
  1284     0221  1303               	bcf	3,6	;RP1=0, select bank1
  1285     0222  019A               	clrf	26	;volatile
  1286     0223                     l1251:
  1287                           
  1288                           ;adc-1.c: 96:     SPBRG = 32;
  1289     0223  3020               	movlw	32
  1290     0224  0099               	movwf	25	;volatile
  1291     0225                     l1253:
  1292                           
  1293                           ;adc-1.c: 98:     TXSTAbits.SYNC = 0;
  1294     0225  1218               	bcf	24,4	;volatile
  1295     0226                     l1255:
  1296                           
  1297                           ;adc-1.c: 99:     TXSTAbits.TX9 = 0;
  1298     0226  1318               	bcf	24,6	;volatile
  1299     0227                     l1257:
  1300                           
  1301                           ;adc-1.c: 100:     RCSTAbits.RX9 = 0;
  1302     0227  1283               	bcf	3,5	;RP0=0, select bank0
  1303     0228  1303               	bcf	3,6	;RP1=0, select bank0
  1304     0229  1318               	bcf	24,6	;volatile
  1305     022A                     l1259:
  1306                           
  1307                           ;adc-1.c: 103:     PIE1bits.TXIE = 0;
  1308     022A  1683               	bsf	3,5	;RP0=1, select bank1
  1309     022B  1303               	bcf	3,6	;RP1=0, select bank1
  1310     022C  120C               	bcf	12,4	;volatile
  1311     022D                     l1261:
  1312                           
  1313                           ;adc-1.c: 104:     PIE1bits.RCIE = 0;
  1314     022D  128C               	bcf	12,5	;volatile
  1315     022E                     l1263:
  1316                           
  1317                           ;adc-1.c: 106:     RCSTAbits.SPEN = 1;
  1318     022E  1283               	bcf	3,5	;RP0=0, select bank0
  1319     022F  1303               	bcf	3,6	;RP1=0, select bank0
  1320     0230  1798               	bsf	24,7	;volatile
  1321     0231                     l1265:
  1322                           
  1323                           ;adc-1.c: 108:     TXSTAbits.TXEN = 0;
  1324     0231  1683               	bsf	3,5	;RP0=1, select bank1
  1325     0232  1303               	bcf	3,6	;RP1=0, select bank1
  1326     0233  1298               	bcf	24,5	;volatile
  1327     0234                     l1267:
  1328                           
  1329                           ;adc-1.c: 109:     TXSTAbits.TXEN = 1;
  1330     0234  1698               	bsf	24,5	;volatile
  1331     0235                     l78:
  1332     0235  0008               	return
  1333     0236                     __end_of_init_uart:
  1334                           
  1335                           	psect	text6
  1336     0274                     __ptext6:	
  1337 ;; *************** function _init_TMR1 *****************
  1338 ;; Defined at:
  1339 ;;		line 37 in file "adc-1.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;		None
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;		None
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1    wreg      void 
  1346 ;; Registers used:
  1347 ;;		wreg, status,2, status,0
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1353 ;;      Params:         0       0       0       0       0
  1354 ;;      Locals:         0       0       0       0       0
  1355 ;;      Temps:          0       0       0       0       0
  1356 ;;      Totals:         0       0       0       0       0
  1357 ;;Total ram usage:        0 bytes
  1358 ;; Hardware stack levels used: 1
  1359 ;; Hardware stack levels required when called: 1
  1360 ;; This function calls:
  1361 ;;		Nothing
  1362 ;; This function is called by:
  1363 ;;		_main
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367     0274                     _init_TMR1:	
  1368                           ;psect for function _init_TMR1
  1369                           
  1370     0274                     l1217:	
  1371                           ;incstack = 0
  1372                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
  1373                           
  1374                           
  1375                           ;adc-1.c: 38:     TMR1H = eltimer1H;
  1376     0274  087A               	movf	_eltimer1H,w
  1377     0275  1283               	bcf	3,5	;RP0=0, select bank0
  1378     0276  1303               	bcf	3,6	;RP1=0, select bank0
  1379     0277  008F               	movwf	15	;volatile
  1380                           
  1381                           ;adc-1.c: 39:     TMR1L = eltimer1L;
  1382     0278  0879               	movf	_eltimer1L,w
  1383     0279  008E               	movwf	14	;volatile
  1384     027A                     l1219:
  1385                           
  1386                           ;adc-1.c: 40:     T1CONbits.TMR1CS = 0;
  1387     027A  1090               	bcf	16,1	;volatile
  1388     027B                     l1221:
  1389                           
  1390                           ;adc-1.c: 42:     T1CONbits.T1CKPS = 0b11;
  1391     027B  3030               	movlw	48
  1392     027C  0490               	iorwf	16,f	;volatile
  1393     027D                     l1223:
  1394                           
  1395                           ;adc-1.c: 43:     T1CONbits.TMR1GE = 0;
  1396     027D  1310               	bcf	16,6	;volatile
  1397     027E                     l1225:
  1398                           
  1399                           ;adc-1.c: 44:     PIE1bits.TMR1IE = 1;
  1400     027E  1683               	bsf	3,5	;RP0=1, select bank1
  1401     027F  1303               	bcf	3,6	;RP1=0, select bank1
  1402     0280  140C               	bsf	12,0	;volatile
  1403     0281                     l1227:
  1404                           
  1405                           ;adc-1.c: 45:     T1CONbits.TMR1ON = 1;
  1406     0281  1283               	bcf	3,5	;RP0=0, select bank0
  1407     0282  1303               	bcf	3,6	;RP1=0, select bank0
  1408     0283  1410               	bsf	16,0	;volatile
  1409     0284                     l63:
  1410     0284  0008               	return
  1411     0285                     __end_of_init_TMR1:
  1412                           
  1413                           	psect	text7
  1414     0236                     __ptext7:	
  1415 ;; *************** function _init_ADC *****************
  1416 ;; Defined at:
  1417 ;;		line 48 in file "adc-1.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;		None
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;		None
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      void 
  1424 ;; Registers used:
  1425 ;;		wreg, status,2, status,0
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1431 ;;      Params:         0       0       0       0       0
  1432 ;;      Locals:         0       0       0       0       0
  1433 ;;      Temps:          0       0       0       0       0
  1434 ;;      Totals:         0       0       0       0       0
  1435 ;;Total ram usage:        0 bytes
  1436 ;; Hardware stack levels used: 1
  1437 ;; Hardware stack levels required when called: 1
  1438 ;; This function calls:
  1439 ;;		Nothing
  1440 ;; This function is called by:
  1441 ;;		_main
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445     0236                     _init_ADC:	
  1446                           ;psect for function _init_ADC
  1447                           
  1448     0236                     l1229:	
  1449                           ;incstack = 0
  1450                           ; Regs used in _init_ADC: [wreg+status,2+status,0]
  1451                           
  1452                           
  1453                           ;adc-1.c: 49:     TRISA =1;
  1454     0236  3001               	movlw	1
  1455     0237  1683               	bsf	3,5	;RP0=1, select bank1
  1456     0238  1303               	bcf	3,6	;RP1=0, select bank1
  1457     0239  0085               	movwf	5	;volatile
  1458     023A                     l1231:
  1459                           
  1460                           ;adc-1.c: 50:     ANSELbits.ANS0 = 1;
  1461     023A  1683               	bsf	3,5	;RP0=1, select bank3
  1462     023B  1703               	bsf	3,6	;RP1=1, select bank3
  1463     023C  1408               	bsf	8,0	;volatile
  1464     023D                     l1233:
  1465                           
  1466                           ;adc-1.c: 51:     ADCON0bits.ADCS = 0b10;
  1467     023D  1283               	bcf	3,5	;RP0=0, select bank0
  1468     023E  1303               	bcf	3,6	;RP1=0, select bank0
  1469     023F  081F               	movf	31,w	;volatile
  1470     0240  393F               	andlw	-193
  1471     0241  3880               	iorlw	128
  1472     0242  009F               	movwf	31	;volatile
  1473     0243                     l1235:
  1474                           
  1475                           ;adc-1.c: 52:     ADCON0bits.CHS = 0b0000;
  1476     0243  30C3               	movlw	-61
  1477     0244  059F               	andwf	31,f	;volatile
  1478     0245                     l1237:
  1479                           
  1480                           ;adc-1.c: 53:     ADCON0bits.ADON = 1;
  1481     0245  141F               	bsf	31,0	;volatile
  1482     0246                     l1239:
  1483                           
  1484                           ;adc-1.c: 54:     ADCON1bits.ADFM = 1;
  1485     0246  1683               	bsf	3,5	;RP0=1, select bank1
  1486     0247  1303               	bcf	3,6	;RP1=0, select bank1
  1487     0248  179F               	bsf	31,7	;volatile
  1488     0249                     l1241:
  1489                           
  1490                           ;adc-1.c: 56:     ADCON1bits.VCFG1 = 0;
  1491     0249  129F               	bcf	31,5	;volatile
  1492     024A                     l1243:
  1493                           
  1494                           ;adc-1.c: 57:     ADCON1bits.VCFG0 = 0;
  1495     024A  121F               	bcf	31,4	;volatile
  1496     024B                     l1245:
  1497                           
  1498                           ;adc-1.c: 59:     PIE1bits.ADIE = 1;
  1499     024B  170C               	bsf	12,6	;volatile
  1500     024C                     l66:
  1501     024C  0008               	return
  1502     024D                     __end_of_init_ADC:
  1503                           
  1504                           	psect	text8
  1505     0113                     __ptext8:	
  1506 ;; *************** function _TRAT_INT *****************
  1507 ;; Defined at:
  1508 ;;		line 63 in file "adc-1.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;		None
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;		None
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  1    wreg      void 
  1515 ;; Registers used:
  1516 ;;		wreg, status,2, status,0
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1522 ;;      Params:         0       0       0       0       0
  1523 ;;      Locals:         0       0       0       0       0
  1524 ;;      Temps:          6       0       0       0       0
  1525 ;;      Totals:         6       0       0       0       0
  1526 ;;Total ram usage:        6 bytes
  1527 ;; Hardware stack levels used: 1
  1528 ;; This function calls:
  1529 ;;		Nothing
  1530 ;; This function is called by:
  1531 ;;		Interrupt level 1
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535     0113                     _TRAT_INT:	
  1536                           ;psect for function _TRAT_INT
  1537                           
  1538     0113                     i1l1099:
  1539                           
  1540                           ;adc-1.c: 64:     if (PIR1bits.TMR1IF == 1)
  1541     0113  1283               	bcf	3,5	;RP0=0, select bank0
  1542     0114  1303               	bcf	3,6	;RP1=0, select bank0
  1543     0115  1C0C               	btfss	12,0	;volatile
  1544     0116  2918               	goto	u48_21
  1545     0117  2919               	goto	u48_20
  1546     0118                     u48_21:
  1547     0118  293D               	goto	i1l71
  1548     0119                     u48_20:
  1549     0119                     i1l1101:
  1550                           
  1551                           ;adc-1.c: 65:     {;adc-1.c: 67:         if (copias >= los5msen1s)
  1552     0119  0877               	movf	_copias+1,w
  1553     011A  3A80               	xorlw	128
  1554     011B  00F0               	movwf	??_TRAT_INT
  1555     011C  083F               	movf	_los5msen1s+1,w
  1556     011D  3A80               	xorlw	128
  1557     011E  0270               	subwf	??_TRAT_INT,w
  1558     011F  1D03               	skipz
  1559     0120  2923               	goto	u49_25
  1560     0121  083E               	movf	_los5msen1s,w
  1561     0122  0276               	subwf	_copias,w
  1562     0123                     u49_25:
  1563     0123  1C03               	skipc
  1564     0124  2926               	goto	u49_21
  1565     0125  2927               	goto	u49_20
  1566     0126                     u49_21:
  1567     0126  2931               	goto	i1l1111
  1568     0127                     u49_20:
  1569     0127                     i1l1103:
  1570                           
  1571                           ;adc-1.c: 68:         {;adc-1.c: 69:             copias = 0;
  1572     0127  01F6               	clrf	_copias
  1573     0128  01F7               	clrf	_copias+1
  1574     0129                     i1l1105:
  1575                           
  1576                           ;adc-1.c: 70:             TMR1H = eltimer1H;
  1577     0129  087A               	movf	_eltimer1H,w
  1578     012A  1283               	bcf	3,5	;RP0=0, select bank0
  1579     012B  1303               	bcf	3,6	;RP1=0, select bank0
  1580     012C  008F               	movwf	15	;volatile
  1581     012D                     i1l1107:
  1582                           
  1583                           ;adc-1.c: 71:             TMR1L = eltimer1L;
  1584     012D  0879               	movf	_eltimer1L,w
  1585     012E  008E               	movwf	14	;volatile
  1586     012F                     i1l1109:
  1587                           
  1588                           ;adc-1.c: 72:             ADCON0bits.GO_DONE = 1;
  1589     012F  149F               	bsf	31,1	;volatile
  1590                           
  1591                           ;adc-1.c: 73:         } else
  1592     0130  293B               	goto	i1l1117
  1593     0131                     i1l1111:
  1594                           
  1595                           ;adc-1.c: 74:         {;adc-1.c: 75:             copias += 1;
  1596     0131  3001               	movlw	1
  1597     0132  07F6               	addwf	_copias,f
  1598     0133  1803               	skipnc
  1599     0134  0AF7               	incf	_copias+1,f
  1600     0135  3000               	movlw	0
  1601     0136  07F7               	addwf	_copias+1,f
  1602     0137                     i1l1113:
  1603                           
  1604                           ;adc-1.c: 76:             TMR1H = 0;
  1605     0137  1283               	bcf	3,5	;RP0=0, select bank0
  1606     0138  1303               	bcf	3,6	;RP1=0, select bank0
  1607     0139  018F               	clrf	15	;volatile
  1608     013A                     i1l1115:
  1609                           
  1610                           ;adc-1.c: 77:             TMR1L = 0;
  1611     013A  018E               	clrf	14	;volatile
  1612     013B                     i1l1117:
  1613                           
  1614                           ;adc-1.c: 79:         PIR1bits.TMR1IF = 0;
  1615     013B  100C               	bcf	12,0	;volatile
  1616                           
  1617                           ;adc-1.c: 80:     } else
  1618     013C  2964               	goto	i1l75
  1619     013D                     i1l71:
  1620                           
  1621                           ;adc-1.c: 81:     {;adc-1.c: 82:         PIR1bits.ADIF = 0;
  1622     013D  130C               	bcf	12,6	;volatile
  1623     013E                     i1l1119:
  1624                           
  1625                           ;adc-1.c: 83:         valor = (int) ADRESH * 0x10 + ADRESL;
  1626     013E  081E               	movf	30,w	;volatile
  1627     013F  00F0               	movwf	??_TRAT_INT
  1628     0140  01F1               	clrf	??_TRAT_INT+1
  1629     0141  0EF0               	swapf	??_TRAT_INT,f
  1630     0142  0EF1               	swapf	??_TRAT_INT+1,f
  1631     0143  30F0               	movlw	240
  1632     0144  05F1               	andwf	??_TRAT_INT+1,f
  1633     0145  0870               	movf	??_TRAT_INT,w
  1634     0146  390F               	andlw	15
  1635     0147  04F1               	iorwf	??_TRAT_INT+1,f
  1636     0148  30F0               	movlw	240
  1637     0149  05F0               	andwf	??_TRAT_INT,f
  1638     014A  1683               	bsf	3,5	;RP0=1, select bank1
  1639     014B  1303               	bcf	3,6	;RP1=0, select bank1
  1640     014C  081E               	movf	30,w	;volatile
  1641     014D  0770               	addwf	??_TRAT_INT,w
  1642     014E  00F2               	movwf	??_TRAT_INT+2
  1643     014F  3000               	movlw	0
  1644     0150  1803               	skipnc
  1645     0151  3001               	movlw	1
  1646     0152  0771               	addwf	??_TRAT_INT+1,w
  1647     0153  00F3               	movwf	??_TRAT_INT+3
  1648     0154  0872               	movf	??_TRAT_INT+2,w
  1649     0155  1283               	bcf	3,5	;RP0=0, select bank0
  1650     0156  1303               	bcf	3,6	;RP1=0, select bank0
  1651     0157  00BA               	movwf	_valor
  1652     0158  0873               	movf	??_TRAT_INT+3,w
  1653     0159  00BB               	movwf	_valor+1
  1654     015A                     i1l1121:
  1655                           
  1656                           ;adc-1.c: 84:         PORTB = ADRESL;
  1657     015A  1683               	bsf	3,5	;RP0=1, select bank1
  1658     015B  1303               	bcf	3,6	;RP1=0, select bank1
  1659     015C  081E               	movf	30,w	;volatile
  1660     015D  1283               	bcf	3,5	;RP0=0, select bank0
  1661     015E  1303               	bcf	3,6	;RP1=0, select bank0
  1662     015F  0086               	movwf	6	;volatile
  1663     0160                     i1l1123:
  1664                           
  1665                           ;adc-1.c: 85:         continuar = 1;
  1666     0160  3001               	movlw	1
  1667     0161  00BC               	movwf	_continuar
  1668     0162  3000               	movlw	0
  1669     0163  00BD               	movwf	_continuar+1
  1670     0164                     i1l75:
  1671     0164  0875               	movf	??_TRAT_INT+5,w
  1672     0165  008A               	movwf	10
  1673     0166  0E74               	swapf	??_TRAT_INT+4,w
  1674     0167  0083               	movwf	3
  1675     0168  0EFE               	swapf	btemp,f
  1676     0169  0E7E               	swapf	btemp,w
  1677     016A  0009               	retfie
  1678     016B                     __end_of_TRAT_INT:
  1679     007E                     btemp	set	126	;btemp
  1680     007E                     wtemp0	set	126
  1681                           
  1682                           	psect	intentry
  1683     0004                     __pintentry:	
  1684                           ;incstack = 0
  1685                           ; Regs used in _TRAT_INT: [wreg+status,2+status,0]
  1686                           
  1687     0004                     interrupt_function:
  1688     007E                     saved_w	set	btemp
  1689     0004  00FE               	movwf	btemp
  1690     0005  0E03               	swapf	3,w
  1691     0006  00F4               	movwf	??_TRAT_INT+4
  1692     0007  080A               	movf	10,w
  1693     0008  00F5               	movwf	??_TRAT_INT+5
  1694     0009  120A  118A  2913   	ljmp	_TRAT_INT
  1695                           
  1696                           	psect	idloc
  1697                           
  1698                           ;Config register IDLOC0 @ 0x2000
  1699                           ;	unspecified, using default values
  1700     2000                     	org	8192
  1701     2000  3FFF               	dw	16383
  1702                           
  1703                           ;Config register IDLOC1 @ 0x2001
  1704                           ;	unspecified, using default values
  1705     2001                     	org	8193
  1706     2001  3FFF               	dw	16383
  1707                           
  1708                           ;Config register IDLOC2 @ 0x2002
  1709                           ;	unspecified, using default values
  1710     2002                     	org	8194
  1711     2002  3FFF               	dw	16383
  1712                           
  1713                           ;Config register IDLOC3 @ 0x2003
  1714                           ;	unspecified, using default values
  1715     2003                     	org	8195
  1716     2003  3FFF               	dw	16383
  1717                           
  1718                           	psect	config
  1719                           
  1720                           ;Config register CONFIG1 @ 0x2007
  1721                           ;	Oscillator Selection bits
  1722                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1723                           ;	Watchdog Timer Enable bit
  1724                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1725                           ;	Power-up Timer Enable bit
  1726                           ;	PWRTE = ON, PWRT enabled
  1727                           ;	RE3/MCLR pin function select bit
  1728                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1729                           ;	Code Protection bit
  1730                           ;	CP = OFF, Program memory code protection is disabled
  1731                           ;	Data Code Protection bit
  1732                           ;	CPD = OFF, Data memory code protection is disabled
  1733                           ;	Brown Out Reset Selection bits
  1734                           ;	BOREN = OFF, BOR disabled
  1735                           ;	Internal External Switchover bit
  1736                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1737                           ;	Fail-Safe Clock Monitor Enabled bit
  1738                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1739                           ;	Low Voltage Programming Enable bit
  1740                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1741                           ;	In-Circuit Debugger Mode bit
  1742                           ;	DEBUG = OFF, In-Circuit Debugger disabled, RB6/ICSPCLK and RB7/ICSPDAT are general pur
      +                          pose I/O pins
  1743     2007                     	org	8199
  1744     2007  20E2               	dw	8418
  1745                           
  1746                           ;Config register CONFIG2 @ 0x2008
  1747                           ;	Brown-out Reset Selection bit
  1748                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  1749                           ;	Flash Program Memory Self Write Enable bits
  1750                           ;	WRT = OFF, Write protection off
  1751     2008                     	org	8200
  1752     2008  3EFF               	dw	16127

Data Sizes:
    Strings     5
    Constant    10
    Data        6
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     26      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _TRAT_INT in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _TRAT_INT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TRAT_INT in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TRAT_INT in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TRAT_INT in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1463
                           _init_ADC
                          _init_TMR1
                          _init_uart
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              20    18      2    1463
                                             14 BANK0     12    10      2
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _TRAT_INT                                             6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_ADC
   _init_TMR1
   _init_uart
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch

 _TRAT_INT (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1A      22       5       42.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2D      12        0.0%
ABS                  0      0      2D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Oct 13 15:07:18 2022

                      _x 0078                        pc 0002                       l63 0284  
                     l81 0265                       l66 024C                       l78 0235  
                     l86 0273                       fsr 0004                      l209 0112  
                    l485 01B0                      l495 01EC                      u510 026A  
                    u511 0269                      u600 01B9                      u520 0270  
                    u601 01B8                      u521 026F                      u530 0175  
                    u531 0174                      u620 01CB                      u700 00B6  
                    u621 01CA                      u701 00B5                      u550 0187  
                    u630 01D5                      u710 0100                      u551 0186  
                    u631 01D4                      u615 01BD                      u711 00FF  
                    u720 0112                      u545 0179                      u721 0111  
                    u570 0198                      u650 01E8                      u730 020A  
                    u571 0197                      u651 01E7                      u635 01D1  
                    u731 0209                      u660 004A                      u565 0188  
                    u645 01DC                      u661 0049                      u590 01AC  
                    u670 007F                      u591 01AB                      u575 0194  
                    u671 007E                      u680 00A5                      u585 01A0  
                    u681 00A4                      u690 00B0                      u691 00AF  
                    u685 00A1                      fsr0 0004                      indf 0000  
                   l1201 01C3                     l1211 01E2                     l1203 01C7  
                   l1221 027B                     l1205 01CB                     l1213 01E8  
                   l1301 00A6                     l1231 023A                     l1223 027D  
                   l1207 01D5                     l1311 00EF                     l1303 00B0  
                   l1241 0249                     l1233 023D                     l1225 027E  
                   l1217 0274                     l1209 01DB                     l1313 00F5  
                   l1305 00B6                     l1321 01ED                     l1243 024A  
                   l1235 0243                     l1227 0281                     l1219 027A  
                   l1251 0223                     l1171 016F                     l1163 0265  
                   l1307 00BC                     l1315 0100                     l1331 0201  
                   l1323 01F1                     l1245 024B                     l1237 0245  
                   l1229 0236                     l1261 022D                     l1253 0225  
                   l1181 0187                     l1173 0175                     l1165 026A  
                   l1309 00C1                     l1333 0202                     l1325 01F6  
                   l1239 0246                     l1263 022E                     l1255 0226  
                   l1247 021A                     l1183 0198                     l1175 0178  
                   l1191 01AC                     l1167 0270                     l1271 0044  
                   l1335 020A                     l1327 01FB                     l1265 0231  
                   l1257 0227                     l1249 0220                     l1185 019E  
                   l1177 017F                     l1169 016B                     l1281 006F  
                   l1273 004A                     l1337 020C                     l1329 0200  
                   l1267 0234                     l1259 022A                     l1187 019F  
                   l1179 0183                     l1195 01B1                     l1291 0088  
                   l1283 0077                     l1275 0051                     l1189 01A6  
                   l1197 01B9                     l1285 007B                     l1269 0041  
                   l1199 01BC                     l1287 007F                     l1359 0064  
                   l1279 0052                     l1297 008A                     l1289 0083  
                   STR_1 025D                     i1l71 013D                     i1l75 0164  
                   _TXIF 0064                     _main 01ED                     btemp 007E  
                   start 000C                    ?_main 0070          __end_of___lwdiv 01B1  
        __end_of___lwmod 01ED                    _TMR1H 000F                    _TMR1L 000E  
                  _SPBRG 0099                    _PORTB 0006                    u48_20 0119  
                  u48_21 0118                    u49_20 0127                    u49_21 0126  
                  _TRISA 0085                    u49_25 0123                    _TXREG 0019  
        __end_of_dpowers 025D         __end_of_TRAT_INT 016B                    _valor 003A  
                  _putch 0262                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 021A  
                 ??_main 003A                   _ADRESH 001E                   _ADRESL 009E  
                 ?_putch 0070                   i1l1101 0119                   i1l1103 0127  
                 i1l1111 0131                   i1l1121 015A                   i1l1113 0137  
                 i1l1105 0129                   i1l1123 0160                   i1l1115 013A  
                 i1l1107 012D                   i1l1117 013B                   i1l1109 012F  
                 i1l1119 013E                   i1l1099 0113                   _OSCCON 008F  
                 _SPBRGH 009A         __end_of_init_ADC 024D                ??___lwdiv 0024  
              ??___lwmod 002C                   _copias 0076                   _printf 003E  
           __pdataCOMMON 0079                   saved_w 007E                   putch@c 0020  
__end_of__initialization 003A           __pcstackCOMMON 0070             __pidataBANK0 0285  
              ?_TRAT_INT 0070            __end_of_putch 0274                  ??_putch 0020  
             __pbssBANK0 003A               __pmaintext 01ED               __pintentry 0004  
             ??_TRAT_INT 0070                  ?_printf 002E               __stringtab 024D  
              ?_init_ADC 0070               _los5msen1s 003E                  ___lwdiv 016B  
                ___lwmod 01B1                _ANSELbits 0188                  __ptext1 003E  
                __ptext2 0262                  __ptext3 01B1                  __ptext4 016B  
                __ptext5 021A                  __ptext6 0274                  __ptext7 0236  
                __ptext8 0113        __end_of_init_TMR1 0285                _T1CONbits 0010  
                _dpowers 0253        __end_of_init_uart 0236     end_of_initialization 003A  
             ??_init_ADC 0020                _RCSTAbits 0018                  printf@c 0039  
                printf@f 0035                _TXSTAbits 0098            __pidataCOMMON 0289  
            _BAUDCTLbits 0187           __end_of_printf 0113      start_initialization 000F  
            __pdataBANK0 003E                 ??_printf 0030              __pbssCOMMON 0076  
              ___latbits 0002            __pcstackBANK0 0020         ___lwdiv@dividend 0022  
               ?___lwdiv 0020                 ?___lwmod 0028                __pstrings 024D  
              _continuar 003C                _eltimer1H 007A                _eltimer1L 0079  
              _init_TMR1 0274         ___lwdiv@quotient 0026                _init_uart 021A  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
               _TRAT_INT 0113               _ADCON0bits 001F              __stringbase 0252  
             _ADCON1bits 009F               printf@flag 0034               printf@prec 0036  
             ?_init_TMR1 0070               ?_init_uart 0070       __end_of__stringtab 0253  
        ___lwdiv@divisor 0020          ___lwdiv@counter 0025                 _contado1 0040  
               _init_ADC 0236                printf@val 0037               _INTCONbits 000B  
            ??_init_TMR1 0020              ??_init_uart 0020                 intlevel1 0000  
       ___lwmod@dividend 002A                stringcode 024D                 printf@ap 0033  
        ___lwmod@divisor 0028          ___lwmod@counter 002D                 stringdir 024D  
               stringtab 024D  
